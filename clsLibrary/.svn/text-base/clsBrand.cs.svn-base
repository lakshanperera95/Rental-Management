using System;
using System.Collections.Generic;
using System.Text;
using System.Data;
using System.Data.SqlClient;
using System.Windows.Forms;
using DbConnection;

namespace clsLibrary
{
    public class clsBrand
    {
        private string strBrand;
        private string strDescription;
        private string strSqlStatement;
        private string strDatasetName;
        private int intErrCode;

        private Boolean blRecordFound;

        private SqlDataReader DataReader;

        private SqlDataAdapter adapter = new SqlDataAdapter();
        private DataSet ds = new DataSet();
        private string strMessage;

        // properties
        public string Brand {
            get
            {
                return strBrand;
            }
            set 
            {
                strBrand = value;
            }
        }

        public string Description
        {
            get
            {
                return strDescription;
            }
            set
            {
                strDescription = value;
            }
        }

        public string SqlString
        {
            get
            {
                return strSqlStatement;
            }
            set
            {
                strSqlStatement = value;
            }

        }

        public Boolean RecordFound
        {
            get
            {
                return blRecordFound;
            }
            set
            {
                blRecordFound = value;
            }
        }

        public int ErrorCode
        {
            get
            {
                return intErrCode;
            }
            set
            {
                intErrCode = value;
            }
        }

        public DataSet GetDataset
        {
            get
            {
                return ds;
            }
            set
            {
                ds = value;
            }
        }

        public String DatasetName
        {
            get
            {
                return strDatasetName;
            }
            set
            {
                strDatasetName = value;
            }
        }

        public void retriveBrand()
        {
            ds = dbcon.getDataset(strSqlStatement, strDatasetName);
        }


        public void ReadBrandDetails()
        {
            DataReader = dbcon.GetReader(strSqlStatement);
            blRecordFound = false;
            if (DataReader.Read())
            {
                strBrand = DataReader["Brand_Code"].ToString();
                strDescription = DataReader["Brand_Name"].ToString();
                blRecordFound = true;
            }
            else
            {
                strBrand = string.Empty;
                strDescription = string.Empty;
                blRecordFound = false;
            }
            dbcon.CloseReader();
            DataReader.Dispose();
        }

        public void UpdateBrand()
        {
            intErrCode = 0;
            dbcon.connection.Open();
            SqlCommand command = new SqlCommand();
            command.Connection = dbcon.connection;
            command.CommandType = CommandType.StoredProcedure;
            command.CommandText = "sp_BrandFileUpdate";
            command.Parameters.Clear();
            command.Parameters.Add(new SqlParameter("@Err_x", SqlDbType.Int, 0, ParameterDirection.InputOutput, false, 0, 0, "", DataRowVersion.Default, intErrCode));
            command.Parameters.Add(new SqlParameter("@Brand_Code", SqlDbType.NVarChar, 15, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Default, strBrand));
            command.Parameters.Add(new SqlParameter("@Brand_Name", SqlDbType.NVarChar, 50, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Default, strDescription));
            command.Parameters.Add(new SqlParameter("@User_Name", SqlDbType.NVarChar, 50, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Default, LoginManager.UserName.Trim().ToUpper()));

            command.ExecuteNonQuery();
            command.UpdatedRowSource = UpdateRowSource.OutputParameters;
            ErrorCode = (int)(command.Parameters["@Err_x"].Value);
            dbcon.connection.Close();
        }
        public void DeleteBrand()
        {
            intErrCode = 0;
            dbcon.connection.Open();
            SqlCommand command = new SqlCommand();
            command.Connection = dbcon.connection;
            command.CommandType = CommandType.StoredProcedure;
            command.CommandText = "sp_BrandFileDelete";
            command.Parameters.Clear();
            command.Parameters.Add(new SqlParameter("@Err_x", SqlDbType.Int, 0, ParameterDirection.InputOutput, false, 0, 0, "", DataRowVersion.Default, intErrCode));
            command.Parameters.Add(new SqlParameter("@Brand_Code", SqlDbType.NVarChar, 15, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Default, strBrand));
            command.Parameters.Add(new SqlParameter("@User_Name", SqlDbType.NVarChar, 50, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Default, LoginManager.UserName.Trim().ToUpper()));

            command.ExecuteNonQuery();
            command.UpdatedRowSource = UpdateRowSource.OutputParameters;
            ErrorCode = (int)(command.Parameters["@Err_x"].Value);
            dbcon.connection.Close();
        }
    }
}
