using System;
using System.Collections.Generic;
using System.Text;
using System.Data;
using System.Data.SqlClient;
using DbConnection;
namespace clsLibrary
{
    public class clsAccount
    {
        #region General Declaration
        private int intErrCode;
        int intCredit_Period;

        private string strCust_Code;
        private string strCust_Name;
        private string strCusArea_Code;
        private string strCusAddress1;
        private string strCusAddress2;
        private string strCusAddress3;
        private string strCusAddress4;
        private string strCusCountry;
        private string strCusTel;
        private string strCusFax;
        private string strCusEmail;
        private string strCusDateOfBirth;
        private string strCusNIC;
        private string strCusContact_Prsn;
        private int intCusCredit_Period;

        private string strSupp_Code;
        private string strSupp_Name;
        private string strSuppAddress1;
        private string strSuppAddress2;
        private string strSuppAddress3;
        private string strSuppAddress4;
        private string strSuppTel;
        private string strSuppFax;
        private string strSuppEmail;
        private string strSuppContact_Prsn;
        private int intSuppCredit_Period;

        private string strSqlStatement;
        private string strDataSetName;

        private decimal decCusCredit_Limit;
        private decimal decDiscount;

        private DataSet dsSupplierDataSet;
        private DataSet dsCustomerDataSet;

        private Boolean blRecordFound;

        private SqlDataReader DataReader;
        #endregion

    #region Properties
        public string Cust_Code
        {
            get
            {
                return strCust_Code;
            }
            set
            {
                strCust_Code = value;
            }
        }

        public string Cust_Name
        {
            get
            {
                return strCust_Name;
            }
            set
            {
                strCust_Name = value;
            }
        }

        public string CusArea_Code
        {
            get
            {
                return strCusArea_Code;
            }
            set
            {
                strCusArea_Code = value;
            }
        }

        public string CusAddress1
        {
            get
            {
                return strCusAddress1;
            }
            set
            {
                strCusAddress1 = value;
            }
        }

        public string CusAddress2
        {
            get
            {
                return strCusAddress2;
            }
            set
            {
                strCusAddress2=value;
            }
        }

        public string CusAddress3
        {
            get
            {
                return strCusAddress3;
            }
            set
            {
                strCusAddress3=value;
            }
        }

        public string CusAddress4
        {
            get
            {
                return strCusAddress4;
            }
            set
            {
                strCusAddress4 = value;
            }
        }

        public string CusCountry
        {
            get
            {
                return strCusCountry;
            }
            set
            {
                strCusCountry = value;
            }
        }

        public string CusTel
        {
            get
            {
                return strCusTel;
            }
            set
            {
                strCusTel = value;
            }
        }

        public string CusFax
        {
            get
            {
                return strCusFax;
            }
            set
            {
                strCusFax = value;
            }
        }

        public string CusEmail
        {
            get
            {
                return strCusEmail;
            }
            set
            {
                strCusEmail = value;
            }
        }

        public string CusDateOfBirth
        {
            get
            {
                return strCusDateOfBirth;
            }
            set
            {
                strCusDateOfBirth = value;
            }
        }

        public string CusNIC
        {
            get
            {
                return strCusNIC;
            }
            set
            {
                strCusNIC = value;
            }
        }

        public decimal CusCredit_Limit
        {
            get
            {
                return decCusCredit_Limit;
            }
            set
            {
                decCusCredit_Limit = value;
            }
        }

        public string CusContact_Prsn
        {
            get
            {
                return strCusContact_Prsn;
            }
            set
            {
                strCusContact_Prsn = value;
            }
        }

        public string DataSetName
        {
            get
            {
                return strDataSetName;
            }
            set
            {
                strDataSetName = value;
            }
        }

        public int CusCredit_Period
        {
            get
            {
                return intCredit_Period;
            }
            set
            {
                intCredit_Period = value;
            }
        }

        public decimal CusDiscount
        {
            get
            {
                return decDiscount;
            }
            set
            {
                decDiscount = value;
            }
        }

        public string Supp_Code
        {
            get
            {
                return strSupp_Code;
            }
            set
            {
                strSupp_Code = value;
            }
        }

        public string Supp_Name
        {
            get
            {
                return strSupp_Name;
            }
            set
            {
                strSupp_Name = value;
            }
        }

        public string SuppAddress1
        {
            get
            {
                return strSuppAddress1;
            }
            set
            {
                strSuppAddress1 = value;
            }
        }

        public string SuppAddress2
        {
            get
            {
                return strSuppAddress2;
            }
            set
            {
                strSuppAddress2 = value;
            }
        }

        public string SuppAddress3
        {
            get
            {
                return strSuppAddress3;
            }
            set
            {
                strSuppAddress3 = value;
            }
        }

        public string SuppAddress4
        {
            get
            {
                return strSuppAddress4;
            }
            set
            {
                strSuppAddress4 = value;
            }
        }

        public string SuppTel
        {
            get
            {
                return strSuppTel;
            }
            set
            {
                strSuppTel = value;
            }
        }

        public string SuppFax
        {
            get
            {
                return strSuppFax;
            }
            set
            {
                strSuppFax = value;

            }
        }

        public string SuppEmail
        {
            get
            {
                return strSuppEmail;
            }
            set
            {
                strSuppEmail = value;
            }
        }

        public string SuppContact_Prsn
        {
            get
            {
                return strSuppContact_Prsn;
            }
            set
            {
                strSuppContact_Prsn = value;
            }
        }

        public int SuppCredit_Period
        {
            get
            {
                return intSuppCredit_Period;
            }
            set
            {
                intSuppCredit_Period = value;
            }
        }

        public int ErrorCode
        {
            get
            {
                return intErrCode;
            }
            set
            {
                intErrCode = value;
            }
        }

        public string SqlStatement
        {
            get
            {
                return strSqlStatement;
            }
            set
            {
                strSqlStatement = value;
            }
        }

        public Boolean RecordFound
        {
            get
            {
                return blRecordFound;
            }
            set
            {
                blRecordFound = value;
            }
        }

        public DataSet GetCustomerDataset
        {
            get
            {
                return dsCustomerDataSet;
            }
            set
            {
                dsCustomerDataSet = value;
            }
        }

        public DataSet GetSupplierDataset
        {
            get
            {
                return dsSupplierDataSet;
            }
            set
            {
                dsSupplierDataSet = value;
            }
        }

    #endregion

        public void ReadCustomerDetails()
        {
            DataReader = dbcon.GetReader(strSqlStatement);
            blRecordFound = false;
            if (DataReader.Read())
            {
                strCust_Code = DataReader["Cust_Code"].ToString();
                strCust_Name = DataReader["Cust_Name"].ToString();
                strCusArea_Code = DataReader["Area_Code"].ToString();
                strCusAddress1 = DataReader["Address1"].ToString();
                strCusAddress2 = DataReader["Address2"].ToString();
                strCusAddress3 = DataReader["Address3"].ToString();
                strCusAddress4 = DataReader["Address4"].ToString();
                strCusCountry = DataReader["Country"].ToString();
                strCusTel = DataReader["Tel"].ToString();
                strCusFax = DataReader["Fax"].ToString();
                strCusEmail = DataReader["Email"].ToString();
                strCusDateOfBirth = DataReader["DateOfBirth"].ToString();
                strCusNIC = DataReader["NIC"].ToString();
                strCusContact_Prsn = DataReader["Contact_Prsn"].ToString();

                intCusCredit_Period  = int.Parse(DataReader["Credit_Period"].ToString());
                decCusCredit_Limit = decimal.Parse(DataReader["Credit_Limit"].ToString());
                decDiscount = decimal.Parse(DataReader["Discount"].ToString());

                blRecordFound = true;
            }
            else
            {
                strCust_Code = string.Empty ;
                strCust_Name = string.Empty;
                strCusArea_Code = string.Empty;
                strCusAddress1 = string.Empty;
                strCusAddress2 = string.Empty;
                strCusAddress3 = string.Empty;
                strCusAddress4 = string.Empty;
                strCusCountry = string.Empty;
                strCusTel = string.Empty;
                strCusFax = string.Empty;
                strCusEmail = string.Empty;
                strCusDateOfBirth = string.Empty;
                strCusNIC = string.Empty;
                strCusContact_Prsn = string.Empty;

                intCusCredit_Period = 0;
                decCusCredit_Limit = 0;
                decDiscount = 0;
                blRecordFound = false;
            }
            dbcon.CloseReader();
            DataReader.Dispose();
        }

        public void GetCustomerDetails()
        {
            dsCustomerDataSet = dbcon.getDataset(strSqlStatement, strDataSetName);
        }

        public void GetSupplierDetails()
        {
            dsSupplierDataSet = dbcon.getDataset(strSqlStatement, strDataSetName);
        }

        public void CustomerUpdate()
        {
            
            intErrCode = 0;

            dbcon.connection.Open();
            SqlCommand command = new SqlCommand();
            command.Connection = dbcon.connection;
            command.CommandText = "sp_CustomerFileUpdate";
            command.CommandType = CommandType.StoredProcedure;
            command.Parameters.Add(new SqlParameter("@Err_x", SqlDbType.Int, 0, ParameterDirection.InputOutput, false, 0, 0, "", DataRowVersion.Default, intErrCode));
            command.Parameters.Add(new SqlParameter("@Cust_Code", SqlDbType.VarChar, 50, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Default, strCust_Code));
            command.Parameters.Add(new SqlParameter("@Cust_Name", SqlDbType.VarChar, 50, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Default, strCust_Name));
            command.Parameters.Add(new SqlParameter("@Add1", SqlDbType.VarChar, 50, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Default, strCusAddress1));
            command.Parameters.Add(new SqlParameter("@Add2", SqlDbType.VarChar, 50, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Default, strCusAddress2));
            command.Parameters.Add(new SqlParameter("@Add3", SqlDbType.VarChar, 50, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Default, strCusAddress3));
            command.Parameters.Add(new SqlParameter("@Add4", SqlDbType.VarChar, 50, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Default, strCusAddress4));
            command.Parameters.Add(new SqlParameter("@Country", SqlDbType.VarChar, 50, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Default, strCusCountry));
            command.Parameters.Add(new SqlParameter("@Tel", SqlDbType.VarChar, 50, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Default, strCusTel));
            command.Parameters.Add(new SqlParameter("@Fax", SqlDbType.VarChar, 50, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Default, strCusFax));
            command.Parameters.Add(new SqlParameter("@Email", SqlDbType.VarChar, 50, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Default, strCusEmail));
            command.Parameters.Add(new SqlParameter("@User_Name", SqlDbType.VarChar, 50, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Default, LoginManager.UserName));
            command.Parameters.Add(new SqlParameter("@Credit_Limit", SqlDbType.Money, 10, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Default,decCusCredit_Limit ));
            command.Parameters.Add(new SqlParameter("@DateOfBirth", SqlDbType.VarChar, 50, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Default, "N/A"));
            command.Parameters.Add(new SqlParameter("@NIC", SqlDbType.VarChar, 50, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Default, strCusNIC));
            command.Parameters.Add(new SqlParameter("@Credit_Period", SqlDbType.Int , 0, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Default, intCusCredit_Period ));
            command.Parameters.Add(new SqlParameter("@Discount", SqlDbType.Decimal , 0, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Default, decDiscount ));

            command.ExecuteNonQuery();
            command.UpdatedRowSource = UpdateRowSource.OutputParameters;
            ErrorCode = (int)(command.Parameters["@Err_x"].Value);
            dbcon.connection.Close();
        }

        public void CustomerDelete()
        {

            dbcon.connection.Open();
            SqlCommand command = new SqlCommand();
            command.Connection = dbcon.connection;
            command.CommandType = CommandType.StoredProcedure;
            command.CommandText = "sp_CustomerFileDelete";

            command.Parameters.Add(new SqlParameter("@Err_x", SqlDbType.Int, 0, ParameterDirection.Output, false, 0, 0, "", DataRowVersion.Default, intErrCode));
            command.Parameters.Add(new SqlParameter("@Cust_Code", SqlDbType.VarChar, 15, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Default, strCust_Code));
            command.Parameters.Add(new SqlParameter("@User_Name", SqlDbType.VarChar, 50, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Default, LoginManager.UserName));
            command.Parameters.Add(new SqlParameter("@getMessage", SqlDbType.VarChar, 50, ParameterDirection.InputOutput, false, 0, 0, "", DataRowVersion.Default, "10"));

            command.ExecuteNonQuery();
            command.UpdatedRowSource = UpdateRowSource.OutputParameters;
            ErrorCode = (int)(command.Parameters["@Err_x"].Value);
            dbcon.connection.Close();
        }

        //Supplier
        public void ReadSupplierDetails()
        {
            DataReader = dbcon.GetReader(strSqlStatement);
            blRecordFound = false;
            if (DataReader.Read())
            {
                strSupp_Code = DataReader["Supp_Code"].ToString();
                strSupp_Name = DataReader["Supp_Name"].ToString();
                strSuppAddress1 = DataReader["Address1"].ToString();
                strSuppAddress2 = DataReader["Address2"].ToString();
                strSuppAddress3 = DataReader["Address3"].ToString();
                strSuppAddress4 = DataReader["Address4"].ToString();
                strSuppTel = DataReader["Tel"].ToString();
                strSuppFax = DataReader["Fax"].ToString();
                strSuppEmail = DataReader["Email"].ToString();
                strSuppContact_Prsn = DataReader["Contact_Prsn"].ToString();

                intSuppCredit_Period = int.Parse(DataReader["Credit_Period"].ToString());

                blRecordFound = true;
            }
            else
            {
                strSupp_Code = string.Empty ;
                strSupp_Name = string.Empty;
                strSuppAddress1 = string.Empty;
                strSuppAddress2 = string.Empty;
                strSuppAddress3 = string.Empty;
                strSuppAddress4 = string.Empty;
                strSuppTel = string.Empty;
                strSuppFax = string.Empty;
                strSuppEmail = string.Empty;
                strSuppContact_Prsn = string.Empty;

                intSuppCredit_Period = 0;

                blRecordFound = false;
            }
            dbcon.CloseReader();
            DataReader.Dispose();
        }

        public void SupplierUpdate()
        {

            intErrCode = 0;

            dbcon.connection.Open();
            SqlCommand command = new SqlCommand();
            command.Connection = dbcon.connection;
            command.CommandType = CommandType.StoredProcedure;
            command.CommandText = "sp_SupplierFileUpdate";
            command.Parameters.Add(new SqlParameter("@Err_x", SqlDbType.Int, 0, ParameterDirection.InputOutput, false, 0, 0, "", DataRowVersion.Default, intErrCode));
            command.Parameters.Add(new SqlParameter("@Supp_Code", SqlDbType.VarChar, 15, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Default, strSupp_Code));
            command.Parameters.Add(new SqlParameter("@Supp_Name", SqlDbType.VarChar, 100, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Default, strSupp_Name ));
            command.Parameters.Add(new SqlParameter("@Add1", SqlDbType.VarChar, 100, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Default, strSuppAddress1));
            command.Parameters.Add(new SqlParameter("@Add2", SqlDbType.VarChar, 100, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Default, strSuppAddress2));
            command.Parameters.Add(new SqlParameter("@Add3", SqlDbType.VarChar, 100, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Default, strSuppAddress3));
            command.Parameters.Add(new SqlParameter("@Add4", SqlDbType.VarChar, 100, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Default, strSuppAddress4));

            command.Parameters.Add(new SqlParameter("@Tel", SqlDbType.VarChar, 50, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Default, strSuppTel));
            command.Parameters.Add(new SqlParameter("@Fax", SqlDbType.VarChar, 50, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Default, strSuppFax));
            command.Parameters.Add(new SqlParameter("@Email", SqlDbType.VarChar, 50, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Default, strSuppEmail));
            command.Parameters.Add(new SqlParameter("@User_Name", SqlDbType.VarChar, 50, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Default, LoginManager.UserName));
            command.Parameters.Add(new SqlParameter("@Credit_Period", SqlDbType.Int, 0, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Default, intSuppCredit_Period));
            command.Parameters.Add(new SqlParameter("@Contact_Prsn", SqlDbType.VarChar, 50, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Default, strSuppContact_Prsn ));

            
            command.ExecuteNonQuery();
            command.UpdatedRowSource = UpdateRowSource.OutputParameters;
            ErrorCode = (int)(command.Parameters["@Err_x"].Value);
            dbcon.connection.Close();
        }

        public void SupplierDelete()
        {

            dbcon.connection.Open();
            SqlCommand command = new SqlCommand();
            command.Connection = dbcon.connection;
            command.CommandType = CommandType.StoredProcedure;
            command.CommandText = "sp_SupplierFileDelete";

            command.Parameters.Add(new SqlParameter("@Err_x", SqlDbType.Int, 0, ParameterDirection.Output, false, 0, 0, "", DataRowVersion.Default, intErrCode));
            command.Parameters.Add(new SqlParameter("@Supp_Code", SqlDbType.VarChar, 15, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Default, strSupp_Code));
            command.Parameters.Add(new SqlParameter("@User_Name", SqlDbType.VarChar, 50, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Default, LoginManager.UserName));
            command.Parameters.Add(new SqlParameter("@getMessage", SqlDbType.VarChar, 50, ParameterDirection.InputOutput, false, 0, 0, "", DataRowVersion.Default, "10"));

            command.ExecuteNonQuery();
            command.UpdatedRowSource = UpdateRowSource.OutputParameters;
            ErrorCode = (int)(command.Parameters["@Err_x"].Value);
            dbcon.connection.Close();
        }

}

}
