using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Text;
using System.Windows.Forms;
using clsLibrary;

namespace Inventory
{
    public partial class frmManufacturer : Form
    {
        public frmManufacturer()
        {
            InitializeComponent();
        }

        private static frmManufacturer manufacturer;
        frmSearch search = new frmSearch();
        private clsManufacturer man = new clsManufacturer();

        private int Err = 0;

        public static frmManufacturer GetManufacturer {
            get 
            {
                return manufacturer;
            }
            set 
            {
                manufacturer = value;
            }
        
        }


        private void btnSearch_Click(object sender, EventArgs e)
        {
            if (search.IsDisposed)
            {
                search = new frmSearch();
            }
            man.SqlString = "SELECT Manf_Code AS [Code],Manf_Name AS [Manufacturer] FROM [Manufacturer]";
            man.RetrieveFields_ManCode();
            search.dgSearch.DataSource = man.GetDataset1.Tables["dsManCode"];
            search.prop_Focus = txtCode;
            search.Show();
        }

        private void txtCode_Enter(object sender, EventArgs e)
        {
            if (search.Code != null && search.Code != "")
            {
                txtCode.Text = search.Code.Trim();
                txtDescript.Text = search.Descript.Trim();
            }
            search.Code = string.Empty;
            search.Descript = string.Empty;

        }
        private void txtAdd1_Enter(object sender, EventArgs e)
        {

        }


        #region ToolStrip Buttons 
        private void btnSave_Click(object sender, EventArgs e)
        {
        Err = 0;
            if ((txtCode.Text == string.Empty) || (txtDescript.Text == string.Empty))
            {
                Err++;
            }

            this.validator(grpMain);

            if (Err == 0)
            {
                man.ErrorCode = 0;
                man.Code = txtCode.Text.Trim().ToUpper();
                man.Descript = txtDescript.Text.Trim().ToUpper();
                man.Address1 = txtAdd1.Text.Trim().ToUpper();
                man.Address2 = txtAdd2.Text.Trim().ToUpper();
                man.Address3 = txtAdd3.Text.Trim().ToUpper();
                man.City = txtCity.Text.Trim().ToUpper();
                man.Country = txtCountry.Text.Trim().ToUpper();
                man.Tel = txtTel.Text.Trim().ToUpper();
                man.Fax = txtFax.Text.Trim().ToUpper();
                man.Email = txtEmail.Text.Trim();

                //clear all the properties used in search form
                search.Code = string.Empty;
                search.Descript = string.Empty;
                search.prop_Focus = null;
                search.prop_Name = string.Empty;

                man.UpdateData();

                clsClear.getclear().clearfeilds(grpMain, txtCode);

            }
        }


        private void btnDelete_Click(object sender, EventArgs e)
        {
            if (txtCode .Text != string .Empty ){
            
            

            if (MessageBox.Show("Do you really want to delete the record ?  " + txtCode.Text + "", "Manufacturer Details",
            MessageBoxButtons.YesNo, MessageBoxIcon.Question)
            == DialogResult.Yes)
            {
            man.Code = txtCode.Text.ToUpper().Trim();
            man.DeleteData();
            clsClear.getclear().clearfeilds(grpMain, txtCode);   
            }

            }


        }

        private void btnClear_Click(object sender, EventArgs e)
        {
            clsClear.getclear().clearfeilds(grpMain, txtCode);
        }

        private void btnExit_Click(object sender, EventArgs e)
        {
            this.Close();
            this.Dispose();
            manufacturer = null;
        } 
        #endregion

        private void frmManufacturer_FormClosed(object sender, FormClosedEventArgs e)
        {
            manufacturer = null;
        }


        #region Validate whether textfeilds contains ' character
        public void validator(Control cnt)
        {

            for (int i = 0; i < cnt.Controls.Count; i++)
            {
                if ((cnt.Controls[i].GetType() == typeof(TextBox)) && (cnt.Controls[i].Text.Contains("'")))
                {
                    MessageBox.Show("Invalid characters in Textfeilds Please check the characters entered.", "Invalid character (') found", MessageBoxButtons.OK, MessageBoxIcon.Stop);
                    cnt.Controls[i].Text = string.Empty;
                    cnt.Controls[i].Focus();

                    Err++;

                }
            }
        }


        #endregion 

        private void txtCode_KeyDown(object sender, KeyEventArgs e)
        {
            if (e.KeyCode == Keys.Enter)
            {
                if (txtCode.Text != string.Empty)
                {
                    man.SqlString = "SELECT Manf_Name,Address1,Address2,Address3,City,Country,Tel,Fax,Email FROM Manufacturer WHERE Manf_Code = '" + txtCode.Text + "'";
                    man.RetrieveFields_CustomerDetails();
                    if (man.GetDataset1.Tables["dsManDetails"].Rows.Count > 0)
                    {
                        txtDescript.Text = man.GetDataset1.Tables["dsManDetails"].Rows[0][0].ToString();
                        txtAdd1.Text = man.GetDataset1.Tables["dsManDetails"].Rows[0][1].ToString();
                        txtAdd2.Text = man.GetDataset1.Tables["dsManDetails"].Rows[0][2].ToString();
                        txtAdd3.Text = man.GetDataset1.Tables["dsManDetails"].Rows[0][3].ToString();
                        txtCity.Text = man.GetDataset1.Tables["dsManDetails"].Rows[0][4].ToString();
                        txtCountry.Text = man.GetDataset1.Tables["dsManDetails"].Rows[0][5].ToString();
                        txtTel.Text = man.GetDataset1.Tables["dsManDetails"].Rows[0][6].ToString();
                        txtFax.Text = man.GetDataset1.Tables["dsManDetails"].Rows[0][7].ToString();
                        txtEmail.Text = man.GetDataset1.Tables["dsManDetails"].Rows[0][8].ToString();
                    }

                }
                txtDescript.Focus();
            }
        }

        private void txtDescript_KeyDown(object sender, KeyEventArgs e)
        {
            if (e.KeyCode == Keys.Enter)
            {
                txtAdd1.Focus();
            }
        }

        private void txtAdd2_KeyDown(object sender, KeyEventArgs e)
        {
            if (e.KeyCode == Keys.Enter)
            {
                txtAdd3.Focus();
            }
        }

        private void txtAdd3_KeyDown(object sender, KeyEventArgs e)
        {
            if (e.KeyCode == Keys.Enter)
            {
                txtCity.Focus();
            }
        }

        private void txtAdd1_KeyDown(object sender, KeyEventArgs e)
        {
            if (e.KeyCode == Keys.Enter)
            {
                txtAdd2.Focus();
            }
        }

        private void txtCity_KeyDown(object sender, KeyEventArgs e)
        {
            if (e.KeyCode == Keys.Enter)
            {
                txtCountry.Focus();
            }
        }

        private void txtCountry_KeyDown(object sender, KeyEventArgs e)
        {
            if (e.KeyCode == Keys.Enter)
            {
                txtTel.Focus();
            }
        }

        private void txtTel_KeyDown(object sender, KeyEventArgs e)
        {
            if (e.KeyCode == Keys.Enter)
            {
                txtFax.Focus();
            }
        }

        private void txtFax_KeyDown(object sender, KeyEventArgs e)
        {
            if (e.KeyCode == Keys.Enter)
            {
                txtEmail.Focus();
            }
        }

        private void txtEmail_KeyDown(object sender, KeyEventArgs e)
        {
            if (e.KeyCode == Keys.Enter)
            {
                btnSave.Select();
            }
        }

    }



}