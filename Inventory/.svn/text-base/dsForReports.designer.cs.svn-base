//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.42
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Inventory {
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [System.Xml.Serialization.XmlRootAttribute("dsForReports")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class dsForReports : System.Data.DataSet {
        
        private DepartmentDataTable tableDepartment;
        
        private CategoryDataTable tableCategory;
        
        private StockAdjustDataTable tableStockAdjust;
        
        private TransferNoteDataTable tableTransferNote;
        
        private dsTogDetailsDataTable tabledsTogDetails;
        
        private dsStockAdjustDetailsDataTable tabledsStockAdjustDetails;
        
        private GoodReceivedNoteDataTable tableGoodReceivedNote;
        
        private dsGRNDetailsForRepDataTable tabledsGRNDetailsForRep;
        
        private PurchaseOrderDataTable tablePurchaseOrder;
        
        private dsPurchaseOrderDetailsDataTable tabledsPurchaseOrderDetails;
        
        private ProductDataTable tableProduct;
        
        private InvoiceDataTable tableInvoice;
        
        private dsAccountDataTable tabledsAccount;
        
        private dsInvoiceDetailsDataTable tabledsInvoiceDetails;
        
        private dsStockProductwiseDataTable tabledsStockProductwise;
        
        private PendingPaymentsDataTable tablePendingPayments;
        
        private SelectedPaymentsDataTable tableSelectedPayments;
        
        private PaymentDetailsDataTable tablePaymentDetails;
        
        private tbPaidPaymentSummaryDataTable tabletbPaidPaymentSummary;
        
        private tbPaidPaymentModeDataTable tabletbPaidPaymentMode;
        
        private SupplierPaymentSummaryDataTable tableSupplierPaymentSummary;
        
        private TransactionSummaryDataTable tableTransactionSummary;
        
        private StockDetailsDataTable tableStockDetails;
        
        private dsSalesDetailsDataTable tabledsSalesDetails;
        
        private tbReportMonthlyAnalyseDataTable tabletbReportMonthlyAnalyse;
        
        private CollectionDataTable tableCollection;
        
        private SelectedDataTable tableSelected;
        
        private dsPurchasingDetailsDataTable tabledsPurchasingDetails;
        
        private dsAnalyseDataDataTable tabledsAnalyseData;
        
        private System.Data.SchemaSerializationMode _schemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public dsForReports() {
            this.BeginInit();
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected dsForReports(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["Department"] != null)) {
                    base.Tables.Add(new DepartmentDataTable(ds.Tables["Department"]));
                }
                if ((ds.Tables["Category"] != null)) {
                    base.Tables.Add(new CategoryDataTable(ds.Tables["Category"]));
                }
                if ((ds.Tables["StockAdjust"] != null)) {
                    base.Tables.Add(new StockAdjustDataTable(ds.Tables["StockAdjust"]));
                }
                if ((ds.Tables["TransferNote"] != null)) {
                    base.Tables.Add(new TransferNoteDataTable(ds.Tables["TransferNote"]));
                }
                if ((ds.Tables["dsTogDetails"] != null)) {
                    base.Tables.Add(new dsTogDetailsDataTable(ds.Tables["dsTogDetails"]));
                }
                if ((ds.Tables["dsStockAdjustDetails"] != null)) {
                    base.Tables.Add(new dsStockAdjustDetailsDataTable(ds.Tables["dsStockAdjustDetails"]));
                }
                if ((ds.Tables["GoodReceivedNote"] != null)) {
                    base.Tables.Add(new GoodReceivedNoteDataTable(ds.Tables["GoodReceivedNote"]));
                }
                if ((ds.Tables["dsGRNDetailsForRep"] != null)) {
                    base.Tables.Add(new dsGRNDetailsForRepDataTable(ds.Tables["dsGRNDetailsForRep"]));
                }
                if ((ds.Tables["PurchaseOrder"] != null)) {
                    base.Tables.Add(new PurchaseOrderDataTable(ds.Tables["PurchaseOrder"]));
                }
                if ((ds.Tables["dsPurchaseOrderDetails"] != null)) {
                    base.Tables.Add(new dsPurchaseOrderDetailsDataTable(ds.Tables["dsPurchaseOrderDetails"]));
                }
                if ((ds.Tables["Product"] != null)) {
                    base.Tables.Add(new ProductDataTable(ds.Tables["Product"]));
                }
                if ((ds.Tables["Invoice"] != null)) {
                    base.Tables.Add(new InvoiceDataTable(ds.Tables["Invoice"]));
                }
                if ((ds.Tables["dsAccount"] != null)) {
                    base.Tables.Add(new dsAccountDataTable(ds.Tables["dsAccount"]));
                }
                if ((ds.Tables["dsInvoiceDetails"] != null)) {
                    base.Tables.Add(new dsInvoiceDetailsDataTable(ds.Tables["dsInvoiceDetails"]));
                }
                if ((ds.Tables["dsStockProductwise"] != null)) {
                    base.Tables.Add(new dsStockProductwiseDataTable(ds.Tables["dsStockProductwise"]));
                }
                if ((ds.Tables["PendingPayments"] != null)) {
                    base.Tables.Add(new PendingPaymentsDataTable(ds.Tables["PendingPayments"]));
                }
                if ((ds.Tables["SelectedPayments"] != null)) {
                    base.Tables.Add(new SelectedPaymentsDataTable(ds.Tables["SelectedPayments"]));
                }
                if ((ds.Tables["PaymentDetails"] != null)) {
                    base.Tables.Add(new PaymentDetailsDataTable(ds.Tables["PaymentDetails"]));
                }
                if ((ds.Tables["tbPaidPaymentSummary"] != null)) {
                    base.Tables.Add(new tbPaidPaymentSummaryDataTable(ds.Tables["tbPaidPaymentSummary"]));
                }
                if ((ds.Tables["tbPaidPaymentMode"] != null)) {
                    base.Tables.Add(new tbPaidPaymentModeDataTable(ds.Tables["tbPaidPaymentMode"]));
                }
                if ((ds.Tables["SupplierPaymentSummary"] != null)) {
                    base.Tables.Add(new SupplierPaymentSummaryDataTable(ds.Tables["SupplierPaymentSummary"]));
                }
                if ((ds.Tables["TransactionSummary"] != null)) {
                    base.Tables.Add(new TransactionSummaryDataTable(ds.Tables["TransactionSummary"]));
                }
                if ((ds.Tables["StockDetails"] != null)) {
                    base.Tables.Add(new StockDetailsDataTable(ds.Tables["StockDetails"]));
                }
                if ((ds.Tables["dsSalesDetails"] != null)) {
                    base.Tables.Add(new dsSalesDetailsDataTable(ds.Tables["dsSalesDetails"]));
                }
                if ((ds.Tables["tbReportMonthlyAnalyse"] != null)) {
                    base.Tables.Add(new tbReportMonthlyAnalyseDataTable(ds.Tables["tbReportMonthlyAnalyse"]));
                }
                if ((ds.Tables["Collection"] != null)) {
                    base.Tables.Add(new CollectionDataTable(ds.Tables["Collection"]));
                }
                if ((ds.Tables["Selected"] != null)) {
                    base.Tables.Add(new SelectedDataTable(ds.Tables["Selected"]));
                }
                if ((ds.Tables["dsPurchasingDetails"] != null)) {
                    base.Tables.Add(new dsPurchasingDetailsDataTable(ds.Tables["dsPurchasingDetails"]));
                }
                if ((ds.Tables["dsAnalyseData"] != null)) {
                    base.Tables.Add(new dsAnalyseDataDataTable(ds.Tables["dsAnalyseData"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DepartmentDataTable Department {
            get {
                return this.tableDepartment;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CategoryDataTable Category {
            get {
                return this.tableCategory;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public StockAdjustDataTable StockAdjust {
            get {
                return this.tableStockAdjust;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TransferNoteDataTable TransferNote {
            get {
                return this.tableTransferNote;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dsTogDetailsDataTable dsTogDetails {
            get {
                return this.tabledsTogDetails;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dsStockAdjustDetailsDataTable dsStockAdjustDetails {
            get {
                return this.tabledsStockAdjustDetails;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GoodReceivedNoteDataTable GoodReceivedNote {
            get {
                return this.tableGoodReceivedNote;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dsGRNDetailsForRepDataTable dsGRNDetailsForRep {
            get {
                return this.tabledsGRNDetailsForRep;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PurchaseOrderDataTable PurchaseOrder {
            get {
                return this.tablePurchaseOrder;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dsPurchaseOrderDetailsDataTable dsPurchaseOrderDetails {
            get {
                return this.tabledsPurchaseOrderDetails;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ProductDataTable Product {
            get {
                return this.tableProduct;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public InvoiceDataTable Invoice {
            get {
                return this.tableInvoice;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dsAccountDataTable dsAccount {
            get {
                return this.tabledsAccount;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dsInvoiceDetailsDataTable dsInvoiceDetails {
            get {
                return this.tabledsInvoiceDetails;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dsStockProductwiseDataTable dsStockProductwise {
            get {
                return this.tabledsStockProductwise;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PendingPaymentsDataTable PendingPayments {
            get {
                return this.tablePendingPayments;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SelectedPaymentsDataTable SelectedPayments {
            get {
                return this.tableSelectedPayments;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PaymentDetailsDataTable PaymentDetails {
            get {
                return this.tablePaymentDetails;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tbPaidPaymentSummaryDataTable tbPaidPaymentSummary {
            get {
                return this.tabletbPaidPaymentSummary;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tbPaidPaymentModeDataTable tbPaidPaymentMode {
            get {
                return this.tabletbPaidPaymentMode;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SupplierPaymentSummaryDataTable SupplierPaymentSummary {
            get {
                return this.tableSupplierPaymentSummary;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TransactionSummaryDataTable TransactionSummary {
            get {
                return this.tableTransactionSummary;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public StockDetailsDataTable StockDetails {
            get {
                return this.tableStockDetails;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dsSalesDetailsDataTable dsSalesDetails {
            get {
                return this.tabledsSalesDetails;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tbReportMonthlyAnalyseDataTable tbReportMonthlyAnalyse {
            get {
                return this.tabletbReportMonthlyAnalyse;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CollectionDataTable Collection {
            get {
                return this.tableCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SelectedDataTable Selected {
            get {
                return this.tableSelected;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dsPurchasingDetailsDataTable dsPurchasingDetails {
            get {
                return this.tabledsPurchasingDetails;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dsAnalyseDataDataTable dsAnalyseData {
            get {
                return this.tabledsAnalyseData;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.BrowsableAttribute(true)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override System.Data.DataSet Clone() {
            dsForReports cln = ((dsForReports)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Department"] != null)) {
                    base.Tables.Add(new DepartmentDataTable(ds.Tables["Department"]));
                }
                if ((ds.Tables["Category"] != null)) {
                    base.Tables.Add(new CategoryDataTable(ds.Tables["Category"]));
                }
                if ((ds.Tables["StockAdjust"] != null)) {
                    base.Tables.Add(new StockAdjustDataTable(ds.Tables["StockAdjust"]));
                }
                if ((ds.Tables["TransferNote"] != null)) {
                    base.Tables.Add(new TransferNoteDataTable(ds.Tables["TransferNote"]));
                }
                if ((ds.Tables["dsTogDetails"] != null)) {
                    base.Tables.Add(new dsTogDetailsDataTable(ds.Tables["dsTogDetails"]));
                }
                if ((ds.Tables["dsStockAdjustDetails"] != null)) {
                    base.Tables.Add(new dsStockAdjustDetailsDataTable(ds.Tables["dsStockAdjustDetails"]));
                }
                if ((ds.Tables["GoodReceivedNote"] != null)) {
                    base.Tables.Add(new GoodReceivedNoteDataTable(ds.Tables["GoodReceivedNote"]));
                }
                if ((ds.Tables["dsGRNDetailsForRep"] != null)) {
                    base.Tables.Add(new dsGRNDetailsForRepDataTable(ds.Tables["dsGRNDetailsForRep"]));
                }
                if ((ds.Tables["PurchaseOrder"] != null)) {
                    base.Tables.Add(new PurchaseOrderDataTable(ds.Tables["PurchaseOrder"]));
                }
                if ((ds.Tables["dsPurchaseOrderDetails"] != null)) {
                    base.Tables.Add(new dsPurchaseOrderDetailsDataTable(ds.Tables["dsPurchaseOrderDetails"]));
                }
                if ((ds.Tables["Product"] != null)) {
                    base.Tables.Add(new ProductDataTable(ds.Tables["Product"]));
                }
                if ((ds.Tables["Invoice"] != null)) {
                    base.Tables.Add(new InvoiceDataTable(ds.Tables["Invoice"]));
                }
                if ((ds.Tables["dsAccount"] != null)) {
                    base.Tables.Add(new dsAccountDataTable(ds.Tables["dsAccount"]));
                }
                if ((ds.Tables["dsInvoiceDetails"] != null)) {
                    base.Tables.Add(new dsInvoiceDetailsDataTable(ds.Tables["dsInvoiceDetails"]));
                }
                if ((ds.Tables["dsStockProductwise"] != null)) {
                    base.Tables.Add(new dsStockProductwiseDataTable(ds.Tables["dsStockProductwise"]));
                }
                if ((ds.Tables["PendingPayments"] != null)) {
                    base.Tables.Add(new PendingPaymentsDataTable(ds.Tables["PendingPayments"]));
                }
                if ((ds.Tables["SelectedPayments"] != null)) {
                    base.Tables.Add(new SelectedPaymentsDataTable(ds.Tables["SelectedPayments"]));
                }
                if ((ds.Tables["PaymentDetails"] != null)) {
                    base.Tables.Add(new PaymentDetailsDataTable(ds.Tables["PaymentDetails"]));
                }
                if ((ds.Tables["tbPaidPaymentSummary"] != null)) {
                    base.Tables.Add(new tbPaidPaymentSummaryDataTable(ds.Tables["tbPaidPaymentSummary"]));
                }
                if ((ds.Tables["tbPaidPaymentMode"] != null)) {
                    base.Tables.Add(new tbPaidPaymentModeDataTable(ds.Tables["tbPaidPaymentMode"]));
                }
                if ((ds.Tables["SupplierPaymentSummary"] != null)) {
                    base.Tables.Add(new SupplierPaymentSummaryDataTable(ds.Tables["SupplierPaymentSummary"]));
                }
                if ((ds.Tables["TransactionSummary"] != null)) {
                    base.Tables.Add(new TransactionSummaryDataTable(ds.Tables["TransactionSummary"]));
                }
                if ((ds.Tables["StockDetails"] != null)) {
                    base.Tables.Add(new StockDetailsDataTable(ds.Tables["StockDetails"]));
                }
                if ((ds.Tables["dsSalesDetails"] != null)) {
                    base.Tables.Add(new dsSalesDetailsDataTable(ds.Tables["dsSalesDetails"]));
                }
                if ((ds.Tables["tbReportMonthlyAnalyse"] != null)) {
                    base.Tables.Add(new tbReportMonthlyAnalyseDataTable(ds.Tables["tbReportMonthlyAnalyse"]));
                }
                if ((ds.Tables["Collection"] != null)) {
                    base.Tables.Add(new CollectionDataTable(ds.Tables["Collection"]));
                }
                if ((ds.Tables["Selected"] != null)) {
                    base.Tables.Add(new SelectedDataTable(ds.Tables["Selected"]));
                }
                if ((ds.Tables["dsPurchasingDetails"] != null)) {
                    base.Tables.Add(new dsPurchasingDetailsDataTable(ds.Tables["dsPurchasingDetails"]));
                }
                if ((ds.Tables["dsAnalyseData"] != null)) {
                    base.Tables.Add(new dsAnalyseDataDataTable(ds.Tables["dsAnalyseData"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new System.Xml.XmlTextReader(stream), null);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableDepartment = ((DepartmentDataTable)(base.Tables["Department"]));
            if ((initTable == true)) {
                if ((this.tableDepartment != null)) {
                    this.tableDepartment.InitVars();
                }
            }
            this.tableCategory = ((CategoryDataTable)(base.Tables["Category"]));
            if ((initTable == true)) {
                if ((this.tableCategory != null)) {
                    this.tableCategory.InitVars();
                }
            }
            this.tableStockAdjust = ((StockAdjustDataTable)(base.Tables["StockAdjust"]));
            if ((initTable == true)) {
                if ((this.tableStockAdjust != null)) {
                    this.tableStockAdjust.InitVars();
                }
            }
            this.tableTransferNote = ((TransferNoteDataTable)(base.Tables["TransferNote"]));
            if ((initTable == true)) {
                if ((this.tableTransferNote != null)) {
                    this.tableTransferNote.InitVars();
                }
            }
            this.tabledsTogDetails = ((dsTogDetailsDataTable)(base.Tables["dsTogDetails"]));
            if ((initTable == true)) {
                if ((this.tabledsTogDetails != null)) {
                    this.tabledsTogDetails.InitVars();
                }
            }
            this.tabledsStockAdjustDetails = ((dsStockAdjustDetailsDataTable)(base.Tables["dsStockAdjustDetails"]));
            if ((initTable == true)) {
                if ((this.tabledsStockAdjustDetails != null)) {
                    this.tabledsStockAdjustDetails.InitVars();
                }
            }
            this.tableGoodReceivedNote = ((GoodReceivedNoteDataTable)(base.Tables["GoodReceivedNote"]));
            if ((initTable == true)) {
                if ((this.tableGoodReceivedNote != null)) {
                    this.tableGoodReceivedNote.InitVars();
                }
            }
            this.tabledsGRNDetailsForRep = ((dsGRNDetailsForRepDataTable)(base.Tables["dsGRNDetailsForRep"]));
            if ((initTable == true)) {
                if ((this.tabledsGRNDetailsForRep != null)) {
                    this.tabledsGRNDetailsForRep.InitVars();
                }
            }
            this.tablePurchaseOrder = ((PurchaseOrderDataTable)(base.Tables["PurchaseOrder"]));
            if ((initTable == true)) {
                if ((this.tablePurchaseOrder != null)) {
                    this.tablePurchaseOrder.InitVars();
                }
            }
            this.tabledsPurchaseOrderDetails = ((dsPurchaseOrderDetailsDataTable)(base.Tables["dsPurchaseOrderDetails"]));
            if ((initTable == true)) {
                if ((this.tabledsPurchaseOrderDetails != null)) {
                    this.tabledsPurchaseOrderDetails.InitVars();
                }
            }
            this.tableProduct = ((ProductDataTable)(base.Tables["Product"]));
            if ((initTable == true)) {
                if ((this.tableProduct != null)) {
                    this.tableProduct.InitVars();
                }
            }
            this.tableInvoice = ((InvoiceDataTable)(base.Tables["Invoice"]));
            if ((initTable == true)) {
                if ((this.tableInvoice != null)) {
                    this.tableInvoice.InitVars();
                }
            }
            this.tabledsAccount = ((dsAccountDataTable)(base.Tables["dsAccount"]));
            if ((initTable == true)) {
                if ((this.tabledsAccount != null)) {
                    this.tabledsAccount.InitVars();
                }
            }
            this.tabledsInvoiceDetails = ((dsInvoiceDetailsDataTable)(base.Tables["dsInvoiceDetails"]));
            if ((initTable == true)) {
                if ((this.tabledsInvoiceDetails != null)) {
                    this.tabledsInvoiceDetails.InitVars();
                }
            }
            this.tabledsStockProductwise = ((dsStockProductwiseDataTable)(base.Tables["dsStockProductwise"]));
            if ((initTable == true)) {
                if ((this.tabledsStockProductwise != null)) {
                    this.tabledsStockProductwise.InitVars();
                }
            }
            this.tablePendingPayments = ((PendingPaymentsDataTable)(base.Tables["PendingPayments"]));
            if ((initTable == true)) {
                if ((this.tablePendingPayments != null)) {
                    this.tablePendingPayments.InitVars();
                }
            }
            this.tableSelectedPayments = ((SelectedPaymentsDataTable)(base.Tables["SelectedPayments"]));
            if ((initTable == true)) {
                if ((this.tableSelectedPayments != null)) {
                    this.tableSelectedPayments.InitVars();
                }
            }
            this.tablePaymentDetails = ((PaymentDetailsDataTable)(base.Tables["PaymentDetails"]));
            if ((initTable == true)) {
                if ((this.tablePaymentDetails != null)) {
                    this.tablePaymentDetails.InitVars();
                }
            }
            this.tabletbPaidPaymentSummary = ((tbPaidPaymentSummaryDataTable)(base.Tables["tbPaidPaymentSummary"]));
            if ((initTable == true)) {
                if ((this.tabletbPaidPaymentSummary != null)) {
                    this.tabletbPaidPaymentSummary.InitVars();
                }
            }
            this.tabletbPaidPaymentMode = ((tbPaidPaymentModeDataTable)(base.Tables["tbPaidPaymentMode"]));
            if ((initTable == true)) {
                if ((this.tabletbPaidPaymentMode != null)) {
                    this.tabletbPaidPaymentMode.InitVars();
                }
            }
            this.tableSupplierPaymentSummary = ((SupplierPaymentSummaryDataTable)(base.Tables["SupplierPaymentSummary"]));
            if ((initTable == true)) {
                if ((this.tableSupplierPaymentSummary != null)) {
                    this.tableSupplierPaymentSummary.InitVars();
                }
            }
            this.tableTransactionSummary = ((TransactionSummaryDataTable)(base.Tables["TransactionSummary"]));
            if ((initTable == true)) {
                if ((this.tableTransactionSummary != null)) {
                    this.tableTransactionSummary.InitVars();
                }
            }
            this.tableStockDetails = ((StockDetailsDataTable)(base.Tables["StockDetails"]));
            if ((initTable == true)) {
                if ((this.tableStockDetails != null)) {
                    this.tableStockDetails.InitVars();
                }
            }
            this.tabledsSalesDetails = ((dsSalesDetailsDataTable)(base.Tables["dsSalesDetails"]));
            if ((initTable == true)) {
                if ((this.tabledsSalesDetails != null)) {
                    this.tabledsSalesDetails.InitVars();
                }
            }
            this.tabletbReportMonthlyAnalyse = ((tbReportMonthlyAnalyseDataTable)(base.Tables["tbReportMonthlyAnalyse"]));
            if ((initTable == true)) {
                if ((this.tabletbReportMonthlyAnalyse != null)) {
                    this.tabletbReportMonthlyAnalyse.InitVars();
                }
            }
            this.tableCollection = ((CollectionDataTable)(base.Tables["Collection"]));
            if ((initTable == true)) {
                if ((this.tableCollection != null)) {
                    this.tableCollection.InitVars();
                }
            }
            this.tableSelected = ((SelectedDataTable)(base.Tables["Selected"]));
            if ((initTable == true)) {
                if ((this.tableSelected != null)) {
                    this.tableSelected.InitVars();
                }
            }
            this.tabledsPurchasingDetails = ((dsPurchasingDetailsDataTable)(base.Tables["dsPurchasingDetails"]));
            if ((initTable == true)) {
                if ((this.tabledsPurchasingDetails != null)) {
                    this.tabledsPurchasingDetails.InitVars();
                }
            }
            this.tabledsAnalyseData = ((dsAnalyseDataDataTable)(base.Tables["dsAnalyseData"]));
            if ((initTable == true)) {
                if ((this.tabledsAnalyseData != null)) {
                    this.tabledsAnalyseData.InitVars();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "dsForReports";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/dsForReports.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableDepartment = new DepartmentDataTable();
            base.Tables.Add(this.tableDepartment);
            this.tableCategory = new CategoryDataTable();
            base.Tables.Add(this.tableCategory);
            this.tableStockAdjust = new StockAdjustDataTable();
            base.Tables.Add(this.tableStockAdjust);
            this.tableTransferNote = new TransferNoteDataTable();
            base.Tables.Add(this.tableTransferNote);
            this.tabledsTogDetails = new dsTogDetailsDataTable();
            base.Tables.Add(this.tabledsTogDetails);
            this.tabledsStockAdjustDetails = new dsStockAdjustDetailsDataTable();
            base.Tables.Add(this.tabledsStockAdjustDetails);
            this.tableGoodReceivedNote = new GoodReceivedNoteDataTable();
            base.Tables.Add(this.tableGoodReceivedNote);
            this.tabledsGRNDetailsForRep = new dsGRNDetailsForRepDataTable();
            base.Tables.Add(this.tabledsGRNDetailsForRep);
            this.tablePurchaseOrder = new PurchaseOrderDataTable();
            base.Tables.Add(this.tablePurchaseOrder);
            this.tabledsPurchaseOrderDetails = new dsPurchaseOrderDetailsDataTable();
            base.Tables.Add(this.tabledsPurchaseOrderDetails);
            this.tableProduct = new ProductDataTable();
            base.Tables.Add(this.tableProduct);
            this.tableInvoice = new InvoiceDataTable();
            base.Tables.Add(this.tableInvoice);
            this.tabledsAccount = new dsAccountDataTable();
            base.Tables.Add(this.tabledsAccount);
            this.tabledsInvoiceDetails = new dsInvoiceDetailsDataTable();
            base.Tables.Add(this.tabledsInvoiceDetails);
            this.tabledsStockProductwise = new dsStockProductwiseDataTable();
            base.Tables.Add(this.tabledsStockProductwise);
            this.tablePendingPayments = new PendingPaymentsDataTable();
            base.Tables.Add(this.tablePendingPayments);
            this.tableSelectedPayments = new SelectedPaymentsDataTable();
            base.Tables.Add(this.tableSelectedPayments);
            this.tablePaymentDetails = new PaymentDetailsDataTable();
            base.Tables.Add(this.tablePaymentDetails);
            this.tabletbPaidPaymentSummary = new tbPaidPaymentSummaryDataTable();
            base.Tables.Add(this.tabletbPaidPaymentSummary);
            this.tabletbPaidPaymentMode = new tbPaidPaymentModeDataTable();
            base.Tables.Add(this.tabletbPaidPaymentMode);
            this.tableSupplierPaymentSummary = new SupplierPaymentSummaryDataTable();
            base.Tables.Add(this.tableSupplierPaymentSummary);
            this.tableTransactionSummary = new TransactionSummaryDataTable();
            base.Tables.Add(this.tableTransactionSummary);
            this.tableStockDetails = new StockDetailsDataTable();
            base.Tables.Add(this.tableStockDetails);
            this.tabledsSalesDetails = new dsSalesDetailsDataTable();
            base.Tables.Add(this.tabledsSalesDetails);
            this.tabletbReportMonthlyAnalyse = new tbReportMonthlyAnalyseDataTable();
            base.Tables.Add(this.tabletbReportMonthlyAnalyse);
            this.tableCollection = new CollectionDataTable();
            base.Tables.Add(this.tableCollection);
            this.tableSelected = new SelectedDataTable();
            base.Tables.Add(this.tableSelected);
            this.tabledsPurchasingDetails = new dsPurchasingDetailsDataTable();
            base.Tables.Add(this.tabledsPurchasingDetails);
            this.tabledsAnalyseData = new dsAnalyseDataDataTable();
            base.Tables.Add(this.tabledsAnalyseData);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeDepartment() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCategory() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeStockAdjust() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeTransferNote() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedsTogDetails() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedsStockAdjustDetails() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeGoodReceivedNote() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedsGRNDetailsForRep() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePurchaseOrder() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedsPurchaseOrderDetails() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeProduct() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeInvoice() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedsAccount() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedsInvoiceDetails() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedsStockProductwise() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePendingPayments() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSelectedPayments() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePaymentDetails() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetbPaidPaymentSummary() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetbPaidPaymentMode() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSupplierPaymentSummary() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeTransactionSummary() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeStockDetails() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedsSalesDetails() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetbReportMonthlyAnalyse() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCollection() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSelected() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedsPurchasingDetails() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedsAnalyseData() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet xs) {
            dsForReports ds = new dsForReports();
            System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
            System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
            xs.Add(ds.GetSchemaSerializable());
            System.Xml.Schema.XmlSchemaAny any = new System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            return type;
        }
        
        public delegate void DepartmentRowChangeEventHandler(object sender, DepartmentRowChangeEvent e);
        
        public delegate void CategoryRowChangeEventHandler(object sender, CategoryRowChangeEvent e);
        
        public delegate void StockAdjustRowChangeEventHandler(object sender, StockAdjustRowChangeEvent e);
        
        public delegate void TransferNoteRowChangeEventHandler(object sender, TransferNoteRowChangeEvent e);
        
        public delegate void dsTogDetailsRowChangeEventHandler(object sender, dsTogDetailsRowChangeEvent e);
        
        public delegate void dsStockAdjustDetailsRowChangeEventHandler(object sender, dsStockAdjustDetailsRowChangeEvent e);
        
        public delegate void GoodReceivedNoteRowChangeEventHandler(object sender, GoodReceivedNoteRowChangeEvent e);
        
        public delegate void dsGRNDetailsForRepRowChangeEventHandler(object sender, dsGRNDetailsForRepRowChangeEvent e);
        
        public delegate void PurchaseOrderRowChangeEventHandler(object sender, PurchaseOrderRowChangeEvent e);
        
        public delegate void dsPurchaseOrderDetailsRowChangeEventHandler(object sender, dsPurchaseOrderDetailsRowChangeEvent e);
        
        public delegate void ProductRowChangeEventHandler(object sender, ProductRowChangeEvent e);
        
        public delegate void InvoiceRowChangeEventHandler(object sender, InvoiceRowChangeEvent e);
        
        public delegate void dsAccountRowChangeEventHandler(object sender, dsAccountRowChangeEvent e);
        
        public delegate void dsInvoiceDetailsRowChangeEventHandler(object sender, dsInvoiceDetailsRowChangeEvent e);
        
        public delegate void dsStockProductwiseRowChangeEventHandler(object sender, dsStockProductwiseRowChangeEvent e);
        
        public delegate void PendingPaymentsRowChangeEventHandler(object sender, PendingPaymentsRowChangeEvent e);
        
        public delegate void SelectedPaymentsRowChangeEventHandler(object sender, SelectedPaymentsRowChangeEvent e);
        
        public delegate void PaymentDetailsRowChangeEventHandler(object sender, PaymentDetailsRowChangeEvent e);
        
        public delegate void tbPaidPaymentSummaryRowChangeEventHandler(object sender, tbPaidPaymentSummaryRowChangeEvent e);
        
        public delegate void tbPaidPaymentModeRowChangeEventHandler(object sender, tbPaidPaymentModeRowChangeEvent e);
        
        public delegate void SupplierPaymentSummaryRowChangeEventHandler(object sender, SupplierPaymentSummaryRowChangeEvent e);
        
        public delegate void TransactionSummaryRowChangeEventHandler(object sender, TransactionSummaryRowChangeEvent e);
        
        public delegate void StockDetailsRowChangeEventHandler(object sender, StockDetailsRowChangeEvent e);
        
        public delegate void dsSalesDetailsRowChangeEventHandler(object sender, dsSalesDetailsRowChangeEvent e);
        
        public delegate void tbReportMonthlyAnalyseRowChangeEventHandler(object sender, tbReportMonthlyAnalyseRowChangeEvent e);
        
        public delegate void CollectionRowChangeEventHandler(object sender, CollectionRowChangeEvent e);
        
        public delegate void SelectedRowChangeEventHandler(object sender, SelectedRowChangeEvent e);
        
        public delegate void dsPurchasingDetailsRowChangeEventHandler(object sender, dsPurchasingDetailsRowChangeEvent e);
        
        public delegate void dsAnalyseDataRowChangeEventHandler(object sender, dsAnalyseDataRowChangeEvent e);
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DepartmentDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnDept_Code;
            
            private System.Data.DataColumn columnDept_Name;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DepartmentDataTable() {
                this.TableName = "Department";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DepartmentDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DepartmentDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Dept_CodeColumn {
                get {
                    return this.columnDept_Code;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Dept_NameColumn {
                get {
                    return this.columnDept_Name;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DepartmentRow this[int index] {
                get {
                    return ((DepartmentRow)(this.Rows[index]));
                }
            }
            
            public event DepartmentRowChangeEventHandler DepartmentRowChanging;
            
            public event DepartmentRowChangeEventHandler DepartmentRowChanged;
            
            public event DepartmentRowChangeEventHandler DepartmentRowDeleting;
            
            public event DepartmentRowChangeEventHandler DepartmentRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDepartmentRow(DepartmentRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DepartmentRow AddDepartmentRow(string Dept_Code, string Dept_Name) {
                DepartmentRow rowDepartmentRow = ((DepartmentRow)(this.NewRow()));
                rowDepartmentRow.ItemArray = new object[] {
                        Dept_Code,
                        Dept_Name};
                this.Rows.Add(rowDepartmentRow);
                return rowDepartmentRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                DepartmentDataTable cln = ((DepartmentDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new DepartmentDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDept_Code = base.Columns["Dept_Code"];
                this.columnDept_Name = base.Columns["Dept_Name"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDept_Code = new System.Data.DataColumn("Dept_Code", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDept_Code);
                this.columnDept_Name = new System.Data.DataColumn("Dept_Name", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDept_Name);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DepartmentRow NewDepartmentRow() {
                return ((DepartmentRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new DepartmentRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(DepartmentRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DepartmentRowChanged != null)) {
                    this.DepartmentRowChanged(this, new DepartmentRowChangeEvent(((DepartmentRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DepartmentRowChanging != null)) {
                    this.DepartmentRowChanging(this, new DepartmentRowChangeEvent(((DepartmentRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DepartmentRowDeleted != null)) {
                    this.DepartmentRowDeleted(this, new DepartmentRowChangeEvent(((DepartmentRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DepartmentRowDeleting != null)) {
                    this.DepartmentRowDeleting(this, new DepartmentRowChangeEvent(((DepartmentRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDepartmentRow(DepartmentRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DepartmentDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CategoryDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnDept_Code;
            
            private System.Data.DataColumn columnDept_Name;
            
            private System.Data.DataColumn columnCat_Code;
            
            private System.Data.DataColumn columnCat_Name;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CategoryDataTable() {
                this.TableName = "Category";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CategoryDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CategoryDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Dept_CodeColumn {
                get {
                    return this.columnDept_Code;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Dept_NameColumn {
                get {
                    return this.columnDept_Name;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Cat_CodeColumn {
                get {
                    return this.columnCat_Code;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Cat_NameColumn {
                get {
                    return this.columnCat_Name;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CategoryRow this[int index] {
                get {
                    return ((CategoryRow)(this.Rows[index]));
                }
            }
            
            public event CategoryRowChangeEventHandler CategoryRowChanging;
            
            public event CategoryRowChangeEventHandler CategoryRowChanged;
            
            public event CategoryRowChangeEventHandler CategoryRowDeleting;
            
            public event CategoryRowChangeEventHandler CategoryRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCategoryRow(CategoryRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CategoryRow AddCategoryRow(string Dept_Code, string Dept_Name, string Cat_Code, string Cat_Name) {
                CategoryRow rowCategoryRow = ((CategoryRow)(this.NewRow()));
                rowCategoryRow.ItemArray = new object[] {
                        Dept_Code,
                        Dept_Name,
                        Cat_Code,
                        Cat_Name};
                this.Rows.Add(rowCategoryRow);
                return rowCategoryRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                CategoryDataTable cln = ((CategoryDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new CategoryDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDept_Code = base.Columns["Dept_Code"];
                this.columnDept_Name = base.Columns["Dept_Name"];
                this.columnCat_Code = base.Columns["Cat_Code"];
                this.columnCat_Name = base.Columns["Cat_Name"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDept_Code = new System.Data.DataColumn("Dept_Code", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDept_Code);
                this.columnDept_Name = new System.Data.DataColumn("Dept_Name", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDept_Name);
                this.columnCat_Code = new System.Data.DataColumn("Cat_Code", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCat_Code);
                this.columnCat_Name = new System.Data.DataColumn("Cat_Name", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCat_Name);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CategoryRow NewCategoryRow() {
                return ((CategoryRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new CategoryRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(CategoryRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CategoryRowChanged != null)) {
                    this.CategoryRowChanged(this, new CategoryRowChangeEvent(((CategoryRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CategoryRowChanging != null)) {
                    this.CategoryRowChanging(this, new CategoryRowChangeEvent(((CategoryRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CategoryRowDeleted != null)) {
                    this.CategoryRowDeleted(this, new CategoryRowChangeEvent(((CategoryRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CategoryRowDeleting != null)) {
                    this.CategoryRowDeleting(this, new CategoryRowChangeEvent(((CategoryRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCategoryRow(CategoryRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CategoryDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class StockAdjustDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnProd_Code;
            
            private System.Data.DataColumn columnProd_Name;
            
            private System.Data.DataColumn columnSelling_Price;
            
            private System.Data.DataColumn columnPurchase_price;
            
            private System.Data.DataColumn columnCurr_Qty;
            
            private System.Data.DataColumn columnPhy_Qty;
            
            private System.Data.DataColumn columnVar_Qty;
            
            private System.Data.DataColumn columnDoc_No;
            
            private System.Data.DataColumn columnLoca;
            
            private System.Data.DataColumn columnPack_Size;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockAdjustDataTable() {
                this.TableName = "StockAdjust";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal StockAdjustDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected StockAdjustDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Prod_CodeColumn {
                get {
                    return this.columnProd_Code;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Prod_NameColumn {
                get {
                    return this.columnProd_Name;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Selling_PriceColumn {
                get {
                    return this.columnSelling_Price;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Purchase_priceColumn {
                get {
                    return this.columnPurchase_price;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Curr_QtyColumn {
                get {
                    return this.columnCurr_Qty;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Phy_QtyColumn {
                get {
                    return this.columnPhy_Qty;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Var_QtyColumn {
                get {
                    return this.columnVar_Qty;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Doc_NoColumn {
                get {
                    return this.columnDoc_No;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn LocaColumn {
                get {
                    return this.columnLoca;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Pack_SizeColumn {
                get {
                    return this.columnPack_Size;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockAdjustRow this[int index] {
                get {
                    return ((StockAdjustRow)(this.Rows[index]));
                }
            }
            
            public event StockAdjustRowChangeEventHandler StockAdjustRowChanging;
            
            public event StockAdjustRowChangeEventHandler StockAdjustRowChanged;
            
            public event StockAdjustRowChangeEventHandler StockAdjustRowDeleting;
            
            public event StockAdjustRowChangeEventHandler StockAdjustRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddStockAdjustRow(StockAdjustRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockAdjustRow AddStockAdjustRow(string Prod_Code, string Prod_Name, string Selling_Price, string Purchase_price, string Curr_Qty, string Phy_Qty, string Var_Qty, string Doc_No, string Loca, string Pack_Size) {
                StockAdjustRow rowStockAdjustRow = ((StockAdjustRow)(this.NewRow()));
                rowStockAdjustRow.ItemArray = new object[] {
                        Prod_Code,
                        Prod_Name,
                        Selling_Price,
                        Purchase_price,
                        Curr_Qty,
                        Phy_Qty,
                        Var_Qty,
                        Doc_No,
                        Loca,
                        Pack_Size};
                this.Rows.Add(rowStockAdjustRow);
                return rowStockAdjustRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                StockAdjustDataTable cln = ((StockAdjustDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new StockAdjustDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnProd_Code = base.Columns["Prod_Code"];
                this.columnProd_Name = base.Columns["Prod_Name"];
                this.columnSelling_Price = base.Columns["Selling_Price"];
                this.columnPurchase_price = base.Columns["Purchase_price"];
                this.columnCurr_Qty = base.Columns["Curr_Qty"];
                this.columnPhy_Qty = base.Columns["Phy_Qty"];
                this.columnVar_Qty = base.Columns["Var_Qty"];
                this.columnDoc_No = base.Columns["Doc_No"];
                this.columnLoca = base.Columns["Loca"];
                this.columnPack_Size = base.Columns["Pack_Size"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnProd_Code = new System.Data.DataColumn("Prod_Code", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Code);
                this.columnProd_Name = new System.Data.DataColumn("Prod_Name", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Name);
                this.columnSelling_Price = new System.Data.DataColumn("Selling_Price", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelling_Price);
                this.columnPurchase_price = new System.Data.DataColumn("Purchase_price", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPurchase_price);
                this.columnCurr_Qty = new System.Data.DataColumn("Curr_Qty", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurr_Qty);
                this.columnPhy_Qty = new System.Data.DataColumn("Phy_Qty", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhy_Qty);
                this.columnVar_Qty = new System.Data.DataColumn("Var_Qty", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnVar_Qty);
                this.columnDoc_No = new System.Data.DataColumn("Doc_No", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDoc_No);
                this.columnLoca = new System.Data.DataColumn("Loca", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoca);
                this.columnPack_Size = new System.Data.DataColumn("Pack_Size", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPack_Size);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockAdjustRow NewStockAdjustRow() {
                return ((StockAdjustRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new StockAdjustRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(StockAdjustRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.StockAdjustRowChanged != null)) {
                    this.StockAdjustRowChanged(this, new StockAdjustRowChangeEvent(((StockAdjustRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.StockAdjustRowChanging != null)) {
                    this.StockAdjustRowChanging(this, new StockAdjustRowChangeEvent(((StockAdjustRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.StockAdjustRowDeleted != null)) {
                    this.StockAdjustRowDeleted(this, new StockAdjustRowChangeEvent(((StockAdjustRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.StockAdjustRowDeleting != null)) {
                    this.StockAdjustRowDeleting(this, new StockAdjustRowChangeEvent(((StockAdjustRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveStockAdjustRow(StockAdjustRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "StockAdjustDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TransferNoteDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnProd_Code;
            
            private System.Data.DataColumn columnProd_Name;
            
            private System.Data.DataColumn columnSelling_Price;
            
            private System.Data.DataColumn columnPurchase_price;
            
            private System.Data.DataColumn columnPack_Size;
            
            private System.Data.DataColumn columnQty;
            
            private System.Data.DataColumn columnAmount;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TransferNoteDataTable() {
                this.TableName = "TransferNote";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TransferNoteDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected TransferNoteDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Prod_CodeColumn {
                get {
                    return this.columnProd_Code;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Prod_NameColumn {
                get {
                    return this.columnProd_Name;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Selling_PriceColumn {
                get {
                    return this.columnSelling_Price;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Purchase_priceColumn {
                get {
                    return this.columnPurchase_price;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Pack_SizeColumn {
                get {
                    return this.columnPack_Size;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn QtyColumn {
                get {
                    return this.columnQty;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TransferNoteRow this[int index] {
                get {
                    return ((TransferNoteRow)(this.Rows[index]));
                }
            }
            
            public event TransferNoteRowChangeEventHandler TransferNoteRowChanging;
            
            public event TransferNoteRowChangeEventHandler TransferNoteRowChanged;
            
            public event TransferNoteRowChangeEventHandler TransferNoteRowDeleting;
            
            public event TransferNoteRowChangeEventHandler TransferNoteRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddTransferNoteRow(TransferNoteRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TransferNoteRow AddTransferNoteRow(string Prod_Code, string Prod_Name, string Selling_Price, string Purchase_price, string Pack_Size, string Qty, string Amount) {
                TransferNoteRow rowTransferNoteRow = ((TransferNoteRow)(this.NewRow()));
                rowTransferNoteRow.ItemArray = new object[] {
                        Prod_Code,
                        Prod_Name,
                        Selling_Price,
                        Purchase_price,
                        Pack_Size,
                        Qty,
                        Amount};
                this.Rows.Add(rowTransferNoteRow);
                return rowTransferNoteRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                TransferNoteDataTable cln = ((TransferNoteDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new TransferNoteDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnProd_Code = base.Columns["Prod_Code"];
                this.columnProd_Name = base.Columns["Prod_Name"];
                this.columnSelling_Price = base.Columns["Selling_Price"];
                this.columnPurchase_price = base.Columns["Purchase_price"];
                this.columnPack_Size = base.Columns["Pack_Size"];
                this.columnQty = base.Columns["Qty"];
                this.columnAmount = base.Columns["Amount"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnProd_Code = new System.Data.DataColumn("Prod_Code", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Code);
                this.columnProd_Name = new System.Data.DataColumn("Prod_Name", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Name);
                this.columnSelling_Price = new System.Data.DataColumn("Selling_Price", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelling_Price);
                this.columnPurchase_price = new System.Data.DataColumn("Purchase_price", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPurchase_price);
                this.columnPack_Size = new System.Data.DataColumn("Pack_Size", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPack_Size);
                this.columnQty = new System.Data.DataColumn("Qty", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnQty);
                this.columnAmount = new System.Data.DataColumn("Amount", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TransferNoteRow NewTransferNoteRow() {
                return ((TransferNoteRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new TransferNoteRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(TransferNoteRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TransferNoteRowChanged != null)) {
                    this.TransferNoteRowChanged(this, new TransferNoteRowChangeEvent(((TransferNoteRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TransferNoteRowChanging != null)) {
                    this.TransferNoteRowChanging(this, new TransferNoteRowChangeEvent(((TransferNoteRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TransferNoteRowDeleted != null)) {
                    this.TransferNoteRowDeleted(this, new TransferNoteRowChangeEvent(((TransferNoteRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TransferNoteRowDeleting != null)) {
                    this.TransferNoteRowDeleting(this, new TransferNoteRowChangeEvent(((TransferNoteRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveTransferNoteRow(TransferNoteRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TransferNoteDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dsTogDetailsDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnDoc_No;
            
            private System.Data.DataColumn columnLoca;
            
            private System.Data.DataColumn columnLocaDesc;
            
            private System.Data.DataColumn columnTo_Loca;
            
            private System.Data.DataColumn columnTo_LocaDesc;
            
            private System.Data.DataColumn columnPost_Date;
            
            private System.Data.DataColumn columnAmount;
            
            private System.Data.DataColumn columnRemarks;
            
            private System.Data.DataColumn columnProd_Code;
            
            private System.Data.DataColumn columnProd_Name;
            
            private System.Data.DataColumn columnQty;
            
            private System.Data.DataColumn columnPurchase_Price;
            
            private System.Data.DataColumn columnSelling_Price;
            
            private System.Data.DataColumn columnPack_Size;
            
            private System.Data.DataColumn columnStatus;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsTogDetailsDataTable() {
                this.TableName = "dsTogDetails";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsTogDetailsDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dsTogDetailsDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Doc_NoColumn {
                get {
                    return this.columnDoc_No;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn LocaColumn {
                get {
                    return this.columnLoca;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn LocaDescColumn {
                get {
                    return this.columnLocaDesc;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn To_LocaColumn {
                get {
                    return this.columnTo_Loca;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn To_LocaDescColumn {
                get {
                    return this.columnTo_LocaDesc;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Post_DateColumn {
                get {
                    return this.columnPost_Date;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn RemarksColumn {
                get {
                    return this.columnRemarks;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Prod_CodeColumn {
                get {
                    return this.columnProd_Code;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Prod_NameColumn {
                get {
                    return this.columnProd_Name;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn QtyColumn {
                get {
                    return this.columnQty;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Purchase_PriceColumn {
                get {
                    return this.columnPurchase_Price;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Selling_PriceColumn {
                get {
                    return this.columnSelling_Price;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Pack_SizeColumn {
                get {
                    return this.columnPack_Size;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn StatusColumn {
                get {
                    return this.columnStatus;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsTogDetailsRow this[int index] {
                get {
                    return ((dsTogDetailsRow)(this.Rows[index]));
                }
            }
            
            public event dsTogDetailsRowChangeEventHandler dsTogDetailsRowChanging;
            
            public event dsTogDetailsRowChangeEventHandler dsTogDetailsRowChanged;
            
            public event dsTogDetailsRowChangeEventHandler dsTogDetailsRowDeleting;
            
            public event dsTogDetailsRowChangeEventHandler dsTogDetailsRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddsTogDetailsRow(dsTogDetailsRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsTogDetailsRow AdddsTogDetailsRow(string Doc_No, string Loca, string LocaDesc, string To_Loca, string To_LocaDesc, string Post_Date, string Amount, string Remarks, string Prod_Code, string Prod_Name, string Qty, string Purchase_Price, string Selling_Price, string Pack_Size, string Status) {
                dsTogDetailsRow rowdsTogDetailsRow = ((dsTogDetailsRow)(this.NewRow()));
                rowdsTogDetailsRow.ItemArray = new object[] {
                        Doc_No,
                        Loca,
                        LocaDesc,
                        To_Loca,
                        To_LocaDesc,
                        Post_Date,
                        Amount,
                        Remarks,
                        Prod_Code,
                        Prod_Name,
                        Qty,
                        Purchase_Price,
                        Selling_Price,
                        Pack_Size,
                        Status};
                this.Rows.Add(rowdsTogDetailsRow);
                return rowdsTogDetailsRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                dsTogDetailsDataTable cln = ((dsTogDetailsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new dsTogDetailsDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDoc_No = base.Columns["Doc_No"];
                this.columnLoca = base.Columns["Loca"];
                this.columnLocaDesc = base.Columns["LocaDesc"];
                this.columnTo_Loca = base.Columns["To_Loca"];
                this.columnTo_LocaDesc = base.Columns["To_LocaDesc"];
                this.columnPost_Date = base.Columns["Post_Date"];
                this.columnAmount = base.Columns["Amount"];
                this.columnRemarks = base.Columns["Remarks"];
                this.columnProd_Code = base.Columns["Prod_Code"];
                this.columnProd_Name = base.Columns["Prod_Name"];
                this.columnQty = base.Columns["Qty"];
                this.columnPurchase_Price = base.Columns["Purchase_Price"];
                this.columnSelling_Price = base.Columns["Selling_Price"];
                this.columnPack_Size = base.Columns["Pack_Size"];
                this.columnStatus = base.Columns["Status"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDoc_No = new System.Data.DataColumn("Doc_No", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDoc_No);
                this.columnLoca = new System.Data.DataColumn("Loca", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoca);
                this.columnLocaDesc = new System.Data.DataColumn("LocaDesc", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocaDesc);
                this.columnTo_Loca = new System.Data.DataColumn("To_Loca", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTo_Loca);
                this.columnTo_LocaDesc = new System.Data.DataColumn("To_LocaDesc", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTo_LocaDesc);
                this.columnPost_Date = new System.Data.DataColumn("Post_Date", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPost_Date);
                this.columnAmount = new System.Data.DataColumn("Amount", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
                this.columnRemarks = new System.Data.DataColumn("Remarks", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemarks);
                this.columnProd_Code = new System.Data.DataColumn("Prod_Code", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Code);
                this.columnProd_Name = new System.Data.DataColumn("Prod_Name", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Name);
                this.columnQty = new System.Data.DataColumn("Qty", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnQty);
                this.columnPurchase_Price = new System.Data.DataColumn("Purchase_Price", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPurchase_Price);
                this.columnSelling_Price = new System.Data.DataColumn("Selling_Price", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelling_Price);
                this.columnPack_Size = new System.Data.DataColumn("Pack_Size", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPack_Size);
                this.columnStatus = new System.Data.DataColumn("Status", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatus);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsTogDetailsRow NewdsTogDetailsRow() {
                return ((dsTogDetailsRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new dsTogDetailsRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(dsTogDetailsRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dsTogDetailsRowChanged != null)) {
                    this.dsTogDetailsRowChanged(this, new dsTogDetailsRowChangeEvent(((dsTogDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dsTogDetailsRowChanging != null)) {
                    this.dsTogDetailsRowChanging(this, new dsTogDetailsRowChangeEvent(((dsTogDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dsTogDetailsRowDeleted != null)) {
                    this.dsTogDetailsRowDeleted(this, new dsTogDetailsRowChangeEvent(((dsTogDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dsTogDetailsRowDeleting != null)) {
                    this.dsTogDetailsRowDeleting(this, new dsTogDetailsRowChangeEvent(((dsTogDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedsTogDetailsRow(dsTogDetailsRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dsTogDetailsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dsStockAdjustDetailsDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnLoca;
            
            private System.Data.DataColumn columnLoca_Descrip;
            
            private System.Data.DataColumn columnDoc_No;
            
            private System.Data.DataColumn columnPost_Date;
            
            private System.Data.DataColumn columnUser_Name;
            
            private System.Data.DataColumn columnProd_Code;
            
            private System.Data.DataColumn columnProd_Name;
            
            private System.Data.DataColumn columnQty;
            
            private System.Data.DataColumn columnPhy_Qty;
            
            private System.Data.DataColumn columnPurchase_Price;
            
            private System.Data.DataColumn columnSelling_Price;
            
            private System.Data.DataColumn columnPack_Size;
            
            private System.Data.DataColumn columnLn;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsStockAdjustDetailsDataTable() {
                this.TableName = "dsStockAdjustDetails";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsStockAdjustDetailsDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dsStockAdjustDetailsDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn LocaColumn {
                get {
                    return this.columnLoca;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Loca_DescripColumn {
                get {
                    return this.columnLoca_Descrip;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Doc_NoColumn {
                get {
                    return this.columnDoc_No;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Post_DateColumn {
                get {
                    return this.columnPost_Date;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn User_NameColumn {
                get {
                    return this.columnUser_Name;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Prod_CodeColumn {
                get {
                    return this.columnProd_Code;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Prod_NameColumn {
                get {
                    return this.columnProd_Name;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn QtyColumn {
                get {
                    return this.columnQty;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Phy_QtyColumn {
                get {
                    return this.columnPhy_Qty;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Purchase_PriceColumn {
                get {
                    return this.columnPurchase_Price;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Selling_PriceColumn {
                get {
                    return this.columnSelling_Price;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Pack_SizeColumn {
                get {
                    return this.columnPack_Size;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn LnColumn {
                get {
                    return this.columnLn;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsStockAdjustDetailsRow this[int index] {
                get {
                    return ((dsStockAdjustDetailsRow)(this.Rows[index]));
                }
            }
            
            public event dsStockAdjustDetailsRowChangeEventHandler dsStockAdjustDetailsRowChanging;
            
            public event dsStockAdjustDetailsRowChangeEventHandler dsStockAdjustDetailsRowChanged;
            
            public event dsStockAdjustDetailsRowChangeEventHandler dsStockAdjustDetailsRowDeleting;
            
            public event dsStockAdjustDetailsRowChangeEventHandler dsStockAdjustDetailsRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddsStockAdjustDetailsRow(dsStockAdjustDetailsRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsStockAdjustDetailsRow AdddsStockAdjustDetailsRow(string Loca, string Loca_Descrip, string Doc_No, string Post_Date, string User_Name, string Prod_Code, string Prod_Name, string Qty, string Phy_Qty, string Purchase_Price, string Selling_Price, string Pack_Size, string Ln) {
                dsStockAdjustDetailsRow rowdsStockAdjustDetailsRow = ((dsStockAdjustDetailsRow)(this.NewRow()));
                rowdsStockAdjustDetailsRow.ItemArray = new object[] {
                        Loca,
                        Loca_Descrip,
                        Doc_No,
                        Post_Date,
                        User_Name,
                        Prod_Code,
                        Prod_Name,
                        Qty,
                        Phy_Qty,
                        Purchase_Price,
                        Selling_Price,
                        Pack_Size,
                        Ln};
                this.Rows.Add(rowdsStockAdjustDetailsRow);
                return rowdsStockAdjustDetailsRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                dsStockAdjustDetailsDataTable cln = ((dsStockAdjustDetailsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new dsStockAdjustDetailsDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnLoca = base.Columns["Loca"];
                this.columnLoca_Descrip = base.Columns["Loca_Descrip"];
                this.columnDoc_No = base.Columns["Doc_No"];
                this.columnPost_Date = base.Columns["Post_Date"];
                this.columnUser_Name = base.Columns["User_Name"];
                this.columnProd_Code = base.Columns["Prod_Code"];
                this.columnProd_Name = base.Columns["Prod_Name"];
                this.columnQty = base.Columns["Qty"];
                this.columnPhy_Qty = base.Columns["Phy_Qty"];
                this.columnPurchase_Price = base.Columns["Purchase_Price"];
                this.columnSelling_Price = base.Columns["Selling_Price"];
                this.columnPack_Size = base.Columns["Pack_Size"];
                this.columnLn = base.Columns["Ln"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnLoca = new System.Data.DataColumn("Loca", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoca);
                this.columnLoca_Descrip = new System.Data.DataColumn("Loca_Descrip", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoca_Descrip);
                this.columnDoc_No = new System.Data.DataColumn("Doc_No", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDoc_No);
                this.columnPost_Date = new System.Data.DataColumn("Post_Date", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPost_Date);
                this.columnUser_Name = new System.Data.DataColumn("User_Name", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnUser_Name);
                this.columnProd_Code = new System.Data.DataColumn("Prod_Code", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Code);
                this.columnProd_Name = new System.Data.DataColumn("Prod_Name", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Name);
                this.columnQty = new System.Data.DataColumn("Qty", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnQty);
                this.columnPhy_Qty = new System.Data.DataColumn("Phy_Qty", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhy_Qty);
                this.columnPurchase_Price = new System.Data.DataColumn("Purchase_Price", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPurchase_Price);
                this.columnSelling_Price = new System.Data.DataColumn("Selling_Price", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelling_Price);
                this.columnPack_Size = new System.Data.DataColumn("Pack_Size", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPack_Size);
                this.columnLn = new System.Data.DataColumn("Ln", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnLn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsStockAdjustDetailsRow NewdsStockAdjustDetailsRow() {
                return ((dsStockAdjustDetailsRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new dsStockAdjustDetailsRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(dsStockAdjustDetailsRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dsStockAdjustDetailsRowChanged != null)) {
                    this.dsStockAdjustDetailsRowChanged(this, new dsStockAdjustDetailsRowChangeEvent(((dsStockAdjustDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dsStockAdjustDetailsRowChanging != null)) {
                    this.dsStockAdjustDetailsRowChanging(this, new dsStockAdjustDetailsRowChangeEvent(((dsStockAdjustDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dsStockAdjustDetailsRowDeleted != null)) {
                    this.dsStockAdjustDetailsRowDeleted(this, new dsStockAdjustDetailsRowChangeEvent(((dsStockAdjustDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dsStockAdjustDetailsRowDeleting != null)) {
                    this.dsStockAdjustDetailsRowDeleting(this, new dsStockAdjustDetailsRowChangeEvent(((dsStockAdjustDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedsStockAdjustDetailsRow(dsStockAdjustDetailsRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dsStockAdjustDetailsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class GoodReceivedNoteDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnProd_Code;
            
            private System.Data.DataColumn columnProd_Name;
            
            private System.Data.DataColumn columnUnit;
            
            private System.Data.DataColumn columnPurchase_Price;
            
            private System.Data.DataColumn columnSelling_Price;
            
            private System.Data.DataColumn columnQty;
            
            private System.Data.DataColumn columnFreeQty;
            
            private System.Data.DataColumn columnDiscount;
            
            private System.Data.DataColumn columnAmount;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GoodReceivedNoteDataTable() {
                this.TableName = "GoodReceivedNote";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GoodReceivedNoteDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected GoodReceivedNoteDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Prod_CodeColumn {
                get {
                    return this.columnProd_Code;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Prod_NameColumn {
                get {
                    return this.columnProd_Name;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn UnitColumn {
                get {
                    return this.columnUnit;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Purchase_PriceColumn {
                get {
                    return this.columnPurchase_Price;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Selling_PriceColumn {
                get {
                    return this.columnSelling_Price;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn QtyColumn {
                get {
                    return this.columnQty;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn FreeQtyColumn {
                get {
                    return this.columnFreeQty;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DiscountColumn {
                get {
                    return this.columnDiscount;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GoodReceivedNoteRow this[int index] {
                get {
                    return ((GoodReceivedNoteRow)(this.Rows[index]));
                }
            }
            
            public event GoodReceivedNoteRowChangeEventHandler GoodReceivedNoteRowChanging;
            
            public event GoodReceivedNoteRowChangeEventHandler GoodReceivedNoteRowChanged;
            
            public event GoodReceivedNoteRowChangeEventHandler GoodReceivedNoteRowDeleting;
            
            public event GoodReceivedNoteRowChangeEventHandler GoodReceivedNoteRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddGoodReceivedNoteRow(GoodReceivedNoteRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GoodReceivedNoteRow AddGoodReceivedNoteRow(string Prod_Code, string Prod_Name, string Unit, string Purchase_Price, string Selling_Price, string Qty, string FreeQty, string Discount, string Amount) {
                GoodReceivedNoteRow rowGoodReceivedNoteRow = ((GoodReceivedNoteRow)(this.NewRow()));
                rowGoodReceivedNoteRow.ItemArray = new object[] {
                        Prod_Code,
                        Prod_Name,
                        Unit,
                        Purchase_Price,
                        Selling_Price,
                        Qty,
                        FreeQty,
                        Discount,
                        Amount};
                this.Rows.Add(rowGoodReceivedNoteRow);
                return rowGoodReceivedNoteRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                GoodReceivedNoteDataTable cln = ((GoodReceivedNoteDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new GoodReceivedNoteDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnProd_Code = base.Columns["Prod_Code"];
                this.columnProd_Name = base.Columns["Prod_Name"];
                this.columnUnit = base.Columns["Unit"];
                this.columnPurchase_Price = base.Columns["Purchase_Price"];
                this.columnSelling_Price = base.Columns["Selling_Price"];
                this.columnQty = base.Columns["Qty"];
                this.columnFreeQty = base.Columns["FreeQty"];
                this.columnDiscount = base.Columns["Discount"];
                this.columnAmount = base.Columns["Amount"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnProd_Code = new System.Data.DataColumn("Prod_Code", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Code);
                this.columnProd_Name = new System.Data.DataColumn("Prod_Name", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Name);
                this.columnUnit = new System.Data.DataColumn("Unit", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnit);
                this.columnPurchase_Price = new System.Data.DataColumn("Purchase_Price", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPurchase_Price);
                this.columnSelling_Price = new System.Data.DataColumn("Selling_Price", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelling_Price);
                this.columnQty = new System.Data.DataColumn("Qty", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnQty);
                this.columnFreeQty = new System.Data.DataColumn("FreeQty", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnFreeQty);
                this.columnDiscount = new System.Data.DataColumn("Discount", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiscount);
                this.columnAmount = new System.Data.DataColumn("Amount", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GoodReceivedNoteRow NewGoodReceivedNoteRow() {
                return ((GoodReceivedNoteRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new GoodReceivedNoteRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(GoodReceivedNoteRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GoodReceivedNoteRowChanged != null)) {
                    this.GoodReceivedNoteRowChanged(this, new GoodReceivedNoteRowChangeEvent(((GoodReceivedNoteRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GoodReceivedNoteRowChanging != null)) {
                    this.GoodReceivedNoteRowChanging(this, new GoodReceivedNoteRowChangeEvent(((GoodReceivedNoteRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GoodReceivedNoteRowDeleted != null)) {
                    this.GoodReceivedNoteRowDeleted(this, new GoodReceivedNoteRowChangeEvent(((GoodReceivedNoteRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GoodReceivedNoteRowDeleting != null)) {
                    this.GoodReceivedNoteRowDeleting(this, new GoodReceivedNoteRowChangeEvent(((GoodReceivedNoteRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveGoodReceivedNoteRow(GoodReceivedNoteRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "GoodReceivedNoteDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dsGRNDetailsForRepDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnDoc_no;
            
            private System.Data.DataColumn columnLoca;
            
            private System.Data.DataColumn columnLoca_Descrip;
            
            private System.Data.DataColumn columnPost_Date;
            
            private System.Data.DataColumn columninv_no;
            
            private System.Data.DataColumn columnInv_Amt;
            
            private System.Data.DataColumn columnPorder_no;
            
            private System.Data.DataColumn columnNet_Amount;
            
            private System.Data.DataColumn columnGross_Amount;
            
            private System.Data.DataColumn columnSub_Discount;
            
            private System.Data.DataColumn columnDisc;
            
            private System.Data.DataColumn columnRemarks;
            
            private System.Data.DataColumn columnReference;
            
            private System.Data.DataColumn columnPay_Type;
            
            private System.Data.DataColumn columnTax;
            
            private System.Data.DataColumn columnProd_code;
            
            private System.Data.DataColumn columnProd_Name;
            
            private System.Data.DataColumn columnQty;
            
            private System.Data.DataColumn columnFreeQty;
            
            private System.Data.DataColumn columnPurchase_Price;
            
            private System.Data.DataColumn columnSelling_Price;
            
            private System.Data.DataColumn columnDiscount;
            
            private System.Data.DataColumn columnAmount;
            
            private System.Data.DataColumn columnLn;
            
            private System.Data.DataColumn columnStatus;
            
            private System.Data.DataColumn columnSupp_Name;
            
            private System.Data.DataColumn columnSupplier_Id;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsGRNDetailsForRepDataTable() {
                this.TableName = "dsGRNDetailsForRep";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsGRNDetailsForRepDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dsGRNDetailsForRepDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Doc_noColumn {
                get {
                    return this.columnDoc_no;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn LocaColumn {
                get {
                    return this.columnLoca;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Loca_DescripColumn {
                get {
                    return this.columnLoca_Descrip;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Post_DateColumn {
                get {
                    return this.columnPost_Date;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn inv_noColumn {
                get {
                    return this.columninv_no;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Inv_AmtColumn {
                get {
                    return this.columnInv_Amt;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Porder_noColumn {
                get {
                    return this.columnPorder_no;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Net_AmountColumn {
                get {
                    return this.columnNet_Amount;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Gross_AmountColumn {
                get {
                    return this.columnGross_Amount;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Sub_DiscountColumn {
                get {
                    return this.columnSub_Discount;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DiscColumn {
                get {
                    return this.columnDisc;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn RemarksColumn {
                get {
                    return this.columnRemarks;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ReferenceColumn {
                get {
                    return this.columnReference;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Pay_TypeColumn {
                get {
                    return this.columnPay_Type;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TaxColumn {
                get {
                    return this.columnTax;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Prod_codeColumn {
                get {
                    return this.columnProd_code;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Prod_NameColumn {
                get {
                    return this.columnProd_Name;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn QtyColumn {
                get {
                    return this.columnQty;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn FreeQtyColumn {
                get {
                    return this.columnFreeQty;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Purchase_PriceColumn {
                get {
                    return this.columnPurchase_Price;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Selling_PriceColumn {
                get {
                    return this.columnSelling_Price;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DiscountColumn {
                get {
                    return this.columnDiscount;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn LnColumn {
                get {
                    return this.columnLn;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn StatusColumn {
                get {
                    return this.columnStatus;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Supp_NameColumn {
                get {
                    return this.columnSupp_Name;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Supplier_IdColumn {
                get {
                    return this.columnSupplier_Id;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsGRNDetailsForRepRow this[int index] {
                get {
                    return ((dsGRNDetailsForRepRow)(this.Rows[index]));
                }
            }
            
            public event dsGRNDetailsForRepRowChangeEventHandler dsGRNDetailsForRepRowChanging;
            
            public event dsGRNDetailsForRepRowChangeEventHandler dsGRNDetailsForRepRowChanged;
            
            public event dsGRNDetailsForRepRowChangeEventHandler dsGRNDetailsForRepRowDeleting;
            
            public event dsGRNDetailsForRepRowChangeEventHandler dsGRNDetailsForRepRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddsGRNDetailsForRepRow(dsGRNDetailsForRepRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsGRNDetailsForRepRow AdddsGRNDetailsForRepRow(
                        string Doc_no, 
                        string Loca, 
                        string Loca_Descrip, 
                        string Post_Date, 
                        string inv_no, 
                        string Inv_Amt, 
                        string Porder_no, 
                        string Net_Amount, 
                        string Gross_Amount, 
                        string Sub_Discount, 
                        string Disc, 
                        string Remarks, 
                        string Reference, 
                        string Pay_Type, 
                        string Tax, 
                        string Prod_code, 
                        string Prod_Name, 
                        string Qty, 
                        string FreeQty, 
                        string Purchase_Price, 
                        string Selling_Price, 
                        string Discount, 
                        string Amount, 
                        string Ln, 
                        string Status, 
                        string Supp_Name, 
                        string Supplier_Id) {
                dsGRNDetailsForRepRow rowdsGRNDetailsForRepRow = ((dsGRNDetailsForRepRow)(this.NewRow()));
                rowdsGRNDetailsForRepRow.ItemArray = new object[] {
                        Doc_no,
                        Loca,
                        Loca_Descrip,
                        Post_Date,
                        inv_no,
                        Inv_Amt,
                        Porder_no,
                        Net_Amount,
                        Gross_Amount,
                        Sub_Discount,
                        Disc,
                        Remarks,
                        Reference,
                        Pay_Type,
                        Tax,
                        Prod_code,
                        Prod_Name,
                        Qty,
                        FreeQty,
                        Purchase_Price,
                        Selling_Price,
                        Discount,
                        Amount,
                        Ln,
                        Status,
                        Supp_Name,
                        Supplier_Id};
                this.Rows.Add(rowdsGRNDetailsForRepRow);
                return rowdsGRNDetailsForRepRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                dsGRNDetailsForRepDataTable cln = ((dsGRNDetailsForRepDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new dsGRNDetailsForRepDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDoc_no = base.Columns["Doc_no"];
                this.columnLoca = base.Columns["Loca"];
                this.columnLoca_Descrip = base.Columns["Loca_Descrip"];
                this.columnPost_Date = base.Columns["Post_Date"];
                this.columninv_no = base.Columns["inv_no"];
                this.columnInv_Amt = base.Columns["Inv_Amt"];
                this.columnPorder_no = base.Columns["Porder_no"];
                this.columnNet_Amount = base.Columns["Net_Amount"];
                this.columnGross_Amount = base.Columns["Gross_Amount"];
                this.columnSub_Discount = base.Columns["Sub_Discount"];
                this.columnDisc = base.Columns["Disc"];
                this.columnRemarks = base.Columns["Remarks"];
                this.columnReference = base.Columns["Reference"];
                this.columnPay_Type = base.Columns["Pay_Type"];
                this.columnTax = base.Columns["Tax"];
                this.columnProd_code = base.Columns["Prod_code"];
                this.columnProd_Name = base.Columns["Prod_Name"];
                this.columnQty = base.Columns["Qty"];
                this.columnFreeQty = base.Columns["FreeQty"];
                this.columnPurchase_Price = base.Columns["Purchase_Price"];
                this.columnSelling_Price = base.Columns["Selling_Price"];
                this.columnDiscount = base.Columns["Discount"];
                this.columnAmount = base.Columns["Amount"];
                this.columnLn = base.Columns["Ln"];
                this.columnStatus = base.Columns["Status"];
                this.columnSupp_Name = base.Columns["Supp_Name"];
                this.columnSupplier_Id = base.Columns["Supplier_Id"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDoc_no = new System.Data.DataColumn("Doc_no", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDoc_no);
                this.columnLoca = new System.Data.DataColumn("Loca", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoca);
                this.columnLoca_Descrip = new System.Data.DataColumn("Loca_Descrip", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoca_Descrip);
                this.columnPost_Date = new System.Data.DataColumn("Post_Date", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPost_Date);
                this.columninv_no = new System.Data.DataColumn("inv_no", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columninv_no);
                this.columnInv_Amt = new System.Data.DataColumn("Inv_Amt", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnInv_Amt);
                this.columnPorder_no = new System.Data.DataColumn("Porder_no", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPorder_no);
                this.columnNet_Amount = new System.Data.DataColumn("Net_Amount", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnNet_Amount);
                this.columnGross_Amount = new System.Data.DataColumn("Gross_Amount", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnGross_Amount);
                this.columnSub_Discount = new System.Data.DataColumn("Sub_Discount", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSub_Discount);
                this.columnDisc = new System.Data.DataColumn("Disc", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDisc);
                this.columnRemarks = new System.Data.DataColumn("Remarks", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemarks);
                this.columnReference = new System.Data.DataColumn("Reference", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnReference);
                this.columnPay_Type = new System.Data.DataColumn("Pay_Type", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPay_Type);
                this.columnTax = new System.Data.DataColumn("Tax", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTax);
                this.columnProd_code = new System.Data.DataColumn("Prod_code", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_code);
                this.columnProd_Name = new System.Data.DataColumn("Prod_Name", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Name);
                this.columnQty = new System.Data.DataColumn("Qty", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnQty);
                this.columnFreeQty = new System.Data.DataColumn("FreeQty", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnFreeQty);
                this.columnPurchase_Price = new System.Data.DataColumn("Purchase_Price", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPurchase_Price);
                this.columnSelling_Price = new System.Data.DataColumn("Selling_Price", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelling_Price);
                this.columnDiscount = new System.Data.DataColumn("Discount", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiscount);
                this.columnAmount = new System.Data.DataColumn("Amount", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
                this.columnLn = new System.Data.DataColumn("Ln", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnLn);
                this.columnStatus = new System.Data.DataColumn("Status", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatus);
                this.columnSupp_Name = new System.Data.DataColumn("Supp_Name", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupp_Name);
                this.columnSupplier_Id = new System.Data.DataColumn("Supplier_Id", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplier_Id);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsGRNDetailsForRepRow NewdsGRNDetailsForRepRow() {
                return ((dsGRNDetailsForRepRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new dsGRNDetailsForRepRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(dsGRNDetailsForRepRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dsGRNDetailsForRepRowChanged != null)) {
                    this.dsGRNDetailsForRepRowChanged(this, new dsGRNDetailsForRepRowChangeEvent(((dsGRNDetailsForRepRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dsGRNDetailsForRepRowChanging != null)) {
                    this.dsGRNDetailsForRepRowChanging(this, new dsGRNDetailsForRepRowChangeEvent(((dsGRNDetailsForRepRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dsGRNDetailsForRepRowDeleted != null)) {
                    this.dsGRNDetailsForRepRowDeleted(this, new dsGRNDetailsForRepRowChangeEvent(((dsGRNDetailsForRepRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dsGRNDetailsForRepRowDeleting != null)) {
                    this.dsGRNDetailsForRepRowDeleting(this, new dsGRNDetailsForRepRowChangeEvent(((dsGRNDetailsForRepRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedsGRNDetailsForRepRow(dsGRNDetailsForRepRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dsGRNDetailsForRepDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PurchaseOrderDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnDoc_No;
            
            private System.Data.DataColumn columnProd_Code;
            
            private System.Data.DataColumn columnProd_Name;
            
            private System.Data.DataColumn columnUnit;
            
            private System.Data.DataColumn columnPurchase_Price;
            
            private System.Data.DataColumn columnSelling_Price;
            
            private System.Data.DataColumn columnQty;
            
            private System.Data.DataColumn columnAmount;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PurchaseOrderDataTable() {
                this.TableName = "PurchaseOrder";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PurchaseOrderDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected PurchaseOrderDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Doc_NoColumn {
                get {
                    return this.columnDoc_No;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Prod_CodeColumn {
                get {
                    return this.columnProd_Code;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Prod_NameColumn {
                get {
                    return this.columnProd_Name;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn UnitColumn {
                get {
                    return this.columnUnit;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Purchase_PriceColumn {
                get {
                    return this.columnPurchase_Price;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Selling_PriceColumn {
                get {
                    return this.columnSelling_Price;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn QtyColumn {
                get {
                    return this.columnQty;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PurchaseOrderRow this[int index] {
                get {
                    return ((PurchaseOrderRow)(this.Rows[index]));
                }
            }
            
            public event PurchaseOrderRowChangeEventHandler PurchaseOrderRowChanging;
            
            public event PurchaseOrderRowChangeEventHandler PurchaseOrderRowChanged;
            
            public event PurchaseOrderRowChangeEventHandler PurchaseOrderRowDeleting;
            
            public event PurchaseOrderRowChangeEventHandler PurchaseOrderRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPurchaseOrderRow(PurchaseOrderRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PurchaseOrderRow AddPurchaseOrderRow(string Doc_No, string Prod_Code, string Prod_Name, string Unit, string Purchase_Price, string Selling_Price, string Qty, string Amount) {
                PurchaseOrderRow rowPurchaseOrderRow = ((PurchaseOrderRow)(this.NewRow()));
                rowPurchaseOrderRow.ItemArray = new object[] {
                        Doc_No,
                        Prod_Code,
                        Prod_Name,
                        Unit,
                        Purchase_Price,
                        Selling_Price,
                        Qty,
                        Amount};
                this.Rows.Add(rowPurchaseOrderRow);
                return rowPurchaseOrderRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                PurchaseOrderDataTable cln = ((PurchaseOrderDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new PurchaseOrderDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDoc_No = base.Columns["Doc_No"];
                this.columnProd_Code = base.Columns["Prod_Code"];
                this.columnProd_Name = base.Columns["Prod_Name"];
                this.columnUnit = base.Columns["Unit"];
                this.columnPurchase_Price = base.Columns["Purchase_Price"];
                this.columnSelling_Price = base.Columns["Selling_Price"];
                this.columnQty = base.Columns["Qty"];
                this.columnAmount = base.Columns["Amount"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDoc_No = new System.Data.DataColumn("Doc_No", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDoc_No);
                this.columnProd_Code = new System.Data.DataColumn("Prod_Code", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Code);
                this.columnProd_Name = new System.Data.DataColumn("Prod_Name", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Name);
                this.columnUnit = new System.Data.DataColumn("Unit", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnit);
                this.columnPurchase_Price = new System.Data.DataColumn("Purchase_Price", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPurchase_Price);
                this.columnSelling_Price = new System.Data.DataColumn("Selling_Price", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelling_Price);
                this.columnQty = new System.Data.DataColumn("Qty", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnQty);
                this.columnAmount = new System.Data.DataColumn("Amount", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PurchaseOrderRow NewPurchaseOrderRow() {
                return ((PurchaseOrderRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new PurchaseOrderRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(PurchaseOrderRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PurchaseOrderRowChanged != null)) {
                    this.PurchaseOrderRowChanged(this, new PurchaseOrderRowChangeEvent(((PurchaseOrderRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PurchaseOrderRowChanging != null)) {
                    this.PurchaseOrderRowChanging(this, new PurchaseOrderRowChangeEvent(((PurchaseOrderRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PurchaseOrderRowDeleted != null)) {
                    this.PurchaseOrderRowDeleted(this, new PurchaseOrderRowChangeEvent(((PurchaseOrderRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PurchaseOrderRowDeleting != null)) {
                    this.PurchaseOrderRowDeleting(this, new PurchaseOrderRowChangeEvent(((PurchaseOrderRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePurchaseOrderRow(PurchaseOrderRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PurchaseOrderDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dsPurchaseOrderDetailsDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnDoc_No;
            
            private System.Data.DataColumn columnPost_Date;
            
            private System.Data.DataColumn columnSupplier_Id;
            
            private System.Data.DataColumn columnSupp_Name;
            
            private System.Data.DataColumn columnPay_Type;
            
            private System.Data.DataColumn columnRemarks;
            
            private System.Data.DataColumn columnExpected_Date;
            
            private System.Data.DataColumn columnAddRemarks;
            
            private System.Data.DataColumn columnReference;
            
            private System.Data.DataColumn columnPayRemark1;
            
            private System.Data.DataColumn columnPayRemark2;
            
            private System.Data.DataColumn columnProd_Code;
            
            private System.Data.DataColumn columnProd_Name;
            
            private System.Data.DataColumn columnQty;
            
            private System.Data.DataColumn columnPurchase_Price;
            
            private System.Data.DataColumn columnSelling_Price;
            
            private System.Data.DataColumn columnAmount;
            
            private System.Data.DataColumn columnLn;
            
            private System.Data.DataColumn columnAddress1;
            
            private System.Data.DataColumn columnAddress2;
            
            private System.Data.DataColumn columnAddress3;
            
            private System.Data.DataColumn columnAddress4;
            
            private System.Data.DataColumn columnTel;
            
            private System.Data.DataColumn columnFax;
            
            private System.Data.DataColumn columnTax;
            
            private System.Data.DataColumn columnNetAmount;
            
            private System.Data.DataColumn columnPay1;
            
            private System.Data.DataColumn columnStatus;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsPurchaseOrderDetailsDataTable() {
                this.TableName = "dsPurchaseOrderDetails";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsPurchaseOrderDetailsDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dsPurchaseOrderDetailsDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Doc_NoColumn {
                get {
                    return this.columnDoc_No;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Post_DateColumn {
                get {
                    return this.columnPost_Date;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Supplier_IdColumn {
                get {
                    return this.columnSupplier_Id;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Supp_NameColumn {
                get {
                    return this.columnSupp_Name;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Pay_TypeColumn {
                get {
                    return this.columnPay_Type;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn RemarksColumn {
                get {
                    return this.columnRemarks;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Expected_DateColumn {
                get {
                    return this.columnExpected_Date;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn AddRemarksColumn {
                get {
                    return this.columnAddRemarks;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ReferenceColumn {
                get {
                    return this.columnReference;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PayRemark1Column {
                get {
                    return this.columnPayRemark1;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PayRemark2Column {
                get {
                    return this.columnPayRemark2;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Prod_CodeColumn {
                get {
                    return this.columnProd_Code;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Prod_NameColumn {
                get {
                    return this.columnProd_Name;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn QtyColumn {
                get {
                    return this.columnQty;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Purchase_PriceColumn {
                get {
                    return this.columnPurchase_Price;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Selling_PriceColumn {
                get {
                    return this.columnSelling_Price;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn LnColumn {
                get {
                    return this.columnLn;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Address1Column {
                get {
                    return this.columnAddress1;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Address2Column {
                get {
                    return this.columnAddress2;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Address3Column {
                get {
                    return this.columnAddress3;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Address4Column {
                get {
                    return this.columnAddress4;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TelColumn {
                get {
                    return this.columnTel;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn FaxColumn {
                get {
                    return this.columnFax;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TaxColumn {
                get {
                    return this.columnTax;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn NetAmountColumn {
                get {
                    return this.columnNetAmount;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Pay1Column {
                get {
                    return this.columnPay1;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn StatusColumn {
                get {
                    return this.columnStatus;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsPurchaseOrderDetailsRow this[int index] {
                get {
                    return ((dsPurchaseOrderDetailsRow)(this.Rows[index]));
                }
            }
            
            public event dsPurchaseOrderDetailsRowChangeEventHandler dsPurchaseOrderDetailsRowChanging;
            
            public event dsPurchaseOrderDetailsRowChangeEventHandler dsPurchaseOrderDetailsRowChanged;
            
            public event dsPurchaseOrderDetailsRowChangeEventHandler dsPurchaseOrderDetailsRowDeleting;
            
            public event dsPurchaseOrderDetailsRowChangeEventHandler dsPurchaseOrderDetailsRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddsPurchaseOrderDetailsRow(dsPurchaseOrderDetailsRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsPurchaseOrderDetailsRow AdddsPurchaseOrderDetailsRow(
                        string Doc_No, 
                        string Post_Date, 
                        string Supplier_Id, 
                        string Supp_Name, 
                        string Pay_Type, 
                        string Remarks, 
                        string Expected_Date, 
                        string AddRemarks, 
                        string Reference, 
                        string PayRemark1, 
                        string PayRemark2, 
                        string Prod_Code, 
                        string Prod_Name, 
                        string Qty, 
                        string Purchase_Price, 
                        string Selling_Price, 
                        string Amount, 
                        string Ln, 
                        string Address1, 
                        string Address2, 
                        string Address3, 
                        string Address4, 
                        string Tel, 
                        string Fax, 
                        string Tax, 
                        string NetAmount, 
                        string Pay1, 
                        string Status) {
                dsPurchaseOrderDetailsRow rowdsPurchaseOrderDetailsRow = ((dsPurchaseOrderDetailsRow)(this.NewRow()));
                rowdsPurchaseOrderDetailsRow.ItemArray = new object[] {
                        Doc_No,
                        Post_Date,
                        Supplier_Id,
                        Supp_Name,
                        Pay_Type,
                        Remarks,
                        Expected_Date,
                        AddRemarks,
                        Reference,
                        PayRemark1,
                        PayRemark2,
                        Prod_Code,
                        Prod_Name,
                        Qty,
                        Purchase_Price,
                        Selling_Price,
                        Amount,
                        Ln,
                        Address1,
                        Address2,
                        Address3,
                        Address4,
                        Tel,
                        Fax,
                        Tax,
                        NetAmount,
                        Pay1,
                        Status};
                this.Rows.Add(rowdsPurchaseOrderDetailsRow);
                return rowdsPurchaseOrderDetailsRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                dsPurchaseOrderDetailsDataTable cln = ((dsPurchaseOrderDetailsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new dsPurchaseOrderDetailsDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDoc_No = base.Columns["Doc_No"];
                this.columnPost_Date = base.Columns["Post_Date"];
                this.columnSupplier_Id = base.Columns["Supplier_Id"];
                this.columnSupp_Name = base.Columns["Supp_Name"];
                this.columnPay_Type = base.Columns["Pay_Type"];
                this.columnRemarks = base.Columns["Remarks"];
                this.columnExpected_Date = base.Columns["Expected_Date"];
                this.columnAddRemarks = base.Columns["AddRemarks"];
                this.columnReference = base.Columns["Reference"];
                this.columnPayRemark1 = base.Columns["PayRemark1"];
                this.columnPayRemark2 = base.Columns["PayRemark2"];
                this.columnProd_Code = base.Columns["Prod_Code"];
                this.columnProd_Name = base.Columns["Prod_Name"];
                this.columnQty = base.Columns["Qty"];
                this.columnPurchase_Price = base.Columns["Purchase_Price"];
                this.columnSelling_Price = base.Columns["Selling_Price"];
                this.columnAmount = base.Columns["Amount"];
                this.columnLn = base.Columns["Ln"];
                this.columnAddress1 = base.Columns["Address1"];
                this.columnAddress2 = base.Columns["Address2"];
                this.columnAddress3 = base.Columns["Address3"];
                this.columnAddress4 = base.Columns["Address4"];
                this.columnTel = base.Columns["Tel"];
                this.columnFax = base.Columns["Fax"];
                this.columnTax = base.Columns["Tax"];
                this.columnNetAmount = base.Columns["NetAmount"];
                this.columnPay1 = base.Columns["Pay1"];
                this.columnStatus = base.Columns["Status"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDoc_No = new System.Data.DataColumn("Doc_No", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDoc_No);
                this.columnPost_Date = new System.Data.DataColumn("Post_Date", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPost_Date);
                this.columnSupplier_Id = new System.Data.DataColumn("Supplier_Id", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplier_Id);
                this.columnSupp_Name = new System.Data.DataColumn("Supp_Name", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupp_Name);
                this.columnPay_Type = new System.Data.DataColumn("Pay_Type", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPay_Type);
                this.columnRemarks = new System.Data.DataColumn("Remarks", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemarks);
                this.columnExpected_Date = new System.Data.DataColumn("Expected_Date", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnExpected_Date);
                this.columnAddRemarks = new System.Data.DataColumn("AddRemarks", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddRemarks);
                this.columnReference = new System.Data.DataColumn("Reference", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnReference);
                this.columnPayRemark1 = new System.Data.DataColumn("PayRemark1", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPayRemark1);
                this.columnPayRemark2 = new System.Data.DataColumn("PayRemark2", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPayRemark2);
                this.columnProd_Code = new System.Data.DataColumn("Prod_Code", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Code);
                this.columnProd_Name = new System.Data.DataColumn("Prod_Name", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Name);
                this.columnQty = new System.Data.DataColumn("Qty", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnQty);
                this.columnPurchase_Price = new System.Data.DataColumn("Purchase_Price", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPurchase_Price);
                this.columnSelling_Price = new System.Data.DataColumn("Selling_Price", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelling_Price);
                this.columnAmount = new System.Data.DataColumn("Amount", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
                this.columnLn = new System.Data.DataColumn("Ln", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnLn);
                this.columnAddress1 = new System.Data.DataColumn("Address1", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress1);
                this.columnAddress2 = new System.Data.DataColumn("Address2", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress2);
                this.columnAddress3 = new System.Data.DataColumn("Address3", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress3);
                this.columnAddress4 = new System.Data.DataColumn("Address4", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress4);
                this.columnTel = new System.Data.DataColumn("Tel", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTel);
                this.columnFax = new System.Data.DataColumn("Fax", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnFax);
                this.columnTax = new System.Data.DataColumn("Tax", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTax);
                this.columnNetAmount = new System.Data.DataColumn("NetAmount", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnNetAmount);
                this.columnPay1 = new System.Data.DataColumn("Pay1", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPay1);
                this.columnStatus = new System.Data.DataColumn("Status", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatus);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsPurchaseOrderDetailsRow NewdsPurchaseOrderDetailsRow() {
                return ((dsPurchaseOrderDetailsRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new dsPurchaseOrderDetailsRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(dsPurchaseOrderDetailsRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dsPurchaseOrderDetailsRowChanged != null)) {
                    this.dsPurchaseOrderDetailsRowChanged(this, new dsPurchaseOrderDetailsRowChangeEvent(((dsPurchaseOrderDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dsPurchaseOrderDetailsRowChanging != null)) {
                    this.dsPurchaseOrderDetailsRowChanging(this, new dsPurchaseOrderDetailsRowChangeEvent(((dsPurchaseOrderDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dsPurchaseOrderDetailsRowDeleted != null)) {
                    this.dsPurchaseOrderDetailsRowDeleted(this, new dsPurchaseOrderDetailsRowChangeEvent(((dsPurchaseOrderDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dsPurchaseOrderDetailsRowDeleting != null)) {
                    this.dsPurchaseOrderDetailsRowDeleting(this, new dsPurchaseOrderDetailsRowChangeEvent(((dsPurchaseOrderDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedsPurchaseOrderDetailsRow(dsPurchaseOrderDetailsRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dsPurchaseOrderDetailsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ProductDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnProd_Code;
            
            private System.Data.DataColumn columnProd_Name;
            
            private System.Data.DataColumn columnPurchase_Price;
            
            private System.Data.DataColumn columnSelling_Price;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProductDataTable() {
                this.TableName = "Product";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ProductDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ProductDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Prod_CodeColumn {
                get {
                    return this.columnProd_Code;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Prod_NameColumn {
                get {
                    return this.columnProd_Name;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Purchase_PriceColumn {
                get {
                    return this.columnPurchase_Price;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Selling_PriceColumn {
                get {
                    return this.columnSelling_Price;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProductRow this[int index] {
                get {
                    return ((ProductRow)(this.Rows[index]));
                }
            }
            
            public event ProductRowChangeEventHandler ProductRowChanging;
            
            public event ProductRowChangeEventHandler ProductRowChanged;
            
            public event ProductRowChangeEventHandler ProductRowDeleting;
            
            public event ProductRowChangeEventHandler ProductRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddProductRow(ProductRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProductRow AddProductRow(string Prod_Code, string Prod_Name, string Purchase_Price, string Selling_Price) {
                ProductRow rowProductRow = ((ProductRow)(this.NewRow()));
                rowProductRow.ItemArray = new object[] {
                        Prod_Code,
                        Prod_Name,
                        Purchase_Price,
                        Selling_Price};
                this.Rows.Add(rowProductRow);
                return rowProductRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                ProductDataTable cln = ((ProductDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new ProductDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnProd_Code = base.Columns["Prod_Code"];
                this.columnProd_Name = base.Columns["Prod_Name"];
                this.columnPurchase_Price = base.Columns["Purchase_Price"];
                this.columnSelling_Price = base.Columns["Selling_Price"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnProd_Code = new System.Data.DataColumn("Prod_Code", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Code);
                this.columnProd_Name = new System.Data.DataColumn("Prod_Name", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Name);
                this.columnPurchase_Price = new System.Data.DataColumn("Purchase_Price", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPurchase_Price);
                this.columnSelling_Price = new System.Data.DataColumn("Selling_Price", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelling_Price);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProductRow NewProductRow() {
                return ((ProductRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new ProductRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(ProductRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ProductRowChanged != null)) {
                    this.ProductRowChanged(this, new ProductRowChangeEvent(((ProductRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ProductRowChanging != null)) {
                    this.ProductRowChanging(this, new ProductRowChangeEvent(((ProductRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ProductRowDeleted != null)) {
                    this.ProductRowDeleted(this, new ProductRowChangeEvent(((ProductRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ProductRowDeleting != null)) {
                    this.ProductRowDeleting(this, new ProductRowChangeEvent(((ProductRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveProductRow(ProductRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ProductDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class InvoiceDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnProd_Code;
            
            private System.Data.DataColumn columnProd_Name;
            
            private System.Data.DataColumn columnUnit;
            
            private System.Data.DataColumn columnSelling_Price;
            
            private System.Data.DataColumn columnQty;
            
            private System.Data.DataColumn columnFreeQty;
            
            private System.Data.DataColumn columnDiscount;
            
            private System.Data.DataColumn columnAmount;
            
            private System.Data.DataColumn columnLn;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public InvoiceDataTable() {
                this.TableName = "Invoice";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal InvoiceDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected InvoiceDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Prod_CodeColumn {
                get {
                    return this.columnProd_Code;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Prod_NameColumn {
                get {
                    return this.columnProd_Name;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn UnitColumn {
                get {
                    return this.columnUnit;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Selling_PriceColumn {
                get {
                    return this.columnSelling_Price;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn QtyColumn {
                get {
                    return this.columnQty;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn FreeQtyColumn {
                get {
                    return this.columnFreeQty;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DiscountColumn {
                get {
                    return this.columnDiscount;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn LnColumn {
                get {
                    return this.columnLn;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public InvoiceRow this[int index] {
                get {
                    return ((InvoiceRow)(this.Rows[index]));
                }
            }
            
            public event InvoiceRowChangeEventHandler InvoiceRowChanging;
            
            public event InvoiceRowChangeEventHandler InvoiceRowChanged;
            
            public event InvoiceRowChangeEventHandler InvoiceRowDeleting;
            
            public event InvoiceRowChangeEventHandler InvoiceRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddInvoiceRow(InvoiceRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public InvoiceRow AddInvoiceRow(string Prod_Code, string Prod_Name, string Unit, string Selling_Price, string Qty, string FreeQty, string Discount, string Amount, string Ln) {
                InvoiceRow rowInvoiceRow = ((InvoiceRow)(this.NewRow()));
                rowInvoiceRow.ItemArray = new object[] {
                        Prod_Code,
                        Prod_Name,
                        Unit,
                        Selling_Price,
                        Qty,
                        FreeQty,
                        Discount,
                        Amount,
                        Ln};
                this.Rows.Add(rowInvoiceRow);
                return rowInvoiceRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                InvoiceDataTable cln = ((InvoiceDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new InvoiceDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnProd_Code = base.Columns["Prod_Code"];
                this.columnProd_Name = base.Columns["Prod_Name"];
                this.columnUnit = base.Columns["Unit"];
                this.columnSelling_Price = base.Columns["Selling_Price"];
                this.columnQty = base.Columns["Qty"];
                this.columnFreeQty = base.Columns["FreeQty"];
                this.columnDiscount = base.Columns["Discount"];
                this.columnAmount = base.Columns["Amount"];
                this.columnLn = base.Columns["Ln"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnProd_Code = new System.Data.DataColumn("Prod_Code", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Code);
                this.columnProd_Name = new System.Data.DataColumn("Prod_Name", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Name);
                this.columnUnit = new System.Data.DataColumn("Unit", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnit);
                this.columnSelling_Price = new System.Data.DataColumn("Selling_Price", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelling_Price);
                this.columnQty = new System.Data.DataColumn("Qty", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnQty);
                this.columnFreeQty = new System.Data.DataColumn("FreeQty", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnFreeQty);
                this.columnDiscount = new System.Data.DataColumn("Discount", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiscount);
                this.columnAmount = new System.Data.DataColumn("Amount", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
                this.columnLn = new System.Data.DataColumn("Ln", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnLn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public InvoiceRow NewInvoiceRow() {
                return ((InvoiceRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new InvoiceRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(InvoiceRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.InvoiceRowChanged != null)) {
                    this.InvoiceRowChanged(this, new InvoiceRowChangeEvent(((InvoiceRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.InvoiceRowChanging != null)) {
                    this.InvoiceRowChanging(this, new InvoiceRowChangeEvent(((InvoiceRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.InvoiceRowDeleted != null)) {
                    this.InvoiceRowDeleted(this, new InvoiceRowChangeEvent(((InvoiceRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.InvoiceRowDeleting != null)) {
                    this.InvoiceRowDeleting(this, new InvoiceRowChangeEvent(((InvoiceRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveInvoiceRow(InvoiceRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "InvoiceDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dsAccountDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnAcc_Code;
            
            private System.Data.DataColumn columnAcc_Name;
            
            private System.Data.DataColumn columnAddress1;
            
            private System.Data.DataColumn columnAddress2;
            
            private System.Data.DataColumn columnAddress3;
            
            private System.Data.DataColumn columnCity;
            
            private System.Data.DataColumn columnCountry;
            
            private System.Data.DataColumn columnTelephone;
            
            private System.Data.DataColumn columnFax;
            
            private System.Data.DataColumn columnEmail;
            
            private System.Data.DataColumn columnContact_Prsn;
            
            private System.Data.DataColumn columnCredit_Limit;
            
            private System.Data.DataColumn columnPeriod;
            
            private System.Data.DataColumn columnBankDraft;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsAccountDataTable() {
                this.TableName = "dsAccount";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsAccountDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dsAccountDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Acc_CodeColumn {
                get {
                    return this.columnAcc_Code;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Acc_NameColumn {
                get {
                    return this.columnAcc_Name;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Address1Column {
                get {
                    return this.columnAddress1;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Address2Column {
                get {
                    return this.columnAddress2;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Address3Column {
                get {
                    return this.columnAddress3;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CityColumn {
                get {
                    return this.columnCity;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CountryColumn {
                get {
                    return this.columnCountry;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TelephoneColumn {
                get {
                    return this.columnTelephone;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn FaxColumn {
                get {
                    return this.columnFax;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn EmailColumn {
                get {
                    return this.columnEmail;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Contact_PrsnColumn {
                get {
                    return this.columnContact_Prsn;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Credit_LimitColumn {
                get {
                    return this.columnCredit_Limit;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PeriodColumn {
                get {
                    return this.columnPeriod;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn BankDraftColumn {
                get {
                    return this.columnBankDraft;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsAccountRow this[int index] {
                get {
                    return ((dsAccountRow)(this.Rows[index]));
                }
            }
            
            public event dsAccountRowChangeEventHandler dsAccountRowChanging;
            
            public event dsAccountRowChangeEventHandler dsAccountRowChanged;
            
            public event dsAccountRowChangeEventHandler dsAccountRowDeleting;
            
            public event dsAccountRowChangeEventHandler dsAccountRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddsAccountRow(dsAccountRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsAccountRow AdddsAccountRow(string Acc_Code, string Acc_Name, string Address1, string Address2, string Address3, string City, string Country, string Telephone, string Fax, string Email, string Contact_Prsn, string Credit_Limit, string Period, string BankDraft) {
                dsAccountRow rowdsAccountRow = ((dsAccountRow)(this.NewRow()));
                rowdsAccountRow.ItemArray = new object[] {
                        Acc_Code,
                        Acc_Name,
                        Address1,
                        Address2,
                        Address3,
                        City,
                        Country,
                        Telephone,
                        Fax,
                        Email,
                        Contact_Prsn,
                        Credit_Limit,
                        Period,
                        BankDraft};
                this.Rows.Add(rowdsAccountRow);
                return rowdsAccountRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                dsAccountDataTable cln = ((dsAccountDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new dsAccountDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnAcc_Code = base.Columns["Acc_Code"];
                this.columnAcc_Name = base.Columns["Acc_Name"];
                this.columnAddress1 = base.Columns["Address1"];
                this.columnAddress2 = base.Columns["Address2"];
                this.columnAddress3 = base.Columns["Address3"];
                this.columnCity = base.Columns["City"];
                this.columnCountry = base.Columns["Country"];
                this.columnTelephone = base.Columns["Telephone"];
                this.columnFax = base.Columns["Fax"];
                this.columnEmail = base.Columns["Email"];
                this.columnContact_Prsn = base.Columns["Contact_Prsn"];
                this.columnCredit_Limit = base.Columns["Credit_Limit"];
                this.columnPeriod = base.Columns["Period"];
                this.columnBankDraft = base.Columns["BankDraft"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnAcc_Code = new System.Data.DataColumn("Acc_Code", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnAcc_Code);
                this.columnAcc_Name = new System.Data.DataColumn("Acc_Name", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnAcc_Name);
                this.columnAddress1 = new System.Data.DataColumn("Address1", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress1);
                this.columnAddress2 = new System.Data.DataColumn("Address2", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress2);
                this.columnAddress3 = new System.Data.DataColumn("Address3", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress3);
                this.columnCity = new System.Data.DataColumn("City", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCity);
                this.columnCountry = new System.Data.DataColumn("Country", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCountry);
                this.columnTelephone = new System.Data.DataColumn("Telephone", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTelephone);
                this.columnFax = new System.Data.DataColumn("Fax", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnFax);
                this.columnEmail = new System.Data.DataColumn("Email", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmail);
                this.columnContact_Prsn = new System.Data.DataColumn("Contact_Prsn", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnContact_Prsn);
                this.columnCredit_Limit = new System.Data.DataColumn("Credit_Limit", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCredit_Limit);
                this.columnPeriod = new System.Data.DataColumn("Period", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPeriod);
                this.columnBankDraft = new System.Data.DataColumn("BankDraft", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnBankDraft);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsAccountRow NewdsAccountRow() {
                return ((dsAccountRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new dsAccountRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(dsAccountRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dsAccountRowChanged != null)) {
                    this.dsAccountRowChanged(this, new dsAccountRowChangeEvent(((dsAccountRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dsAccountRowChanging != null)) {
                    this.dsAccountRowChanging(this, new dsAccountRowChangeEvent(((dsAccountRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dsAccountRowDeleted != null)) {
                    this.dsAccountRowDeleted(this, new dsAccountRowChangeEvent(((dsAccountRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dsAccountRowDeleting != null)) {
                    this.dsAccountRowDeleting(this, new dsAccountRowChangeEvent(((dsAccountRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedsAccountRow(dsAccountRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dsAccountDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dsInvoiceDetailsDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnDoc_No;
            
            private System.Data.DataColumn columnPost_Date;
            
            private System.Data.DataColumn columnCust_Code;
            
            private System.Data.DataColumn columnCust_Name;
            
            private System.Data.DataColumn columnAddress1;
            
            private System.Data.DataColumn columnAddress2;
            
            private System.Data.DataColumn columnAddress3;
            
            private System.Data.DataColumn columnAddress4;
            
            private System.Data.DataColumn columnSales_Assist;
            
            private System.Data.DataColumn columnPorder_No;
            
            private System.Data.DataColumn columnRemarks;
            
            private System.Data.DataColumn columnReference;
            
            private System.Data.DataColumn columnProd_Code;
            
            private System.Data.DataColumn columnProd_Name;
            
            private System.Data.DataColumn columnQty;
            
            private System.Data.DataColumn columnFreeQty;
            
            private System.Data.DataColumn columnSelling_Price;
            
            private System.Data.DataColumn columnDiscount;
            
            private System.Data.DataColumn columnAmount;
            
            private System.Data.DataColumn columnLn;
            
            private System.Data.DataColumn columnPayRemark1;
            
            private System.Data.DataColumn columnSub_Discount;
            
            private System.Data.DataColumn columnTax;
            
            private System.Data.DataColumn columnNet_Amount;
            
            private System.Data.DataColumn columnGross_Amount;
            
            private System.Data.DataColumn columnStatus;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsInvoiceDetailsDataTable() {
                this.TableName = "dsInvoiceDetails";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsInvoiceDetailsDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dsInvoiceDetailsDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Doc_NoColumn {
                get {
                    return this.columnDoc_No;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Post_DateColumn {
                get {
                    return this.columnPost_Date;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Cust_CodeColumn {
                get {
                    return this.columnCust_Code;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Cust_NameColumn {
                get {
                    return this.columnCust_Name;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Address1Column {
                get {
                    return this.columnAddress1;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Address2Column {
                get {
                    return this.columnAddress2;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Address3Column {
                get {
                    return this.columnAddress3;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Address4Column {
                get {
                    return this.columnAddress4;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Sales_AssistColumn {
                get {
                    return this.columnSales_Assist;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Porder_NoColumn {
                get {
                    return this.columnPorder_No;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn RemarksColumn {
                get {
                    return this.columnRemarks;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ReferenceColumn {
                get {
                    return this.columnReference;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Prod_CodeColumn {
                get {
                    return this.columnProd_Code;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Prod_NameColumn {
                get {
                    return this.columnProd_Name;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn QtyColumn {
                get {
                    return this.columnQty;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn FreeQtyColumn {
                get {
                    return this.columnFreeQty;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Selling_PriceColumn {
                get {
                    return this.columnSelling_Price;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DiscountColumn {
                get {
                    return this.columnDiscount;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn LnColumn {
                get {
                    return this.columnLn;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PayRemark1Column {
                get {
                    return this.columnPayRemark1;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Sub_DiscountColumn {
                get {
                    return this.columnSub_Discount;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TaxColumn {
                get {
                    return this.columnTax;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Net_AmountColumn {
                get {
                    return this.columnNet_Amount;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Gross_AmountColumn {
                get {
                    return this.columnGross_Amount;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn StatusColumn {
                get {
                    return this.columnStatus;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsInvoiceDetailsRow this[int index] {
                get {
                    return ((dsInvoiceDetailsRow)(this.Rows[index]));
                }
            }
            
            public event dsInvoiceDetailsRowChangeEventHandler dsInvoiceDetailsRowChanging;
            
            public event dsInvoiceDetailsRowChangeEventHandler dsInvoiceDetailsRowChanged;
            
            public event dsInvoiceDetailsRowChangeEventHandler dsInvoiceDetailsRowDeleting;
            
            public event dsInvoiceDetailsRowChangeEventHandler dsInvoiceDetailsRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddsInvoiceDetailsRow(dsInvoiceDetailsRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsInvoiceDetailsRow AdddsInvoiceDetailsRow(
                        string Doc_No, 
                        string Post_Date, 
                        string Cust_Code, 
                        string Cust_Name, 
                        string Address1, 
                        string Address2, 
                        string Address3, 
                        string Address4, 
                        string Sales_Assist, 
                        string Porder_No, 
                        string Remarks, 
                        string Reference, 
                        string Prod_Code, 
                        string Prod_Name, 
                        string Qty, 
                        string FreeQty, 
                        string Selling_Price, 
                        string Discount, 
                        string Amount, 
                        string Ln, 
                        string PayRemark1, 
                        string Sub_Discount, 
                        string Tax, 
                        string Net_Amount, 
                        string Gross_Amount, 
                        string Status) {
                dsInvoiceDetailsRow rowdsInvoiceDetailsRow = ((dsInvoiceDetailsRow)(this.NewRow()));
                rowdsInvoiceDetailsRow.ItemArray = new object[] {
                        Doc_No,
                        Post_Date,
                        Cust_Code,
                        Cust_Name,
                        Address1,
                        Address2,
                        Address3,
                        Address4,
                        Sales_Assist,
                        Porder_No,
                        Remarks,
                        Reference,
                        Prod_Code,
                        Prod_Name,
                        Qty,
                        FreeQty,
                        Selling_Price,
                        Discount,
                        Amount,
                        Ln,
                        PayRemark1,
                        Sub_Discount,
                        Tax,
                        Net_Amount,
                        Gross_Amount,
                        Status};
                this.Rows.Add(rowdsInvoiceDetailsRow);
                return rowdsInvoiceDetailsRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                dsInvoiceDetailsDataTable cln = ((dsInvoiceDetailsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new dsInvoiceDetailsDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDoc_No = base.Columns["Doc_No"];
                this.columnPost_Date = base.Columns["Post_Date"];
                this.columnCust_Code = base.Columns["Cust_Code"];
                this.columnCust_Name = base.Columns["Cust_Name"];
                this.columnAddress1 = base.Columns["Address1"];
                this.columnAddress2 = base.Columns["Address2"];
                this.columnAddress3 = base.Columns["Address3"];
                this.columnAddress4 = base.Columns["Address4"];
                this.columnSales_Assist = base.Columns["Sales_Assist"];
                this.columnPorder_No = base.Columns["Porder_No"];
                this.columnRemarks = base.Columns["Remarks"];
                this.columnReference = base.Columns["Reference"];
                this.columnProd_Code = base.Columns["Prod_Code"];
                this.columnProd_Name = base.Columns["Prod_Name"];
                this.columnQty = base.Columns["Qty"];
                this.columnFreeQty = base.Columns["FreeQty"];
                this.columnSelling_Price = base.Columns["Selling_Price"];
                this.columnDiscount = base.Columns["Discount"];
                this.columnAmount = base.Columns["Amount"];
                this.columnLn = base.Columns["Ln"];
                this.columnPayRemark1 = base.Columns["PayRemark1"];
                this.columnSub_Discount = base.Columns["Sub_Discount"];
                this.columnTax = base.Columns["Tax"];
                this.columnNet_Amount = base.Columns["Net_Amount"];
                this.columnGross_Amount = base.Columns["Gross_Amount"];
                this.columnStatus = base.Columns["Status"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDoc_No = new System.Data.DataColumn("Doc_No", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDoc_No);
                this.columnPost_Date = new System.Data.DataColumn("Post_Date", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPost_Date);
                this.columnCust_Code = new System.Data.DataColumn("Cust_Code", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCust_Code);
                this.columnCust_Name = new System.Data.DataColumn("Cust_Name", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCust_Name);
                this.columnAddress1 = new System.Data.DataColumn("Address1", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress1);
                this.columnAddress2 = new System.Data.DataColumn("Address2", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress2);
                this.columnAddress3 = new System.Data.DataColumn("Address3", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress3);
                this.columnAddress4 = new System.Data.DataColumn("Address4", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress4);
                this.columnSales_Assist = new System.Data.DataColumn("Sales_Assist", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSales_Assist);
                this.columnPorder_No = new System.Data.DataColumn("Porder_No", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPorder_No);
                this.columnRemarks = new System.Data.DataColumn("Remarks", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemarks);
                this.columnReference = new System.Data.DataColumn("Reference", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnReference);
                this.columnProd_Code = new System.Data.DataColumn("Prod_Code", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Code);
                this.columnProd_Name = new System.Data.DataColumn("Prod_Name", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Name);
                this.columnQty = new System.Data.DataColumn("Qty", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnQty);
                this.columnFreeQty = new System.Data.DataColumn("FreeQty", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnFreeQty);
                this.columnSelling_Price = new System.Data.DataColumn("Selling_Price", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelling_Price);
                this.columnDiscount = new System.Data.DataColumn("Discount", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiscount);
                this.columnAmount = new System.Data.DataColumn("Amount", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
                this.columnLn = new System.Data.DataColumn("Ln", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnLn);
                this.columnPayRemark1 = new System.Data.DataColumn("PayRemark1", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPayRemark1);
                this.columnSub_Discount = new System.Data.DataColumn("Sub_Discount", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSub_Discount);
                this.columnTax = new System.Data.DataColumn("Tax", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTax);
                this.columnNet_Amount = new System.Data.DataColumn("Net_Amount", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnNet_Amount);
                this.columnGross_Amount = new System.Data.DataColumn("Gross_Amount", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnGross_Amount);
                this.columnStatus = new System.Data.DataColumn("Status", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatus);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsInvoiceDetailsRow NewdsInvoiceDetailsRow() {
                return ((dsInvoiceDetailsRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new dsInvoiceDetailsRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(dsInvoiceDetailsRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dsInvoiceDetailsRowChanged != null)) {
                    this.dsInvoiceDetailsRowChanged(this, new dsInvoiceDetailsRowChangeEvent(((dsInvoiceDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dsInvoiceDetailsRowChanging != null)) {
                    this.dsInvoiceDetailsRowChanging(this, new dsInvoiceDetailsRowChangeEvent(((dsInvoiceDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dsInvoiceDetailsRowDeleted != null)) {
                    this.dsInvoiceDetailsRowDeleted(this, new dsInvoiceDetailsRowChangeEvent(((dsInvoiceDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dsInvoiceDetailsRowDeleting != null)) {
                    this.dsInvoiceDetailsRowDeleting(this, new dsInvoiceDetailsRowChangeEvent(((dsInvoiceDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedsInvoiceDetailsRow(dsInvoiceDetailsRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dsInvoiceDetailsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dsStockProductwiseDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnProd_Code;
            
            private System.Data.DataColumn columnProd_Name;
            
            private System.Data.DataColumn columnPurchase_Price;
            
            private System.Data.DataColumn columnSelling_Price;
            
            private System.Data.DataColumn columnQty;
            
            private System.Data.DataColumn columnLoca;
            
            private System.Data.DataColumn columnLoca_Descrip;
            
            private System.Data.DataColumn columnCodeFrom;
            
            private System.Data.DataColumn columnCodeTo;
            
            private System.Data.DataColumn columnDepartment_Id;
            
            private System.Data.DataColumn columnDept_Name;
            
            private System.Data.DataColumn columnCategory_Id;
            
            private System.Data.DataColumn columnCat_Name;
            
            private System.Data.DataColumn columnSupplier_Id;
            
            private System.Data.DataColumn columnSupp_Name;
            
            private System.Data.DataColumn columnManufacturer_Id;
            
            private System.Data.DataColumn columnManf_Name;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsStockProductwiseDataTable() {
                this.TableName = "dsStockProductwise";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsStockProductwiseDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dsStockProductwiseDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Prod_CodeColumn {
                get {
                    return this.columnProd_Code;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Prod_NameColumn {
                get {
                    return this.columnProd_Name;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Purchase_PriceColumn {
                get {
                    return this.columnPurchase_Price;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Selling_PriceColumn {
                get {
                    return this.columnSelling_Price;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn QtyColumn {
                get {
                    return this.columnQty;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn LocaColumn {
                get {
                    return this.columnLoca;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Loca_DescripColumn {
                get {
                    return this.columnLoca_Descrip;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CodeFromColumn {
                get {
                    return this.columnCodeFrom;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CodeToColumn {
                get {
                    return this.columnCodeTo;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Department_IdColumn {
                get {
                    return this.columnDepartment_Id;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Dept_NameColumn {
                get {
                    return this.columnDept_Name;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Category_IdColumn {
                get {
                    return this.columnCategory_Id;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Cat_NameColumn {
                get {
                    return this.columnCat_Name;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Supplier_IdColumn {
                get {
                    return this.columnSupplier_Id;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Supp_NameColumn {
                get {
                    return this.columnSupp_Name;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Manufacturer_IdColumn {
                get {
                    return this.columnManufacturer_Id;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Manf_NameColumn {
                get {
                    return this.columnManf_Name;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsStockProductwiseRow this[int index] {
                get {
                    return ((dsStockProductwiseRow)(this.Rows[index]));
                }
            }
            
            public event dsStockProductwiseRowChangeEventHandler dsStockProductwiseRowChanging;
            
            public event dsStockProductwiseRowChangeEventHandler dsStockProductwiseRowChanged;
            
            public event dsStockProductwiseRowChangeEventHandler dsStockProductwiseRowDeleting;
            
            public event dsStockProductwiseRowChangeEventHandler dsStockProductwiseRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddsStockProductwiseRow(dsStockProductwiseRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsStockProductwiseRow AdddsStockProductwiseRow(
                        string Prod_Code, 
                        string Prod_Name, 
                        string Purchase_Price, 
                        string Selling_Price, 
                        string Qty, 
                        string Loca, 
                        string Loca_Descrip, 
                        string CodeFrom, 
                        string CodeTo, 
                        string Department_Id, 
                        string Dept_Name, 
                        string Category_Id, 
                        string Cat_Name, 
                        string Supplier_Id, 
                        string Supp_Name, 
                        string Manufacturer_Id, 
                        string Manf_Name) {
                dsStockProductwiseRow rowdsStockProductwiseRow = ((dsStockProductwiseRow)(this.NewRow()));
                rowdsStockProductwiseRow.ItemArray = new object[] {
                        Prod_Code,
                        Prod_Name,
                        Purchase_Price,
                        Selling_Price,
                        Qty,
                        Loca,
                        Loca_Descrip,
                        CodeFrom,
                        CodeTo,
                        Department_Id,
                        Dept_Name,
                        Category_Id,
                        Cat_Name,
                        Supplier_Id,
                        Supp_Name,
                        Manufacturer_Id,
                        Manf_Name};
                this.Rows.Add(rowdsStockProductwiseRow);
                return rowdsStockProductwiseRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                dsStockProductwiseDataTable cln = ((dsStockProductwiseDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new dsStockProductwiseDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnProd_Code = base.Columns["Prod_Code"];
                this.columnProd_Name = base.Columns["Prod_Name"];
                this.columnPurchase_Price = base.Columns["Purchase_Price"];
                this.columnSelling_Price = base.Columns["Selling_Price"];
                this.columnQty = base.Columns["Qty"];
                this.columnLoca = base.Columns["Loca"];
                this.columnLoca_Descrip = base.Columns["Loca_Descrip"];
                this.columnCodeFrom = base.Columns["CodeFrom"];
                this.columnCodeTo = base.Columns["CodeTo"];
                this.columnDepartment_Id = base.Columns["Department_Id"];
                this.columnDept_Name = base.Columns["Dept_Name"];
                this.columnCategory_Id = base.Columns["Category_Id"];
                this.columnCat_Name = base.Columns["Cat_Name"];
                this.columnSupplier_Id = base.Columns["Supplier_Id"];
                this.columnSupp_Name = base.Columns["Supp_Name"];
                this.columnManufacturer_Id = base.Columns["Manufacturer_Id"];
                this.columnManf_Name = base.Columns["Manf_Name"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnProd_Code = new System.Data.DataColumn("Prod_Code", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Code);
                this.columnProd_Name = new System.Data.DataColumn("Prod_Name", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Name);
                this.columnPurchase_Price = new System.Data.DataColumn("Purchase_Price", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPurchase_Price);
                this.columnSelling_Price = new System.Data.DataColumn("Selling_Price", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelling_Price);
                this.columnQty = new System.Data.DataColumn("Qty", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnQty);
                this.columnLoca = new System.Data.DataColumn("Loca", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoca);
                this.columnLoca_Descrip = new System.Data.DataColumn("Loca_Descrip", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoca_Descrip);
                this.columnCodeFrom = new System.Data.DataColumn("CodeFrom", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodeFrom);
                this.columnCodeTo = new System.Data.DataColumn("CodeTo", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodeTo);
                this.columnDepartment_Id = new System.Data.DataColumn("Department_Id", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDepartment_Id);
                this.columnDept_Name = new System.Data.DataColumn("Dept_Name", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDept_Name);
                this.columnCategory_Id = new System.Data.DataColumn("Category_Id", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCategory_Id);
                this.columnCat_Name = new System.Data.DataColumn("Cat_Name", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCat_Name);
                this.columnSupplier_Id = new System.Data.DataColumn("Supplier_Id", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplier_Id);
                this.columnSupp_Name = new System.Data.DataColumn("Supp_Name", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupp_Name);
                this.columnManufacturer_Id = new System.Data.DataColumn("Manufacturer_Id", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnManufacturer_Id);
                this.columnManf_Name = new System.Data.DataColumn("Manf_Name", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnManf_Name);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsStockProductwiseRow NewdsStockProductwiseRow() {
                return ((dsStockProductwiseRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new dsStockProductwiseRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(dsStockProductwiseRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dsStockProductwiseRowChanged != null)) {
                    this.dsStockProductwiseRowChanged(this, new dsStockProductwiseRowChangeEvent(((dsStockProductwiseRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dsStockProductwiseRowChanging != null)) {
                    this.dsStockProductwiseRowChanging(this, new dsStockProductwiseRowChangeEvent(((dsStockProductwiseRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dsStockProductwiseRowDeleted != null)) {
                    this.dsStockProductwiseRowDeleted(this, new dsStockProductwiseRowChangeEvent(((dsStockProductwiseRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dsStockProductwiseRowDeleting != null)) {
                    this.dsStockProductwiseRowDeleting(this, new dsStockProductwiseRowChangeEvent(((dsStockProductwiseRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedsStockProductwiseRow(dsStockProductwiseRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dsStockProductwiseDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PendingPaymentsDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnDoc_No;
            
            private System.Data.DataColumn columnTransaction_Date;
            
            private System.Data.DataColumn columnTransaction_Amount;
            
            private System.Data.DataColumn columnBalance_Amount;
            
            private System.Data.DataColumn columnTemp_DocNo;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PendingPaymentsDataTable() {
                this.TableName = "PendingPayments";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PendingPaymentsDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected PendingPaymentsDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Doc_NoColumn {
                get {
                    return this.columnDoc_No;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Transaction_DateColumn {
                get {
                    return this.columnTransaction_Date;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Transaction_AmountColumn {
                get {
                    return this.columnTransaction_Amount;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Balance_AmountColumn {
                get {
                    return this.columnBalance_Amount;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Temp_DocNoColumn {
                get {
                    return this.columnTemp_DocNo;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PendingPaymentsRow this[int index] {
                get {
                    return ((PendingPaymentsRow)(this.Rows[index]));
                }
            }
            
            public event PendingPaymentsRowChangeEventHandler PendingPaymentsRowChanging;
            
            public event PendingPaymentsRowChangeEventHandler PendingPaymentsRowChanged;
            
            public event PendingPaymentsRowChangeEventHandler PendingPaymentsRowDeleting;
            
            public event PendingPaymentsRowChangeEventHandler PendingPaymentsRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPendingPaymentsRow(PendingPaymentsRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PendingPaymentsRow AddPendingPaymentsRow(string Doc_No, string Transaction_Date, string Transaction_Amount, string Balance_Amount, string Temp_DocNo) {
                PendingPaymentsRow rowPendingPaymentsRow = ((PendingPaymentsRow)(this.NewRow()));
                rowPendingPaymentsRow.ItemArray = new object[] {
                        Doc_No,
                        Transaction_Date,
                        Transaction_Amount,
                        Balance_Amount,
                        Temp_DocNo};
                this.Rows.Add(rowPendingPaymentsRow);
                return rowPendingPaymentsRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                PendingPaymentsDataTable cln = ((PendingPaymentsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new PendingPaymentsDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDoc_No = base.Columns["Doc_No"];
                this.columnTransaction_Date = base.Columns["Transaction_Date"];
                this.columnTransaction_Amount = base.Columns["Transaction_Amount"];
                this.columnBalance_Amount = base.Columns["Balance_Amount"];
                this.columnTemp_DocNo = base.Columns["Temp_DocNo"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDoc_No = new System.Data.DataColumn("Doc_No", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDoc_No);
                this.columnTransaction_Date = new System.Data.DataColumn("Transaction_Date", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTransaction_Date);
                this.columnTransaction_Amount = new System.Data.DataColumn("Transaction_Amount", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTransaction_Amount);
                this.columnBalance_Amount = new System.Data.DataColumn("Balance_Amount", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnBalance_Amount);
                this.columnTemp_DocNo = new System.Data.DataColumn("Temp_DocNo", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTemp_DocNo);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PendingPaymentsRow NewPendingPaymentsRow() {
                return ((PendingPaymentsRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new PendingPaymentsRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(PendingPaymentsRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PendingPaymentsRowChanged != null)) {
                    this.PendingPaymentsRowChanged(this, new PendingPaymentsRowChangeEvent(((PendingPaymentsRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PendingPaymentsRowChanging != null)) {
                    this.PendingPaymentsRowChanging(this, new PendingPaymentsRowChangeEvent(((PendingPaymentsRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PendingPaymentsRowDeleted != null)) {
                    this.PendingPaymentsRowDeleted(this, new PendingPaymentsRowChangeEvent(((PendingPaymentsRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PendingPaymentsRowDeleting != null)) {
                    this.PendingPaymentsRowDeleting(this, new PendingPaymentsRowChangeEvent(((PendingPaymentsRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePendingPaymentsRow(PendingPaymentsRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PendingPaymentsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SelectedPaymentsDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnDoc_No;
            
            private System.Data.DataColumn columnTransaction_Date;
            
            private System.Data.DataColumn columnTransaction_Amount;
            
            private System.Data.DataColumn columnBalance_Amount;
            
            private System.Data.DataColumn columnPaid_Amount;
            
            private System.Data.DataColumn columnTemp_DocNo;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SelectedPaymentsDataTable() {
                this.TableName = "SelectedPayments";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SelectedPaymentsDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected SelectedPaymentsDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Doc_NoColumn {
                get {
                    return this.columnDoc_No;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Transaction_DateColumn {
                get {
                    return this.columnTransaction_Date;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Transaction_AmountColumn {
                get {
                    return this.columnTransaction_Amount;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Balance_AmountColumn {
                get {
                    return this.columnBalance_Amount;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Paid_AmountColumn {
                get {
                    return this.columnPaid_Amount;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Temp_DocNoColumn {
                get {
                    return this.columnTemp_DocNo;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SelectedPaymentsRow this[int index] {
                get {
                    return ((SelectedPaymentsRow)(this.Rows[index]));
                }
            }
            
            public event SelectedPaymentsRowChangeEventHandler SelectedPaymentsRowChanging;
            
            public event SelectedPaymentsRowChangeEventHandler SelectedPaymentsRowChanged;
            
            public event SelectedPaymentsRowChangeEventHandler SelectedPaymentsRowDeleting;
            
            public event SelectedPaymentsRowChangeEventHandler SelectedPaymentsRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSelectedPaymentsRow(SelectedPaymentsRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SelectedPaymentsRow AddSelectedPaymentsRow(string Doc_No, string Transaction_Date, string Transaction_Amount, string Balance_Amount, string Paid_Amount, string Temp_DocNo) {
                SelectedPaymentsRow rowSelectedPaymentsRow = ((SelectedPaymentsRow)(this.NewRow()));
                rowSelectedPaymentsRow.ItemArray = new object[] {
                        Doc_No,
                        Transaction_Date,
                        Transaction_Amount,
                        Balance_Amount,
                        Paid_Amount,
                        Temp_DocNo};
                this.Rows.Add(rowSelectedPaymentsRow);
                return rowSelectedPaymentsRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                SelectedPaymentsDataTable cln = ((SelectedPaymentsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new SelectedPaymentsDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDoc_No = base.Columns["Doc_No"];
                this.columnTransaction_Date = base.Columns["Transaction_Date"];
                this.columnTransaction_Amount = base.Columns["Transaction_Amount"];
                this.columnBalance_Amount = base.Columns["Balance_Amount"];
                this.columnPaid_Amount = base.Columns["Paid_Amount"];
                this.columnTemp_DocNo = base.Columns["Temp_DocNo"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDoc_No = new System.Data.DataColumn("Doc_No", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDoc_No);
                this.columnTransaction_Date = new System.Data.DataColumn("Transaction_Date", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTransaction_Date);
                this.columnTransaction_Amount = new System.Data.DataColumn("Transaction_Amount", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTransaction_Amount);
                this.columnBalance_Amount = new System.Data.DataColumn("Balance_Amount", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnBalance_Amount);
                this.columnPaid_Amount = new System.Data.DataColumn("Paid_Amount", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaid_Amount);
                this.columnTemp_DocNo = new System.Data.DataColumn("Temp_DocNo", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTemp_DocNo);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SelectedPaymentsRow NewSelectedPaymentsRow() {
                return ((SelectedPaymentsRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new SelectedPaymentsRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(SelectedPaymentsRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SelectedPaymentsRowChanged != null)) {
                    this.SelectedPaymentsRowChanged(this, new SelectedPaymentsRowChangeEvent(((SelectedPaymentsRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SelectedPaymentsRowChanging != null)) {
                    this.SelectedPaymentsRowChanging(this, new SelectedPaymentsRowChangeEvent(((SelectedPaymentsRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SelectedPaymentsRowDeleted != null)) {
                    this.SelectedPaymentsRowDeleted(this, new SelectedPaymentsRowChangeEvent(((SelectedPaymentsRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SelectedPaymentsRowDeleting != null)) {
                    this.SelectedPaymentsRowDeleting(this, new SelectedPaymentsRowChangeEvent(((SelectedPaymentsRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSelectedPaymentsRow(SelectedPaymentsRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SelectedPaymentsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PaymentDetailsDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnTemp_DocNo;
            
            private System.Data.DataColumn columnPayment_Mode;
            
            private System.Data.DataColumn columnBank_Name;
            
            private System.Data.DataColumn columnCheque_No;
            
            private System.Data.DataColumn columnBranch;
            
            private System.Data.DataColumn columnAmount;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PaymentDetailsDataTable() {
                this.TableName = "PaymentDetails";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PaymentDetailsDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected PaymentDetailsDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Temp_DocNoColumn {
                get {
                    return this.columnTemp_DocNo;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Payment_ModeColumn {
                get {
                    return this.columnPayment_Mode;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Bank_NameColumn {
                get {
                    return this.columnBank_Name;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Cheque_NoColumn {
                get {
                    return this.columnCheque_No;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn BranchColumn {
                get {
                    return this.columnBranch;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PaymentDetailsRow this[int index] {
                get {
                    return ((PaymentDetailsRow)(this.Rows[index]));
                }
            }
            
            public event PaymentDetailsRowChangeEventHandler PaymentDetailsRowChanging;
            
            public event PaymentDetailsRowChangeEventHandler PaymentDetailsRowChanged;
            
            public event PaymentDetailsRowChangeEventHandler PaymentDetailsRowDeleting;
            
            public event PaymentDetailsRowChangeEventHandler PaymentDetailsRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPaymentDetailsRow(PaymentDetailsRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PaymentDetailsRow AddPaymentDetailsRow(string Temp_DocNo, string Payment_Mode, string Bank_Name, string Cheque_No, string Branch, string Amount) {
                PaymentDetailsRow rowPaymentDetailsRow = ((PaymentDetailsRow)(this.NewRow()));
                rowPaymentDetailsRow.ItemArray = new object[] {
                        Temp_DocNo,
                        Payment_Mode,
                        Bank_Name,
                        Cheque_No,
                        Branch,
                        Amount};
                this.Rows.Add(rowPaymentDetailsRow);
                return rowPaymentDetailsRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                PaymentDetailsDataTable cln = ((PaymentDetailsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new PaymentDetailsDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnTemp_DocNo = base.Columns["Temp_DocNo"];
                this.columnPayment_Mode = base.Columns["Payment_Mode"];
                this.columnBank_Name = base.Columns["Bank_Name"];
                this.columnCheque_No = base.Columns["Cheque_No"];
                this.columnBranch = base.Columns["Branch"];
                this.columnAmount = base.Columns["Amount"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnTemp_DocNo = new System.Data.DataColumn("Temp_DocNo", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTemp_DocNo);
                this.columnPayment_Mode = new System.Data.DataColumn("Payment_Mode", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPayment_Mode);
                this.columnBank_Name = new System.Data.DataColumn("Bank_Name", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnBank_Name);
                this.columnCheque_No = new System.Data.DataColumn("Cheque_No", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCheque_No);
                this.columnBranch = new System.Data.DataColumn("Branch", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnBranch);
                this.columnAmount = new System.Data.DataColumn("Amount", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PaymentDetailsRow NewPaymentDetailsRow() {
                return ((PaymentDetailsRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new PaymentDetailsRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(PaymentDetailsRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PaymentDetailsRowChanged != null)) {
                    this.PaymentDetailsRowChanged(this, new PaymentDetailsRowChangeEvent(((PaymentDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PaymentDetailsRowChanging != null)) {
                    this.PaymentDetailsRowChanging(this, new PaymentDetailsRowChangeEvent(((PaymentDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PaymentDetailsRowDeleted != null)) {
                    this.PaymentDetailsRowDeleted(this, new PaymentDetailsRowChangeEvent(((PaymentDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PaymentDetailsRowDeleting != null)) {
                    this.PaymentDetailsRowDeleting(this, new PaymentDetailsRowChangeEvent(((PaymentDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePaymentDetailsRow(PaymentDetailsRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PaymentDetailsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tbPaidPaymentSummaryDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnOrg_Doc_no;
            
            private System.Data.DataColumn columnPost_Date;
            
            private System.Data.DataColumn columnDoc_No;
            
            private System.Data.DataColumn columnTransaction_Date;
            
            private System.Data.DataColumn columnBalance_Amount;
            
            private System.Data.DataColumn columnTransaction_Amount;
            
            private System.Data.DataColumn columnPaid_Amount;
            
            private System.Data.DataColumn columnLoca;
            
            private System.Data.DataColumn columnLoca_Descrip;
            
            private System.Data.DataColumn columnAcc_Code;
            
            private System.Data.DataColumn columnAcc_Name;
            
            private System.Data.DataColumn columnAddress1;
            
            private System.Data.DataColumn columnAddress2;
            
            private System.Data.DataColumn columnAddress3;
            
            private System.Data.DataColumn columnAddress4;
            
            private System.Data.DataColumn columnUser_Name;
            
            private System.Data.DataColumn columnStatus;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tbPaidPaymentSummaryDataTable() {
                this.TableName = "tbPaidPaymentSummary";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tbPaidPaymentSummaryDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tbPaidPaymentSummaryDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Org_Doc_noColumn {
                get {
                    return this.columnOrg_Doc_no;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Post_DateColumn {
                get {
                    return this.columnPost_Date;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Doc_NoColumn {
                get {
                    return this.columnDoc_No;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Transaction_DateColumn {
                get {
                    return this.columnTransaction_Date;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Balance_AmountColumn {
                get {
                    return this.columnBalance_Amount;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Transaction_AmountColumn {
                get {
                    return this.columnTransaction_Amount;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Paid_AmountColumn {
                get {
                    return this.columnPaid_Amount;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn LocaColumn {
                get {
                    return this.columnLoca;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Loca_DescripColumn {
                get {
                    return this.columnLoca_Descrip;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Acc_CodeColumn {
                get {
                    return this.columnAcc_Code;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Acc_NameColumn {
                get {
                    return this.columnAcc_Name;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Address1Column {
                get {
                    return this.columnAddress1;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Address2Column {
                get {
                    return this.columnAddress2;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Address3Column {
                get {
                    return this.columnAddress3;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Address4Column {
                get {
                    return this.columnAddress4;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn User_NameColumn {
                get {
                    return this.columnUser_Name;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn StatusColumn {
                get {
                    return this.columnStatus;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tbPaidPaymentSummaryRow this[int index] {
                get {
                    return ((tbPaidPaymentSummaryRow)(this.Rows[index]));
                }
            }
            
            public event tbPaidPaymentSummaryRowChangeEventHandler tbPaidPaymentSummaryRowChanging;
            
            public event tbPaidPaymentSummaryRowChangeEventHandler tbPaidPaymentSummaryRowChanged;
            
            public event tbPaidPaymentSummaryRowChangeEventHandler tbPaidPaymentSummaryRowDeleting;
            
            public event tbPaidPaymentSummaryRowChangeEventHandler tbPaidPaymentSummaryRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtbPaidPaymentSummaryRow(tbPaidPaymentSummaryRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tbPaidPaymentSummaryRow AddtbPaidPaymentSummaryRow(
                        string Org_Doc_no, 
                        string Post_Date, 
                        string Doc_No, 
                        string Transaction_Date, 
                        string Balance_Amount, 
                        string Transaction_Amount, 
                        string Paid_Amount, 
                        string Loca, 
                        string Loca_Descrip, 
                        string Acc_Code, 
                        string Acc_Name, 
                        string Address1, 
                        string Address2, 
                        string Address3, 
                        string Address4, 
                        string User_Name, 
                        string Status) {
                tbPaidPaymentSummaryRow rowtbPaidPaymentSummaryRow = ((tbPaidPaymentSummaryRow)(this.NewRow()));
                rowtbPaidPaymentSummaryRow.ItemArray = new object[] {
                        Org_Doc_no,
                        Post_Date,
                        Doc_No,
                        Transaction_Date,
                        Balance_Amount,
                        Transaction_Amount,
                        Paid_Amount,
                        Loca,
                        Loca_Descrip,
                        Acc_Code,
                        Acc_Name,
                        Address1,
                        Address2,
                        Address3,
                        Address4,
                        User_Name,
                        Status};
                this.Rows.Add(rowtbPaidPaymentSummaryRow);
                return rowtbPaidPaymentSummaryRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                tbPaidPaymentSummaryDataTable cln = ((tbPaidPaymentSummaryDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new tbPaidPaymentSummaryDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnOrg_Doc_no = base.Columns["Org_Doc_no"];
                this.columnPost_Date = base.Columns["Post_Date"];
                this.columnDoc_No = base.Columns["Doc_No"];
                this.columnTransaction_Date = base.Columns["Transaction_Date"];
                this.columnBalance_Amount = base.Columns["Balance_Amount"];
                this.columnTransaction_Amount = base.Columns["Transaction_Amount"];
                this.columnPaid_Amount = base.Columns["Paid_Amount"];
                this.columnLoca = base.Columns["Loca"];
                this.columnLoca_Descrip = base.Columns["Loca_Descrip"];
                this.columnAcc_Code = base.Columns["Acc_Code"];
                this.columnAcc_Name = base.Columns["Acc_Name"];
                this.columnAddress1 = base.Columns["Address1"];
                this.columnAddress2 = base.Columns["Address2"];
                this.columnAddress3 = base.Columns["Address3"];
                this.columnAddress4 = base.Columns["Address4"];
                this.columnUser_Name = base.Columns["User_Name"];
                this.columnStatus = base.Columns["Status"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnOrg_Doc_no = new System.Data.DataColumn("Org_Doc_no", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrg_Doc_no);
                this.columnPost_Date = new System.Data.DataColumn("Post_Date", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPost_Date);
                this.columnDoc_No = new System.Data.DataColumn("Doc_No", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDoc_No);
                this.columnTransaction_Date = new System.Data.DataColumn("Transaction_Date", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTransaction_Date);
                this.columnBalance_Amount = new System.Data.DataColumn("Balance_Amount", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnBalance_Amount);
                this.columnTransaction_Amount = new System.Data.DataColumn("Transaction_Amount", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTransaction_Amount);
                this.columnPaid_Amount = new System.Data.DataColumn("Paid_Amount", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaid_Amount);
                this.columnLoca = new System.Data.DataColumn("Loca", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoca);
                this.columnLoca_Descrip = new System.Data.DataColumn("Loca_Descrip", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoca_Descrip);
                this.columnAcc_Code = new System.Data.DataColumn("Acc_Code", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnAcc_Code);
                this.columnAcc_Name = new System.Data.DataColumn("Acc_Name", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnAcc_Name);
                this.columnAddress1 = new System.Data.DataColumn("Address1", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress1);
                this.columnAddress2 = new System.Data.DataColumn("Address2", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress2);
                this.columnAddress3 = new System.Data.DataColumn("Address3", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress3);
                this.columnAddress4 = new System.Data.DataColumn("Address4", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress4);
                this.columnUser_Name = new System.Data.DataColumn("User_Name", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnUser_Name);
                this.columnStatus = new System.Data.DataColumn("Status", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatus);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tbPaidPaymentSummaryRow NewtbPaidPaymentSummaryRow() {
                return ((tbPaidPaymentSummaryRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new tbPaidPaymentSummaryRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(tbPaidPaymentSummaryRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tbPaidPaymentSummaryRowChanged != null)) {
                    this.tbPaidPaymentSummaryRowChanged(this, new tbPaidPaymentSummaryRowChangeEvent(((tbPaidPaymentSummaryRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tbPaidPaymentSummaryRowChanging != null)) {
                    this.tbPaidPaymentSummaryRowChanging(this, new tbPaidPaymentSummaryRowChangeEvent(((tbPaidPaymentSummaryRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tbPaidPaymentSummaryRowDeleted != null)) {
                    this.tbPaidPaymentSummaryRowDeleted(this, new tbPaidPaymentSummaryRowChangeEvent(((tbPaidPaymentSummaryRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tbPaidPaymentSummaryRowDeleting != null)) {
                    this.tbPaidPaymentSummaryRowDeleting(this, new tbPaidPaymentSummaryRowChangeEvent(((tbPaidPaymentSummaryRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetbPaidPaymentSummaryRow(tbPaidPaymentSummaryRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tbPaidPaymentSummaryDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tbPaidPaymentModeDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnPayment_Mode;
            
            private System.Data.DataColumn columnBank_Name;
            
            private System.Data.DataColumn columnCheque_No;
            
            private System.Data.DataColumn columnCheque_Date;
            
            private System.Data.DataColumn columnBranch;
            
            private System.Data.DataColumn columnAmount;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tbPaidPaymentModeDataTable() {
                this.TableName = "tbPaidPaymentMode";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tbPaidPaymentModeDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tbPaidPaymentModeDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Payment_ModeColumn {
                get {
                    return this.columnPayment_Mode;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Bank_NameColumn {
                get {
                    return this.columnBank_Name;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Cheque_NoColumn {
                get {
                    return this.columnCheque_No;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Cheque_DateColumn {
                get {
                    return this.columnCheque_Date;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn BranchColumn {
                get {
                    return this.columnBranch;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tbPaidPaymentModeRow this[int index] {
                get {
                    return ((tbPaidPaymentModeRow)(this.Rows[index]));
                }
            }
            
            public event tbPaidPaymentModeRowChangeEventHandler tbPaidPaymentModeRowChanging;
            
            public event tbPaidPaymentModeRowChangeEventHandler tbPaidPaymentModeRowChanged;
            
            public event tbPaidPaymentModeRowChangeEventHandler tbPaidPaymentModeRowDeleting;
            
            public event tbPaidPaymentModeRowChangeEventHandler tbPaidPaymentModeRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtbPaidPaymentModeRow(tbPaidPaymentModeRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tbPaidPaymentModeRow AddtbPaidPaymentModeRow(string Payment_Mode, string Bank_Name, string Cheque_No, string Cheque_Date, string Branch, string Amount) {
                tbPaidPaymentModeRow rowtbPaidPaymentModeRow = ((tbPaidPaymentModeRow)(this.NewRow()));
                rowtbPaidPaymentModeRow.ItemArray = new object[] {
                        Payment_Mode,
                        Bank_Name,
                        Cheque_No,
                        Cheque_Date,
                        Branch,
                        Amount};
                this.Rows.Add(rowtbPaidPaymentModeRow);
                return rowtbPaidPaymentModeRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                tbPaidPaymentModeDataTable cln = ((tbPaidPaymentModeDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new tbPaidPaymentModeDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnPayment_Mode = base.Columns["Payment_Mode"];
                this.columnBank_Name = base.Columns["Bank_Name"];
                this.columnCheque_No = base.Columns["Cheque_No"];
                this.columnCheque_Date = base.Columns["Cheque_Date"];
                this.columnBranch = base.Columns["Branch"];
                this.columnAmount = base.Columns["Amount"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnPayment_Mode = new System.Data.DataColumn("Payment_Mode", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPayment_Mode);
                this.columnBank_Name = new System.Data.DataColumn("Bank_Name", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnBank_Name);
                this.columnCheque_No = new System.Data.DataColumn("Cheque_No", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCheque_No);
                this.columnCheque_Date = new System.Data.DataColumn("Cheque_Date", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCheque_Date);
                this.columnBranch = new System.Data.DataColumn("Branch", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnBranch);
                this.columnAmount = new System.Data.DataColumn("Amount", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tbPaidPaymentModeRow NewtbPaidPaymentModeRow() {
                return ((tbPaidPaymentModeRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new tbPaidPaymentModeRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(tbPaidPaymentModeRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tbPaidPaymentModeRowChanged != null)) {
                    this.tbPaidPaymentModeRowChanged(this, new tbPaidPaymentModeRowChangeEvent(((tbPaidPaymentModeRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tbPaidPaymentModeRowChanging != null)) {
                    this.tbPaidPaymentModeRowChanging(this, new tbPaidPaymentModeRowChangeEvent(((tbPaidPaymentModeRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tbPaidPaymentModeRowDeleted != null)) {
                    this.tbPaidPaymentModeRowDeleted(this, new tbPaidPaymentModeRowChangeEvent(((tbPaidPaymentModeRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tbPaidPaymentModeRowDeleting != null)) {
                    this.tbPaidPaymentModeRowDeleting(this, new tbPaidPaymentModeRowChangeEvent(((tbPaidPaymentModeRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetbPaidPaymentModeRow(tbPaidPaymentModeRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tbPaidPaymentModeDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SupplierPaymentSummaryDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnAcc_Code;
            
            private System.Data.DataColumn columnAcc_Name;
            
            private System.Data.DataColumn columnOrg_Doc_no;
            
            private System.Data.DataColumn columnPost_Date;
            
            private System.Data.DataColumn columnPayment_Mode;
            
            private System.Data.DataColumn columnBank_Name;
            
            private System.Data.DataColumn columnCheque_No;
            
            private System.Data.DataColumn columnCheque_Date;
            
            private System.Data.DataColumn columnBranch;
            
            private System.Data.DataColumn columnAmount;
            
            private System.Data.DataColumn columnCodeFrom;
            
            private System.Data.DataColumn columnCodeTo;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SupplierPaymentSummaryDataTable() {
                this.TableName = "SupplierPaymentSummary";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SupplierPaymentSummaryDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected SupplierPaymentSummaryDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Acc_CodeColumn {
                get {
                    return this.columnAcc_Code;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Acc_NameColumn {
                get {
                    return this.columnAcc_Name;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Org_Doc_noColumn {
                get {
                    return this.columnOrg_Doc_no;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Post_DateColumn {
                get {
                    return this.columnPost_Date;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Payment_ModeColumn {
                get {
                    return this.columnPayment_Mode;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Bank_NameColumn {
                get {
                    return this.columnBank_Name;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Cheque_NoColumn {
                get {
                    return this.columnCheque_No;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Cheque_DateColumn {
                get {
                    return this.columnCheque_Date;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn BranchColumn {
                get {
                    return this.columnBranch;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CodeFromColumn {
                get {
                    return this.columnCodeFrom;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CodeToColumn {
                get {
                    return this.columnCodeTo;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SupplierPaymentSummaryRow this[int index] {
                get {
                    return ((SupplierPaymentSummaryRow)(this.Rows[index]));
                }
            }
            
            public event SupplierPaymentSummaryRowChangeEventHandler SupplierPaymentSummaryRowChanging;
            
            public event SupplierPaymentSummaryRowChangeEventHandler SupplierPaymentSummaryRowChanged;
            
            public event SupplierPaymentSummaryRowChangeEventHandler SupplierPaymentSummaryRowDeleting;
            
            public event SupplierPaymentSummaryRowChangeEventHandler SupplierPaymentSummaryRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSupplierPaymentSummaryRow(SupplierPaymentSummaryRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SupplierPaymentSummaryRow AddSupplierPaymentSummaryRow(string Acc_Code, string Acc_Name, string Org_Doc_no, string Post_Date, string Payment_Mode, string Bank_Name, string Cheque_No, string Cheque_Date, string Branch, string Amount, string CodeFrom, string CodeTo) {
                SupplierPaymentSummaryRow rowSupplierPaymentSummaryRow = ((SupplierPaymentSummaryRow)(this.NewRow()));
                rowSupplierPaymentSummaryRow.ItemArray = new object[] {
                        Acc_Code,
                        Acc_Name,
                        Org_Doc_no,
                        Post_Date,
                        Payment_Mode,
                        Bank_Name,
                        Cheque_No,
                        Cheque_Date,
                        Branch,
                        Amount,
                        CodeFrom,
                        CodeTo};
                this.Rows.Add(rowSupplierPaymentSummaryRow);
                return rowSupplierPaymentSummaryRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                SupplierPaymentSummaryDataTable cln = ((SupplierPaymentSummaryDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new SupplierPaymentSummaryDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnAcc_Code = base.Columns["Acc_Code"];
                this.columnAcc_Name = base.Columns["Acc_Name"];
                this.columnOrg_Doc_no = base.Columns["Org_Doc_no"];
                this.columnPost_Date = base.Columns["Post_Date"];
                this.columnPayment_Mode = base.Columns["Payment_Mode"];
                this.columnBank_Name = base.Columns["Bank_Name"];
                this.columnCheque_No = base.Columns["Cheque_No"];
                this.columnCheque_Date = base.Columns["Cheque_Date"];
                this.columnBranch = base.Columns["Branch"];
                this.columnAmount = base.Columns["Amount"];
                this.columnCodeFrom = base.Columns["CodeFrom"];
                this.columnCodeTo = base.Columns["CodeTo"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnAcc_Code = new System.Data.DataColumn("Acc_Code", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnAcc_Code);
                this.columnAcc_Name = new System.Data.DataColumn("Acc_Name", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnAcc_Name);
                this.columnOrg_Doc_no = new System.Data.DataColumn("Org_Doc_no", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrg_Doc_no);
                this.columnPost_Date = new System.Data.DataColumn("Post_Date", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPost_Date);
                this.columnPayment_Mode = new System.Data.DataColumn("Payment_Mode", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPayment_Mode);
                this.columnBank_Name = new System.Data.DataColumn("Bank_Name", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnBank_Name);
                this.columnCheque_No = new System.Data.DataColumn("Cheque_No", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCheque_No);
                this.columnCheque_Date = new System.Data.DataColumn("Cheque_Date", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCheque_Date);
                this.columnBranch = new System.Data.DataColumn("Branch", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnBranch);
                this.columnAmount = new System.Data.DataColumn("Amount", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
                this.columnCodeFrom = new System.Data.DataColumn("CodeFrom", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodeFrom);
                this.columnCodeTo = new System.Data.DataColumn("CodeTo", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodeTo);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SupplierPaymentSummaryRow NewSupplierPaymentSummaryRow() {
                return ((SupplierPaymentSummaryRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new SupplierPaymentSummaryRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(SupplierPaymentSummaryRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SupplierPaymentSummaryRowChanged != null)) {
                    this.SupplierPaymentSummaryRowChanged(this, new SupplierPaymentSummaryRowChangeEvent(((SupplierPaymentSummaryRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SupplierPaymentSummaryRowChanging != null)) {
                    this.SupplierPaymentSummaryRowChanging(this, new SupplierPaymentSummaryRowChangeEvent(((SupplierPaymentSummaryRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SupplierPaymentSummaryRowDeleted != null)) {
                    this.SupplierPaymentSummaryRowDeleted(this, new SupplierPaymentSummaryRowChangeEvent(((SupplierPaymentSummaryRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SupplierPaymentSummaryRowDeleting != null)) {
                    this.SupplierPaymentSummaryRowDeleting(this, new SupplierPaymentSummaryRowChangeEvent(((SupplierPaymentSummaryRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSupplierPaymentSummaryRow(SupplierPaymentSummaryRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SupplierPaymentSummaryDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TransactionSummaryDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnLoca;
            
            private System.Data.DataColumn columnLoca_Descrip;
            
            private System.Data.DataColumn columnTo_LocaDesc;
            
            private System.Data.DataColumn columnSupplier_Id;
            
            private System.Data.DataColumn columnSupp_Name;
            
            private System.Data.DataColumn columnPost_Date;
            
            private System.Data.DataColumn columnNet_Amount;
            
            private System.Data.DataColumn columnDoc_No;
            
            private System.Data.DataColumn columnCodeFrom;
            
            private System.Data.DataColumn columnCodeTo;
            
            private System.Data.DataColumn columnTo_Loca;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TransactionSummaryDataTable() {
                this.TableName = "TransactionSummary";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TransactionSummaryDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected TransactionSummaryDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn LocaColumn {
                get {
                    return this.columnLoca;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Loca_DescripColumn {
                get {
                    return this.columnLoca_Descrip;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn To_LocaDescColumn {
                get {
                    return this.columnTo_LocaDesc;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Supplier_IdColumn {
                get {
                    return this.columnSupplier_Id;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Supp_NameColumn {
                get {
                    return this.columnSupp_Name;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Post_DateColumn {
                get {
                    return this.columnPost_Date;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Net_AmountColumn {
                get {
                    return this.columnNet_Amount;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Doc_NoColumn {
                get {
                    return this.columnDoc_No;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CodeFromColumn {
                get {
                    return this.columnCodeFrom;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CodeToColumn {
                get {
                    return this.columnCodeTo;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn To_LocaColumn {
                get {
                    return this.columnTo_Loca;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TransactionSummaryRow this[int index] {
                get {
                    return ((TransactionSummaryRow)(this.Rows[index]));
                }
            }
            
            public event TransactionSummaryRowChangeEventHandler TransactionSummaryRowChanging;
            
            public event TransactionSummaryRowChangeEventHandler TransactionSummaryRowChanged;
            
            public event TransactionSummaryRowChangeEventHandler TransactionSummaryRowDeleting;
            
            public event TransactionSummaryRowChangeEventHandler TransactionSummaryRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddTransactionSummaryRow(TransactionSummaryRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TransactionSummaryRow AddTransactionSummaryRow(string Loca, string Loca_Descrip, string To_LocaDesc, string Supplier_Id, string Supp_Name, string Post_Date, string Net_Amount, string Doc_No, string CodeFrom, string CodeTo, string To_Loca) {
                TransactionSummaryRow rowTransactionSummaryRow = ((TransactionSummaryRow)(this.NewRow()));
                rowTransactionSummaryRow.ItemArray = new object[] {
                        Loca,
                        Loca_Descrip,
                        To_LocaDesc,
                        Supplier_Id,
                        Supp_Name,
                        Post_Date,
                        Net_Amount,
                        Doc_No,
                        CodeFrom,
                        CodeTo,
                        To_Loca};
                this.Rows.Add(rowTransactionSummaryRow);
                return rowTransactionSummaryRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                TransactionSummaryDataTable cln = ((TransactionSummaryDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new TransactionSummaryDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnLoca = base.Columns["Loca"];
                this.columnLoca_Descrip = base.Columns["Loca_Descrip"];
                this.columnTo_LocaDesc = base.Columns["To_LocaDesc"];
                this.columnSupplier_Id = base.Columns["Supplier_Id"];
                this.columnSupp_Name = base.Columns["Supp_Name"];
                this.columnPost_Date = base.Columns["Post_Date"];
                this.columnNet_Amount = base.Columns["Net_Amount"];
                this.columnDoc_No = base.Columns["Doc_No"];
                this.columnCodeFrom = base.Columns["CodeFrom"];
                this.columnCodeTo = base.Columns["CodeTo"];
                this.columnTo_Loca = base.Columns["To_Loca"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnLoca = new System.Data.DataColumn("Loca", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoca);
                this.columnLoca_Descrip = new System.Data.DataColumn("Loca_Descrip", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoca_Descrip);
                this.columnTo_LocaDesc = new System.Data.DataColumn("To_LocaDesc", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTo_LocaDesc);
                this.columnSupplier_Id = new System.Data.DataColumn("Supplier_Id", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplier_Id);
                this.columnSupp_Name = new System.Data.DataColumn("Supp_Name", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupp_Name);
                this.columnPost_Date = new System.Data.DataColumn("Post_Date", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPost_Date);
                this.columnNet_Amount = new System.Data.DataColumn("Net_Amount", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnNet_Amount);
                this.columnDoc_No = new System.Data.DataColumn("Doc_No", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDoc_No);
                this.columnCodeFrom = new System.Data.DataColumn("CodeFrom", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodeFrom);
                this.columnCodeTo = new System.Data.DataColumn("CodeTo", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodeTo);
                this.columnTo_Loca = new System.Data.DataColumn("To_Loca", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTo_Loca);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TransactionSummaryRow NewTransactionSummaryRow() {
                return ((TransactionSummaryRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new TransactionSummaryRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(TransactionSummaryRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TransactionSummaryRowChanged != null)) {
                    this.TransactionSummaryRowChanged(this, new TransactionSummaryRowChangeEvent(((TransactionSummaryRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TransactionSummaryRowChanging != null)) {
                    this.TransactionSummaryRowChanging(this, new TransactionSummaryRowChangeEvent(((TransactionSummaryRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TransactionSummaryRowDeleted != null)) {
                    this.TransactionSummaryRowDeleted(this, new TransactionSummaryRowChangeEvent(((TransactionSummaryRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TransactionSummaryRowDeleting != null)) {
                    this.TransactionSummaryRowDeleting(this, new TransactionSummaryRowChangeEvent(((TransactionSummaryRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveTransactionSummaryRow(TransactionSummaryRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TransactionSummaryDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class StockDetailsDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnProd_Code;
            
            private System.Data.DataColumn columnProd_Name;
            
            private System.Data.DataColumn columnDepartment_Id;
            
            private System.Data.DataColumn columnCategory_Id;
            
            private System.Data.DataColumn columnSupplier_Id;
            
            private System.Data.DataColumn columnDept_Name;
            
            private System.Data.DataColumn columnCat_Name;
            
            private System.Data.DataColumn columnSupp_Name;
            
            private System.Data.DataColumn columnManf_Name;
            
            private System.Data.DataColumn columnPurchase_price;
            
            private System.Data.DataColumn columnSelling_Price;
            
            private System.Data.DataColumn columnQty;
            
            private System.Data.DataColumn columnCodeFrom;
            
            private System.Data.DataColumn columnCodeTo;
            
            private System.Data.DataColumn columnManufacturer_Id;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockDetailsDataTable() {
                this.TableName = "StockDetails";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal StockDetailsDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected StockDetailsDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Prod_CodeColumn {
                get {
                    return this.columnProd_Code;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Prod_NameColumn {
                get {
                    return this.columnProd_Name;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Department_IdColumn {
                get {
                    return this.columnDepartment_Id;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Category_IdColumn {
                get {
                    return this.columnCategory_Id;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Supplier_IdColumn {
                get {
                    return this.columnSupplier_Id;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Dept_NameColumn {
                get {
                    return this.columnDept_Name;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Cat_NameColumn {
                get {
                    return this.columnCat_Name;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Supp_NameColumn {
                get {
                    return this.columnSupp_Name;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Manf_NameColumn {
                get {
                    return this.columnManf_Name;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Purchase_priceColumn {
                get {
                    return this.columnPurchase_price;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Selling_PriceColumn {
                get {
                    return this.columnSelling_Price;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn QtyColumn {
                get {
                    return this.columnQty;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CodeFromColumn {
                get {
                    return this.columnCodeFrom;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CodeToColumn {
                get {
                    return this.columnCodeTo;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Manufacturer_IdColumn {
                get {
                    return this.columnManufacturer_Id;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockDetailsRow this[int index] {
                get {
                    return ((StockDetailsRow)(this.Rows[index]));
                }
            }
            
            public event StockDetailsRowChangeEventHandler StockDetailsRowChanging;
            
            public event StockDetailsRowChangeEventHandler StockDetailsRowChanged;
            
            public event StockDetailsRowChangeEventHandler StockDetailsRowDeleting;
            
            public event StockDetailsRowChangeEventHandler StockDetailsRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddStockDetailsRow(StockDetailsRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockDetailsRow AddStockDetailsRow(string Prod_Code, string Prod_Name, string Department_Id, string Category_Id, string Supplier_Id, string Dept_Name, string Cat_Name, string Supp_Name, string Manf_Name, string Purchase_price, string Selling_Price, string Qty, string CodeFrom, string CodeTo, string Manufacturer_Id) {
                StockDetailsRow rowStockDetailsRow = ((StockDetailsRow)(this.NewRow()));
                rowStockDetailsRow.ItemArray = new object[] {
                        Prod_Code,
                        Prod_Name,
                        Department_Id,
                        Category_Id,
                        Supplier_Id,
                        Dept_Name,
                        Cat_Name,
                        Supp_Name,
                        Manf_Name,
                        Purchase_price,
                        Selling_Price,
                        Qty,
                        CodeFrom,
                        CodeTo,
                        Manufacturer_Id};
                this.Rows.Add(rowStockDetailsRow);
                return rowStockDetailsRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                StockDetailsDataTable cln = ((StockDetailsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new StockDetailsDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnProd_Code = base.Columns["Prod_Code"];
                this.columnProd_Name = base.Columns["Prod_Name"];
                this.columnDepartment_Id = base.Columns["Department_Id"];
                this.columnCategory_Id = base.Columns["Category_Id"];
                this.columnSupplier_Id = base.Columns["Supplier_Id"];
                this.columnDept_Name = base.Columns["Dept_Name"];
                this.columnCat_Name = base.Columns["Cat_Name"];
                this.columnSupp_Name = base.Columns["Supp_Name"];
                this.columnManf_Name = base.Columns["Manf_Name"];
                this.columnPurchase_price = base.Columns["Purchase_price"];
                this.columnSelling_Price = base.Columns["Selling_Price"];
                this.columnQty = base.Columns["Qty"];
                this.columnCodeFrom = base.Columns["CodeFrom"];
                this.columnCodeTo = base.Columns["CodeTo"];
                this.columnManufacturer_Id = base.Columns["Manufacturer_Id"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnProd_Code = new System.Data.DataColumn("Prod_Code", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Code);
                this.columnProd_Name = new System.Data.DataColumn("Prod_Name", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Name);
                this.columnDepartment_Id = new System.Data.DataColumn("Department_Id", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDepartment_Id);
                this.columnCategory_Id = new System.Data.DataColumn("Category_Id", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCategory_Id);
                this.columnSupplier_Id = new System.Data.DataColumn("Supplier_Id", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplier_Id);
                this.columnDept_Name = new System.Data.DataColumn("Dept_Name", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDept_Name);
                this.columnCat_Name = new System.Data.DataColumn("Cat_Name", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCat_Name);
                this.columnSupp_Name = new System.Data.DataColumn("Supp_Name", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupp_Name);
                this.columnManf_Name = new System.Data.DataColumn("Manf_Name", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnManf_Name);
                this.columnPurchase_price = new System.Data.DataColumn("Purchase_price", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPurchase_price);
                this.columnSelling_Price = new System.Data.DataColumn("Selling_Price", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelling_Price);
                this.columnQty = new System.Data.DataColumn("Qty", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnQty);
                this.columnCodeFrom = new System.Data.DataColumn("CodeFrom", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodeFrom);
                this.columnCodeTo = new System.Data.DataColumn("CodeTo", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodeTo);
                this.columnManufacturer_Id = new System.Data.DataColumn("Manufacturer_Id", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnManufacturer_Id);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockDetailsRow NewStockDetailsRow() {
                return ((StockDetailsRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new StockDetailsRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(StockDetailsRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.StockDetailsRowChanged != null)) {
                    this.StockDetailsRowChanged(this, new StockDetailsRowChangeEvent(((StockDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.StockDetailsRowChanging != null)) {
                    this.StockDetailsRowChanging(this, new StockDetailsRowChangeEvent(((StockDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.StockDetailsRowDeleted != null)) {
                    this.StockDetailsRowDeleted(this, new StockDetailsRowChangeEvent(((StockDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.StockDetailsRowDeleting != null)) {
                    this.StockDetailsRowDeleting(this, new StockDetailsRowChangeEvent(((StockDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveStockDetailsRow(StockDetailsRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "StockDetailsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dsSalesDetailsDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnProd_Code;
            
            private System.Data.DataColumn columnProd_Name;
            
            private System.Data.DataColumn columnPurchase_Price;
            
            private System.Data.DataColumn columnSelling_Price;
            
            private System.Data.DataColumn columnQty;
            
            private System.Data.DataColumn columnLoca;
            
            private System.Data.DataColumn columnLoca_Descrip;
            
            private System.Data.DataColumn columnCodeFrom;
            
            private System.Data.DataColumn columnCodeTo;
            
            private System.Data.DataColumn columnDepartment_Id;
            
            private System.Data.DataColumn columnDept_Name;
            
            private System.Data.DataColumn columnCategory_Id;
            
            private System.Data.DataColumn columnCat_Name;
            
            private System.Data.DataColumn columnSupplier_Id;
            
            private System.Data.DataColumn columnSupp_Name;
            
            private System.Data.DataColumn columnManufacturer_Id;
            
            private System.Data.DataColumn columnManf_Name;
            
            private System.Data.DataColumn columnAmount;
            
            private System.Data.DataColumn columnIid;
            
            private System.Data.DataColumn columnDateFrom;
            
            private System.Data.DataColumn columnDateTo;
            
            private System.Data.DataColumn columnSales_Date;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsSalesDetailsDataTable() {
                this.TableName = "dsSalesDetails";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsSalesDetailsDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dsSalesDetailsDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Prod_CodeColumn {
                get {
                    return this.columnProd_Code;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Prod_NameColumn {
                get {
                    return this.columnProd_Name;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Purchase_PriceColumn {
                get {
                    return this.columnPurchase_Price;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Selling_PriceColumn {
                get {
                    return this.columnSelling_Price;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn QtyColumn {
                get {
                    return this.columnQty;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn LocaColumn {
                get {
                    return this.columnLoca;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Loca_DescripColumn {
                get {
                    return this.columnLoca_Descrip;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CodeFromColumn {
                get {
                    return this.columnCodeFrom;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CodeToColumn {
                get {
                    return this.columnCodeTo;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Department_IdColumn {
                get {
                    return this.columnDepartment_Id;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Dept_NameColumn {
                get {
                    return this.columnDept_Name;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Category_IdColumn {
                get {
                    return this.columnCategory_Id;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Cat_NameColumn {
                get {
                    return this.columnCat_Name;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Supplier_IdColumn {
                get {
                    return this.columnSupplier_Id;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Supp_NameColumn {
                get {
                    return this.columnSupp_Name;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Manufacturer_IdColumn {
                get {
                    return this.columnManufacturer_Id;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Manf_NameColumn {
                get {
                    return this.columnManf_Name;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn IidColumn {
                get {
                    return this.columnIid;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DateFromColumn {
                get {
                    return this.columnDateFrom;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DateToColumn {
                get {
                    return this.columnDateTo;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Sales_DateColumn {
                get {
                    return this.columnSales_Date;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsSalesDetailsRow this[int index] {
                get {
                    return ((dsSalesDetailsRow)(this.Rows[index]));
                }
            }
            
            public event dsSalesDetailsRowChangeEventHandler dsSalesDetailsRowChanging;
            
            public event dsSalesDetailsRowChangeEventHandler dsSalesDetailsRowChanged;
            
            public event dsSalesDetailsRowChangeEventHandler dsSalesDetailsRowDeleting;
            
            public event dsSalesDetailsRowChangeEventHandler dsSalesDetailsRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddsSalesDetailsRow(dsSalesDetailsRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsSalesDetailsRow AdddsSalesDetailsRow(
                        string Prod_Code, 
                        string Prod_Name, 
                        string Purchase_Price, 
                        string Selling_Price, 
                        string Qty, 
                        string Loca, 
                        string Loca_Descrip, 
                        string CodeFrom, 
                        string CodeTo, 
                        string Department_Id, 
                        string Dept_Name, 
                        string Category_Id, 
                        string Cat_Name, 
                        string Supplier_Id, 
                        string Supp_Name, 
                        string Manufacturer_Id, 
                        string Manf_Name, 
                        string Amount, 
                        string Iid, 
                        string DateFrom, 
                        string DateTo, 
                        string Sales_Date) {
                dsSalesDetailsRow rowdsSalesDetailsRow = ((dsSalesDetailsRow)(this.NewRow()));
                rowdsSalesDetailsRow.ItemArray = new object[] {
                        Prod_Code,
                        Prod_Name,
                        Purchase_Price,
                        Selling_Price,
                        Qty,
                        Loca,
                        Loca_Descrip,
                        CodeFrom,
                        CodeTo,
                        Department_Id,
                        Dept_Name,
                        Category_Id,
                        Cat_Name,
                        Supplier_Id,
                        Supp_Name,
                        Manufacturer_Id,
                        Manf_Name,
                        Amount,
                        Iid,
                        DateFrom,
                        DateTo,
                        Sales_Date};
                this.Rows.Add(rowdsSalesDetailsRow);
                return rowdsSalesDetailsRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                dsSalesDetailsDataTable cln = ((dsSalesDetailsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new dsSalesDetailsDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnProd_Code = base.Columns["Prod_Code"];
                this.columnProd_Name = base.Columns["Prod_Name"];
                this.columnPurchase_Price = base.Columns["Purchase_Price"];
                this.columnSelling_Price = base.Columns["Selling_Price"];
                this.columnQty = base.Columns["Qty"];
                this.columnLoca = base.Columns["Loca"];
                this.columnLoca_Descrip = base.Columns["Loca_Descrip"];
                this.columnCodeFrom = base.Columns["CodeFrom"];
                this.columnCodeTo = base.Columns["CodeTo"];
                this.columnDepartment_Id = base.Columns["Department_Id"];
                this.columnDept_Name = base.Columns["Dept_Name"];
                this.columnCategory_Id = base.Columns["Category_Id"];
                this.columnCat_Name = base.Columns["Cat_Name"];
                this.columnSupplier_Id = base.Columns["Supplier_Id"];
                this.columnSupp_Name = base.Columns["Supp_Name"];
                this.columnManufacturer_Id = base.Columns["Manufacturer_Id"];
                this.columnManf_Name = base.Columns["Manf_Name"];
                this.columnAmount = base.Columns["Amount"];
                this.columnIid = base.Columns["Iid"];
                this.columnDateFrom = base.Columns["DateFrom"];
                this.columnDateTo = base.Columns["DateTo"];
                this.columnSales_Date = base.Columns["Sales_Date"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnProd_Code = new System.Data.DataColumn("Prod_Code", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Code);
                this.columnProd_Name = new System.Data.DataColumn("Prod_Name", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Name);
                this.columnPurchase_Price = new System.Data.DataColumn("Purchase_Price", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPurchase_Price);
                this.columnSelling_Price = new System.Data.DataColumn("Selling_Price", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelling_Price);
                this.columnQty = new System.Data.DataColumn("Qty", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnQty);
                this.columnLoca = new System.Data.DataColumn("Loca", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoca);
                this.columnLoca_Descrip = new System.Data.DataColumn("Loca_Descrip", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoca_Descrip);
                this.columnCodeFrom = new System.Data.DataColumn("CodeFrom", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodeFrom);
                this.columnCodeTo = new System.Data.DataColumn("CodeTo", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodeTo);
                this.columnDepartment_Id = new System.Data.DataColumn("Department_Id", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDepartment_Id);
                this.columnDept_Name = new System.Data.DataColumn("Dept_Name", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDept_Name);
                this.columnCategory_Id = new System.Data.DataColumn("Category_Id", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCategory_Id);
                this.columnCat_Name = new System.Data.DataColumn("Cat_Name", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCat_Name);
                this.columnSupplier_Id = new System.Data.DataColumn("Supplier_Id", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplier_Id);
                this.columnSupp_Name = new System.Data.DataColumn("Supp_Name", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupp_Name);
                this.columnManufacturer_Id = new System.Data.DataColumn("Manufacturer_Id", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnManufacturer_Id);
                this.columnManf_Name = new System.Data.DataColumn("Manf_Name", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnManf_Name);
                this.columnAmount = new System.Data.DataColumn("Amount", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
                this.columnIid = new System.Data.DataColumn("Iid", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnIid);
                this.columnDateFrom = new System.Data.DataColumn("DateFrom", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateFrom);
                this.columnDateTo = new System.Data.DataColumn("DateTo", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateTo);
                this.columnSales_Date = new System.Data.DataColumn("Sales_Date", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSales_Date);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsSalesDetailsRow NewdsSalesDetailsRow() {
                return ((dsSalesDetailsRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new dsSalesDetailsRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(dsSalesDetailsRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dsSalesDetailsRowChanged != null)) {
                    this.dsSalesDetailsRowChanged(this, new dsSalesDetailsRowChangeEvent(((dsSalesDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dsSalesDetailsRowChanging != null)) {
                    this.dsSalesDetailsRowChanging(this, new dsSalesDetailsRowChangeEvent(((dsSalesDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dsSalesDetailsRowDeleted != null)) {
                    this.dsSalesDetailsRowDeleted(this, new dsSalesDetailsRowChangeEvent(((dsSalesDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dsSalesDetailsRowDeleting != null)) {
                    this.dsSalesDetailsRowDeleting(this, new dsSalesDetailsRowChangeEvent(((dsSalesDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedsSalesDetailsRow(dsSalesDetailsRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dsSalesDetailsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tbReportMonthlyAnalyseDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnMonth_Name;
            
            private System.Data.DataColumn columnSale_Amount;
            
            private System.Data.DataColumn columnPurch_amount;
            
            private System.Data.DataColumn columnidx;
            
            private System.Data.DataColumn columnSale_Qty;
            
            private System.Data.DataColumn columnPurch_Qty;
            
            private System.Data.DataColumn columnProd_Code;
            
            private System.Data.DataColumn columnProd_Name;
            
            private System.Data.DataColumn columnDateFrom;
            
            private System.Data.DataColumn columnDateTo;
            
            private System.Data.DataColumn columnProfit_Amount;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tbReportMonthlyAnalyseDataTable() {
                this.TableName = "tbReportMonthlyAnalyse";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tbReportMonthlyAnalyseDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tbReportMonthlyAnalyseDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Month_NameColumn {
                get {
                    return this.columnMonth_Name;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Sale_AmountColumn {
                get {
                    return this.columnSale_Amount;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Purch_amountColumn {
                get {
                    return this.columnPurch_amount;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn idxColumn {
                get {
                    return this.columnidx;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Sale_QtyColumn {
                get {
                    return this.columnSale_Qty;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Purch_QtyColumn {
                get {
                    return this.columnPurch_Qty;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Prod_CodeColumn {
                get {
                    return this.columnProd_Code;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Prod_NameColumn {
                get {
                    return this.columnProd_Name;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DateFromColumn {
                get {
                    return this.columnDateFrom;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DateToColumn {
                get {
                    return this.columnDateTo;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Profit_AmountColumn {
                get {
                    return this.columnProfit_Amount;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tbReportMonthlyAnalyseRow this[int index] {
                get {
                    return ((tbReportMonthlyAnalyseRow)(this.Rows[index]));
                }
            }
            
            public event tbReportMonthlyAnalyseRowChangeEventHandler tbReportMonthlyAnalyseRowChanging;
            
            public event tbReportMonthlyAnalyseRowChangeEventHandler tbReportMonthlyAnalyseRowChanged;
            
            public event tbReportMonthlyAnalyseRowChangeEventHandler tbReportMonthlyAnalyseRowDeleting;
            
            public event tbReportMonthlyAnalyseRowChangeEventHandler tbReportMonthlyAnalyseRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtbReportMonthlyAnalyseRow(tbReportMonthlyAnalyseRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tbReportMonthlyAnalyseRow AddtbReportMonthlyAnalyseRow(string Month_Name, double Sale_Amount, double Purch_amount, string idx, decimal Sale_Qty, decimal Purch_Qty, string Prod_Code, string Prod_Name, string DateFrom, string DateTo, string Profit_Amount) {
                tbReportMonthlyAnalyseRow rowtbReportMonthlyAnalyseRow = ((tbReportMonthlyAnalyseRow)(this.NewRow()));
                rowtbReportMonthlyAnalyseRow.ItemArray = new object[] {
                        Month_Name,
                        Sale_Amount,
                        Purch_amount,
                        idx,
                        Sale_Qty,
                        Purch_Qty,
                        Prod_Code,
                        Prod_Name,
                        DateFrom,
                        DateTo,
                        Profit_Amount};
                this.Rows.Add(rowtbReportMonthlyAnalyseRow);
                return rowtbReportMonthlyAnalyseRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                tbReportMonthlyAnalyseDataTable cln = ((tbReportMonthlyAnalyseDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new tbReportMonthlyAnalyseDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMonth_Name = base.Columns["Month_Name"];
                this.columnSale_Amount = base.Columns["Sale_Amount"];
                this.columnPurch_amount = base.Columns["Purch_amount"];
                this.columnidx = base.Columns["idx"];
                this.columnSale_Qty = base.Columns["Sale_Qty"];
                this.columnPurch_Qty = base.Columns["Purch_Qty"];
                this.columnProd_Code = base.Columns["Prod_Code"];
                this.columnProd_Name = base.Columns["Prod_Name"];
                this.columnDateFrom = base.Columns["DateFrom"];
                this.columnDateTo = base.Columns["DateTo"];
                this.columnProfit_Amount = base.Columns["Profit_Amount"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMonth_Name = new System.Data.DataColumn("Month_Name", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMonth_Name);
                this.columnSale_Amount = new System.Data.DataColumn("Sale_Amount", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSale_Amount);
                this.columnPurch_amount = new System.Data.DataColumn("Purch_amount", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPurch_amount);
                this.columnidx = new System.Data.DataColumn("idx", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnidx);
                this.columnSale_Qty = new System.Data.DataColumn("Sale_Qty", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSale_Qty);
                this.columnPurch_Qty = new System.Data.DataColumn("Purch_Qty", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPurch_Qty);
                this.columnProd_Code = new System.Data.DataColumn("Prod_Code", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Code);
                this.columnProd_Name = new System.Data.DataColumn("Prod_Name", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Name);
                this.columnDateFrom = new System.Data.DataColumn("DateFrom", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateFrom);
                this.columnDateTo = new System.Data.DataColumn("DateTo", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateTo);
                this.columnProfit_Amount = new System.Data.DataColumn("Profit_Amount", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnProfit_Amount);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tbReportMonthlyAnalyseRow NewtbReportMonthlyAnalyseRow() {
                return ((tbReportMonthlyAnalyseRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new tbReportMonthlyAnalyseRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(tbReportMonthlyAnalyseRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tbReportMonthlyAnalyseRowChanged != null)) {
                    this.tbReportMonthlyAnalyseRowChanged(this, new tbReportMonthlyAnalyseRowChangeEvent(((tbReportMonthlyAnalyseRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tbReportMonthlyAnalyseRowChanging != null)) {
                    this.tbReportMonthlyAnalyseRowChanging(this, new tbReportMonthlyAnalyseRowChangeEvent(((tbReportMonthlyAnalyseRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tbReportMonthlyAnalyseRowDeleted != null)) {
                    this.tbReportMonthlyAnalyseRowDeleted(this, new tbReportMonthlyAnalyseRowChangeEvent(((tbReportMonthlyAnalyseRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tbReportMonthlyAnalyseRowDeleting != null)) {
                    this.tbReportMonthlyAnalyseRowDeleting(this, new tbReportMonthlyAnalyseRowChangeEvent(((tbReportMonthlyAnalyseRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetbReportMonthlyAnalyseRow(tbReportMonthlyAnalyseRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tbReportMonthlyAnalyseDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CollectionDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnCode;
            
            private System.Data.DataColumn columnName;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CollectionDataTable() {
                this.TableName = "Collection";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CollectionDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CollectionDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CodeColumn {
                get {
                    return this.columnCode;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CollectionRow this[int index] {
                get {
                    return ((CollectionRow)(this.Rows[index]));
                }
            }
            
            public event CollectionRowChangeEventHandler CollectionRowChanging;
            
            public event CollectionRowChangeEventHandler CollectionRowChanged;
            
            public event CollectionRowChangeEventHandler CollectionRowDeleting;
            
            public event CollectionRowChangeEventHandler CollectionRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCollectionRow(CollectionRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CollectionRow AddCollectionRow(string Code, string Name) {
                CollectionRow rowCollectionRow = ((CollectionRow)(this.NewRow()));
                rowCollectionRow.ItemArray = new object[] {
                        Code,
                        Name};
                this.Rows.Add(rowCollectionRow);
                return rowCollectionRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                CollectionDataTable cln = ((CollectionDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new CollectionDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCode = base.Columns["Code"];
                this.columnName = base.Columns["Name"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCode = new System.Data.DataColumn("Code", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCode);
                this.columnName = new System.Data.DataColumn("Name", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CollectionRow NewCollectionRow() {
                return ((CollectionRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new CollectionRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(CollectionRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CollectionRowChanged != null)) {
                    this.CollectionRowChanged(this, new CollectionRowChangeEvent(((CollectionRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CollectionRowChanging != null)) {
                    this.CollectionRowChanging(this, new CollectionRowChangeEvent(((CollectionRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CollectionRowDeleted != null)) {
                    this.CollectionRowDeleted(this, new CollectionRowChangeEvent(((CollectionRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CollectionRowDeleting != null)) {
                    this.CollectionRowDeleting(this, new CollectionRowChangeEvent(((CollectionRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCollectionRow(CollectionRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CollectionDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SelectedDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnCode;
            
            private System.Data.DataColumn columnName;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SelectedDataTable() {
                this.TableName = "Selected";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SelectedDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected SelectedDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CodeColumn {
                get {
                    return this.columnCode;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SelectedRow this[int index] {
                get {
                    return ((SelectedRow)(this.Rows[index]));
                }
            }
            
            public event SelectedRowChangeEventHandler SelectedRowChanging;
            
            public event SelectedRowChangeEventHandler SelectedRowChanged;
            
            public event SelectedRowChangeEventHandler SelectedRowDeleting;
            
            public event SelectedRowChangeEventHandler SelectedRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSelectedRow(SelectedRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SelectedRow AddSelectedRow(string Code, string Name) {
                SelectedRow rowSelectedRow = ((SelectedRow)(this.NewRow()));
                rowSelectedRow.ItemArray = new object[] {
                        Code,
                        Name};
                this.Rows.Add(rowSelectedRow);
                return rowSelectedRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                SelectedDataTable cln = ((SelectedDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new SelectedDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCode = base.Columns["Code"];
                this.columnName = base.Columns["Name"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCode = new System.Data.DataColumn("Code", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCode);
                this.columnName = new System.Data.DataColumn("Name", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SelectedRow NewSelectedRow() {
                return ((SelectedRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new SelectedRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(SelectedRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SelectedRowChanged != null)) {
                    this.SelectedRowChanged(this, new SelectedRowChangeEvent(((SelectedRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SelectedRowChanging != null)) {
                    this.SelectedRowChanging(this, new SelectedRowChangeEvent(((SelectedRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SelectedRowDeleted != null)) {
                    this.SelectedRowDeleted(this, new SelectedRowChangeEvent(((SelectedRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SelectedRowDeleting != null)) {
                    this.SelectedRowDeleting(this, new SelectedRowChangeEvent(((SelectedRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSelectedRow(SelectedRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SelectedDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dsPurchasingDetailsDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnProd_Code;
            
            private System.Data.DataColumn columnProd_Name;
            
            private System.Data.DataColumn columnPurchase_Price;
            
            private System.Data.DataColumn columnSelling_Price;
            
            private System.Data.DataColumn columnQty;
            
            private System.Data.DataColumn columnLoca;
            
            private System.Data.DataColumn columnLoca_Descrip;
            
            private System.Data.DataColumn columnCodeFrom;
            
            private System.Data.DataColumn columnCodeTo;
            
            private System.Data.DataColumn columnDepartment_Id;
            
            private System.Data.DataColumn columnDept_Name;
            
            private System.Data.DataColumn columnCategory_Id;
            
            private System.Data.DataColumn columnCat_Name;
            
            private System.Data.DataColumn columnSupplier_Id;
            
            private System.Data.DataColumn columnSupp_Name;
            
            private System.Data.DataColumn columnManufacturer_Id;
            
            private System.Data.DataColumn columnManf_Name;
            
            private System.Data.DataColumn columnAmount;
            
            private System.Data.DataColumn columnDateFrom;
            
            private System.Data.DataColumn columnDateTo;
            
            private System.Data.DataColumn columnPurch_Date;
            
            private System.Data.DataColumn columnDoc_No;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsPurchasingDetailsDataTable() {
                this.TableName = "dsPurchasingDetails";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsPurchasingDetailsDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dsPurchasingDetailsDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Prod_CodeColumn {
                get {
                    return this.columnProd_Code;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Prod_NameColumn {
                get {
                    return this.columnProd_Name;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Purchase_PriceColumn {
                get {
                    return this.columnPurchase_Price;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Selling_PriceColumn {
                get {
                    return this.columnSelling_Price;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn QtyColumn {
                get {
                    return this.columnQty;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn LocaColumn {
                get {
                    return this.columnLoca;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Loca_DescripColumn {
                get {
                    return this.columnLoca_Descrip;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CodeFromColumn {
                get {
                    return this.columnCodeFrom;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CodeToColumn {
                get {
                    return this.columnCodeTo;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Department_IdColumn {
                get {
                    return this.columnDepartment_Id;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Dept_NameColumn {
                get {
                    return this.columnDept_Name;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Category_IdColumn {
                get {
                    return this.columnCategory_Id;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Cat_NameColumn {
                get {
                    return this.columnCat_Name;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Supplier_IdColumn {
                get {
                    return this.columnSupplier_Id;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Supp_NameColumn {
                get {
                    return this.columnSupp_Name;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Manufacturer_IdColumn {
                get {
                    return this.columnManufacturer_Id;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Manf_NameColumn {
                get {
                    return this.columnManf_Name;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DateFromColumn {
                get {
                    return this.columnDateFrom;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DateToColumn {
                get {
                    return this.columnDateTo;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Purch_DateColumn {
                get {
                    return this.columnPurch_Date;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Doc_NoColumn {
                get {
                    return this.columnDoc_No;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsPurchasingDetailsRow this[int index] {
                get {
                    return ((dsPurchasingDetailsRow)(this.Rows[index]));
                }
            }
            
            public event dsPurchasingDetailsRowChangeEventHandler dsPurchasingDetailsRowChanging;
            
            public event dsPurchasingDetailsRowChangeEventHandler dsPurchasingDetailsRowChanged;
            
            public event dsPurchasingDetailsRowChangeEventHandler dsPurchasingDetailsRowDeleting;
            
            public event dsPurchasingDetailsRowChangeEventHandler dsPurchasingDetailsRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddsPurchasingDetailsRow(dsPurchasingDetailsRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsPurchasingDetailsRow AdddsPurchasingDetailsRow(
                        string Prod_Code, 
                        string Prod_Name, 
                        decimal Purchase_Price, 
                        decimal Selling_Price, 
                        double Qty, 
                        string Loca, 
                        string Loca_Descrip, 
                        string CodeFrom, 
                        string CodeTo, 
                        string Department_Id, 
                        string Dept_Name, 
                        string Category_Id, 
                        string Cat_Name, 
                        string Supplier_Id, 
                        string Supp_Name, 
                        string Manufacturer_Id, 
                        string Manf_Name, 
                        decimal Amount, 
                        string DateFrom, 
                        string DateTo, 
                        string Purch_Date, 
                        string Doc_No) {
                dsPurchasingDetailsRow rowdsPurchasingDetailsRow = ((dsPurchasingDetailsRow)(this.NewRow()));
                rowdsPurchasingDetailsRow.ItemArray = new object[] {
                        Prod_Code,
                        Prod_Name,
                        Purchase_Price,
                        Selling_Price,
                        Qty,
                        Loca,
                        Loca_Descrip,
                        CodeFrom,
                        CodeTo,
                        Department_Id,
                        Dept_Name,
                        Category_Id,
                        Cat_Name,
                        Supplier_Id,
                        Supp_Name,
                        Manufacturer_Id,
                        Manf_Name,
                        Amount,
                        DateFrom,
                        DateTo,
                        Purch_Date,
                        Doc_No};
                this.Rows.Add(rowdsPurchasingDetailsRow);
                return rowdsPurchasingDetailsRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                dsPurchasingDetailsDataTable cln = ((dsPurchasingDetailsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new dsPurchasingDetailsDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnProd_Code = base.Columns["Prod_Code"];
                this.columnProd_Name = base.Columns["Prod_Name"];
                this.columnPurchase_Price = base.Columns["Purchase_Price"];
                this.columnSelling_Price = base.Columns["Selling_Price"];
                this.columnQty = base.Columns["Qty"];
                this.columnLoca = base.Columns["Loca"];
                this.columnLoca_Descrip = base.Columns["Loca_Descrip"];
                this.columnCodeFrom = base.Columns["CodeFrom"];
                this.columnCodeTo = base.Columns["CodeTo"];
                this.columnDepartment_Id = base.Columns["Department_Id"];
                this.columnDept_Name = base.Columns["Dept_Name"];
                this.columnCategory_Id = base.Columns["Category_Id"];
                this.columnCat_Name = base.Columns["Cat_Name"];
                this.columnSupplier_Id = base.Columns["Supplier_Id"];
                this.columnSupp_Name = base.Columns["Supp_Name"];
                this.columnManufacturer_Id = base.Columns["Manufacturer_Id"];
                this.columnManf_Name = base.Columns["Manf_Name"];
                this.columnAmount = base.Columns["Amount"];
                this.columnDateFrom = base.Columns["DateFrom"];
                this.columnDateTo = base.Columns["DateTo"];
                this.columnPurch_Date = base.Columns["Purch_Date"];
                this.columnDoc_No = base.Columns["Doc_No"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnProd_Code = new System.Data.DataColumn("Prod_Code", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Code);
                this.columnProd_Name = new System.Data.DataColumn("Prod_Name", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Name);
                this.columnPurchase_Price = new System.Data.DataColumn("Purchase_Price", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPurchase_Price);
                this.columnSelling_Price = new System.Data.DataColumn("Selling_Price", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelling_Price);
                this.columnQty = new System.Data.DataColumn("Qty", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnQty);
                this.columnLoca = new System.Data.DataColumn("Loca", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoca);
                this.columnLoca_Descrip = new System.Data.DataColumn("Loca_Descrip", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoca_Descrip);
                this.columnCodeFrom = new System.Data.DataColumn("CodeFrom", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodeFrom);
                this.columnCodeTo = new System.Data.DataColumn("CodeTo", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodeTo);
                this.columnDepartment_Id = new System.Data.DataColumn("Department_Id", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDepartment_Id);
                this.columnDept_Name = new System.Data.DataColumn("Dept_Name", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDept_Name);
                this.columnCategory_Id = new System.Data.DataColumn("Category_Id", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCategory_Id);
                this.columnCat_Name = new System.Data.DataColumn("Cat_Name", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCat_Name);
                this.columnSupplier_Id = new System.Data.DataColumn("Supplier_Id", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplier_Id);
                this.columnSupp_Name = new System.Data.DataColumn("Supp_Name", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupp_Name);
                this.columnManufacturer_Id = new System.Data.DataColumn("Manufacturer_Id", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnManufacturer_Id);
                this.columnManf_Name = new System.Data.DataColumn("Manf_Name", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnManf_Name);
                this.columnAmount = new System.Data.DataColumn("Amount", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
                this.columnDateFrom = new System.Data.DataColumn("DateFrom", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateFrom);
                this.columnDateTo = new System.Data.DataColumn("DateTo", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateTo);
                this.columnPurch_Date = new System.Data.DataColumn("Purch_Date", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPurch_Date);
                this.columnDoc_No = new System.Data.DataColumn("Doc_No", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDoc_No);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsPurchasingDetailsRow NewdsPurchasingDetailsRow() {
                return ((dsPurchasingDetailsRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new dsPurchasingDetailsRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(dsPurchasingDetailsRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dsPurchasingDetailsRowChanged != null)) {
                    this.dsPurchasingDetailsRowChanged(this, new dsPurchasingDetailsRowChangeEvent(((dsPurchasingDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dsPurchasingDetailsRowChanging != null)) {
                    this.dsPurchasingDetailsRowChanging(this, new dsPurchasingDetailsRowChangeEvent(((dsPurchasingDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dsPurchasingDetailsRowDeleted != null)) {
                    this.dsPurchasingDetailsRowDeleted(this, new dsPurchasingDetailsRowChangeEvent(((dsPurchasingDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dsPurchasingDetailsRowDeleting != null)) {
                    this.dsPurchasingDetailsRowDeleting(this, new dsPurchasingDetailsRowChangeEvent(((dsPurchasingDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedsPurchasingDetailsRow(dsPurchasingDetailsRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dsPurchasingDetailsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dsAnalyseDataDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnProd_Code;
            
            private System.Data.DataColumn columnProd_Name;
            
            private System.Data.DataColumn columnPurchase_price;
            
            private System.Data.DataColumn columnSelling_Price;
            
            private System.Data.DataColumn columnPurch_Amount;
            
            private System.Data.DataColumn columnSel_Amount;
            
            private System.Data.DataColumn columnPro_Amount;
            
            private System.Data.DataColumn columnTr_Date;
            
            private System.Data.DataColumn columnSel_Qty;
            
            private System.Data.DataColumn columnDateFrom;
            
            private System.Data.DataColumn columnDateTo;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsAnalyseDataDataTable() {
                this.TableName = "dsAnalyseData";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsAnalyseDataDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dsAnalyseDataDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Prod_CodeColumn {
                get {
                    return this.columnProd_Code;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Prod_NameColumn {
                get {
                    return this.columnProd_Name;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Purchase_priceColumn {
                get {
                    return this.columnPurchase_price;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Selling_PriceColumn {
                get {
                    return this.columnSelling_Price;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Purch_AmountColumn {
                get {
                    return this.columnPurch_Amount;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Sel_AmountColumn {
                get {
                    return this.columnSel_Amount;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Pro_AmountColumn {
                get {
                    return this.columnPro_Amount;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Tr_DateColumn {
                get {
                    return this.columnTr_Date;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Sel_QtyColumn {
                get {
                    return this.columnSel_Qty;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DateFromColumn {
                get {
                    return this.columnDateFrom;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DateToColumn {
                get {
                    return this.columnDateTo;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsAnalyseDataRow this[int index] {
                get {
                    return ((dsAnalyseDataRow)(this.Rows[index]));
                }
            }
            
            public event dsAnalyseDataRowChangeEventHandler dsAnalyseDataRowChanging;
            
            public event dsAnalyseDataRowChangeEventHandler dsAnalyseDataRowChanged;
            
            public event dsAnalyseDataRowChangeEventHandler dsAnalyseDataRowDeleting;
            
            public event dsAnalyseDataRowChangeEventHandler dsAnalyseDataRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddsAnalyseDataRow(dsAnalyseDataRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsAnalyseDataRow AdddsAnalyseDataRow(string Prod_Code, string Prod_Name, decimal Purchase_price, decimal Selling_Price, decimal Purch_Amount, decimal Sel_Amount, decimal Pro_Amount, string Tr_Date, double Sel_Qty, string DateFrom, string DateTo) {
                dsAnalyseDataRow rowdsAnalyseDataRow = ((dsAnalyseDataRow)(this.NewRow()));
                rowdsAnalyseDataRow.ItemArray = new object[] {
                        Prod_Code,
                        Prod_Name,
                        Purchase_price,
                        Selling_Price,
                        Purch_Amount,
                        Sel_Amount,
                        Pro_Amount,
                        Tr_Date,
                        Sel_Qty,
                        DateFrom,
                        DateTo};
                this.Rows.Add(rowdsAnalyseDataRow);
                return rowdsAnalyseDataRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                dsAnalyseDataDataTable cln = ((dsAnalyseDataDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new dsAnalyseDataDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnProd_Code = base.Columns["Prod_Code"];
                this.columnProd_Name = base.Columns["Prod_Name"];
                this.columnPurchase_price = base.Columns["Purchase_price"];
                this.columnSelling_Price = base.Columns["Selling_Price"];
                this.columnPurch_Amount = base.Columns["Purch_Amount"];
                this.columnSel_Amount = base.Columns["Sel_Amount"];
                this.columnPro_Amount = base.Columns["Pro_Amount"];
                this.columnTr_Date = base.Columns["Tr_Date"];
                this.columnSel_Qty = base.Columns["Sel_Qty"];
                this.columnDateFrom = base.Columns["DateFrom"];
                this.columnDateTo = base.Columns["DateTo"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnProd_Code = new System.Data.DataColumn("Prod_Code", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Code);
                this.columnProd_Name = new System.Data.DataColumn("Prod_Name", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Name);
                this.columnPurchase_price = new System.Data.DataColumn("Purchase_price", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPurchase_price);
                this.columnSelling_Price = new System.Data.DataColumn("Selling_Price", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelling_Price);
                this.columnPurch_Amount = new System.Data.DataColumn("Purch_Amount", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPurch_Amount);
                this.columnSel_Amount = new System.Data.DataColumn("Sel_Amount", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSel_Amount);
                this.columnPro_Amount = new System.Data.DataColumn("Pro_Amount", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPro_Amount);
                this.columnTr_Date = new System.Data.DataColumn("Tr_Date", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTr_Date);
                this.columnSel_Qty = new System.Data.DataColumn("Sel_Qty", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSel_Qty);
                this.columnDateFrom = new System.Data.DataColumn("DateFrom", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateFrom);
                this.columnDateTo = new System.Data.DataColumn("DateTo", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateTo);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsAnalyseDataRow NewdsAnalyseDataRow() {
                return ((dsAnalyseDataRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new dsAnalyseDataRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(dsAnalyseDataRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dsAnalyseDataRowChanged != null)) {
                    this.dsAnalyseDataRowChanged(this, new dsAnalyseDataRowChangeEvent(((dsAnalyseDataRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dsAnalyseDataRowChanging != null)) {
                    this.dsAnalyseDataRowChanging(this, new dsAnalyseDataRowChangeEvent(((dsAnalyseDataRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dsAnalyseDataRowDeleted != null)) {
                    this.dsAnalyseDataRowDeleted(this, new dsAnalyseDataRowChangeEvent(((dsAnalyseDataRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dsAnalyseDataRowDeleting != null)) {
                    this.dsAnalyseDataRowDeleting(this, new dsAnalyseDataRowChangeEvent(((dsAnalyseDataRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedsAnalyseDataRow(dsAnalyseDataRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dsAnalyseDataDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DepartmentRow : System.Data.DataRow {
            
            private DepartmentDataTable tableDepartment;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DepartmentRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDepartment = ((DepartmentDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Dept_Code {
                get {
                    try {
                        return ((string)(this[this.tableDepartment.Dept_CodeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Dept_Code\' in table \'Department\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDepartment.Dept_CodeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Dept_Name {
                get {
                    try {
                        return ((string)(this[this.tableDepartment.Dept_NameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Dept_Name\' in table \'Department\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDepartment.Dept_NameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDept_CodeNull() {
                return this.IsNull(this.tableDepartment.Dept_CodeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDept_CodeNull() {
                this[this.tableDepartment.Dept_CodeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDept_NameNull() {
                return this.IsNull(this.tableDepartment.Dept_NameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDept_NameNull() {
                this[this.tableDepartment.Dept_NameColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CategoryRow : System.Data.DataRow {
            
            private CategoryDataTable tableCategory;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CategoryRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCategory = ((CategoryDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Dept_Code {
                get {
                    try {
                        return ((string)(this[this.tableCategory.Dept_CodeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Dept_Code\' in table \'Category\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCategory.Dept_CodeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Dept_Name {
                get {
                    try {
                        return ((string)(this[this.tableCategory.Dept_NameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Dept_Name\' in table \'Category\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCategory.Dept_NameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Cat_Code {
                get {
                    try {
                        return ((string)(this[this.tableCategory.Cat_CodeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Cat_Code\' in table \'Category\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCategory.Cat_CodeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Cat_Name {
                get {
                    try {
                        return ((string)(this[this.tableCategory.Cat_NameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Cat_Name\' in table \'Category\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCategory.Cat_NameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDept_CodeNull() {
                return this.IsNull(this.tableCategory.Dept_CodeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDept_CodeNull() {
                this[this.tableCategory.Dept_CodeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDept_NameNull() {
                return this.IsNull(this.tableCategory.Dept_NameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDept_NameNull() {
                this[this.tableCategory.Dept_NameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCat_CodeNull() {
                return this.IsNull(this.tableCategory.Cat_CodeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCat_CodeNull() {
                this[this.tableCategory.Cat_CodeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCat_NameNull() {
                return this.IsNull(this.tableCategory.Cat_NameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCat_NameNull() {
                this[this.tableCategory.Cat_NameColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class StockAdjustRow : System.Data.DataRow {
            
            private StockAdjustDataTable tableStockAdjust;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal StockAdjustRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableStockAdjust = ((StockAdjustDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prod_Code {
                get {
                    try {
                        return ((string)(this[this.tableStockAdjust.Prod_CodeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Prod_Code\' in table \'StockAdjust\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockAdjust.Prod_CodeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prod_Name {
                get {
                    try {
                        return ((string)(this[this.tableStockAdjust.Prod_NameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Prod_Name\' in table \'StockAdjust\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockAdjust.Prod_NameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Selling_Price {
                get {
                    try {
                        return ((string)(this[this.tableStockAdjust.Selling_PriceColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Selling_Price\' in table \'StockAdjust\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockAdjust.Selling_PriceColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Purchase_price {
                get {
                    try {
                        return ((string)(this[this.tableStockAdjust.Purchase_priceColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Purchase_price\' in table \'StockAdjust\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockAdjust.Purchase_priceColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Curr_Qty {
                get {
                    try {
                        return ((string)(this[this.tableStockAdjust.Curr_QtyColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Curr_Qty\' in table \'StockAdjust\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockAdjust.Curr_QtyColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Phy_Qty {
                get {
                    try {
                        return ((string)(this[this.tableStockAdjust.Phy_QtyColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Phy_Qty\' in table \'StockAdjust\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockAdjust.Phy_QtyColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Var_Qty {
                get {
                    try {
                        return ((string)(this[this.tableStockAdjust.Var_QtyColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Var_Qty\' in table \'StockAdjust\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockAdjust.Var_QtyColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Doc_No {
                get {
                    try {
                        return ((string)(this[this.tableStockAdjust.Doc_NoColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Doc_No\' in table \'StockAdjust\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockAdjust.Doc_NoColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Loca {
                get {
                    try {
                        return ((string)(this[this.tableStockAdjust.LocaColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Loca\' in table \'StockAdjust\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockAdjust.LocaColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Pack_Size {
                get {
                    try {
                        return ((string)(this[this.tableStockAdjust.Pack_SizeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Pack_Size\' in table \'StockAdjust\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockAdjust.Pack_SizeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_CodeNull() {
                return this.IsNull(this.tableStockAdjust.Prod_CodeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_CodeNull() {
                this[this.tableStockAdjust.Prod_CodeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_NameNull() {
                return this.IsNull(this.tableStockAdjust.Prod_NameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_NameNull() {
                this[this.tableStockAdjust.Prod_NameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelling_PriceNull() {
                return this.IsNull(this.tableStockAdjust.Selling_PriceColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelling_PriceNull() {
                this[this.tableStockAdjust.Selling_PriceColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPurchase_priceNull() {
                return this.IsNull(this.tableStockAdjust.Purchase_priceColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPurchase_priceNull() {
                this[this.tableStockAdjust.Purchase_priceColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCurr_QtyNull() {
                return this.IsNull(this.tableStockAdjust.Curr_QtyColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCurr_QtyNull() {
                this[this.tableStockAdjust.Curr_QtyColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPhy_QtyNull() {
                return this.IsNull(this.tableStockAdjust.Phy_QtyColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPhy_QtyNull() {
                this[this.tableStockAdjust.Phy_QtyColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVar_QtyNull() {
                return this.IsNull(this.tableStockAdjust.Var_QtyColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVar_QtyNull() {
                this[this.tableStockAdjust.Var_QtyColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDoc_NoNull() {
                return this.IsNull(this.tableStockAdjust.Doc_NoColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDoc_NoNull() {
                this[this.tableStockAdjust.Doc_NoColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocaNull() {
                return this.IsNull(this.tableStockAdjust.LocaColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocaNull() {
                this[this.tableStockAdjust.LocaColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPack_SizeNull() {
                return this.IsNull(this.tableStockAdjust.Pack_SizeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPack_SizeNull() {
                this[this.tableStockAdjust.Pack_SizeColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class TransferNoteRow : System.Data.DataRow {
            
            private TransferNoteDataTable tableTransferNote;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TransferNoteRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTransferNote = ((TransferNoteDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prod_Code {
                get {
                    try {
                        return ((string)(this[this.tableTransferNote.Prod_CodeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Prod_Code\' in table \'TransferNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTransferNote.Prod_CodeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prod_Name {
                get {
                    try {
                        return ((string)(this[this.tableTransferNote.Prod_NameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Prod_Name\' in table \'TransferNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTransferNote.Prod_NameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Selling_Price {
                get {
                    try {
                        return ((string)(this[this.tableTransferNote.Selling_PriceColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Selling_Price\' in table \'TransferNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTransferNote.Selling_PriceColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Purchase_price {
                get {
                    try {
                        return ((string)(this[this.tableTransferNote.Purchase_priceColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Purchase_price\' in table \'TransferNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTransferNote.Purchase_priceColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Pack_Size {
                get {
                    try {
                        return ((string)(this[this.tableTransferNote.Pack_SizeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Pack_Size\' in table \'TransferNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTransferNote.Pack_SizeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Qty {
                get {
                    try {
                        return ((string)(this[this.tableTransferNote.QtyColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Qty\' in table \'TransferNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTransferNote.QtyColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Amount {
                get {
                    try {
                        return ((string)(this[this.tableTransferNote.AmountColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Amount\' in table \'TransferNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTransferNote.AmountColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_CodeNull() {
                return this.IsNull(this.tableTransferNote.Prod_CodeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_CodeNull() {
                this[this.tableTransferNote.Prod_CodeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_NameNull() {
                return this.IsNull(this.tableTransferNote.Prod_NameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_NameNull() {
                this[this.tableTransferNote.Prod_NameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelling_PriceNull() {
                return this.IsNull(this.tableTransferNote.Selling_PriceColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelling_PriceNull() {
                this[this.tableTransferNote.Selling_PriceColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPurchase_priceNull() {
                return this.IsNull(this.tableTransferNote.Purchase_priceColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPurchase_priceNull() {
                this[this.tableTransferNote.Purchase_priceColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPack_SizeNull() {
                return this.IsNull(this.tableTransferNote.Pack_SizeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPack_SizeNull() {
                this[this.tableTransferNote.Pack_SizeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQtyNull() {
                return this.IsNull(this.tableTransferNote.QtyColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQtyNull() {
                this[this.tableTransferNote.QtyColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountNull() {
                return this.IsNull(this.tableTransferNote.AmountColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountNull() {
                this[this.tableTransferNote.AmountColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dsTogDetailsRow : System.Data.DataRow {
            
            private dsTogDetailsDataTable tabledsTogDetails;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsTogDetailsRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledsTogDetails = ((dsTogDetailsDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Doc_No {
                get {
                    try {
                        return ((string)(this[this.tabledsTogDetails.Doc_NoColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Doc_No\' in table \'dsTogDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsTogDetails.Doc_NoColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Loca {
                get {
                    try {
                        return ((string)(this[this.tabledsTogDetails.LocaColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Loca\' in table \'dsTogDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsTogDetails.LocaColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LocaDesc {
                get {
                    try {
                        return ((string)(this[this.tabledsTogDetails.LocaDescColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'LocaDesc\' in table \'dsTogDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsTogDetails.LocaDescColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string To_Loca {
                get {
                    try {
                        return ((string)(this[this.tabledsTogDetails.To_LocaColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'To_Loca\' in table \'dsTogDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsTogDetails.To_LocaColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string To_LocaDesc {
                get {
                    try {
                        return ((string)(this[this.tabledsTogDetails.To_LocaDescColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'To_LocaDesc\' in table \'dsTogDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsTogDetails.To_LocaDescColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Post_Date {
                get {
                    try {
                        return ((string)(this[this.tabledsTogDetails.Post_DateColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Post_Date\' in table \'dsTogDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsTogDetails.Post_DateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Amount {
                get {
                    try {
                        return ((string)(this[this.tabledsTogDetails.AmountColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Amount\' in table \'dsTogDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsTogDetails.AmountColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Remarks {
                get {
                    try {
                        return ((string)(this[this.tabledsTogDetails.RemarksColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Remarks\' in table \'dsTogDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsTogDetails.RemarksColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prod_Code {
                get {
                    try {
                        return ((string)(this[this.tabledsTogDetails.Prod_CodeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Prod_Code\' in table \'dsTogDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsTogDetails.Prod_CodeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prod_Name {
                get {
                    try {
                        return ((string)(this[this.tabledsTogDetails.Prod_NameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Prod_Name\' in table \'dsTogDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsTogDetails.Prod_NameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Qty {
                get {
                    try {
                        return ((string)(this[this.tabledsTogDetails.QtyColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Qty\' in table \'dsTogDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsTogDetails.QtyColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Purchase_Price {
                get {
                    try {
                        return ((string)(this[this.tabledsTogDetails.Purchase_PriceColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Purchase_Price\' in table \'dsTogDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsTogDetails.Purchase_PriceColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Selling_Price {
                get {
                    try {
                        return ((string)(this[this.tabledsTogDetails.Selling_PriceColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Selling_Price\' in table \'dsTogDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsTogDetails.Selling_PriceColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Pack_Size {
                get {
                    try {
                        return ((string)(this[this.tabledsTogDetails.Pack_SizeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Pack_Size\' in table \'dsTogDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsTogDetails.Pack_SizeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Status {
                get {
                    try {
                        return ((string)(this[this.tabledsTogDetails.StatusColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Status\' in table \'dsTogDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsTogDetails.StatusColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDoc_NoNull() {
                return this.IsNull(this.tabledsTogDetails.Doc_NoColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDoc_NoNull() {
                this[this.tabledsTogDetails.Doc_NoColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocaNull() {
                return this.IsNull(this.tabledsTogDetails.LocaColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocaNull() {
                this[this.tabledsTogDetails.LocaColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocaDescNull() {
                return this.IsNull(this.tabledsTogDetails.LocaDescColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocaDescNull() {
                this[this.tabledsTogDetails.LocaDescColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTo_LocaNull() {
                return this.IsNull(this.tabledsTogDetails.To_LocaColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTo_LocaNull() {
                this[this.tabledsTogDetails.To_LocaColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTo_LocaDescNull() {
                return this.IsNull(this.tabledsTogDetails.To_LocaDescColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTo_LocaDescNull() {
                this[this.tabledsTogDetails.To_LocaDescColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPost_DateNull() {
                return this.IsNull(this.tabledsTogDetails.Post_DateColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPost_DateNull() {
                this[this.tabledsTogDetails.Post_DateColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountNull() {
                return this.IsNull(this.tabledsTogDetails.AmountColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountNull() {
                this[this.tabledsTogDetails.AmountColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRemarksNull() {
                return this.IsNull(this.tabledsTogDetails.RemarksColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRemarksNull() {
                this[this.tabledsTogDetails.RemarksColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_CodeNull() {
                return this.IsNull(this.tabledsTogDetails.Prod_CodeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_CodeNull() {
                this[this.tabledsTogDetails.Prod_CodeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_NameNull() {
                return this.IsNull(this.tabledsTogDetails.Prod_NameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_NameNull() {
                this[this.tabledsTogDetails.Prod_NameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQtyNull() {
                return this.IsNull(this.tabledsTogDetails.QtyColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQtyNull() {
                this[this.tabledsTogDetails.QtyColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPurchase_PriceNull() {
                return this.IsNull(this.tabledsTogDetails.Purchase_PriceColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPurchase_PriceNull() {
                this[this.tabledsTogDetails.Purchase_PriceColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelling_PriceNull() {
                return this.IsNull(this.tabledsTogDetails.Selling_PriceColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelling_PriceNull() {
                this[this.tabledsTogDetails.Selling_PriceColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPack_SizeNull() {
                return this.IsNull(this.tabledsTogDetails.Pack_SizeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPack_SizeNull() {
                this[this.tabledsTogDetails.Pack_SizeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStatusNull() {
                return this.IsNull(this.tabledsTogDetails.StatusColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStatusNull() {
                this[this.tabledsTogDetails.StatusColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dsStockAdjustDetailsRow : System.Data.DataRow {
            
            private dsStockAdjustDetailsDataTable tabledsStockAdjustDetails;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsStockAdjustDetailsRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledsStockAdjustDetails = ((dsStockAdjustDetailsDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Loca {
                get {
                    try {
                        return ((string)(this[this.tabledsStockAdjustDetails.LocaColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Loca\' in table \'dsStockAdjustDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsStockAdjustDetails.LocaColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Loca_Descrip {
                get {
                    try {
                        return ((string)(this[this.tabledsStockAdjustDetails.Loca_DescripColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Loca_Descrip\' in table \'dsStockAdjustDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsStockAdjustDetails.Loca_DescripColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Doc_No {
                get {
                    try {
                        return ((string)(this[this.tabledsStockAdjustDetails.Doc_NoColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Doc_No\' in table \'dsStockAdjustDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsStockAdjustDetails.Doc_NoColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Post_Date {
                get {
                    try {
                        return ((string)(this[this.tabledsStockAdjustDetails.Post_DateColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Post_Date\' in table \'dsStockAdjustDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsStockAdjustDetails.Post_DateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string User_Name {
                get {
                    try {
                        return ((string)(this[this.tabledsStockAdjustDetails.User_NameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'User_Name\' in table \'dsStockAdjustDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsStockAdjustDetails.User_NameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prod_Code {
                get {
                    try {
                        return ((string)(this[this.tabledsStockAdjustDetails.Prod_CodeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Prod_Code\' in table \'dsStockAdjustDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsStockAdjustDetails.Prod_CodeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prod_Name {
                get {
                    try {
                        return ((string)(this[this.tabledsStockAdjustDetails.Prod_NameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Prod_Name\' in table \'dsStockAdjustDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsStockAdjustDetails.Prod_NameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Qty {
                get {
                    try {
                        return ((string)(this[this.tabledsStockAdjustDetails.QtyColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Qty\' in table \'dsStockAdjustDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsStockAdjustDetails.QtyColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Phy_Qty {
                get {
                    try {
                        return ((string)(this[this.tabledsStockAdjustDetails.Phy_QtyColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Phy_Qty\' in table \'dsStockAdjustDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsStockAdjustDetails.Phy_QtyColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Purchase_Price {
                get {
                    try {
                        return ((string)(this[this.tabledsStockAdjustDetails.Purchase_PriceColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Purchase_Price\' in table \'dsStockAdjustDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsStockAdjustDetails.Purchase_PriceColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Selling_Price {
                get {
                    try {
                        return ((string)(this[this.tabledsStockAdjustDetails.Selling_PriceColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Selling_Price\' in table \'dsStockAdjustDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsStockAdjustDetails.Selling_PriceColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Pack_Size {
                get {
                    try {
                        return ((string)(this[this.tabledsStockAdjustDetails.Pack_SizeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Pack_Size\' in table \'dsStockAdjustDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsStockAdjustDetails.Pack_SizeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Ln {
                get {
                    try {
                        return ((string)(this[this.tabledsStockAdjustDetails.LnColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Ln\' in table \'dsStockAdjustDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsStockAdjustDetails.LnColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocaNull() {
                return this.IsNull(this.tabledsStockAdjustDetails.LocaColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocaNull() {
                this[this.tabledsStockAdjustDetails.LocaColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLoca_DescripNull() {
                return this.IsNull(this.tabledsStockAdjustDetails.Loca_DescripColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLoca_DescripNull() {
                this[this.tabledsStockAdjustDetails.Loca_DescripColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDoc_NoNull() {
                return this.IsNull(this.tabledsStockAdjustDetails.Doc_NoColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDoc_NoNull() {
                this[this.tabledsStockAdjustDetails.Doc_NoColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPost_DateNull() {
                return this.IsNull(this.tabledsStockAdjustDetails.Post_DateColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPost_DateNull() {
                this[this.tabledsStockAdjustDetails.Post_DateColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUser_NameNull() {
                return this.IsNull(this.tabledsStockAdjustDetails.User_NameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUser_NameNull() {
                this[this.tabledsStockAdjustDetails.User_NameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_CodeNull() {
                return this.IsNull(this.tabledsStockAdjustDetails.Prod_CodeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_CodeNull() {
                this[this.tabledsStockAdjustDetails.Prod_CodeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_NameNull() {
                return this.IsNull(this.tabledsStockAdjustDetails.Prod_NameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_NameNull() {
                this[this.tabledsStockAdjustDetails.Prod_NameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQtyNull() {
                return this.IsNull(this.tabledsStockAdjustDetails.QtyColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQtyNull() {
                this[this.tabledsStockAdjustDetails.QtyColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPhy_QtyNull() {
                return this.IsNull(this.tabledsStockAdjustDetails.Phy_QtyColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPhy_QtyNull() {
                this[this.tabledsStockAdjustDetails.Phy_QtyColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPurchase_PriceNull() {
                return this.IsNull(this.tabledsStockAdjustDetails.Purchase_PriceColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPurchase_PriceNull() {
                this[this.tabledsStockAdjustDetails.Purchase_PriceColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelling_PriceNull() {
                return this.IsNull(this.tabledsStockAdjustDetails.Selling_PriceColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelling_PriceNull() {
                this[this.tabledsStockAdjustDetails.Selling_PriceColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPack_SizeNull() {
                return this.IsNull(this.tabledsStockAdjustDetails.Pack_SizeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPack_SizeNull() {
                this[this.tabledsStockAdjustDetails.Pack_SizeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLnNull() {
                return this.IsNull(this.tabledsStockAdjustDetails.LnColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLnNull() {
                this[this.tabledsStockAdjustDetails.LnColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class GoodReceivedNoteRow : System.Data.DataRow {
            
            private GoodReceivedNoteDataTable tableGoodReceivedNote;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GoodReceivedNoteRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableGoodReceivedNote = ((GoodReceivedNoteDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prod_Code {
                get {
                    try {
                        return ((string)(this[this.tableGoodReceivedNote.Prod_CodeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Prod_Code\' in table \'GoodReceivedNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGoodReceivedNote.Prod_CodeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prod_Name {
                get {
                    try {
                        return ((string)(this[this.tableGoodReceivedNote.Prod_NameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Prod_Name\' in table \'GoodReceivedNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGoodReceivedNote.Prod_NameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Unit {
                get {
                    try {
                        return ((string)(this[this.tableGoodReceivedNote.UnitColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Unit\' in table \'GoodReceivedNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGoodReceivedNote.UnitColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Purchase_Price {
                get {
                    try {
                        return ((string)(this[this.tableGoodReceivedNote.Purchase_PriceColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Purchase_Price\' in table \'GoodReceivedNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGoodReceivedNote.Purchase_PriceColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Selling_Price {
                get {
                    try {
                        return ((string)(this[this.tableGoodReceivedNote.Selling_PriceColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Selling_Price\' in table \'GoodReceivedNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGoodReceivedNote.Selling_PriceColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Qty {
                get {
                    try {
                        return ((string)(this[this.tableGoodReceivedNote.QtyColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Qty\' in table \'GoodReceivedNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGoodReceivedNote.QtyColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FreeQty {
                get {
                    try {
                        return ((string)(this[this.tableGoodReceivedNote.FreeQtyColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'FreeQty\' in table \'GoodReceivedNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGoodReceivedNote.FreeQtyColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Discount {
                get {
                    try {
                        return ((string)(this[this.tableGoodReceivedNote.DiscountColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Discount\' in table \'GoodReceivedNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGoodReceivedNote.DiscountColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Amount {
                get {
                    try {
                        return ((string)(this[this.tableGoodReceivedNote.AmountColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Amount\' in table \'GoodReceivedNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGoodReceivedNote.AmountColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_CodeNull() {
                return this.IsNull(this.tableGoodReceivedNote.Prod_CodeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_CodeNull() {
                this[this.tableGoodReceivedNote.Prod_CodeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_NameNull() {
                return this.IsNull(this.tableGoodReceivedNote.Prod_NameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_NameNull() {
                this[this.tableGoodReceivedNote.Prod_NameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnitNull() {
                return this.IsNull(this.tableGoodReceivedNote.UnitColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnitNull() {
                this[this.tableGoodReceivedNote.UnitColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPurchase_PriceNull() {
                return this.IsNull(this.tableGoodReceivedNote.Purchase_PriceColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPurchase_PriceNull() {
                this[this.tableGoodReceivedNote.Purchase_PriceColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelling_PriceNull() {
                return this.IsNull(this.tableGoodReceivedNote.Selling_PriceColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelling_PriceNull() {
                this[this.tableGoodReceivedNote.Selling_PriceColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQtyNull() {
                return this.IsNull(this.tableGoodReceivedNote.QtyColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQtyNull() {
                this[this.tableGoodReceivedNote.QtyColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFreeQtyNull() {
                return this.IsNull(this.tableGoodReceivedNote.FreeQtyColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFreeQtyNull() {
                this[this.tableGoodReceivedNote.FreeQtyColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDiscountNull() {
                return this.IsNull(this.tableGoodReceivedNote.DiscountColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDiscountNull() {
                this[this.tableGoodReceivedNote.DiscountColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountNull() {
                return this.IsNull(this.tableGoodReceivedNote.AmountColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountNull() {
                this[this.tableGoodReceivedNote.AmountColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dsGRNDetailsForRepRow : System.Data.DataRow {
            
            private dsGRNDetailsForRepDataTable tabledsGRNDetailsForRep;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsGRNDetailsForRepRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledsGRNDetailsForRep = ((dsGRNDetailsForRepDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Doc_no {
                get {
                    try {
                        return ((string)(this[this.tabledsGRNDetailsForRep.Doc_noColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Doc_no\' in table \'dsGRNDetailsForRep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsGRNDetailsForRep.Doc_noColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Loca {
                get {
                    try {
                        return ((string)(this[this.tabledsGRNDetailsForRep.LocaColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Loca\' in table \'dsGRNDetailsForRep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsGRNDetailsForRep.LocaColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Loca_Descrip {
                get {
                    try {
                        return ((string)(this[this.tabledsGRNDetailsForRep.Loca_DescripColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Loca_Descrip\' in table \'dsGRNDetailsForRep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsGRNDetailsForRep.Loca_DescripColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Post_Date {
                get {
                    try {
                        return ((string)(this[this.tabledsGRNDetailsForRep.Post_DateColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Post_Date\' in table \'dsGRNDetailsForRep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsGRNDetailsForRep.Post_DateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string inv_no {
                get {
                    try {
                        return ((string)(this[this.tabledsGRNDetailsForRep.inv_noColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'inv_no\' in table \'dsGRNDetailsForRep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsGRNDetailsForRep.inv_noColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Inv_Amt {
                get {
                    try {
                        return ((string)(this[this.tabledsGRNDetailsForRep.Inv_AmtColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Inv_Amt\' in table \'dsGRNDetailsForRep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsGRNDetailsForRep.Inv_AmtColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Porder_no {
                get {
                    try {
                        return ((string)(this[this.tabledsGRNDetailsForRep.Porder_noColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Porder_no\' in table \'dsGRNDetailsForRep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsGRNDetailsForRep.Porder_noColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Net_Amount {
                get {
                    try {
                        return ((string)(this[this.tabledsGRNDetailsForRep.Net_AmountColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Net_Amount\' in table \'dsGRNDetailsForRep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsGRNDetailsForRep.Net_AmountColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Gross_Amount {
                get {
                    try {
                        return ((string)(this[this.tabledsGRNDetailsForRep.Gross_AmountColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Gross_Amount\' in table \'dsGRNDetailsForRep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsGRNDetailsForRep.Gross_AmountColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Sub_Discount {
                get {
                    try {
                        return ((string)(this[this.tabledsGRNDetailsForRep.Sub_DiscountColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Sub_Discount\' in table \'dsGRNDetailsForRep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsGRNDetailsForRep.Sub_DiscountColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Disc {
                get {
                    try {
                        return ((string)(this[this.tabledsGRNDetailsForRep.DiscColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Disc\' in table \'dsGRNDetailsForRep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsGRNDetailsForRep.DiscColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Remarks {
                get {
                    try {
                        return ((string)(this[this.tabledsGRNDetailsForRep.RemarksColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Remarks\' in table \'dsGRNDetailsForRep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsGRNDetailsForRep.RemarksColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Reference {
                get {
                    try {
                        return ((string)(this[this.tabledsGRNDetailsForRep.ReferenceColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Reference\' in table \'dsGRNDetailsForRep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsGRNDetailsForRep.ReferenceColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Pay_Type {
                get {
                    try {
                        return ((string)(this[this.tabledsGRNDetailsForRep.Pay_TypeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Pay_Type\' in table \'dsGRNDetailsForRep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsGRNDetailsForRep.Pay_TypeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Tax {
                get {
                    try {
                        return ((string)(this[this.tabledsGRNDetailsForRep.TaxColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Tax\' in table \'dsGRNDetailsForRep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsGRNDetailsForRep.TaxColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prod_code {
                get {
                    try {
                        return ((string)(this[this.tabledsGRNDetailsForRep.Prod_codeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Prod_code\' in table \'dsGRNDetailsForRep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsGRNDetailsForRep.Prod_codeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prod_Name {
                get {
                    try {
                        return ((string)(this[this.tabledsGRNDetailsForRep.Prod_NameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Prod_Name\' in table \'dsGRNDetailsForRep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsGRNDetailsForRep.Prod_NameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Qty {
                get {
                    try {
                        return ((string)(this[this.tabledsGRNDetailsForRep.QtyColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Qty\' in table \'dsGRNDetailsForRep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsGRNDetailsForRep.QtyColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FreeQty {
                get {
                    try {
                        return ((string)(this[this.tabledsGRNDetailsForRep.FreeQtyColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'FreeQty\' in table \'dsGRNDetailsForRep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsGRNDetailsForRep.FreeQtyColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Purchase_Price {
                get {
                    try {
                        return ((string)(this[this.tabledsGRNDetailsForRep.Purchase_PriceColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Purchase_Price\' in table \'dsGRNDetailsForRep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsGRNDetailsForRep.Purchase_PriceColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Selling_Price {
                get {
                    try {
                        return ((string)(this[this.tabledsGRNDetailsForRep.Selling_PriceColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Selling_Price\' in table \'dsGRNDetailsForRep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsGRNDetailsForRep.Selling_PriceColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Discount {
                get {
                    try {
                        return ((string)(this[this.tabledsGRNDetailsForRep.DiscountColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Discount\' in table \'dsGRNDetailsForRep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsGRNDetailsForRep.DiscountColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Amount {
                get {
                    try {
                        return ((string)(this[this.tabledsGRNDetailsForRep.AmountColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Amount\' in table \'dsGRNDetailsForRep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsGRNDetailsForRep.AmountColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Ln {
                get {
                    try {
                        return ((string)(this[this.tabledsGRNDetailsForRep.LnColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Ln\' in table \'dsGRNDetailsForRep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsGRNDetailsForRep.LnColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Status {
                get {
                    try {
                        return ((string)(this[this.tabledsGRNDetailsForRep.StatusColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Status\' in table \'dsGRNDetailsForRep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsGRNDetailsForRep.StatusColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Supp_Name {
                get {
                    try {
                        return ((string)(this[this.tabledsGRNDetailsForRep.Supp_NameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Supp_Name\' in table \'dsGRNDetailsForRep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsGRNDetailsForRep.Supp_NameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Supplier_Id {
                get {
                    try {
                        return ((string)(this[this.tabledsGRNDetailsForRep.Supplier_IdColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Supplier_Id\' in table \'dsGRNDetailsForRep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsGRNDetailsForRep.Supplier_IdColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDoc_noNull() {
                return this.IsNull(this.tabledsGRNDetailsForRep.Doc_noColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDoc_noNull() {
                this[this.tabledsGRNDetailsForRep.Doc_noColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocaNull() {
                return this.IsNull(this.tabledsGRNDetailsForRep.LocaColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocaNull() {
                this[this.tabledsGRNDetailsForRep.LocaColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLoca_DescripNull() {
                return this.IsNull(this.tabledsGRNDetailsForRep.Loca_DescripColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLoca_DescripNull() {
                this[this.tabledsGRNDetailsForRep.Loca_DescripColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPost_DateNull() {
                return this.IsNull(this.tabledsGRNDetailsForRep.Post_DateColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPost_DateNull() {
                this[this.tabledsGRNDetailsForRep.Post_DateColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isinv_noNull() {
                return this.IsNull(this.tabledsGRNDetailsForRep.inv_noColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setinv_noNull() {
                this[this.tabledsGRNDetailsForRep.inv_noColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInv_AmtNull() {
                return this.IsNull(this.tabledsGRNDetailsForRep.Inv_AmtColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInv_AmtNull() {
                this[this.tabledsGRNDetailsForRep.Inv_AmtColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPorder_noNull() {
                return this.IsNull(this.tabledsGRNDetailsForRep.Porder_noColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPorder_noNull() {
                this[this.tabledsGRNDetailsForRep.Porder_noColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNet_AmountNull() {
                return this.IsNull(this.tabledsGRNDetailsForRep.Net_AmountColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNet_AmountNull() {
                this[this.tabledsGRNDetailsForRep.Net_AmountColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGross_AmountNull() {
                return this.IsNull(this.tabledsGRNDetailsForRep.Gross_AmountColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGross_AmountNull() {
                this[this.tabledsGRNDetailsForRep.Gross_AmountColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSub_DiscountNull() {
                return this.IsNull(this.tabledsGRNDetailsForRep.Sub_DiscountColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSub_DiscountNull() {
                this[this.tabledsGRNDetailsForRep.Sub_DiscountColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDiscNull() {
                return this.IsNull(this.tabledsGRNDetailsForRep.DiscColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDiscNull() {
                this[this.tabledsGRNDetailsForRep.DiscColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRemarksNull() {
                return this.IsNull(this.tabledsGRNDetailsForRep.RemarksColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRemarksNull() {
                this[this.tabledsGRNDetailsForRep.RemarksColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReferenceNull() {
                return this.IsNull(this.tabledsGRNDetailsForRep.ReferenceColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReferenceNull() {
                this[this.tabledsGRNDetailsForRep.ReferenceColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPay_TypeNull() {
                return this.IsNull(this.tabledsGRNDetailsForRep.Pay_TypeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPay_TypeNull() {
                this[this.tabledsGRNDetailsForRep.Pay_TypeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTaxNull() {
                return this.IsNull(this.tabledsGRNDetailsForRep.TaxColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTaxNull() {
                this[this.tabledsGRNDetailsForRep.TaxColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_codeNull() {
                return this.IsNull(this.tabledsGRNDetailsForRep.Prod_codeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_codeNull() {
                this[this.tabledsGRNDetailsForRep.Prod_codeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_NameNull() {
                return this.IsNull(this.tabledsGRNDetailsForRep.Prod_NameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_NameNull() {
                this[this.tabledsGRNDetailsForRep.Prod_NameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQtyNull() {
                return this.IsNull(this.tabledsGRNDetailsForRep.QtyColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQtyNull() {
                this[this.tabledsGRNDetailsForRep.QtyColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFreeQtyNull() {
                return this.IsNull(this.tabledsGRNDetailsForRep.FreeQtyColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFreeQtyNull() {
                this[this.tabledsGRNDetailsForRep.FreeQtyColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPurchase_PriceNull() {
                return this.IsNull(this.tabledsGRNDetailsForRep.Purchase_PriceColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPurchase_PriceNull() {
                this[this.tabledsGRNDetailsForRep.Purchase_PriceColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelling_PriceNull() {
                return this.IsNull(this.tabledsGRNDetailsForRep.Selling_PriceColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelling_PriceNull() {
                this[this.tabledsGRNDetailsForRep.Selling_PriceColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDiscountNull() {
                return this.IsNull(this.tabledsGRNDetailsForRep.DiscountColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDiscountNull() {
                this[this.tabledsGRNDetailsForRep.DiscountColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountNull() {
                return this.IsNull(this.tabledsGRNDetailsForRep.AmountColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountNull() {
                this[this.tabledsGRNDetailsForRep.AmountColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLnNull() {
                return this.IsNull(this.tabledsGRNDetailsForRep.LnColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLnNull() {
                this[this.tabledsGRNDetailsForRep.LnColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStatusNull() {
                return this.IsNull(this.tabledsGRNDetailsForRep.StatusColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStatusNull() {
                this[this.tabledsGRNDetailsForRep.StatusColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupp_NameNull() {
                return this.IsNull(this.tabledsGRNDetailsForRep.Supp_NameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupp_NameNull() {
                this[this.tabledsGRNDetailsForRep.Supp_NameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupplier_IdNull() {
                return this.IsNull(this.tabledsGRNDetailsForRep.Supplier_IdColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupplier_IdNull() {
                this[this.tabledsGRNDetailsForRep.Supplier_IdColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class PurchaseOrderRow : System.Data.DataRow {
            
            private PurchaseOrderDataTable tablePurchaseOrder;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PurchaseOrderRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePurchaseOrder = ((PurchaseOrderDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Doc_No {
                get {
                    try {
                        return ((string)(this[this.tablePurchaseOrder.Doc_NoColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Doc_No\' in table \'PurchaseOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrder.Doc_NoColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prod_Code {
                get {
                    try {
                        return ((string)(this[this.tablePurchaseOrder.Prod_CodeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Prod_Code\' in table \'PurchaseOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrder.Prod_CodeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prod_Name {
                get {
                    try {
                        return ((string)(this[this.tablePurchaseOrder.Prod_NameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Prod_Name\' in table \'PurchaseOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrder.Prod_NameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Unit {
                get {
                    try {
                        return ((string)(this[this.tablePurchaseOrder.UnitColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Unit\' in table \'PurchaseOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrder.UnitColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Purchase_Price {
                get {
                    try {
                        return ((string)(this[this.tablePurchaseOrder.Purchase_PriceColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Purchase_Price\' in table \'PurchaseOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrder.Purchase_PriceColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Selling_Price {
                get {
                    try {
                        return ((string)(this[this.tablePurchaseOrder.Selling_PriceColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Selling_Price\' in table \'PurchaseOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrder.Selling_PriceColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Qty {
                get {
                    try {
                        return ((string)(this[this.tablePurchaseOrder.QtyColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Qty\' in table \'PurchaseOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrder.QtyColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Amount {
                get {
                    try {
                        return ((string)(this[this.tablePurchaseOrder.AmountColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Amount\' in table \'PurchaseOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrder.AmountColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDoc_NoNull() {
                return this.IsNull(this.tablePurchaseOrder.Doc_NoColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDoc_NoNull() {
                this[this.tablePurchaseOrder.Doc_NoColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_CodeNull() {
                return this.IsNull(this.tablePurchaseOrder.Prod_CodeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_CodeNull() {
                this[this.tablePurchaseOrder.Prod_CodeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_NameNull() {
                return this.IsNull(this.tablePurchaseOrder.Prod_NameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_NameNull() {
                this[this.tablePurchaseOrder.Prod_NameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnitNull() {
                return this.IsNull(this.tablePurchaseOrder.UnitColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnitNull() {
                this[this.tablePurchaseOrder.UnitColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPurchase_PriceNull() {
                return this.IsNull(this.tablePurchaseOrder.Purchase_PriceColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPurchase_PriceNull() {
                this[this.tablePurchaseOrder.Purchase_PriceColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelling_PriceNull() {
                return this.IsNull(this.tablePurchaseOrder.Selling_PriceColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelling_PriceNull() {
                this[this.tablePurchaseOrder.Selling_PriceColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQtyNull() {
                return this.IsNull(this.tablePurchaseOrder.QtyColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQtyNull() {
                this[this.tablePurchaseOrder.QtyColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountNull() {
                return this.IsNull(this.tablePurchaseOrder.AmountColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountNull() {
                this[this.tablePurchaseOrder.AmountColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dsPurchaseOrderDetailsRow : System.Data.DataRow {
            
            private dsPurchaseOrderDetailsDataTable tabledsPurchaseOrderDetails;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsPurchaseOrderDetailsRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledsPurchaseOrderDetails = ((dsPurchaseOrderDetailsDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Doc_No {
                get {
                    try {
                        return ((string)(this[this.tabledsPurchaseOrderDetails.Doc_NoColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Doc_No\' in table \'dsPurchaseOrderDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurchaseOrderDetails.Doc_NoColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Post_Date {
                get {
                    try {
                        return ((string)(this[this.tabledsPurchaseOrderDetails.Post_DateColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Post_Date\' in table \'dsPurchaseOrderDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurchaseOrderDetails.Post_DateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Supplier_Id {
                get {
                    try {
                        return ((string)(this[this.tabledsPurchaseOrderDetails.Supplier_IdColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Supplier_Id\' in table \'dsPurchaseOrderDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurchaseOrderDetails.Supplier_IdColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Supp_Name {
                get {
                    try {
                        return ((string)(this[this.tabledsPurchaseOrderDetails.Supp_NameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Supp_Name\' in table \'dsPurchaseOrderDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurchaseOrderDetails.Supp_NameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Pay_Type {
                get {
                    try {
                        return ((string)(this[this.tabledsPurchaseOrderDetails.Pay_TypeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Pay_Type\' in table \'dsPurchaseOrderDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurchaseOrderDetails.Pay_TypeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Remarks {
                get {
                    try {
                        return ((string)(this[this.tabledsPurchaseOrderDetails.RemarksColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Remarks\' in table \'dsPurchaseOrderDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurchaseOrderDetails.RemarksColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Expected_Date {
                get {
                    try {
                        return ((string)(this[this.tabledsPurchaseOrderDetails.Expected_DateColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Expected_Date\' in table \'dsPurchaseOrderDetails\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tabledsPurchaseOrderDetails.Expected_DateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AddRemarks {
                get {
                    try {
                        return ((string)(this[this.tabledsPurchaseOrderDetails.AddRemarksColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'AddRemarks\' in table \'dsPurchaseOrderDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurchaseOrderDetails.AddRemarksColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Reference {
                get {
                    try {
                        return ((string)(this[this.tabledsPurchaseOrderDetails.ReferenceColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Reference\' in table \'dsPurchaseOrderDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurchaseOrderDetails.ReferenceColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PayRemark1 {
                get {
                    try {
                        return ((string)(this[this.tabledsPurchaseOrderDetails.PayRemark1Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'PayRemark1\' in table \'dsPurchaseOrderDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurchaseOrderDetails.PayRemark1Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PayRemark2 {
                get {
                    try {
                        return ((string)(this[this.tabledsPurchaseOrderDetails.PayRemark2Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'PayRemark2\' in table \'dsPurchaseOrderDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurchaseOrderDetails.PayRemark2Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prod_Code {
                get {
                    try {
                        return ((string)(this[this.tabledsPurchaseOrderDetails.Prod_CodeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Prod_Code\' in table \'dsPurchaseOrderDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurchaseOrderDetails.Prod_CodeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prod_Name {
                get {
                    try {
                        return ((string)(this[this.tabledsPurchaseOrderDetails.Prod_NameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Prod_Name\' in table \'dsPurchaseOrderDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurchaseOrderDetails.Prod_NameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Qty {
                get {
                    try {
                        return ((string)(this[this.tabledsPurchaseOrderDetails.QtyColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Qty\' in table \'dsPurchaseOrderDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurchaseOrderDetails.QtyColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Purchase_Price {
                get {
                    try {
                        return ((string)(this[this.tabledsPurchaseOrderDetails.Purchase_PriceColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Purchase_Price\' in table \'dsPurchaseOrderDetails\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tabledsPurchaseOrderDetails.Purchase_PriceColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Selling_Price {
                get {
                    try {
                        return ((string)(this[this.tabledsPurchaseOrderDetails.Selling_PriceColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Selling_Price\' in table \'dsPurchaseOrderDetails\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tabledsPurchaseOrderDetails.Selling_PriceColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Amount {
                get {
                    try {
                        return ((string)(this[this.tabledsPurchaseOrderDetails.AmountColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Amount\' in table \'dsPurchaseOrderDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurchaseOrderDetails.AmountColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Ln {
                get {
                    try {
                        return ((string)(this[this.tabledsPurchaseOrderDetails.LnColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Ln\' in table \'dsPurchaseOrderDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurchaseOrderDetails.LnColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address1 {
                get {
                    try {
                        return ((string)(this[this.tabledsPurchaseOrderDetails.Address1Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Address1\' in table \'dsPurchaseOrderDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurchaseOrderDetails.Address1Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address2 {
                get {
                    try {
                        return ((string)(this[this.tabledsPurchaseOrderDetails.Address2Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Address2\' in table \'dsPurchaseOrderDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurchaseOrderDetails.Address2Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address3 {
                get {
                    try {
                        return ((string)(this[this.tabledsPurchaseOrderDetails.Address3Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Address3\' in table \'dsPurchaseOrderDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurchaseOrderDetails.Address3Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address4 {
                get {
                    try {
                        return ((string)(this[this.tabledsPurchaseOrderDetails.Address4Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Address4\' in table \'dsPurchaseOrderDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurchaseOrderDetails.Address4Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Tel {
                get {
                    try {
                        return ((string)(this[this.tabledsPurchaseOrderDetails.TelColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Tel\' in table \'dsPurchaseOrderDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurchaseOrderDetails.TelColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Fax {
                get {
                    try {
                        return ((string)(this[this.tabledsPurchaseOrderDetails.FaxColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Fax\' in table \'dsPurchaseOrderDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurchaseOrderDetails.FaxColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Tax {
                get {
                    try {
                        return ((string)(this[this.tabledsPurchaseOrderDetails.TaxColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Tax\' in table \'dsPurchaseOrderDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurchaseOrderDetails.TaxColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NetAmount {
                get {
                    try {
                        return ((string)(this[this.tabledsPurchaseOrderDetails.NetAmountColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'NetAmount\' in table \'dsPurchaseOrderDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurchaseOrderDetails.NetAmountColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Pay1 {
                get {
                    try {
                        return ((string)(this[this.tabledsPurchaseOrderDetails.Pay1Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Pay1\' in table \'dsPurchaseOrderDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurchaseOrderDetails.Pay1Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Status {
                get {
                    try {
                        return ((string)(this[this.tabledsPurchaseOrderDetails.StatusColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Status\' in table \'dsPurchaseOrderDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurchaseOrderDetails.StatusColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDoc_NoNull() {
                return this.IsNull(this.tabledsPurchaseOrderDetails.Doc_NoColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDoc_NoNull() {
                this[this.tabledsPurchaseOrderDetails.Doc_NoColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPost_DateNull() {
                return this.IsNull(this.tabledsPurchaseOrderDetails.Post_DateColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPost_DateNull() {
                this[this.tabledsPurchaseOrderDetails.Post_DateColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupplier_IdNull() {
                return this.IsNull(this.tabledsPurchaseOrderDetails.Supplier_IdColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupplier_IdNull() {
                this[this.tabledsPurchaseOrderDetails.Supplier_IdColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupp_NameNull() {
                return this.IsNull(this.tabledsPurchaseOrderDetails.Supp_NameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupp_NameNull() {
                this[this.tabledsPurchaseOrderDetails.Supp_NameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPay_TypeNull() {
                return this.IsNull(this.tabledsPurchaseOrderDetails.Pay_TypeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPay_TypeNull() {
                this[this.tabledsPurchaseOrderDetails.Pay_TypeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRemarksNull() {
                return this.IsNull(this.tabledsPurchaseOrderDetails.RemarksColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRemarksNull() {
                this[this.tabledsPurchaseOrderDetails.RemarksColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExpected_DateNull() {
                return this.IsNull(this.tabledsPurchaseOrderDetails.Expected_DateColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExpected_DateNull() {
                this[this.tabledsPurchaseOrderDetails.Expected_DateColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddRemarksNull() {
                return this.IsNull(this.tabledsPurchaseOrderDetails.AddRemarksColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddRemarksNull() {
                this[this.tabledsPurchaseOrderDetails.AddRemarksColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReferenceNull() {
                return this.IsNull(this.tabledsPurchaseOrderDetails.ReferenceColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReferenceNull() {
                this[this.tabledsPurchaseOrderDetails.ReferenceColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPayRemark1Null() {
                return this.IsNull(this.tabledsPurchaseOrderDetails.PayRemark1Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPayRemark1Null() {
                this[this.tabledsPurchaseOrderDetails.PayRemark1Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPayRemark2Null() {
                return this.IsNull(this.tabledsPurchaseOrderDetails.PayRemark2Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPayRemark2Null() {
                this[this.tabledsPurchaseOrderDetails.PayRemark2Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_CodeNull() {
                return this.IsNull(this.tabledsPurchaseOrderDetails.Prod_CodeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_CodeNull() {
                this[this.tabledsPurchaseOrderDetails.Prod_CodeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_NameNull() {
                return this.IsNull(this.tabledsPurchaseOrderDetails.Prod_NameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_NameNull() {
                this[this.tabledsPurchaseOrderDetails.Prod_NameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQtyNull() {
                return this.IsNull(this.tabledsPurchaseOrderDetails.QtyColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQtyNull() {
                this[this.tabledsPurchaseOrderDetails.QtyColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPurchase_PriceNull() {
                return this.IsNull(this.tabledsPurchaseOrderDetails.Purchase_PriceColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPurchase_PriceNull() {
                this[this.tabledsPurchaseOrderDetails.Purchase_PriceColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelling_PriceNull() {
                return this.IsNull(this.tabledsPurchaseOrderDetails.Selling_PriceColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelling_PriceNull() {
                this[this.tabledsPurchaseOrderDetails.Selling_PriceColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountNull() {
                return this.IsNull(this.tabledsPurchaseOrderDetails.AmountColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountNull() {
                this[this.tabledsPurchaseOrderDetails.AmountColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLnNull() {
                return this.IsNull(this.tabledsPurchaseOrderDetails.LnColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLnNull() {
                this[this.tabledsPurchaseOrderDetails.LnColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddress1Null() {
                return this.IsNull(this.tabledsPurchaseOrderDetails.Address1Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddress1Null() {
                this[this.tabledsPurchaseOrderDetails.Address1Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddress2Null() {
                return this.IsNull(this.tabledsPurchaseOrderDetails.Address2Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddress2Null() {
                this[this.tabledsPurchaseOrderDetails.Address2Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddress3Null() {
                return this.IsNull(this.tabledsPurchaseOrderDetails.Address3Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddress3Null() {
                this[this.tabledsPurchaseOrderDetails.Address3Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddress4Null() {
                return this.IsNull(this.tabledsPurchaseOrderDetails.Address4Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddress4Null() {
                this[this.tabledsPurchaseOrderDetails.Address4Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTelNull() {
                return this.IsNull(this.tabledsPurchaseOrderDetails.TelColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTelNull() {
                this[this.tabledsPurchaseOrderDetails.TelColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFaxNull() {
                return this.IsNull(this.tabledsPurchaseOrderDetails.FaxColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFaxNull() {
                this[this.tabledsPurchaseOrderDetails.FaxColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTaxNull() {
                return this.IsNull(this.tabledsPurchaseOrderDetails.TaxColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTaxNull() {
                this[this.tabledsPurchaseOrderDetails.TaxColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNetAmountNull() {
                return this.IsNull(this.tabledsPurchaseOrderDetails.NetAmountColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNetAmountNull() {
                this[this.tabledsPurchaseOrderDetails.NetAmountColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPay1Null() {
                return this.IsNull(this.tabledsPurchaseOrderDetails.Pay1Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPay1Null() {
                this[this.tabledsPurchaseOrderDetails.Pay1Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStatusNull() {
                return this.IsNull(this.tabledsPurchaseOrderDetails.StatusColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStatusNull() {
                this[this.tabledsPurchaseOrderDetails.StatusColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ProductRow : System.Data.DataRow {
            
            private ProductDataTable tableProduct;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ProductRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableProduct = ((ProductDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prod_Code {
                get {
                    try {
                        return ((string)(this[this.tableProduct.Prod_CodeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Prod_Code\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.Prod_CodeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prod_Name {
                get {
                    try {
                        return ((string)(this[this.tableProduct.Prod_NameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Prod_Name\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.Prod_NameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Purchase_Price {
                get {
                    try {
                        return ((string)(this[this.tableProduct.Purchase_PriceColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Purchase_Price\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.Purchase_PriceColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Selling_Price {
                get {
                    try {
                        return ((string)(this[this.tableProduct.Selling_PriceColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Selling_Price\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.Selling_PriceColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_CodeNull() {
                return this.IsNull(this.tableProduct.Prod_CodeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_CodeNull() {
                this[this.tableProduct.Prod_CodeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_NameNull() {
                return this.IsNull(this.tableProduct.Prod_NameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_NameNull() {
                this[this.tableProduct.Prod_NameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPurchase_PriceNull() {
                return this.IsNull(this.tableProduct.Purchase_PriceColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPurchase_PriceNull() {
                this[this.tableProduct.Purchase_PriceColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelling_PriceNull() {
                return this.IsNull(this.tableProduct.Selling_PriceColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelling_PriceNull() {
                this[this.tableProduct.Selling_PriceColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class InvoiceRow : System.Data.DataRow {
            
            private InvoiceDataTable tableInvoice;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal InvoiceRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableInvoice = ((InvoiceDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prod_Code {
                get {
                    try {
                        return ((string)(this[this.tableInvoice.Prod_CodeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Prod_Code\' in table \'Invoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice.Prod_CodeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prod_Name {
                get {
                    try {
                        return ((string)(this[this.tableInvoice.Prod_NameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Prod_Name\' in table \'Invoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice.Prod_NameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Unit {
                get {
                    try {
                        return ((string)(this[this.tableInvoice.UnitColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Unit\' in table \'Invoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice.UnitColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Selling_Price {
                get {
                    try {
                        return ((string)(this[this.tableInvoice.Selling_PriceColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Selling_Price\' in table \'Invoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice.Selling_PriceColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Qty {
                get {
                    try {
                        return ((string)(this[this.tableInvoice.QtyColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Qty\' in table \'Invoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice.QtyColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FreeQty {
                get {
                    try {
                        return ((string)(this[this.tableInvoice.FreeQtyColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'FreeQty\' in table \'Invoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice.FreeQtyColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Discount {
                get {
                    try {
                        return ((string)(this[this.tableInvoice.DiscountColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Discount\' in table \'Invoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice.DiscountColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Amount {
                get {
                    try {
                        return ((string)(this[this.tableInvoice.AmountColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Amount\' in table \'Invoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice.AmountColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Ln {
                get {
                    try {
                        return ((string)(this[this.tableInvoice.LnColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Ln\' in table \'Invoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice.LnColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_CodeNull() {
                return this.IsNull(this.tableInvoice.Prod_CodeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_CodeNull() {
                this[this.tableInvoice.Prod_CodeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_NameNull() {
                return this.IsNull(this.tableInvoice.Prod_NameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_NameNull() {
                this[this.tableInvoice.Prod_NameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnitNull() {
                return this.IsNull(this.tableInvoice.UnitColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnitNull() {
                this[this.tableInvoice.UnitColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelling_PriceNull() {
                return this.IsNull(this.tableInvoice.Selling_PriceColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelling_PriceNull() {
                this[this.tableInvoice.Selling_PriceColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQtyNull() {
                return this.IsNull(this.tableInvoice.QtyColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQtyNull() {
                this[this.tableInvoice.QtyColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFreeQtyNull() {
                return this.IsNull(this.tableInvoice.FreeQtyColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFreeQtyNull() {
                this[this.tableInvoice.FreeQtyColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDiscountNull() {
                return this.IsNull(this.tableInvoice.DiscountColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDiscountNull() {
                this[this.tableInvoice.DiscountColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountNull() {
                return this.IsNull(this.tableInvoice.AmountColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountNull() {
                this[this.tableInvoice.AmountColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLnNull() {
                return this.IsNull(this.tableInvoice.LnColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLnNull() {
                this[this.tableInvoice.LnColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dsAccountRow : System.Data.DataRow {
            
            private dsAccountDataTable tabledsAccount;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsAccountRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledsAccount = ((dsAccountDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Acc_Code {
                get {
                    try {
                        return ((string)(this[this.tabledsAccount.Acc_CodeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Acc_Code\' in table \'dsAccount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsAccount.Acc_CodeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Acc_Name {
                get {
                    try {
                        return ((string)(this[this.tabledsAccount.Acc_NameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Acc_Name\' in table \'dsAccount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsAccount.Acc_NameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address1 {
                get {
                    try {
                        return ((string)(this[this.tabledsAccount.Address1Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Address1\' in table \'dsAccount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsAccount.Address1Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address2 {
                get {
                    try {
                        return ((string)(this[this.tabledsAccount.Address2Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Address2\' in table \'dsAccount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsAccount.Address2Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address3 {
                get {
                    try {
                        return ((string)(this[this.tabledsAccount.Address3Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Address3\' in table \'dsAccount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsAccount.Address3Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string City {
                get {
                    try {
                        return ((string)(this[this.tabledsAccount.CityColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'City\' in table \'dsAccount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsAccount.CityColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Country {
                get {
                    try {
                        return ((string)(this[this.tabledsAccount.CountryColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Country\' in table \'dsAccount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsAccount.CountryColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Telephone {
                get {
                    try {
                        return ((string)(this[this.tabledsAccount.TelephoneColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Telephone\' in table \'dsAccount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsAccount.TelephoneColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Fax {
                get {
                    try {
                        return ((string)(this[this.tabledsAccount.FaxColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Fax\' in table \'dsAccount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsAccount.FaxColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Email {
                get {
                    try {
                        return ((string)(this[this.tabledsAccount.EmailColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Email\' in table \'dsAccount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsAccount.EmailColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Contact_Prsn {
                get {
                    try {
                        return ((string)(this[this.tabledsAccount.Contact_PrsnColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Contact_Prsn\' in table \'dsAccount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsAccount.Contact_PrsnColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Credit_Limit {
                get {
                    try {
                        return ((string)(this[this.tabledsAccount.Credit_LimitColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Credit_Limit\' in table \'dsAccount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsAccount.Credit_LimitColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Period {
                get {
                    try {
                        return ((string)(this[this.tabledsAccount.PeriodColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Period\' in table \'dsAccount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsAccount.PeriodColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BankDraft {
                get {
                    try {
                        return ((string)(this[this.tabledsAccount.BankDraftColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'BankDraft\' in table \'dsAccount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsAccount.BankDraftColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAcc_CodeNull() {
                return this.IsNull(this.tabledsAccount.Acc_CodeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAcc_CodeNull() {
                this[this.tabledsAccount.Acc_CodeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAcc_NameNull() {
                return this.IsNull(this.tabledsAccount.Acc_NameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAcc_NameNull() {
                this[this.tabledsAccount.Acc_NameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddress1Null() {
                return this.IsNull(this.tabledsAccount.Address1Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddress1Null() {
                this[this.tabledsAccount.Address1Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddress2Null() {
                return this.IsNull(this.tabledsAccount.Address2Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddress2Null() {
                this[this.tabledsAccount.Address2Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddress3Null() {
                return this.IsNull(this.tabledsAccount.Address3Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddress3Null() {
                this[this.tabledsAccount.Address3Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCityNull() {
                return this.IsNull(this.tabledsAccount.CityColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCityNull() {
                this[this.tabledsAccount.CityColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCountryNull() {
                return this.IsNull(this.tabledsAccount.CountryColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCountryNull() {
                this[this.tabledsAccount.CountryColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTelephoneNull() {
                return this.IsNull(this.tabledsAccount.TelephoneColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTelephoneNull() {
                this[this.tabledsAccount.TelephoneColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFaxNull() {
                return this.IsNull(this.tabledsAccount.FaxColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFaxNull() {
                this[this.tabledsAccount.FaxColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmailNull() {
                return this.IsNull(this.tabledsAccount.EmailColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmailNull() {
                this[this.tabledsAccount.EmailColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsContact_PrsnNull() {
                return this.IsNull(this.tabledsAccount.Contact_PrsnColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetContact_PrsnNull() {
                this[this.tabledsAccount.Contact_PrsnColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCredit_LimitNull() {
                return this.IsNull(this.tabledsAccount.Credit_LimitColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCredit_LimitNull() {
                this[this.tabledsAccount.Credit_LimitColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPeriodNull() {
                return this.IsNull(this.tabledsAccount.PeriodColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPeriodNull() {
                this[this.tabledsAccount.PeriodColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBankDraftNull() {
                return this.IsNull(this.tabledsAccount.BankDraftColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBankDraftNull() {
                this[this.tabledsAccount.BankDraftColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dsInvoiceDetailsRow : System.Data.DataRow {
            
            private dsInvoiceDetailsDataTable tabledsInvoiceDetails;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsInvoiceDetailsRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledsInvoiceDetails = ((dsInvoiceDetailsDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Doc_No {
                get {
                    try {
                        return ((string)(this[this.tabledsInvoiceDetails.Doc_NoColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Doc_No\' in table \'dsInvoiceDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsInvoiceDetails.Doc_NoColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Post_Date {
                get {
                    try {
                        return ((string)(this[this.tabledsInvoiceDetails.Post_DateColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Post_Date\' in table \'dsInvoiceDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsInvoiceDetails.Post_DateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Cust_Code {
                get {
                    try {
                        return ((string)(this[this.tabledsInvoiceDetails.Cust_CodeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Cust_Code\' in table \'dsInvoiceDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsInvoiceDetails.Cust_CodeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Cust_Name {
                get {
                    try {
                        return ((string)(this[this.tabledsInvoiceDetails.Cust_NameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Cust_Name\' in table \'dsInvoiceDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsInvoiceDetails.Cust_NameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address1 {
                get {
                    try {
                        return ((string)(this[this.tabledsInvoiceDetails.Address1Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Address1\' in table \'dsInvoiceDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsInvoiceDetails.Address1Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address2 {
                get {
                    try {
                        return ((string)(this[this.tabledsInvoiceDetails.Address2Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Address2\' in table \'dsInvoiceDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsInvoiceDetails.Address2Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address3 {
                get {
                    try {
                        return ((string)(this[this.tabledsInvoiceDetails.Address3Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Address3\' in table \'dsInvoiceDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsInvoiceDetails.Address3Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address4 {
                get {
                    try {
                        return ((string)(this[this.tabledsInvoiceDetails.Address4Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Address4\' in table \'dsInvoiceDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsInvoiceDetails.Address4Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Sales_Assist {
                get {
                    try {
                        return ((string)(this[this.tabledsInvoiceDetails.Sales_AssistColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Sales_Assist\' in table \'dsInvoiceDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsInvoiceDetails.Sales_AssistColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Porder_No {
                get {
                    try {
                        return ((string)(this[this.tabledsInvoiceDetails.Porder_NoColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Porder_No\' in table \'dsInvoiceDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsInvoiceDetails.Porder_NoColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Remarks {
                get {
                    try {
                        return ((string)(this[this.tabledsInvoiceDetails.RemarksColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Remarks\' in table \'dsInvoiceDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsInvoiceDetails.RemarksColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Reference {
                get {
                    try {
                        return ((string)(this[this.tabledsInvoiceDetails.ReferenceColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Reference\' in table \'dsInvoiceDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsInvoiceDetails.ReferenceColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prod_Code {
                get {
                    try {
                        return ((string)(this[this.tabledsInvoiceDetails.Prod_CodeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Prod_Code\' in table \'dsInvoiceDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsInvoiceDetails.Prod_CodeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prod_Name {
                get {
                    try {
                        return ((string)(this[this.tabledsInvoiceDetails.Prod_NameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Prod_Name\' in table \'dsInvoiceDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsInvoiceDetails.Prod_NameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Qty {
                get {
                    try {
                        return ((string)(this[this.tabledsInvoiceDetails.QtyColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Qty\' in table \'dsInvoiceDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsInvoiceDetails.QtyColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FreeQty {
                get {
                    try {
                        return ((string)(this[this.tabledsInvoiceDetails.FreeQtyColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'FreeQty\' in table \'dsInvoiceDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsInvoiceDetails.FreeQtyColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Selling_Price {
                get {
                    try {
                        return ((string)(this[this.tabledsInvoiceDetails.Selling_PriceColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Selling_Price\' in table \'dsInvoiceDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsInvoiceDetails.Selling_PriceColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Discount {
                get {
                    try {
                        return ((string)(this[this.tabledsInvoiceDetails.DiscountColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Discount\' in table \'dsInvoiceDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsInvoiceDetails.DiscountColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Amount {
                get {
                    try {
                        return ((string)(this[this.tabledsInvoiceDetails.AmountColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Amount\' in table \'dsInvoiceDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsInvoiceDetails.AmountColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Ln {
                get {
                    try {
                        return ((string)(this[this.tabledsInvoiceDetails.LnColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Ln\' in table \'dsInvoiceDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsInvoiceDetails.LnColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PayRemark1 {
                get {
                    try {
                        return ((string)(this[this.tabledsInvoiceDetails.PayRemark1Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'PayRemark1\' in table \'dsInvoiceDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsInvoiceDetails.PayRemark1Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Sub_Discount {
                get {
                    try {
                        return ((string)(this[this.tabledsInvoiceDetails.Sub_DiscountColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Sub_Discount\' in table \'dsInvoiceDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsInvoiceDetails.Sub_DiscountColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Tax {
                get {
                    try {
                        return ((string)(this[this.tabledsInvoiceDetails.TaxColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Tax\' in table \'dsInvoiceDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsInvoiceDetails.TaxColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Net_Amount {
                get {
                    try {
                        return ((string)(this[this.tabledsInvoiceDetails.Net_AmountColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Net_Amount\' in table \'dsInvoiceDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsInvoiceDetails.Net_AmountColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Gross_Amount {
                get {
                    try {
                        return ((string)(this[this.tabledsInvoiceDetails.Gross_AmountColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Gross_Amount\' in table \'dsInvoiceDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsInvoiceDetails.Gross_AmountColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Status {
                get {
                    try {
                        return ((string)(this[this.tabledsInvoiceDetails.StatusColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Status\' in table \'dsInvoiceDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsInvoiceDetails.StatusColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDoc_NoNull() {
                return this.IsNull(this.tabledsInvoiceDetails.Doc_NoColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDoc_NoNull() {
                this[this.tabledsInvoiceDetails.Doc_NoColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPost_DateNull() {
                return this.IsNull(this.tabledsInvoiceDetails.Post_DateColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPost_DateNull() {
                this[this.tabledsInvoiceDetails.Post_DateColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCust_CodeNull() {
                return this.IsNull(this.tabledsInvoiceDetails.Cust_CodeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCust_CodeNull() {
                this[this.tabledsInvoiceDetails.Cust_CodeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCust_NameNull() {
                return this.IsNull(this.tabledsInvoiceDetails.Cust_NameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCust_NameNull() {
                this[this.tabledsInvoiceDetails.Cust_NameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddress1Null() {
                return this.IsNull(this.tabledsInvoiceDetails.Address1Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddress1Null() {
                this[this.tabledsInvoiceDetails.Address1Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddress2Null() {
                return this.IsNull(this.tabledsInvoiceDetails.Address2Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddress2Null() {
                this[this.tabledsInvoiceDetails.Address2Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddress3Null() {
                return this.IsNull(this.tabledsInvoiceDetails.Address3Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddress3Null() {
                this[this.tabledsInvoiceDetails.Address3Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddress4Null() {
                return this.IsNull(this.tabledsInvoiceDetails.Address4Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddress4Null() {
                this[this.tabledsInvoiceDetails.Address4Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSales_AssistNull() {
                return this.IsNull(this.tabledsInvoiceDetails.Sales_AssistColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSales_AssistNull() {
                this[this.tabledsInvoiceDetails.Sales_AssistColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPorder_NoNull() {
                return this.IsNull(this.tabledsInvoiceDetails.Porder_NoColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPorder_NoNull() {
                this[this.tabledsInvoiceDetails.Porder_NoColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRemarksNull() {
                return this.IsNull(this.tabledsInvoiceDetails.RemarksColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRemarksNull() {
                this[this.tabledsInvoiceDetails.RemarksColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReferenceNull() {
                return this.IsNull(this.tabledsInvoiceDetails.ReferenceColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReferenceNull() {
                this[this.tabledsInvoiceDetails.ReferenceColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_CodeNull() {
                return this.IsNull(this.tabledsInvoiceDetails.Prod_CodeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_CodeNull() {
                this[this.tabledsInvoiceDetails.Prod_CodeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_NameNull() {
                return this.IsNull(this.tabledsInvoiceDetails.Prod_NameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_NameNull() {
                this[this.tabledsInvoiceDetails.Prod_NameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQtyNull() {
                return this.IsNull(this.tabledsInvoiceDetails.QtyColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQtyNull() {
                this[this.tabledsInvoiceDetails.QtyColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFreeQtyNull() {
                return this.IsNull(this.tabledsInvoiceDetails.FreeQtyColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFreeQtyNull() {
                this[this.tabledsInvoiceDetails.FreeQtyColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelling_PriceNull() {
                return this.IsNull(this.tabledsInvoiceDetails.Selling_PriceColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelling_PriceNull() {
                this[this.tabledsInvoiceDetails.Selling_PriceColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDiscountNull() {
                return this.IsNull(this.tabledsInvoiceDetails.DiscountColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDiscountNull() {
                this[this.tabledsInvoiceDetails.DiscountColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountNull() {
                return this.IsNull(this.tabledsInvoiceDetails.AmountColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountNull() {
                this[this.tabledsInvoiceDetails.AmountColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLnNull() {
                return this.IsNull(this.tabledsInvoiceDetails.LnColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLnNull() {
                this[this.tabledsInvoiceDetails.LnColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPayRemark1Null() {
                return this.IsNull(this.tabledsInvoiceDetails.PayRemark1Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPayRemark1Null() {
                this[this.tabledsInvoiceDetails.PayRemark1Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSub_DiscountNull() {
                return this.IsNull(this.tabledsInvoiceDetails.Sub_DiscountColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSub_DiscountNull() {
                this[this.tabledsInvoiceDetails.Sub_DiscountColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTaxNull() {
                return this.IsNull(this.tabledsInvoiceDetails.TaxColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTaxNull() {
                this[this.tabledsInvoiceDetails.TaxColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNet_AmountNull() {
                return this.IsNull(this.tabledsInvoiceDetails.Net_AmountColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNet_AmountNull() {
                this[this.tabledsInvoiceDetails.Net_AmountColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGross_AmountNull() {
                return this.IsNull(this.tabledsInvoiceDetails.Gross_AmountColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGross_AmountNull() {
                this[this.tabledsInvoiceDetails.Gross_AmountColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStatusNull() {
                return this.IsNull(this.tabledsInvoiceDetails.StatusColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStatusNull() {
                this[this.tabledsInvoiceDetails.StatusColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dsStockProductwiseRow : System.Data.DataRow {
            
            private dsStockProductwiseDataTable tabledsStockProductwise;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsStockProductwiseRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledsStockProductwise = ((dsStockProductwiseDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prod_Code {
                get {
                    try {
                        return ((string)(this[this.tabledsStockProductwise.Prod_CodeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Prod_Code\' in table \'dsStockProductwise\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsStockProductwise.Prod_CodeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prod_Name {
                get {
                    try {
                        return ((string)(this[this.tabledsStockProductwise.Prod_NameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Prod_Name\' in table \'dsStockProductwise\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsStockProductwise.Prod_NameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Purchase_Price {
                get {
                    try {
                        return ((string)(this[this.tabledsStockProductwise.Purchase_PriceColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Purchase_Price\' in table \'dsStockProductwise\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsStockProductwise.Purchase_PriceColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Selling_Price {
                get {
                    try {
                        return ((string)(this[this.tabledsStockProductwise.Selling_PriceColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Selling_Price\' in table \'dsStockProductwise\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsStockProductwise.Selling_PriceColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Qty {
                get {
                    try {
                        return ((string)(this[this.tabledsStockProductwise.QtyColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Qty\' in table \'dsStockProductwise\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsStockProductwise.QtyColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Loca {
                get {
                    try {
                        return ((string)(this[this.tabledsStockProductwise.LocaColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Loca\' in table \'dsStockProductwise\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsStockProductwise.LocaColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Loca_Descrip {
                get {
                    try {
                        return ((string)(this[this.tabledsStockProductwise.Loca_DescripColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Loca_Descrip\' in table \'dsStockProductwise\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsStockProductwise.Loca_DescripColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CodeFrom {
                get {
                    try {
                        return ((string)(this[this.tabledsStockProductwise.CodeFromColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'CodeFrom\' in table \'dsStockProductwise\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsStockProductwise.CodeFromColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CodeTo {
                get {
                    try {
                        return ((string)(this[this.tabledsStockProductwise.CodeToColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'CodeTo\' in table \'dsStockProductwise\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsStockProductwise.CodeToColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Department_Id {
                get {
                    try {
                        return ((string)(this[this.tabledsStockProductwise.Department_IdColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Department_Id\' in table \'dsStockProductwise\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsStockProductwise.Department_IdColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Dept_Name {
                get {
                    try {
                        return ((string)(this[this.tabledsStockProductwise.Dept_NameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Dept_Name\' in table \'dsStockProductwise\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsStockProductwise.Dept_NameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Category_Id {
                get {
                    try {
                        return ((string)(this[this.tabledsStockProductwise.Category_IdColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Category_Id\' in table \'dsStockProductwise\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsStockProductwise.Category_IdColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Cat_Name {
                get {
                    try {
                        return ((string)(this[this.tabledsStockProductwise.Cat_NameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Cat_Name\' in table \'dsStockProductwise\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsStockProductwise.Cat_NameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Supplier_Id {
                get {
                    try {
                        return ((string)(this[this.tabledsStockProductwise.Supplier_IdColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Supplier_Id\' in table \'dsStockProductwise\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsStockProductwise.Supplier_IdColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Supp_Name {
                get {
                    try {
                        return ((string)(this[this.tabledsStockProductwise.Supp_NameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Supp_Name\' in table \'dsStockProductwise\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsStockProductwise.Supp_NameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Manufacturer_Id {
                get {
                    try {
                        return ((string)(this[this.tabledsStockProductwise.Manufacturer_IdColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Manufacturer_Id\' in table \'dsStockProductwise\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsStockProductwise.Manufacturer_IdColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Manf_Name {
                get {
                    try {
                        return ((string)(this[this.tabledsStockProductwise.Manf_NameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Manf_Name\' in table \'dsStockProductwise\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsStockProductwise.Manf_NameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_CodeNull() {
                return this.IsNull(this.tabledsStockProductwise.Prod_CodeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_CodeNull() {
                this[this.tabledsStockProductwise.Prod_CodeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_NameNull() {
                return this.IsNull(this.tabledsStockProductwise.Prod_NameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_NameNull() {
                this[this.tabledsStockProductwise.Prod_NameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPurchase_PriceNull() {
                return this.IsNull(this.tabledsStockProductwise.Purchase_PriceColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPurchase_PriceNull() {
                this[this.tabledsStockProductwise.Purchase_PriceColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelling_PriceNull() {
                return this.IsNull(this.tabledsStockProductwise.Selling_PriceColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelling_PriceNull() {
                this[this.tabledsStockProductwise.Selling_PriceColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQtyNull() {
                return this.IsNull(this.tabledsStockProductwise.QtyColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQtyNull() {
                this[this.tabledsStockProductwise.QtyColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocaNull() {
                return this.IsNull(this.tabledsStockProductwise.LocaColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocaNull() {
                this[this.tabledsStockProductwise.LocaColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLoca_DescripNull() {
                return this.IsNull(this.tabledsStockProductwise.Loca_DescripColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLoca_DescripNull() {
                this[this.tabledsStockProductwise.Loca_DescripColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCodeFromNull() {
                return this.IsNull(this.tabledsStockProductwise.CodeFromColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCodeFromNull() {
                this[this.tabledsStockProductwise.CodeFromColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCodeToNull() {
                return this.IsNull(this.tabledsStockProductwise.CodeToColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCodeToNull() {
                this[this.tabledsStockProductwise.CodeToColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDepartment_IdNull() {
                return this.IsNull(this.tabledsStockProductwise.Department_IdColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDepartment_IdNull() {
                this[this.tabledsStockProductwise.Department_IdColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDept_NameNull() {
                return this.IsNull(this.tabledsStockProductwise.Dept_NameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDept_NameNull() {
                this[this.tabledsStockProductwise.Dept_NameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCategory_IdNull() {
                return this.IsNull(this.tabledsStockProductwise.Category_IdColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCategory_IdNull() {
                this[this.tabledsStockProductwise.Category_IdColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCat_NameNull() {
                return this.IsNull(this.tabledsStockProductwise.Cat_NameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCat_NameNull() {
                this[this.tabledsStockProductwise.Cat_NameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupplier_IdNull() {
                return this.IsNull(this.tabledsStockProductwise.Supplier_IdColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupplier_IdNull() {
                this[this.tabledsStockProductwise.Supplier_IdColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupp_NameNull() {
                return this.IsNull(this.tabledsStockProductwise.Supp_NameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupp_NameNull() {
                this[this.tabledsStockProductwise.Supp_NameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsManufacturer_IdNull() {
                return this.IsNull(this.tabledsStockProductwise.Manufacturer_IdColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetManufacturer_IdNull() {
                this[this.tabledsStockProductwise.Manufacturer_IdColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsManf_NameNull() {
                return this.IsNull(this.tabledsStockProductwise.Manf_NameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetManf_NameNull() {
                this[this.tabledsStockProductwise.Manf_NameColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class PendingPaymentsRow : System.Data.DataRow {
            
            private PendingPaymentsDataTable tablePendingPayments;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PendingPaymentsRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePendingPayments = ((PendingPaymentsDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Doc_No {
                get {
                    try {
                        return ((string)(this[this.tablePendingPayments.Doc_NoColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Doc_No\' in table \'PendingPayments\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePendingPayments.Doc_NoColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Transaction_Date {
                get {
                    try {
                        return ((string)(this[this.tablePendingPayments.Transaction_DateColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Transaction_Date\' in table \'PendingPayments\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePendingPayments.Transaction_DateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Transaction_Amount {
                get {
                    try {
                        return ((string)(this[this.tablePendingPayments.Transaction_AmountColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Transaction_Amount\' in table \'PendingPayments\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePendingPayments.Transaction_AmountColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Balance_Amount {
                get {
                    try {
                        return ((string)(this[this.tablePendingPayments.Balance_AmountColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Balance_Amount\' in table \'PendingPayments\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePendingPayments.Balance_AmountColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Temp_DocNo {
                get {
                    try {
                        return ((string)(this[this.tablePendingPayments.Temp_DocNoColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Temp_DocNo\' in table \'PendingPayments\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePendingPayments.Temp_DocNoColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDoc_NoNull() {
                return this.IsNull(this.tablePendingPayments.Doc_NoColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDoc_NoNull() {
                this[this.tablePendingPayments.Doc_NoColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTransaction_DateNull() {
                return this.IsNull(this.tablePendingPayments.Transaction_DateColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTransaction_DateNull() {
                this[this.tablePendingPayments.Transaction_DateColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTransaction_AmountNull() {
                return this.IsNull(this.tablePendingPayments.Transaction_AmountColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTransaction_AmountNull() {
                this[this.tablePendingPayments.Transaction_AmountColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBalance_AmountNull() {
                return this.IsNull(this.tablePendingPayments.Balance_AmountColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBalance_AmountNull() {
                this[this.tablePendingPayments.Balance_AmountColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTemp_DocNoNull() {
                return this.IsNull(this.tablePendingPayments.Temp_DocNoColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTemp_DocNoNull() {
                this[this.tablePendingPayments.Temp_DocNoColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class SelectedPaymentsRow : System.Data.DataRow {
            
            private SelectedPaymentsDataTable tableSelectedPayments;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SelectedPaymentsRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSelectedPayments = ((SelectedPaymentsDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Doc_No {
                get {
                    try {
                        return ((string)(this[this.tableSelectedPayments.Doc_NoColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Doc_No\' in table \'SelectedPayments\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectedPayments.Doc_NoColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Transaction_Date {
                get {
                    try {
                        return ((string)(this[this.tableSelectedPayments.Transaction_DateColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Transaction_Date\' in table \'SelectedPayments\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectedPayments.Transaction_DateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Transaction_Amount {
                get {
                    try {
                        return ((string)(this[this.tableSelectedPayments.Transaction_AmountColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Transaction_Amount\' in table \'SelectedPayments\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectedPayments.Transaction_AmountColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Balance_Amount {
                get {
                    try {
                        return ((string)(this[this.tableSelectedPayments.Balance_AmountColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Balance_Amount\' in table \'SelectedPayments\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectedPayments.Balance_AmountColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Paid_Amount {
                get {
                    try {
                        return ((string)(this[this.tableSelectedPayments.Paid_AmountColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Paid_Amount\' in table \'SelectedPayments\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectedPayments.Paid_AmountColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Temp_DocNo {
                get {
                    try {
                        return ((string)(this[this.tableSelectedPayments.Temp_DocNoColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Temp_DocNo\' in table \'SelectedPayments\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectedPayments.Temp_DocNoColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDoc_NoNull() {
                return this.IsNull(this.tableSelectedPayments.Doc_NoColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDoc_NoNull() {
                this[this.tableSelectedPayments.Doc_NoColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTransaction_DateNull() {
                return this.IsNull(this.tableSelectedPayments.Transaction_DateColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTransaction_DateNull() {
                this[this.tableSelectedPayments.Transaction_DateColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTransaction_AmountNull() {
                return this.IsNull(this.tableSelectedPayments.Transaction_AmountColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTransaction_AmountNull() {
                this[this.tableSelectedPayments.Transaction_AmountColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBalance_AmountNull() {
                return this.IsNull(this.tableSelectedPayments.Balance_AmountColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBalance_AmountNull() {
                this[this.tableSelectedPayments.Balance_AmountColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPaid_AmountNull() {
                return this.IsNull(this.tableSelectedPayments.Paid_AmountColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPaid_AmountNull() {
                this[this.tableSelectedPayments.Paid_AmountColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTemp_DocNoNull() {
                return this.IsNull(this.tableSelectedPayments.Temp_DocNoColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTemp_DocNoNull() {
                this[this.tableSelectedPayments.Temp_DocNoColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class PaymentDetailsRow : System.Data.DataRow {
            
            private PaymentDetailsDataTable tablePaymentDetails;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PaymentDetailsRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePaymentDetails = ((PaymentDetailsDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Temp_DocNo {
                get {
                    try {
                        return ((string)(this[this.tablePaymentDetails.Temp_DocNoColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Temp_DocNo\' in table \'PaymentDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePaymentDetails.Temp_DocNoColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Payment_Mode {
                get {
                    try {
                        return ((string)(this[this.tablePaymentDetails.Payment_ModeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Payment_Mode\' in table \'PaymentDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePaymentDetails.Payment_ModeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Bank_Name {
                get {
                    try {
                        return ((string)(this[this.tablePaymentDetails.Bank_NameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Bank_Name\' in table \'PaymentDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePaymentDetails.Bank_NameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Cheque_No {
                get {
                    try {
                        return ((string)(this[this.tablePaymentDetails.Cheque_NoColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Cheque_No\' in table \'PaymentDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePaymentDetails.Cheque_NoColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Branch {
                get {
                    try {
                        return ((string)(this[this.tablePaymentDetails.BranchColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Branch\' in table \'PaymentDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePaymentDetails.BranchColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Amount {
                get {
                    try {
                        return ((string)(this[this.tablePaymentDetails.AmountColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Amount\' in table \'PaymentDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePaymentDetails.AmountColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTemp_DocNoNull() {
                return this.IsNull(this.tablePaymentDetails.Temp_DocNoColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTemp_DocNoNull() {
                this[this.tablePaymentDetails.Temp_DocNoColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPayment_ModeNull() {
                return this.IsNull(this.tablePaymentDetails.Payment_ModeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPayment_ModeNull() {
                this[this.tablePaymentDetails.Payment_ModeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBank_NameNull() {
                return this.IsNull(this.tablePaymentDetails.Bank_NameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBank_NameNull() {
                this[this.tablePaymentDetails.Bank_NameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCheque_NoNull() {
                return this.IsNull(this.tablePaymentDetails.Cheque_NoColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCheque_NoNull() {
                this[this.tablePaymentDetails.Cheque_NoColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBranchNull() {
                return this.IsNull(this.tablePaymentDetails.BranchColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBranchNull() {
                this[this.tablePaymentDetails.BranchColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountNull() {
                return this.IsNull(this.tablePaymentDetails.AmountColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountNull() {
                this[this.tablePaymentDetails.AmountColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tbPaidPaymentSummaryRow : System.Data.DataRow {
            
            private tbPaidPaymentSummaryDataTable tabletbPaidPaymentSummary;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tbPaidPaymentSummaryRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletbPaidPaymentSummary = ((tbPaidPaymentSummaryDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Org_Doc_no {
                get {
                    try {
                        return ((string)(this[this.tabletbPaidPaymentSummary.Org_Doc_noColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Org_Doc_no\' in table \'tbPaidPaymentSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbPaidPaymentSummary.Org_Doc_noColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Post_Date {
                get {
                    try {
                        return ((string)(this[this.tabletbPaidPaymentSummary.Post_DateColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Post_Date\' in table \'tbPaidPaymentSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbPaidPaymentSummary.Post_DateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Doc_No {
                get {
                    try {
                        return ((string)(this[this.tabletbPaidPaymentSummary.Doc_NoColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Doc_No\' in table \'tbPaidPaymentSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbPaidPaymentSummary.Doc_NoColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Transaction_Date {
                get {
                    try {
                        return ((string)(this[this.tabletbPaidPaymentSummary.Transaction_DateColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Transaction_Date\' in table \'tbPaidPaymentSummary\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tabletbPaidPaymentSummary.Transaction_DateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Balance_Amount {
                get {
                    try {
                        return ((string)(this[this.tabletbPaidPaymentSummary.Balance_AmountColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Balance_Amount\' in table \'tbPaidPaymentSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbPaidPaymentSummary.Balance_AmountColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Transaction_Amount {
                get {
                    try {
                        return ((string)(this[this.tabletbPaidPaymentSummary.Transaction_AmountColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Transaction_Amount\' in table \'tbPaidPaymentSummary\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tabletbPaidPaymentSummary.Transaction_AmountColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Paid_Amount {
                get {
                    try {
                        return ((string)(this[this.tabletbPaidPaymentSummary.Paid_AmountColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Paid_Amount\' in table \'tbPaidPaymentSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbPaidPaymentSummary.Paid_AmountColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Loca {
                get {
                    try {
                        return ((string)(this[this.tabletbPaidPaymentSummary.LocaColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Loca\' in table \'tbPaidPaymentSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbPaidPaymentSummary.LocaColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Loca_Descrip {
                get {
                    try {
                        return ((string)(this[this.tabletbPaidPaymentSummary.Loca_DescripColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Loca_Descrip\' in table \'tbPaidPaymentSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbPaidPaymentSummary.Loca_DescripColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Acc_Code {
                get {
                    try {
                        return ((string)(this[this.tabletbPaidPaymentSummary.Acc_CodeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Acc_Code\' in table \'tbPaidPaymentSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbPaidPaymentSummary.Acc_CodeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Acc_Name {
                get {
                    try {
                        return ((string)(this[this.tabletbPaidPaymentSummary.Acc_NameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Acc_Name\' in table \'tbPaidPaymentSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbPaidPaymentSummary.Acc_NameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address1 {
                get {
                    try {
                        return ((string)(this[this.tabletbPaidPaymentSummary.Address1Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Address1\' in table \'tbPaidPaymentSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbPaidPaymentSummary.Address1Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address2 {
                get {
                    try {
                        return ((string)(this[this.tabletbPaidPaymentSummary.Address2Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Address2\' in table \'tbPaidPaymentSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbPaidPaymentSummary.Address2Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address3 {
                get {
                    try {
                        return ((string)(this[this.tabletbPaidPaymentSummary.Address3Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Address3\' in table \'tbPaidPaymentSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbPaidPaymentSummary.Address3Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address4 {
                get {
                    try {
                        return ((string)(this[this.tabletbPaidPaymentSummary.Address4Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Address4\' in table \'tbPaidPaymentSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbPaidPaymentSummary.Address4Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string User_Name {
                get {
                    try {
                        return ((string)(this[this.tabletbPaidPaymentSummary.User_NameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'User_Name\' in table \'tbPaidPaymentSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbPaidPaymentSummary.User_NameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Status {
                get {
                    try {
                        return ((string)(this[this.tabletbPaidPaymentSummary.StatusColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Status\' in table \'tbPaidPaymentSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbPaidPaymentSummary.StatusColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOrg_Doc_noNull() {
                return this.IsNull(this.tabletbPaidPaymentSummary.Org_Doc_noColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOrg_Doc_noNull() {
                this[this.tabletbPaidPaymentSummary.Org_Doc_noColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPost_DateNull() {
                return this.IsNull(this.tabletbPaidPaymentSummary.Post_DateColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPost_DateNull() {
                this[this.tabletbPaidPaymentSummary.Post_DateColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDoc_NoNull() {
                return this.IsNull(this.tabletbPaidPaymentSummary.Doc_NoColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDoc_NoNull() {
                this[this.tabletbPaidPaymentSummary.Doc_NoColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTransaction_DateNull() {
                return this.IsNull(this.tabletbPaidPaymentSummary.Transaction_DateColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTransaction_DateNull() {
                this[this.tabletbPaidPaymentSummary.Transaction_DateColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBalance_AmountNull() {
                return this.IsNull(this.tabletbPaidPaymentSummary.Balance_AmountColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBalance_AmountNull() {
                this[this.tabletbPaidPaymentSummary.Balance_AmountColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTransaction_AmountNull() {
                return this.IsNull(this.tabletbPaidPaymentSummary.Transaction_AmountColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTransaction_AmountNull() {
                this[this.tabletbPaidPaymentSummary.Transaction_AmountColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPaid_AmountNull() {
                return this.IsNull(this.tabletbPaidPaymentSummary.Paid_AmountColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPaid_AmountNull() {
                this[this.tabletbPaidPaymentSummary.Paid_AmountColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocaNull() {
                return this.IsNull(this.tabletbPaidPaymentSummary.LocaColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocaNull() {
                this[this.tabletbPaidPaymentSummary.LocaColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLoca_DescripNull() {
                return this.IsNull(this.tabletbPaidPaymentSummary.Loca_DescripColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLoca_DescripNull() {
                this[this.tabletbPaidPaymentSummary.Loca_DescripColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAcc_CodeNull() {
                return this.IsNull(this.tabletbPaidPaymentSummary.Acc_CodeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAcc_CodeNull() {
                this[this.tabletbPaidPaymentSummary.Acc_CodeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAcc_NameNull() {
                return this.IsNull(this.tabletbPaidPaymentSummary.Acc_NameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAcc_NameNull() {
                this[this.tabletbPaidPaymentSummary.Acc_NameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddress1Null() {
                return this.IsNull(this.tabletbPaidPaymentSummary.Address1Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddress1Null() {
                this[this.tabletbPaidPaymentSummary.Address1Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddress2Null() {
                return this.IsNull(this.tabletbPaidPaymentSummary.Address2Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddress2Null() {
                this[this.tabletbPaidPaymentSummary.Address2Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddress3Null() {
                return this.IsNull(this.tabletbPaidPaymentSummary.Address3Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddress3Null() {
                this[this.tabletbPaidPaymentSummary.Address3Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddress4Null() {
                return this.IsNull(this.tabletbPaidPaymentSummary.Address4Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddress4Null() {
                this[this.tabletbPaidPaymentSummary.Address4Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUser_NameNull() {
                return this.IsNull(this.tabletbPaidPaymentSummary.User_NameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUser_NameNull() {
                this[this.tabletbPaidPaymentSummary.User_NameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStatusNull() {
                return this.IsNull(this.tabletbPaidPaymentSummary.StatusColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStatusNull() {
                this[this.tabletbPaidPaymentSummary.StatusColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tbPaidPaymentModeRow : System.Data.DataRow {
            
            private tbPaidPaymentModeDataTable tabletbPaidPaymentMode;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tbPaidPaymentModeRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletbPaidPaymentMode = ((tbPaidPaymentModeDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Payment_Mode {
                get {
                    try {
                        return ((string)(this[this.tabletbPaidPaymentMode.Payment_ModeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Payment_Mode\' in table \'tbPaidPaymentMode\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbPaidPaymentMode.Payment_ModeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Bank_Name {
                get {
                    try {
                        return ((string)(this[this.tabletbPaidPaymentMode.Bank_NameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Bank_Name\' in table \'tbPaidPaymentMode\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbPaidPaymentMode.Bank_NameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Cheque_No {
                get {
                    try {
                        return ((string)(this[this.tabletbPaidPaymentMode.Cheque_NoColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Cheque_No\' in table \'tbPaidPaymentMode\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbPaidPaymentMode.Cheque_NoColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Cheque_Date {
                get {
                    try {
                        return ((string)(this[this.tabletbPaidPaymentMode.Cheque_DateColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Cheque_Date\' in table \'tbPaidPaymentMode\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbPaidPaymentMode.Cheque_DateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Branch {
                get {
                    try {
                        return ((string)(this[this.tabletbPaidPaymentMode.BranchColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Branch\' in table \'tbPaidPaymentMode\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbPaidPaymentMode.BranchColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Amount {
                get {
                    try {
                        return ((string)(this[this.tabletbPaidPaymentMode.AmountColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Amount\' in table \'tbPaidPaymentMode\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbPaidPaymentMode.AmountColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPayment_ModeNull() {
                return this.IsNull(this.tabletbPaidPaymentMode.Payment_ModeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPayment_ModeNull() {
                this[this.tabletbPaidPaymentMode.Payment_ModeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBank_NameNull() {
                return this.IsNull(this.tabletbPaidPaymentMode.Bank_NameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBank_NameNull() {
                this[this.tabletbPaidPaymentMode.Bank_NameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCheque_NoNull() {
                return this.IsNull(this.tabletbPaidPaymentMode.Cheque_NoColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCheque_NoNull() {
                this[this.tabletbPaidPaymentMode.Cheque_NoColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCheque_DateNull() {
                return this.IsNull(this.tabletbPaidPaymentMode.Cheque_DateColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCheque_DateNull() {
                this[this.tabletbPaidPaymentMode.Cheque_DateColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBranchNull() {
                return this.IsNull(this.tabletbPaidPaymentMode.BranchColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBranchNull() {
                this[this.tabletbPaidPaymentMode.BranchColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountNull() {
                return this.IsNull(this.tabletbPaidPaymentMode.AmountColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountNull() {
                this[this.tabletbPaidPaymentMode.AmountColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class SupplierPaymentSummaryRow : System.Data.DataRow {
            
            private SupplierPaymentSummaryDataTable tableSupplierPaymentSummary;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SupplierPaymentSummaryRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSupplierPaymentSummary = ((SupplierPaymentSummaryDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Acc_Code {
                get {
                    try {
                        return ((string)(this[this.tableSupplierPaymentSummary.Acc_CodeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Acc_Code\' in table \'SupplierPaymentSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSupplierPaymentSummary.Acc_CodeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Acc_Name {
                get {
                    try {
                        return ((string)(this[this.tableSupplierPaymentSummary.Acc_NameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Acc_Name\' in table \'SupplierPaymentSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSupplierPaymentSummary.Acc_NameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Org_Doc_no {
                get {
                    try {
                        return ((string)(this[this.tableSupplierPaymentSummary.Org_Doc_noColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Org_Doc_no\' in table \'SupplierPaymentSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSupplierPaymentSummary.Org_Doc_noColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Post_Date {
                get {
                    try {
                        return ((string)(this[this.tableSupplierPaymentSummary.Post_DateColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Post_Date\' in table \'SupplierPaymentSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSupplierPaymentSummary.Post_DateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Payment_Mode {
                get {
                    try {
                        return ((string)(this[this.tableSupplierPaymentSummary.Payment_ModeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Payment_Mode\' in table \'SupplierPaymentSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSupplierPaymentSummary.Payment_ModeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Bank_Name {
                get {
                    try {
                        return ((string)(this[this.tableSupplierPaymentSummary.Bank_NameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Bank_Name\' in table \'SupplierPaymentSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSupplierPaymentSummary.Bank_NameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Cheque_No {
                get {
                    try {
                        return ((string)(this[this.tableSupplierPaymentSummary.Cheque_NoColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Cheque_No\' in table \'SupplierPaymentSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSupplierPaymentSummary.Cheque_NoColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Cheque_Date {
                get {
                    try {
                        return ((string)(this[this.tableSupplierPaymentSummary.Cheque_DateColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Cheque_Date\' in table \'SupplierPaymentSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSupplierPaymentSummary.Cheque_DateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Branch {
                get {
                    try {
                        return ((string)(this[this.tableSupplierPaymentSummary.BranchColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Branch\' in table \'SupplierPaymentSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSupplierPaymentSummary.BranchColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Amount {
                get {
                    try {
                        return ((string)(this[this.tableSupplierPaymentSummary.AmountColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Amount\' in table \'SupplierPaymentSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSupplierPaymentSummary.AmountColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CodeFrom {
                get {
                    try {
                        return ((string)(this[this.tableSupplierPaymentSummary.CodeFromColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'CodeFrom\' in table \'SupplierPaymentSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSupplierPaymentSummary.CodeFromColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CodeTo {
                get {
                    try {
                        return ((string)(this[this.tableSupplierPaymentSummary.CodeToColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'CodeTo\' in table \'SupplierPaymentSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSupplierPaymentSummary.CodeToColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAcc_CodeNull() {
                return this.IsNull(this.tableSupplierPaymentSummary.Acc_CodeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAcc_CodeNull() {
                this[this.tableSupplierPaymentSummary.Acc_CodeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAcc_NameNull() {
                return this.IsNull(this.tableSupplierPaymentSummary.Acc_NameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAcc_NameNull() {
                this[this.tableSupplierPaymentSummary.Acc_NameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOrg_Doc_noNull() {
                return this.IsNull(this.tableSupplierPaymentSummary.Org_Doc_noColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOrg_Doc_noNull() {
                this[this.tableSupplierPaymentSummary.Org_Doc_noColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPost_DateNull() {
                return this.IsNull(this.tableSupplierPaymentSummary.Post_DateColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPost_DateNull() {
                this[this.tableSupplierPaymentSummary.Post_DateColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPayment_ModeNull() {
                return this.IsNull(this.tableSupplierPaymentSummary.Payment_ModeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPayment_ModeNull() {
                this[this.tableSupplierPaymentSummary.Payment_ModeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBank_NameNull() {
                return this.IsNull(this.tableSupplierPaymentSummary.Bank_NameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBank_NameNull() {
                this[this.tableSupplierPaymentSummary.Bank_NameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCheque_NoNull() {
                return this.IsNull(this.tableSupplierPaymentSummary.Cheque_NoColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCheque_NoNull() {
                this[this.tableSupplierPaymentSummary.Cheque_NoColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCheque_DateNull() {
                return this.IsNull(this.tableSupplierPaymentSummary.Cheque_DateColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCheque_DateNull() {
                this[this.tableSupplierPaymentSummary.Cheque_DateColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBranchNull() {
                return this.IsNull(this.tableSupplierPaymentSummary.BranchColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBranchNull() {
                this[this.tableSupplierPaymentSummary.BranchColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountNull() {
                return this.IsNull(this.tableSupplierPaymentSummary.AmountColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountNull() {
                this[this.tableSupplierPaymentSummary.AmountColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCodeFromNull() {
                return this.IsNull(this.tableSupplierPaymentSummary.CodeFromColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCodeFromNull() {
                this[this.tableSupplierPaymentSummary.CodeFromColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCodeToNull() {
                return this.IsNull(this.tableSupplierPaymentSummary.CodeToColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCodeToNull() {
                this[this.tableSupplierPaymentSummary.CodeToColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class TransactionSummaryRow : System.Data.DataRow {
            
            private TransactionSummaryDataTable tableTransactionSummary;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TransactionSummaryRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTransactionSummary = ((TransactionSummaryDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Loca {
                get {
                    try {
                        return ((string)(this[this.tableTransactionSummary.LocaColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Loca\' in table \'TransactionSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTransactionSummary.LocaColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Loca_Descrip {
                get {
                    try {
                        return ((string)(this[this.tableTransactionSummary.Loca_DescripColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Loca_Descrip\' in table \'TransactionSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTransactionSummary.Loca_DescripColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string To_LocaDesc {
                get {
                    try {
                        return ((string)(this[this.tableTransactionSummary.To_LocaDescColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'To_LocaDesc\' in table \'TransactionSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTransactionSummary.To_LocaDescColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Supplier_Id {
                get {
                    try {
                        return ((string)(this[this.tableTransactionSummary.Supplier_IdColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Supplier_Id\' in table \'TransactionSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTransactionSummary.Supplier_IdColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Supp_Name {
                get {
                    try {
                        return ((string)(this[this.tableTransactionSummary.Supp_NameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Supp_Name\' in table \'TransactionSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTransactionSummary.Supp_NameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Post_Date {
                get {
                    try {
                        return ((string)(this[this.tableTransactionSummary.Post_DateColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Post_Date\' in table \'TransactionSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTransactionSummary.Post_DateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Net_Amount {
                get {
                    try {
                        return ((string)(this[this.tableTransactionSummary.Net_AmountColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Net_Amount\' in table \'TransactionSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTransactionSummary.Net_AmountColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Doc_No {
                get {
                    try {
                        return ((string)(this[this.tableTransactionSummary.Doc_NoColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Doc_No\' in table \'TransactionSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTransactionSummary.Doc_NoColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CodeFrom {
                get {
                    try {
                        return ((string)(this[this.tableTransactionSummary.CodeFromColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'CodeFrom\' in table \'TransactionSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTransactionSummary.CodeFromColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CodeTo {
                get {
                    try {
                        return ((string)(this[this.tableTransactionSummary.CodeToColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'CodeTo\' in table \'TransactionSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTransactionSummary.CodeToColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string To_Loca {
                get {
                    try {
                        return ((string)(this[this.tableTransactionSummary.To_LocaColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'To_Loca\' in table \'TransactionSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTransactionSummary.To_LocaColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocaNull() {
                return this.IsNull(this.tableTransactionSummary.LocaColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocaNull() {
                this[this.tableTransactionSummary.LocaColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLoca_DescripNull() {
                return this.IsNull(this.tableTransactionSummary.Loca_DescripColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLoca_DescripNull() {
                this[this.tableTransactionSummary.Loca_DescripColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTo_LocaDescNull() {
                return this.IsNull(this.tableTransactionSummary.To_LocaDescColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTo_LocaDescNull() {
                this[this.tableTransactionSummary.To_LocaDescColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupplier_IdNull() {
                return this.IsNull(this.tableTransactionSummary.Supplier_IdColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupplier_IdNull() {
                this[this.tableTransactionSummary.Supplier_IdColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupp_NameNull() {
                return this.IsNull(this.tableTransactionSummary.Supp_NameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupp_NameNull() {
                this[this.tableTransactionSummary.Supp_NameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPost_DateNull() {
                return this.IsNull(this.tableTransactionSummary.Post_DateColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPost_DateNull() {
                this[this.tableTransactionSummary.Post_DateColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNet_AmountNull() {
                return this.IsNull(this.tableTransactionSummary.Net_AmountColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNet_AmountNull() {
                this[this.tableTransactionSummary.Net_AmountColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDoc_NoNull() {
                return this.IsNull(this.tableTransactionSummary.Doc_NoColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDoc_NoNull() {
                this[this.tableTransactionSummary.Doc_NoColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCodeFromNull() {
                return this.IsNull(this.tableTransactionSummary.CodeFromColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCodeFromNull() {
                this[this.tableTransactionSummary.CodeFromColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCodeToNull() {
                return this.IsNull(this.tableTransactionSummary.CodeToColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCodeToNull() {
                this[this.tableTransactionSummary.CodeToColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTo_LocaNull() {
                return this.IsNull(this.tableTransactionSummary.To_LocaColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTo_LocaNull() {
                this[this.tableTransactionSummary.To_LocaColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class StockDetailsRow : System.Data.DataRow {
            
            private StockDetailsDataTable tableStockDetails;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal StockDetailsRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableStockDetails = ((StockDetailsDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prod_Code {
                get {
                    try {
                        return ((string)(this[this.tableStockDetails.Prod_CodeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Prod_Code\' in table \'StockDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockDetails.Prod_CodeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prod_Name {
                get {
                    try {
                        return ((string)(this[this.tableStockDetails.Prod_NameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Prod_Name\' in table \'StockDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockDetails.Prod_NameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Department_Id {
                get {
                    try {
                        return ((string)(this[this.tableStockDetails.Department_IdColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Department_Id\' in table \'StockDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockDetails.Department_IdColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Category_Id {
                get {
                    try {
                        return ((string)(this[this.tableStockDetails.Category_IdColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Category_Id\' in table \'StockDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockDetails.Category_IdColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Supplier_Id {
                get {
                    try {
                        return ((string)(this[this.tableStockDetails.Supplier_IdColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Supplier_Id\' in table \'StockDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockDetails.Supplier_IdColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Dept_Name {
                get {
                    try {
                        return ((string)(this[this.tableStockDetails.Dept_NameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Dept_Name\' in table \'StockDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockDetails.Dept_NameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Cat_Name {
                get {
                    try {
                        return ((string)(this[this.tableStockDetails.Cat_NameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Cat_Name\' in table \'StockDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockDetails.Cat_NameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Supp_Name {
                get {
                    try {
                        return ((string)(this[this.tableStockDetails.Supp_NameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Supp_Name\' in table \'StockDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockDetails.Supp_NameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Manf_Name {
                get {
                    try {
                        return ((string)(this[this.tableStockDetails.Manf_NameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Manf_Name\' in table \'StockDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockDetails.Manf_NameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Purchase_price {
                get {
                    try {
                        return ((string)(this[this.tableStockDetails.Purchase_priceColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Purchase_price\' in table \'StockDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockDetails.Purchase_priceColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Selling_Price {
                get {
                    try {
                        return ((string)(this[this.tableStockDetails.Selling_PriceColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Selling_Price\' in table \'StockDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockDetails.Selling_PriceColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Qty {
                get {
                    try {
                        return ((string)(this[this.tableStockDetails.QtyColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Qty\' in table \'StockDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockDetails.QtyColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CodeFrom {
                get {
                    try {
                        return ((string)(this[this.tableStockDetails.CodeFromColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'CodeFrom\' in table \'StockDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockDetails.CodeFromColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CodeTo {
                get {
                    try {
                        return ((string)(this[this.tableStockDetails.CodeToColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'CodeTo\' in table \'StockDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockDetails.CodeToColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Manufacturer_Id {
                get {
                    try {
                        return ((string)(this[this.tableStockDetails.Manufacturer_IdColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Manufacturer_Id\' in table \'StockDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockDetails.Manufacturer_IdColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_CodeNull() {
                return this.IsNull(this.tableStockDetails.Prod_CodeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_CodeNull() {
                this[this.tableStockDetails.Prod_CodeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_NameNull() {
                return this.IsNull(this.tableStockDetails.Prod_NameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_NameNull() {
                this[this.tableStockDetails.Prod_NameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDepartment_IdNull() {
                return this.IsNull(this.tableStockDetails.Department_IdColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDepartment_IdNull() {
                this[this.tableStockDetails.Department_IdColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCategory_IdNull() {
                return this.IsNull(this.tableStockDetails.Category_IdColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCategory_IdNull() {
                this[this.tableStockDetails.Category_IdColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupplier_IdNull() {
                return this.IsNull(this.tableStockDetails.Supplier_IdColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupplier_IdNull() {
                this[this.tableStockDetails.Supplier_IdColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDept_NameNull() {
                return this.IsNull(this.tableStockDetails.Dept_NameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDept_NameNull() {
                this[this.tableStockDetails.Dept_NameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCat_NameNull() {
                return this.IsNull(this.tableStockDetails.Cat_NameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCat_NameNull() {
                this[this.tableStockDetails.Cat_NameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupp_NameNull() {
                return this.IsNull(this.tableStockDetails.Supp_NameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupp_NameNull() {
                this[this.tableStockDetails.Supp_NameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsManf_NameNull() {
                return this.IsNull(this.tableStockDetails.Manf_NameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetManf_NameNull() {
                this[this.tableStockDetails.Manf_NameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPurchase_priceNull() {
                return this.IsNull(this.tableStockDetails.Purchase_priceColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPurchase_priceNull() {
                this[this.tableStockDetails.Purchase_priceColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelling_PriceNull() {
                return this.IsNull(this.tableStockDetails.Selling_PriceColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelling_PriceNull() {
                this[this.tableStockDetails.Selling_PriceColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQtyNull() {
                return this.IsNull(this.tableStockDetails.QtyColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQtyNull() {
                this[this.tableStockDetails.QtyColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCodeFromNull() {
                return this.IsNull(this.tableStockDetails.CodeFromColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCodeFromNull() {
                this[this.tableStockDetails.CodeFromColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCodeToNull() {
                return this.IsNull(this.tableStockDetails.CodeToColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCodeToNull() {
                this[this.tableStockDetails.CodeToColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsManufacturer_IdNull() {
                return this.IsNull(this.tableStockDetails.Manufacturer_IdColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetManufacturer_IdNull() {
                this[this.tableStockDetails.Manufacturer_IdColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dsSalesDetailsRow : System.Data.DataRow {
            
            private dsSalesDetailsDataTable tabledsSalesDetails;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsSalesDetailsRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledsSalesDetails = ((dsSalesDetailsDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prod_Code {
                get {
                    try {
                        return ((string)(this[this.tabledsSalesDetails.Prod_CodeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Prod_Code\' in table \'dsSalesDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsSalesDetails.Prod_CodeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prod_Name {
                get {
                    try {
                        return ((string)(this[this.tabledsSalesDetails.Prod_NameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Prod_Name\' in table \'dsSalesDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsSalesDetails.Prod_NameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Purchase_Price {
                get {
                    try {
                        return ((string)(this[this.tabledsSalesDetails.Purchase_PriceColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Purchase_Price\' in table \'dsSalesDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsSalesDetails.Purchase_PriceColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Selling_Price {
                get {
                    try {
                        return ((string)(this[this.tabledsSalesDetails.Selling_PriceColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Selling_Price\' in table \'dsSalesDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsSalesDetails.Selling_PriceColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Qty {
                get {
                    try {
                        return ((string)(this[this.tabledsSalesDetails.QtyColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Qty\' in table \'dsSalesDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsSalesDetails.QtyColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Loca {
                get {
                    try {
                        return ((string)(this[this.tabledsSalesDetails.LocaColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Loca\' in table \'dsSalesDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsSalesDetails.LocaColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Loca_Descrip {
                get {
                    try {
                        return ((string)(this[this.tabledsSalesDetails.Loca_DescripColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Loca_Descrip\' in table \'dsSalesDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsSalesDetails.Loca_DescripColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CodeFrom {
                get {
                    try {
                        return ((string)(this[this.tabledsSalesDetails.CodeFromColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'CodeFrom\' in table \'dsSalesDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsSalesDetails.CodeFromColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CodeTo {
                get {
                    try {
                        return ((string)(this[this.tabledsSalesDetails.CodeToColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'CodeTo\' in table \'dsSalesDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsSalesDetails.CodeToColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Department_Id {
                get {
                    try {
                        return ((string)(this[this.tabledsSalesDetails.Department_IdColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Department_Id\' in table \'dsSalesDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsSalesDetails.Department_IdColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Dept_Name {
                get {
                    try {
                        return ((string)(this[this.tabledsSalesDetails.Dept_NameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Dept_Name\' in table \'dsSalesDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsSalesDetails.Dept_NameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Category_Id {
                get {
                    try {
                        return ((string)(this[this.tabledsSalesDetails.Category_IdColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Category_Id\' in table \'dsSalesDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsSalesDetails.Category_IdColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Cat_Name {
                get {
                    try {
                        return ((string)(this[this.tabledsSalesDetails.Cat_NameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Cat_Name\' in table \'dsSalesDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsSalesDetails.Cat_NameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Supplier_Id {
                get {
                    try {
                        return ((string)(this[this.tabledsSalesDetails.Supplier_IdColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Supplier_Id\' in table \'dsSalesDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsSalesDetails.Supplier_IdColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Supp_Name {
                get {
                    try {
                        return ((string)(this[this.tabledsSalesDetails.Supp_NameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Supp_Name\' in table \'dsSalesDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsSalesDetails.Supp_NameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Manufacturer_Id {
                get {
                    try {
                        return ((string)(this[this.tabledsSalesDetails.Manufacturer_IdColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Manufacturer_Id\' in table \'dsSalesDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsSalesDetails.Manufacturer_IdColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Manf_Name {
                get {
                    try {
                        return ((string)(this[this.tabledsSalesDetails.Manf_NameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Manf_Name\' in table \'dsSalesDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsSalesDetails.Manf_NameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Amount {
                get {
                    try {
                        return ((string)(this[this.tabledsSalesDetails.AmountColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Amount\' in table \'dsSalesDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsSalesDetails.AmountColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Iid {
                get {
                    try {
                        return ((string)(this[this.tabledsSalesDetails.IidColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Iid\' in table \'dsSalesDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsSalesDetails.IidColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DateFrom {
                get {
                    try {
                        return ((string)(this[this.tabledsSalesDetails.DateFromColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DateFrom\' in table \'dsSalesDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsSalesDetails.DateFromColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DateTo {
                get {
                    try {
                        return ((string)(this[this.tabledsSalesDetails.DateToColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DateTo\' in table \'dsSalesDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsSalesDetails.DateToColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Sales_Date {
                get {
                    try {
                        return ((string)(this[this.tabledsSalesDetails.Sales_DateColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Sales_Date\' in table \'dsSalesDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsSalesDetails.Sales_DateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_CodeNull() {
                return this.IsNull(this.tabledsSalesDetails.Prod_CodeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_CodeNull() {
                this[this.tabledsSalesDetails.Prod_CodeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_NameNull() {
                return this.IsNull(this.tabledsSalesDetails.Prod_NameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_NameNull() {
                this[this.tabledsSalesDetails.Prod_NameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPurchase_PriceNull() {
                return this.IsNull(this.tabledsSalesDetails.Purchase_PriceColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPurchase_PriceNull() {
                this[this.tabledsSalesDetails.Purchase_PriceColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelling_PriceNull() {
                return this.IsNull(this.tabledsSalesDetails.Selling_PriceColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelling_PriceNull() {
                this[this.tabledsSalesDetails.Selling_PriceColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQtyNull() {
                return this.IsNull(this.tabledsSalesDetails.QtyColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQtyNull() {
                this[this.tabledsSalesDetails.QtyColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocaNull() {
                return this.IsNull(this.tabledsSalesDetails.LocaColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocaNull() {
                this[this.tabledsSalesDetails.LocaColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLoca_DescripNull() {
                return this.IsNull(this.tabledsSalesDetails.Loca_DescripColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLoca_DescripNull() {
                this[this.tabledsSalesDetails.Loca_DescripColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCodeFromNull() {
                return this.IsNull(this.tabledsSalesDetails.CodeFromColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCodeFromNull() {
                this[this.tabledsSalesDetails.CodeFromColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCodeToNull() {
                return this.IsNull(this.tabledsSalesDetails.CodeToColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCodeToNull() {
                this[this.tabledsSalesDetails.CodeToColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDepartment_IdNull() {
                return this.IsNull(this.tabledsSalesDetails.Department_IdColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDepartment_IdNull() {
                this[this.tabledsSalesDetails.Department_IdColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDept_NameNull() {
                return this.IsNull(this.tabledsSalesDetails.Dept_NameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDept_NameNull() {
                this[this.tabledsSalesDetails.Dept_NameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCategory_IdNull() {
                return this.IsNull(this.tabledsSalesDetails.Category_IdColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCategory_IdNull() {
                this[this.tabledsSalesDetails.Category_IdColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCat_NameNull() {
                return this.IsNull(this.tabledsSalesDetails.Cat_NameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCat_NameNull() {
                this[this.tabledsSalesDetails.Cat_NameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupplier_IdNull() {
                return this.IsNull(this.tabledsSalesDetails.Supplier_IdColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupplier_IdNull() {
                this[this.tabledsSalesDetails.Supplier_IdColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupp_NameNull() {
                return this.IsNull(this.tabledsSalesDetails.Supp_NameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupp_NameNull() {
                this[this.tabledsSalesDetails.Supp_NameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsManufacturer_IdNull() {
                return this.IsNull(this.tabledsSalesDetails.Manufacturer_IdColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetManufacturer_IdNull() {
                this[this.tabledsSalesDetails.Manufacturer_IdColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsManf_NameNull() {
                return this.IsNull(this.tabledsSalesDetails.Manf_NameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetManf_NameNull() {
                this[this.tabledsSalesDetails.Manf_NameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountNull() {
                return this.IsNull(this.tabledsSalesDetails.AmountColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountNull() {
                this[this.tabledsSalesDetails.AmountColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIidNull() {
                return this.IsNull(this.tabledsSalesDetails.IidColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIidNull() {
                this[this.tabledsSalesDetails.IidColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateFromNull() {
                return this.IsNull(this.tabledsSalesDetails.DateFromColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateFromNull() {
                this[this.tabledsSalesDetails.DateFromColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateToNull() {
                return this.IsNull(this.tabledsSalesDetails.DateToColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateToNull() {
                this[this.tabledsSalesDetails.DateToColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSales_DateNull() {
                return this.IsNull(this.tabledsSalesDetails.Sales_DateColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSales_DateNull() {
                this[this.tabledsSalesDetails.Sales_DateColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tbReportMonthlyAnalyseRow : System.Data.DataRow {
            
            private tbReportMonthlyAnalyseDataTable tabletbReportMonthlyAnalyse;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tbReportMonthlyAnalyseRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletbReportMonthlyAnalyse = ((tbReportMonthlyAnalyseDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Month_Name {
                get {
                    try {
                        return ((string)(this[this.tabletbReportMonthlyAnalyse.Month_NameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Month_Name\' in table \'tbReportMonthlyAnalyse\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbReportMonthlyAnalyse.Month_NameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Sale_Amount {
                get {
                    try {
                        return ((double)(this[this.tabletbReportMonthlyAnalyse.Sale_AmountColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Sale_Amount\' in table \'tbReportMonthlyAnalyse\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbReportMonthlyAnalyse.Sale_AmountColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Purch_amount {
                get {
                    try {
                        return ((double)(this[this.tabletbReportMonthlyAnalyse.Purch_amountColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Purch_amount\' in table \'tbReportMonthlyAnalyse\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbReportMonthlyAnalyse.Purch_amountColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string idx {
                get {
                    try {
                        return ((string)(this[this.tabletbReportMonthlyAnalyse.idxColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'idx\' in table \'tbReportMonthlyAnalyse\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbReportMonthlyAnalyse.idxColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Sale_Qty {
                get {
                    try {
                        return ((decimal)(this[this.tabletbReportMonthlyAnalyse.Sale_QtyColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Sale_Qty\' in table \'tbReportMonthlyAnalyse\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbReportMonthlyAnalyse.Sale_QtyColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Purch_Qty {
                get {
                    try {
                        return ((decimal)(this[this.tabletbReportMonthlyAnalyse.Purch_QtyColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Purch_Qty\' in table \'tbReportMonthlyAnalyse\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbReportMonthlyAnalyse.Purch_QtyColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prod_Code {
                get {
                    try {
                        return ((string)(this[this.tabletbReportMonthlyAnalyse.Prod_CodeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Prod_Code\' in table \'tbReportMonthlyAnalyse\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbReportMonthlyAnalyse.Prod_CodeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prod_Name {
                get {
                    try {
                        return ((string)(this[this.tabletbReportMonthlyAnalyse.Prod_NameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Prod_Name\' in table \'tbReportMonthlyAnalyse\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbReportMonthlyAnalyse.Prod_NameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DateFrom {
                get {
                    try {
                        return ((string)(this[this.tabletbReportMonthlyAnalyse.DateFromColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DateFrom\' in table \'tbReportMonthlyAnalyse\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbReportMonthlyAnalyse.DateFromColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DateTo {
                get {
                    try {
                        return ((string)(this[this.tabletbReportMonthlyAnalyse.DateToColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DateTo\' in table \'tbReportMonthlyAnalyse\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbReportMonthlyAnalyse.DateToColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Profit_Amount {
                get {
                    try {
                        return ((string)(this[this.tabletbReportMonthlyAnalyse.Profit_AmountColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Profit_Amount\' in table \'tbReportMonthlyAnalyse\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tabletbReportMonthlyAnalyse.Profit_AmountColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMonth_NameNull() {
                return this.IsNull(this.tabletbReportMonthlyAnalyse.Month_NameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMonth_NameNull() {
                this[this.tabletbReportMonthlyAnalyse.Month_NameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSale_AmountNull() {
                return this.IsNull(this.tabletbReportMonthlyAnalyse.Sale_AmountColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSale_AmountNull() {
                this[this.tabletbReportMonthlyAnalyse.Sale_AmountColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPurch_amountNull() {
                return this.IsNull(this.tabletbReportMonthlyAnalyse.Purch_amountColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPurch_amountNull() {
                this[this.tabletbReportMonthlyAnalyse.Purch_amountColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsidxNull() {
                return this.IsNull(this.tabletbReportMonthlyAnalyse.idxColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetidxNull() {
                this[this.tabletbReportMonthlyAnalyse.idxColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSale_QtyNull() {
                return this.IsNull(this.tabletbReportMonthlyAnalyse.Sale_QtyColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSale_QtyNull() {
                this[this.tabletbReportMonthlyAnalyse.Sale_QtyColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPurch_QtyNull() {
                return this.IsNull(this.tabletbReportMonthlyAnalyse.Purch_QtyColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPurch_QtyNull() {
                this[this.tabletbReportMonthlyAnalyse.Purch_QtyColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_CodeNull() {
                return this.IsNull(this.tabletbReportMonthlyAnalyse.Prod_CodeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_CodeNull() {
                this[this.tabletbReportMonthlyAnalyse.Prod_CodeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_NameNull() {
                return this.IsNull(this.tabletbReportMonthlyAnalyse.Prod_NameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_NameNull() {
                this[this.tabletbReportMonthlyAnalyse.Prod_NameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateFromNull() {
                return this.IsNull(this.tabletbReportMonthlyAnalyse.DateFromColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateFromNull() {
                this[this.tabletbReportMonthlyAnalyse.DateFromColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateToNull() {
                return this.IsNull(this.tabletbReportMonthlyAnalyse.DateToColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateToNull() {
                this[this.tabletbReportMonthlyAnalyse.DateToColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProfit_AmountNull() {
                return this.IsNull(this.tabletbReportMonthlyAnalyse.Profit_AmountColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProfit_AmountNull() {
                this[this.tabletbReportMonthlyAnalyse.Profit_AmountColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CollectionRow : System.Data.DataRow {
            
            private CollectionDataTable tableCollection;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CollectionRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCollection = ((CollectionDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Code {
                get {
                    try {
                        return ((string)(this[this.tableCollection.CodeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Code\' in table \'Collection\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCollection.CodeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tableCollection.NameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Name\' in table \'Collection\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCollection.NameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCodeNull() {
                return this.IsNull(this.tableCollection.CodeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCodeNull() {
                this[this.tableCollection.CodeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNameNull() {
                return this.IsNull(this.tableCollection.NameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNameNull() {
                this[this.tableCollection.NameColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class SelectedRow : System.Data.DataRow {
            
            private SelectedDataTable tableSelected;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SelectedRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSelected = ((SelectedDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Code {
                get {
                    try {
                        return ((string)(this[this.tableSelected.CodeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Code\' in table \'Selected\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelected.CodeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tableSelected.NameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Name\' in table \'Selected\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelected.NameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCodeNull() {
                return this.IsNull(this.tableSelected.CodeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCodeNull() {
                this[this.tableSelected.CodeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNameNull() {
                return this.IsNull(this.tableSelected.NameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNameNull() {
                this[this.tableSelected.NameColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dsPurchasingDetailsRow : System.Data.DataRow {
            
            private dsPurchasingDetailsDataTable tabledsPurchasingDetails;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsPurchasingDetailsRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledsPurchasingDetails = ((dsPurchasingDetailsDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prod_Code {
                get {
                    try {
                        return ((string)(this[this.tabledsPurchasingDetails.Prod_CodeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Prod_Code\' in table \'dsPurchasingDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurchasingDetails.Prod_CodeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prod_Name {
                get {
                    try {
                        return ((string)(this[this.tabledsPurchasingDetails.Prod_NameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Prod_Name\' in table \'dsPurchasingDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurchasingDetails.Prod_NameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Purchase_Price {
                get {
                    try {
                        return ((decimal)(this[this.tabledsPurchasingDetails.Purchase_PriceColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Purchase_Price\' in table \'dsPurchasingDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurchasingDetails.Purchase_PriceColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Selling_Price {
                get {
                    try {
                        return ((decimal)(this[this.tabledsPurchasingDetails.Selling_PriceColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Selling_Price\' in table \'dsPurchasingDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurchasingDetails.Selling_PriceColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Qty {
                get {
                    try {
                        return ((double)(this[this.tabledsPurchasingDetails.QtyColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Qty\' in table \'dsPurchasingDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurchasingDetails.QtyColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Loca {
                get {
                    try {
                        return ((string)(this[this.tabledsPurchasingDetails.LocaColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Loca\' in table \'dsPurchasingDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurchasingDetails.LocaColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Loca_Descrip {
                get {
                    try {
                        return ((string)(this[this.tabledsPurchasingDetails.Loca_DescripColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Loca_Descrip\' in table \'dsPurchasingDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurchasingDetails.Loca_DescripColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CodeFrom {
                get {
                    try {
                        return ((string)(this[this.tabledsPurchasingDetails.CodeFromColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'CodeFrom\' in table \'dsPurchasingDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurchasingDetails.CodeFromColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CodeTo {
                get {
                    try {
                        return ((string)(this[this.tabledsPurchasingDetails.CodeToColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'CodeTo\' in table \'dsPurchasingDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurchasingDetails.CodeToColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Department_Id {
                get {
                    try {
                        return ((string)(this[this.tabledsPurchasingDetails.Department_IdColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Department_Id\' in table \'dsPurchasingDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurchasingDetails.Department_IdColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Dept_Name {
                get {
                    try {
                        return ((string)(this[this.tabledsPurchasingDetails.Dept_NameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Dept_Name\' in table \'dsPurchasingDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurchasingDetails.Dept_NameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Category_Id {
                get {
                    try {
                        return ((string)(this[this.tabledsPurchasingDetails.Category_IdColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Category_Id\' in table \'dsPurchasingDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurchasingDetails.Category_IdColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Cat_Name {
                get {
                    try {
                        return ((string)(this[this.tabledsPurchasingDetails.Cat_NameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Cat_Name\' in table \'dsPurchasingDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurchasingDetails.Cat_NameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Supplier_Id {
                get {
                    try {
                        return ((string)(this[this.tabledsPurchasingDetails.Supplier_IdColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Supplier_Id\' in table \'dsPurchasingDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurchasingDetails.Supplier_IdColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Supp_Name {
                get {
                    try {
                        return ((string)(this[this.tabledsPurchasingDetails.Supp_NameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Supp_Name\' in table \'dsPurchasingDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurchasingDetails.Supp_NameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Manufacturer_Id {
                get {
                    try {
                        return ((string)(this[this.tabledsPurchasingDetails.Manufacturer_IdColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Manufacturer_Id\' in table \'dsPurchasingDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurchasingDetails.Manufacturer_IdColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Manf_Name {
                get {
                    try {
                        return ((string)(this[this.tabledsPurchasingDetails.Manf_NameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Manf_Name\' in table \'dsPurchasingDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurchasingDetails.Manf_NameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Amount {
                get {
                    try {
                        return ((decimal)(this[this.tabledsPurchasingDetails.AmountColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Amount\' in table \'dsPurchasingDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurchasingDetails.AmountColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DateFrom {
                get {
                    try {
                        return ((string)(this[this.tabledsPurchasingDetails.DateFromColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DateFrom\' in table \'dsPurchasingDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurchasingDetails.DateFromColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DateTo {
                get {
                    try {
                        return ((string)(this[this.tabledsPurchasingDetails.DateToColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DateTo\' in table \'dsPurchasingDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurchasingDetails.DateToColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Purch_Date {
                get {
                    try {
                        return ((string)(this[this.tabledsPurchasingDetails.Purch_DateColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Purch_Date\' in table \'dsPurchasingDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurchasingDetails.Purch_DateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Doc_No {
                get {
                    try {
                        return ((string)(this[this.tabledsPurchasingDetails.Doc_NoColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Doc_No\' in table \'dsPurchasingDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurchasingDetails.Doc_NoColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_CodeNull() {
                return this.IsNull(this.tabledsPurchasingDetails.Prod_CodeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_CodeNull() {
                this[this.tabledsPurchasingDetails.Prod_CodeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_NameNull() {
                return this.IsNull(this.tabledsPurchasingDetails.Prod_NameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_NameNull() {
                this[this.tabledsPurchasingDetails.Prod_NameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPurchase_PriceNull() {
                return this.IsNull(this.tabledsPurchasingDetails.Purchase_PriceColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPurchase_PriceNull() {
                this[this.tabledsPurchasingDetails.Purchase_PriceColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelling_PriceNull() {
                return this.IsNull(this.tabledsPurchasingDetails.Selling_PriceColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelling_PriceNull() {
                this[this.tabledsPurchasingDetails.Selling_PriceColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQtyNull() {
                return this.IsNull(this.tabledsPurchasingDetails.QtyColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQtyNull() {
                this[this.tabledsPurchasingDetails.QtyColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocaNull() {
                return this.IsNull(this.tabledsPurchasingDetails.LocaColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocaNull() {
                this[this.tabledsPurchasingDetails.LocaColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLoca_DescripNull() {
                return this.IsNull(this.tabledsPurchasingDetails.Loca_DescripColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLoca_DescripNull() {
                this[this.tabledsPurchasingDetails.Loca_DescripColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCodeFromNull() {
                return this.IsNull(this.tabledsPurchasingDetails.CodeFromColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCodeFromNull() {
                this[this.tabledsPurchasingDetails.CodeFromColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCodeToNull() {
                return this.IsNull(this.tabledsPurchasingDetails.CodeToColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCodeToNull() {
                this[this.tabledsPurchasingDetails.CodeToColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDepartment_IdNull() {
                return this.IsNull(this.tabledsPurchasingDetails.Department_IdColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDepartment_IdNull() {
                this[this.tabledsPurchasingDetails.Department_IdColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDept_NameNull() {
                return this.IsNull(this.tabledsPurchasingDetails.Dept_NameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDept_NameNull() {
                this[this.tabledsPurchasingDetails.Dept_NameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCategory_IdNull() {
                return this.IsNull(this.tabledsPurchasingDetails.Category_IdColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCategory_IdNull() {
                this[this.tabledsPurchasingDetails.Category_IdColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCat_NameNull() {
                return this.IsNull(this.tabledsPurchasingDetails.Cat_NameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCat_NameNull() {
                this[this.tabledsPurchasingDetails.Cat_NameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupplier_IdNull() {
                return this.IsNull(this.tabledsPurchasingDetails.Supplier_IdColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupplier_IdNull() {
                this[this.tabledsPurchasingDetails.Supplier_IdColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupp_NameNull() {
                return this.IsNull(this.tabledsPurchasingDetails.Supp_NameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupp_NameNull() {
                this[this.tabledsPurchasingDetails.Supp_NameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsManufacturer_IdNull() {
                return this.IsNull(this.tabledsPurchasingDetails.Manufacturer_IdColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetManufacturer_IdNull() {
                this[this.tabledsPurchasingDetails.Manufacturer_IdColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsManf_NameNull() {
                return this.IsNull(this.tabledsPurchasingDetails.Manf_NameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetManf_NameNull() {
                this[this.tabledsPurchasingDetails.Manf_NameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountNull() {
                return this.IsNull(this.tabledsPurchasingDetails.AmountColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountNull() {
                this[this.tabledsPurchasingDetails.AmountColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateFromNull() {
                return this.IsNull(this.tabledsPurchasingDetails.DateFromColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateFromNull() {
                this[this.tabledsPurchasingDetails.DateFromColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateToNull() {
                return this.IsNull(this.tabledsPurchasingDetails.DateToColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateToNull() {
                this[this.tabledsPurchasingDetails.DateToColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPurch_DateNull() {
                return this.IsNull(this.tabledsPurchasingDetails.Purch_DateColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPurch_DateNull() {
                this[this.tabledsPurchasingDetails.Purch_DateColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDoc_NoNull() {
                return this.IsNull(this.tabledsPurchasingDetails.Doc_NoColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDoc_NoNull() {
                this[this.tabledsPurchasingDetails.Doc_NoColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dsAnalyseDataRow : System.Data.DataRow {
            
            private dsAnalyseDataDataTable tabledsAnalyseData;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsAnalyseDataRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledsAnalyseData = ((dsAnalyseDataDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prod_Code {
                get {
                    try {
                        return ((string)(this[this.tabledsAnalyseData.Prod_CodeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Prod_Code\' in table \'dsAnalyseData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsAnalyseData.Prod_CodeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prod_Name {
                get {
                    try {
                        return ((string)(this[this.tabledsAnalyseData.Prod_NameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Prod_Name\' in table \'dsAnalyseData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsAnalyseData.Prod_NameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Purchase_price {
                get {
                    try {
                        return ((decimal)(this[this.tabledsAnalyseData.Purchase_priceColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Purchase_price\' in table \'dsAnalyseData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsAnalyseData.Purchase_priceColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Selling_Price {
                get {
                    try {
                        return ((decimal)(this[this.tabledsAnalyseData.Selling_PriceColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Selling_Price\' in table \'dsAnalyseData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsAnalyseData.Selling_PriceColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Purch_Amount {
                get {
                    try {
                        return ((decimal)(this[this.tabledsAnalyseData.Purch_AmountColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Purch_Amount\' in table \'dsAnalyseData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsAnalyseData.Purch_AmountColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Sel_Amount {
                get {
                    try {
                        return ((decimal)(this[this.tabledsAnalyseData.Sel_AmountColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Sel_Amount\' in table \'dsAnalyseData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsAnalyseData.Sel_AmountColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Pro_Amount {
                get {
                    try {
                        return ((decimal)(this[this.tabledsAnalyseData.Pro_AmountColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Pro_Amount\' in table \'dsAnalyseData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsAnalyseData.Pro_AmountColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Tr_Date {
                get {
                    try {
                        return ((string)(this[this.tabledsAnalyseData.Tr_DateColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Tr_Date\' in table \'dsAnalyseData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsAnalyseData.Tr_DateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Sel_Qty {
                get {
                    try {
                        return ((double)(this[this.tabledsAnalyseData.Sel_QtyColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Sel_Qty\' in table \'dsAnalyseData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsAnalyseData.Sel_QtyColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DateFrom {
                get {
                    try {
                        return ((string)(this[this.tabledsAnalyseData.DateFromColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DateFrom\' in table \'dsAnalyseData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsAnalyseData.DateFromColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DateTo {
                get {
                    try {
                        return ((string)(this[this.tabledsAnalyseData.DateToColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DateTo\' in table \'dsAnalyseData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsAnalyseData.DateToColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_CodeNull() {
                return this.IsNull(this.tabledsAnalyseData.Prod_CodeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_CodeNull() {
                this[this.tabledsAnalyseData.Prod_CodeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_NameNull() {
                return this.IsNull(this.tabledsAnalyseData.Prod_NameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_NameNull() {
                this[this.tabledsAnalyseData.Prod_NameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPurchase_priceNull() {
                return this.IsNull(this.tabledsAnalyseData.Purchase_priceColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPurchase_priceNull() {
                this[this.tabledsAnalyseData.Purchase_priceColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelling_PriceNull() {
                return this.IsNull(this.tabledsAnalyseData.Selling_PriceColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelling_PriceNull() {
                this[this.tabledsAnalyseData.Selling_PriceColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPurch_AmountNull() {
                return this.IsNull(this.tabledsAnalyseData.Purch_AmountColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPurch_AmountNull() {
                this[this.tabledsAnalyseData.Purch_AmountColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSel_AmountNull() {
                return this.IsNull(this.tabledsAnalyseData.Sel_AmountColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSel_AmountNull() {
                this[this.tabledsAnalyseData.Sel_AmountColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPro_AmountNull() {
                return this.IsNull(this.tabledsAnalyseData.Pro_AmountColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPro_AmountNull() {
                this[this.tabledsAnalyseData.Pro_AmountColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTr_DateNull() {
                return this.IsNull(this.tabledsAnalyseData.Tr_DateColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTr_DateNull() {
                this[this.tabledsAnalyseData.Tr_DateColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSel_QtyNull() {
                return this.IsNull(this.tabledsAnalyseData.Sel_QtyColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSel_QtyNull() {
                this[this.tabledsAnalyseData.Sel_QtyColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateFromNull() {
                return this.IsNull(this.tabledsAnalyseData.DateFromColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateFromNull() {
                this[this.tabledsAnalyseData.DateFromColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateToNull() {
                return this.IsNull(this.tabledsAnalyseData.DateToColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateToNull() {
                this[this.tabledsAnalyseData.DateToColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DepartmentRowChangeEvent : System.EventArgs {
            
            private DepartmentRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DepartmentRowChangeEvent(DepartmentRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DepartmentRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CategoryRowChangeEvent : System.EventArgs {
            
            private CategoryRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CategoryRowChangeEvent(CategoryRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CategoryRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class StockAdjustRowChangeEvent : System.EventArgs {
            
            private StockAdjustRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockAdjustRowChangeEvent(StockAdjustRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockAdjustRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class TransferNoteRowChangeEvent : System.EventArgs {
            
            private TransferNoteRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TransferNoteRowChangeEvent(TransferNoteRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TransferNoteRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dsTogDetailsRowChangeEvent : System.EventArgs {
            
            private dsTogDetailsRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsTogDetailsRowChangeEvent(dsTogDetailsRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsTogDetailsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dsStockAdjustDetailsRowChangeEvent : System.EventArgs {
            
            private dsStockAdjustDetailsRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsStockAdjustDetailsRowChangeEvent(dsStockAdjustDetailsRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsStockAdjustDetailsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class GoodReceivedNoteRowChangeEvent : System.EventArgs {
            
            private GoodReceivedNoteRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GoodReceivedNoteRowChangeEvent(GoodReceivedNoteRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GoodReceivedNoteRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dsGRNDetailsForRepRowChangeEvent : System.EventArgs {
            
            private dsGRNDetailsForRepRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsGRNDetailsForRepRowChangeEvent(dsGRNDetailsForRepRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsGRNDetailsForRepRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class PurchaseOrderRowChangeEvent : System.EventArgs {
            
            private PurchaseOrderRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PurchaseOrderRowChangeEvent(PurchaseOrderRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PurchaseOrderRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dsPurchaseOrderDetailsRowChangeEvent : System.EventArgs {
            
            private dsPurchaseOrderDetailsRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsPurchaseOrderDetailsRowChangeEvent(dsPurchaseOrderDetailsRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsPurchaseOrderDetailsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ProductRowChangeEvent : System.EventArgs {
            
            private ProductRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProductRowChangeEvent(ProductRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProductRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class InvoiceRowChangeEvent : System.EventArgs {
            
            private InvoiceRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public InvoiceRowChangeEvent(InvoiceRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public InvoiceRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dsAccountRowChangeEvent : System.EventArgs {
            
            private dsAccountRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsAccountRowChangeEvent(dsAccountRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsAccountRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dsInvoiceDetailsRowChangeEvent : System.EventArgs {
            
            private dsInvoiceDetailsRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsInvoiceDetailsRowChangeEvent(dsInvoiceDetailsRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsInvoiceDetailsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dsStockProductwiseRowChangeEvent : System.EventArgs {
            
            private dsStockProductwiseRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsStockProductwiseRowChangeEvent(dsStockProductwiseRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsStockProductwiseRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class PendingPaymentsRowChangeEvent : System.EventArgs {
            
            private PendingPaymentsRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PendingPaymentsRowChangeEvent(PendingPaymentsRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PendingPaymentsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class SelectedPaymentsRowChangeEvent : System.EventArgs {
            
            private SelectedPaymentsRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SelectedPaymentsRowChangeEvent(SelectedPaymentsRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SelectedPaymentsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class PaymentDetailsRowChangeEvent : System.EventArgs {
            
            private PaymentDetailsRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PaymentDetailsRowChangeEvent(PaymentDetailsRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PaymentDetailsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tbPaidPaymentSummaryRowChangeEvent : System.EventArgs {
            
            private tbPaidPaymentSummaryRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tbPaidPaymentSummaryRowChangeEvent(tbPaidPaymentSummaryRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tbPaidPaymentSummaryRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tbPaidPaymentModeRowChangeEvent : System.EventArgs {
            
            private tbPaidPaymentModeRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tbPaidPaymentModeRowChangeEvent(tbPaidPaymentModeRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tbPaidPaymentModeRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class SupplierPaymentSummaryRowChangeEvent : System.EventArgs {
            
            private SupplierPaymentSummaryRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SupplierPaymentSummaryRowChangeEvent(SupplierPaymentSummaryRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SupplierPaymentSummaryRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class TransactionSummaryRowChangeEvent : System.EventArgs {
            
            private TransactionSummaryRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TransactionSummaryRowChangeEvent(TransactionSummaryRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TransactionSummaryRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class StockDetailsRowChangeEvent : System.EventArgs {
            
            private StockDetailsRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockDetailsRowChangeEvent(StockDetailsRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockDetailsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dsSalesDetailsRowChangeEvent : System.EventArgs {
            
            private dsSalesDetailsRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsSalesDetailsRowChangeEvent(dsSalesDetailsRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsSalesDetailsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tbReportMonthlyAnalyseRowChangeEvent : System.EventArgs {
            
            private tbReportMonthlyAnalyseRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tbReportMonthlyAnalyseRowChangeEvent(tbReportMonthlyAnalyseRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tbReportMonthlyAnalyseRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CollectionRowChangeEvent : System.EventArgs {
            
            private CollectionRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CollectionRowChangeEvent(CollectionRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CollectionRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class SelectedRowChangeEvent : System.EventArgs {
            
            private SelectedRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SelectedRowChangeEvent(SelectedRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SelectedRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dsPurchasingDetailsRowChangeEvent : System.EventArgs {
            
            private dsPurchasingDetailsRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsPurchasingDetailsRowChangeEvent(dsPurchasingDetailsRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsPurchasingDetailsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dsAnalyseDataRowChangeEvent : System.EventArgs {
            
            private dsAnalyseDataRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsAnalyseDataRowChangeEvent(dsAnalyseDataRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsAnalyseDataRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591