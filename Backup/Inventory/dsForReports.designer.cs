//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.9151
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Inventory {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dsForReports")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class dsForReports : global::System.Data.DataSet {
        
        private DepartmentDataTable tableDepartment;
        
        private CategoryDataTable tableCategory;
        
        private StockAdjustDataTable tableStockAdjust;
        
        private TransferNoteDataTable tableTransferNote;
        
        private dsTogDetailsDataTable tabledsTogDetails;
        
        private dsStockAdjustDetailsDataTable tabledsStockAdjustDetails;
        
        private GoodReceivedNoteDataTable tableGoodReceivedNote;
        
        private dsGRNDetailsForRepDataTable tabledsGRNDetailsForRep;
        
        private PurchaseOrderDataTable tablePurchaseOrder;
        
        private dsPurchaseOrderDetailsDataTable tabledsPurchaseOrderDetails;
        
        private ProductDataTable tableProduct;
        
        private InvoiceDataTable tableInvoice;
        
        private dsAccountDataTable tabledsAccount;
        
        private dsInvoiceDetailsDataTable tabledsInvoiceDetails;
        
        private dsStockProductwiseDataTable tabledsStockProductwise;
        
        private PendingPaymentsDataTable tablePendingPayments;
        
        private SelectedPaymentsDataTable tableSelectedPayments;
        
        private PaymentDetailsDataTable tablePaymentDetails;
        
        private tbPaidPaymentSummaryDataTable tabletbPaidPaymentSummary;
        
        private tbPaidPaymentModeDataTable tabletbPaidPaymentMode;
        
        private SupplierPaymentSummaryDataTable tableSupplierPaymentSummary;
        
        private TransactionSummaryDataTable tableTransactionSummary;
        
        private StockDetailsDataTable tableStockDetails;
        
        private dsSalesDetailsDataTable tabledsSalesDetails;
        
        private tbReportMonthlyAnalyseDataTable tabletbReportMonthlyAnalyse;
        
        private CollectionDataTable tableCollection;
        
        private SelectedDataTable tableSelected;
        
        private dsPurchasingDetailsDataTable tabledsPurchasingDetails;
        
        private dsAnalyseDataDataTable tabledsAnalyseData;
        
        private dsProductBinCardDataTable tabledsProductBinCard;
        
        private dsBarcodeDataTable tabledsBarcode;
        
        private SupplierStatementDataTable tableSupplierStatement;
        
        private dsChequeReconDataTable tabledsChequeRecon;
        
        private dsChequeReconDetailsDataTable tabledsChequeReconDetails;
        
        private dsProfitableProductDataTable tabledsProfitableProduct;
        
        private dsReOrderLevelDetailsDataTable tabledsReOrderLevelDetails;
        
        private ManufacturerDetailsDataTable tableManufacturerDetails;
        
        private dsCreditorsOutstandingDataTable tabledsCreditorsOutstanding;
        
        private dsProductMovingDataTable tabledsProductMoving;
        
        private dsProductSalesComparisonDataTable tabledsProductSalesComparison;
        
        private dsProductDetails_ChangeDataTable tabledsProductDetails_Change;
        
        private dsTempPacketProductDataTable tabledsTempPacketProduct;
        
        private dsPacketingProductNoteDataTable tabledsPacketingProductNote;
        
        private dsNonMovingProductDataTable tabledsNonMovingProduct;
        
        private dsHourlySalesDataTable tabledsHourlySales;
        
        private dsDailyCollectionDataTable tabledsDailyCollection;
        
        private dsReceiptWiseSalesDataTable tabledsReceiptWiseSales;
        
        private dsSalesmanSalesDataTable tabledsSalesmanSales;
        
        private dsPurSalesStockDataTable tabledsPurSalesStock;
        
        private dsGivenDateStockDataTable tabledsGivenDateStock;
        
        private dsProductToBeReturnDataTable tabledsProductToBeReturn;
        
        private dsProdROLDataTable tabledsProdROL;
        
        private dsProductReqDataTable tabledsProductReq;
        
        private dsProductDiscountDataTable tabledsProductDiscount;
        
        private PendingReturnsDataTable tablePendingReturns;
        
        private SelectedSetoffDataTable tableSelectedSetoff;
        
        private dsPaymentsetOffDetailsDataTable tabledsPaymentsetOffDetails;
        
        private dsPaymentSetOffSummaryDataTable tabledsPaymentSetOffSummary;
        
        private dsPriceMasterDetailsDataTable tabledsPriceMasterDetails;
        
        private dsSystem_LogDataTable tabledsSystem_Log;
        
        private dsPostDatedChequeDataTable tabledsPostDatedCheque;
        
        private dsProductLinkTempDataTable tabledsProductLinkTemp;
        
        private PriceChangeDataTable tablePriceChange;
        
        private dsPosSalesSummaryDataTable tabledsPosSalesSummary;
        
        private DataTable1DataTable tableDataTable1;
        
        private tb_Customer_DetailDataTable tabletb_Customer_Detail;
        
        private dsCustomerSalesDataTable tabledsCustomerSales;
        
        private dsPurchScheduleDataTable tabledsPurchSchedule;
        
        private CompanyProfileDataTable tableCompanyProfile;
        
        private dsFreeIssuedProductDataTable tabledsFreeIssuedProduct;
        
        private dsLocaWiseTGNSummaryDataTable tabledsLocaWiseTGNSummary;
        
        private dsReturnChequeDataTable tabledsReturnCheque;
        
        private dsProductDiscardDataTable tabledsProductDiscard;
        
        private dsChqReconnDataTable tabledsChqReconn;
        
        private dsLocaWiseDeptSaleDataTable tabledsLocaWiseDeptSale;
        
        private dsProdWiseSpecialDiscDataTable tabledsProdWiseSpecialDisc;
        
        private dsProdCombinationDataTable tabledsProdCombination;
        
        private dsPurchaseScheduleDataTable tabledsPurchaseSchedule;
        
        private dsLocaWiseProdOrderDataTable tabledsLocaWiseProdOrder;
        
        private dsPurchaseDataTable tabledsPurchase;
        
        private dsProductSumDetailsDataTable tabledsProductSumDetails;
        
        private dsDailySalesSummaryDetailWiseDataTable tabledsDailySalesSummaryDetailWise;
        
        private dsCompanyLogoDataTable tabledsCompanyLogo;
        
        private dsCashINOUTDataTable tabledsCashINOUT;
        
        private dsDailyCollectionSummaryDataTable tabledsDailyCollectionSummary;
        
        private dsCusWiseDailySummDataTable tabledsCusWiseDailySumm;
        
        private dsExpenceTransactionDataTable tabledsExpenceTransaction;
        
        private dsDayBookRepDataTable tabledsDayBookRep;
        
        private dtBatchWisePriceDataTable tabledtBatchWisePrice;
        
        private dsCusAddressDataTable tabledsCusAddress;
        
        private dsTempPacketProduct1DataTable tabledsTempPacketProduct1;
        
        private dsProdBundleDataTable tabledsProdBundle;
        
        private StatementDataTable tableStatement;
        
        private CompanyDataTable tableCompany;
        
        private dsInvoiceColSummeryDataTable tabledsInvoiceColSummery;
        
        private dsCashDenoDataTable tabledsCashDeno;
        
        private CRM_CustomerDataTable tableCRM_Customer;
        
        private dtOGFUploadDataTable tabledtOGFUpload;
        
        private CustomerDataTable tableCustomer;
        
        private DailyDetailsDataTable tableDailyDetails;
        
        private Statement1DataTable tableStatement1;
        
        private dsIssuedVoucherDataTable tabledsIssuedVoucher;
        
        private dsReceivedVoucherDataTable tabledsReceivedVoucher;
        
        private dtExpDetailsDataTable tabledtExpDetails;
        
        private DayEnd_Pos_TransactionDataTable tableDayEnd_Pos_Transaction;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public dsForReports() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected dsForReports(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["Department"] != null)) {
                    base.Tables.Add(new DepartmentDataTable(ds.Tables["Department"]));
                }
                if ((ds.Tables["Category"] != null)) {
                    base.Tables.Add(new CategoryDataTable(ds.Tables["Category"]));
                }
                if ((ds.Tables["StockAdjust"] != null)) {
                    base.Tables.Add(new StockAdjustDataTable(ds.Tables["StockAdjust"]));
                }
                if ((ds.Tables["TransferNote"] != null)) {
                    base.Tables.Add(new TransferNoteDataTable(ds.Tables["TransferNote"]));
                }
                if ((ds.Tables["dsTogDetails"] != null)) {
                    base.Tables.Add(new dsTogDetailsDataTable(ds.Tables["dsTogDetails"]));
                }
                if ((ds.Tables["dsStockAdjustDetails"] != null)) {
                    base.Tables.Add(new dsStockAdjustDetailsDataTable(ds.Tables["dsStockAdjustDetails"]));
                }
                if ((ds.Tables["GoodReceivedNote"] != null)) {
                    base.Tables.Add(new GoodReceivedNoteDataTable(ds.Tables["GoodReceivedNote"]));
                }
                if ((ds.Tables["dsGRNDetailsForRep"] != null)) {
                    base.Tables.Add(new dsGRNDetailsForRepDataTable(ds.Tables["dsGRNDetailsForRep"]));
                }
                if ((ds.Tables["PurchaseOrder"] != null)) {
                    base.Tables.Add(new PurchaseOrderDataTable(ds.Tables["PurchaseOrder"]));
                }
                if ((ds.Tables["dsPurchaseOrderDetails"] != null)) {
                    base.Tables.Add(new dsPurchaseOrderDetailsDataTable(ds.Tables["dsPurchaseOrderDetails"]));
                }
                if ((ds.Tables["Product"] != null)) {
                    base.Tables.Add(new ProductDataTable(ds.Tables["Product"]));
                }
                if ((ds.Tables["Invoice"] != null)) {
                    base.Tables.Add(new InvoiceDataTable(ds.Tables["Invoice"]));
                }
                if ((ds.Tables["dsAccount"] != null)) {
                    base.Tables.Add(new dsAccountDataTable(ds.Tables["dsAccount"]));
                }
                if ((ds.Tables["dsInvoiceDetails"] != null)) {
                    base.Tables.Add(new dsInvoiceDetailsDataTable(ds.Tables["dsInvoiceDetails"]));
                }
                if ((ds.Tables["dsStockProductwise"] != null)) {
                    base.Tables.Add(new dsStockProductwiseDataTable(ds.Tables["dsStockProductwise"]));
                }
                if ((ds.Tables["PendingPayments"] != null)) {
                    base.Tables.Add(new PendingPaymentsDataTable(ds.Tables["PendingPayments"]));
                }
                if ((ds.Tables["SelectedPayments"] != null)) {
                    base.Tables.Add(new SelectedPaymentsDataTable(ds.Tables["SelectedPayments"]));
                }
                if ((ds.Tables["PaymentDetails"] != null)) {
                    base.Tables.Add(new PaymentDetailsDataTable(ds.Tables["PaymentDetails"]));
                }
                if ((ds.Tables["tbPaidPaymentSummary"] != null)) {
                    base.Tables.Add(new tbPaidPaymentSummaryDataTable(ds.Tables["tbPaidPaymentSummary"]));
                }
                if ((ds.Tables["tbPaidPaymentMode"] != null)) {
                    base.Tables.Add(new tbPaidPaymentModeDataTable(ds.Tables["tbPaidPaymentMode"]));
                }
                if ((ds.Tables["SupplierPaymentSummary"] != null)) {
                    base.Tables.Add(new SupplierPaymentSummaryDataTable(ds.Tables["SupplierPaymentSummary"]));
                }
                if ((ds.Tables["TransactionSummary"] != null)) {
                    base.Tables.Add(new TransactionSummaryDataTable(ds.Tables["TransactionSummary"]));
                }
                if ((ds.Tables["StockDetails"] != null)) {
                    base.Tables.Add(new StockDetailsDataTable(ds.Tables["StockDetails"]));
                }
                if ((ds.Tables["dsSalesDetails"] != null)) {
                    base.Tables.Add(new dsSalesDetailsDataTable(ds.Tables["dsSalesDetails"]));
                }
                if ((ds.Tables["tbReportMonthlyAnalyse"] != null)) {
                    base.Tables.Add(new tbReportMonthlyAnalyseDataTable(ds.Tables["tbReportMonthlyAnalyse"]));
                }
                if ((ds.Tables["Collection"] != null)) {
                    base.Tables.Add(new CollectionDataTable(ds.Tables["Collection"]));
                }
                if ((ds.Tables["Selected"] != null)) {
                    base.Tables.Add(new SelectedDataTable(ds.Tables["Selected"]));
                }
                if ((ds.Tables["dsPurchasingDetails"] != null)) {
                    base.Tables.Add(new dsPurchasingDetailsDataTable(ds.Tables["dsPurchasingDetails"]));
                }
                if ((ds.Tables["dsAnalyseData"] != null)) {
                    base.Tables.Add(new dsAnalyseDataDataTable(ds.Tables["dsAnalyseData"]));
                }
                if ((ds.Tables["dsProductBinCard"] != null)) {
                    base.Tables.Add(new dsProductBinCardDataTable(ds.Tables["dsProductBinCard"]));
                }
                if ((ds.Tables["dsBarcode"] != null)) {
                    base.Tables.Add(new dsBarcodeDataTable(ds.Tables["dsBarcode"]));
                }
                if ((ds.Tables["SupplierStatement"] != null)) {
                    base.Tables.Add(new SupplierStatementDataTable(ds.Tables["SupplierStatement"]));
                }
                if ((ds.Tables["dsChequeRecon"] != null)) {
                    base.Tables.Add(new dsChequeReconDataTable(ds.Tables["dsChequeRecon"]));
                }
                if ((ds.Tables["dsChequeReconDetails"] != null)) {
                    base.Tables.Add(new dsChequeReconDetailsDataTable(ds.Tables["dsChequeReconDetails"]));
                }
                if ((ds.Tables["dsProfitableProduct"] != null)) {
                    base.Tables.Add(new dsProfitableProductDataTable(ds.Tables["dsProfitableProduct"]));
                }
                if ((ds.Tables["dsReOrderLevelDetails"] != null)) {
                    base.Tables.Add(new dsReOrderLevelDetailsDataTable(ds.Tables["dsReOrderLevelDetails"]));
                }
                if ((ds.Tables["ManufacturerDetails"] != null)) {
                    base.Tables.Add(new ManufacturerDetailsDataTable(ds.Tables["ManufacturerDetails"]));
                }
                if ((ds.Tables["dsCreditorsOutstanding"] != null)) {
                    base.Tables.Add(new dsCreditorsOutstandingDataTable(ds.Tables["dsCreditorsOutstanding"]));
                }
                if ((ds.Tables["dsProductMoving"] != null)) {
                    base.Tables.Add(new dsProductMovingDataTable(ds.Tables["dsProductMoving"]));
                }
                if ((ds.Tables["dsProductSalesComparison"] != null)) {
                    base.Tables.Add(new dsProductSalesComparisonDataTable(ds.Tables["dsProductSalesComparison"]));
                }
                if ((ds.Tables["dsProductDetails_Change"] != null)) {
                    base.Tables.Add(new dsProductDetails_ChangeDataTable(ds.Tables["dsProductDetails_Change"]));
                }
                if ((ds.Tables["dsTempPacketProduct"] != null)) {
                    base.Tables.Add(new dsTempPacketProductDataTable(ds.Tables["dsTempPacketProduct"]));
                }
                if ((ds.Tables["dsPacketingProductNote"] != null)) {
                    base.Tables.Add(new dsPacketingProductNoteDataTable(ds.Tables["dsPacketingProductNote"]));
                }
                if ((ds.Tables["dsNonMovingProduct"] != null)) {
                    base.Tables.Add(new dsNonMovingProductDataTable(ds.Tables["dsNonMovingProduct"]));
                }
                if ((ds.Tables["dsHourlySales"] != null)) {
                    base.Tables.Add(new dsHourlySalesDataTable(ds.Tables["dsHourlySales"]));
                }
                if ((ds.Tables["dsDailyCollection"] != null)) {
                    base.Tables.Add(new dsDailyCollectionDataTable(ds.Tables["dsDailyCollection"]));
                }
                if ((ds.Tables["dsReceiptWiseSales"] != null)) {
                    base.Tables.Add(new dsReceiptWiseSalesDataTable(ds.Tables["dsReceiptWiseSales"]));
                }
                if ((ds.Tables["dsSalesmanSales"] != null)) {
                    base.Tables.Add(new dsSalesmanSalesDataTable(ds.Tables["dsSalesmanSales"]));
                }
                if ((ds.Tables["dsPurSalesStock"] != null)) {
                    base.Tables.Add(new dsPurSalesStockDataTable(ds.Tables["dsPurSalesStock"]));
                }
                if ((ds.Tables["dsGivenDateStock"] != null)) {
                    base.Tables.Add(new dsGivenDateStockDataTable(ds.Tables["dsGivenDateStock"]));
                }
                if ((ds.Tables["dsProductToBeReturn"] != null)) {
                    base.Tables.Add(new dsProductToBeReturnDataTable(ds.Tables["dsProductToBeReturn"]));
                }
                if ((ds.Tables["dsProdROL"] != null)) {
                    base.Tables.Add(new dsProdROLDataTable(ds.Tables["dsProdROL"]));
                }
                if ((ds.Tables["dsProductReq"] != null)) {
                    base.Tables.Add(new dsProductReqDataTable(ds.Tables["dsProductReq"]));
                }
                if ((ds.Tables["dsProductDiscount"] != null)) {
                    base.Tables.Add(new dsProductDiscountDataTable(ds.Tables["dsProductDiscount"]));
                }
                if ((ds.Tables["PendingReturns"] != null)) {
                    base.Tables.Add(new PendingReturnsDataTable(ds.Tables["PendingReturns"]));
                }
                if ((ds.Tables["SelectedSetoff"] != null)) {
                    base.Tables.Add(new SelectedSetoffDataTable(ds.Tables["SelectedSetoff"]));
                }
                if ((ds.Tables["dsPaymentsetOffDetails"] != null)) {
                    base.Tables.Add(new dsPaymentsetOffDetailsDataTable(ds.Tables["dsPaymentsetOffDetails"]));
                }
                if ((ds.Tables["dsPaymentSetOffSummary"] != null)) {
                    base.Tables.Add(new dsPaymentSetOffSummaryDataTable(ds.Tables["dsPaymentSetOffSummary"]));
                }
                if ((ds.Tables["dsPriceMasterDetails"] != null)) {
                    base.Tables.Add(new dsPriceMasterDetailsDataTable(ds.Tables["dsPriceMasterDetails"]));
                }
                if ((ds.Tables["dsSystem_Log"] != null)) {
                    base.Tables.Add(new dsSystem_LogDataTable(ds.Tables["dsSystem_Log"]));
                }
                if ((ds.Tables["dsPostDatedCheque"] != null)) {
                    base.Tables.Add(new dsPostDatedChequeDataTable(ds.Tables["dsPostDatedCheque"]));
                }
                if ((ds.Tables["dsProductLinkTemp"] != null)) {
                    base.Tables.Add(new dsProductLinkTempDataTable(ds.Tables["dsProductLinkTemp"]));
                }
                if ((ds.Tables["PriceChange"] != null)) {
                    base.Tables.Add(new PriceChangeDataTable(ds.Tables["PriceChange"]));
                }
                if ((ds.Tables["dsPosSalesSummary"] != null)) {
                    base.Tables.Add(new dsPosSalesSummaryDataTable(ds.Tables["dsPosSalesSummary"]));
                }
                if ((ds.Tables["DataTable1"] != null)) {
                    base.Tables.Add(new DataTable1DataTable(ds.Tables["DataTable1"]));
                }
                if ((ds.Tables["tb_Customer_Detail"] != null)) {
                    base.Tables.Add(new tb_Customer_DetailDataTable(ds.Tables["tb_Customer_Detail"]));
                }
                if ((ds.Tables["dsCustomerSales"] != null)) {
                    base.Tables.Add(new dsCustomerSalesDataTable(ds.Tables["dsCustomerSales"]));
                }
                if ((ds.Tables["dsPurchSchedule"] != null)) {
                    base.Tables.Add(new dsPurchScheduleDataTable(ds.Tables["dsPurchSchedule"]));
                }
                if ((ds.Tables["CompanyProfile"] != null)) {
                    base.Tables.Add(new CompanyProfileDataTable(ds.Tables["CompanyProfile"]));
                }
                if ((ds.Tables["dsFreeIssuedProduct"] != null)) {
                    base.Tables.Add(new dsFreeIssuedProductDataTable(ds.Tables["dsFreeIssuedProduct"]));
                }
                if ((ds.Tables["dsLocaWiseTGNSummary"] != null)) {
                    base.Tables.Add(new dsLocaWiseTGNSummaryDataTable(ds.Tables["dsLocaWiseTGNSummary"]));
                }
                if ((ds.Tables["dsReturnCheque"] != null)) {
                    base.Tables.Add(new dsReturnChequeDataTable(ds.Tables["dsReturnCheque"]));
                }
                if ((ds.Tables["dsProductDiscard"] != null)) {
                    base.Tables.Add(new dsProductDiscardDataTable(ds.Tables["dsProductDiscard"]));
                }
                if ((ds.Tables["dsChqReconn"] != null)) {
                    base.Tables.Add(new dsChqReconnDataTable(ds.Tables["dsChqReconn"]));
                }
                if ((ds.Tables["dsLocaWiseDeptSale"] != null)) {
                    base.Tables.Add(new dsLocaWiseDeptSaleDataTable(ds.Tables["dsLocaWiseDeptSale"]));
                }
                if ((ds.Tables["dsProdWiseSpecialDisc"] != null)) {
                    base.Tables.Add(new dsProdWiseSpecialDiscDataTable(ds.Tables["dsProdWiseSpecialDisc"]));
                }
                if ((ds.Tables["dsProdCombination"] != null)) {
                    base.Tables.Add(new dsProdCombinationDataTable(ds.Tables["dsProdCombination"]));
                }
                if ((ds.Tables["dsPurchaseSchedule"] != null)) {
                    base.Tables.Add(new dsPurchaseScheduleDataTable(ds.Tables["dsPurchaseSchedule"]));
                }
                if ((ds.Tables["dsLocaWiseProdOrder"] != null)) {
                    base.Tables.Add(new dsLocaWiseProdOrderDataTable(ds.Tables["dsLocaWiseProdOrder"]));
                }
                if ((ds.Tables["dsPurchase"] != null)) {
                    base.Tables.Add(new dsPurchaseDataTable(ds.Tables["dsPurchase"]));
                }
                if ((ds.Tables["dsProductSumDetails"] != null)) {
                    base.Tables.Add(new dsProductSumDetailsDataTable(ds.Tables["dsProductSumDetails"]));
                }
                if ((ds.Tables["dsDailySalesSummaryDetailWise"] != null)) {
                    base.Tables.Add(new dsDailySalesSummaryDetailWiseDataTable(ds.Tables["dsDailySalesSummaryDetailWise"]));
                }
                if ((ds.Tables["dsCompanyLogo"] != null)) {
                    base.Tables.Add(new dsCompanyLogoDataTable(ds.Tables["dsCompanyLogo"]));
                }
                if ((ds.Tables["dsCashINOUT"] != null)) {
                    base.Tables.Add(new dsCashINOUTDataTable(ds.Tables["dsCashINOUT"]));
                }
                if ((ds.Tables["dsDailyCollectionSummary"] != null)) {
                    base.Tables.Add(new dsDailyCollectionSummaryDataTable(ds.Tables["dsDailyCollectionSummary"]));
                }
                if ((ds.Tables["dsCusWiseDailySumm"] != null)) {
                    base.Tables.Add(new dsCusWiseDailySummDataTable(ds.Tables["dsCusWiseDailySumm"]));
                }
                if ((ds.Tables["dsExpenceTransaction"] != null)) {
                    base.Tables.Add(new dsExpenceTransactionDataTable(ds.Tables["dsExpenceTransaction"]));
                }
                if ((ds.Tables["dsDayBookRep"] != null)) {
                    base.Tables.Add(new dsDayBookRepDataTable(ds.Tables["dsDayBookRep"]));
                }
                if ((ds.Tables["dtBatchWisePrice"] != null)) {
                    base.Tables.Add(new dtBatchWisePriceDataTable(ds.Tables["dtBatchWisePrice"]));
                }
                if ((ds.Tables["dsCusAddress"] != null)) {
                    base.Tables.Add(new dsCusAddressDataTable(ds.Tables["dsCusAddress"]));
                }
                if ((ds.Tables["dsTempPacketProduct1"] != null)) {
                    base.Tables.Add(new dsTempPacketProduct1DataTable(ds.Tables["dsTempPacketProduct1"]));
                }
                if ((ds.Tables["dsProdBundle"] != null)) {
                    base.Tables.Add(new dsProdBundleDataTable(ds.Tables["dsProdBundle"]));
                }
                if ((ds.Tables["Statement"] != null)) {
                    base.Tables.Add(new StatementDataTable(ds.Tables["Statement"]));
                }
                if ((ds.Tables["Company"] != null)) {
                    base.Tables.Add(new CompanyDataTable(ds.Tables["Company"]));
                }
                if ((ds.Tables["dsInvoiceColSummery"] != null)) {
                    base.Tables.Add(new dsInvoiceColSummeryDataTable(ds.Tables["dsInvoiceColSummery"]));
                }
                if ((ds.Tables["dsCashDeno"] != null)) {
                    base.Tables.Add(new dsCashDenoDataTable(ds.Tables["dsCashDeno"]));
                }
                if ((ds.Tables["CRM_Customer"] != null)) {
                    base.Tables.Add(new CRM_CustomerDataTable(ds.Tables["CRM_Customer"]));
                }
                if ((ds.Tables["dtOGFUpload"] != null)) {
                    base.Tables.Add(new dtOGFUploadDataTable(ds.Tables["dtOGFUpload"]));
                }
                if ((ds.Tables["Customer"] != null)) {
                    base.Tables.Add(new CustomerDataTable(ds.Tables["Customer"]));
                }
                if ((ds.Tables["DailyDetails"] != null)) {
                    base.Tables.Add(new DailyDetailsDataTable(ds.Tables["DailyDetails"]));
                }
                if ((ds.Tables["Statement1"] != null)) {
                    base.Tables.Add(new Statement1DataTable(ds.Tables["Statement1"]));
                }
                if ((ds.Tables["dsIssuedVoucher"] != null)) {
                    base.Tables.Add(new dsIssuedVoucherDataTable(ds.Tables["dsIssuedVoucher"]));
                }
                if ((ds.Tables["dsReceivedVoucher"] != null)) {
                    base.Tables.Add(new dsReceivedVoucherDataTable(ds.Tables["dsReceivedVoucher"]));
                }
                if ((ds.Tables["dtExpDetails"] != null)) {
                    base.Tables.Add(new dtExpDetailsDataTable(ds.Tables["dtExpDetails"]));
                }
                if ((ds.Tables["DayEnd_Pos_Transaction"] != null)) {
                    base.Tables.Add(new DayEnd_Pos_TransactionDataTable(ds.Tables["DayEnd_Pos_Transaction"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DepartmentDataTable Department {
            get {
                return this.tableDepartment;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CategoryDataTable Category {
            get {
                return this.tableCategory;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public StockAdjustDataTable StockAdjust {
            get {
                return this.tableStockAdjust;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TransferNoteDataTable TransferNote {
            get {
                return this.tableTransferNote;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dsTogDetailsDataTable dsTogDetails {
            get {
                return this.tabledsTogDetails;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dsStockAdjustDetailsDataTable dsStockAdjustDetails {
            get {
                return this.tabledsStockAdjustDetails;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GoodReceivedNoteDataTable GoodReceivedNote {
            get {
                return this.tableGoodReceivedNote;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dsGRNDetailsForRepDataTable dsGRNDetailsForRep {
            get {
                return this.tabledsGRNDetailsForRep;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PurchaseOrderDataTable PurchaseOrder {
            get {
                return this.tablePurchaseOrder;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dsPurchaseOrderDetailsDataTable dsPurchaseOrderDetails {
            get {
                return this.tabledsPurchaseOrderDetails;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ProductDataTable Product {
            get {
                return this.tableProduct;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public InvoiceDataTable Invoice {
            get {
                return this.tableInvoice;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dsAccountDataTable dsAccount {
            get {
                return this.tabledsAccount;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dsInvoiceDetailsDataTable dsInvoiceDetails {
            get {
                return this.tabledsInvoiceDetails;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dsStockProductwiseDataTable dsStockProductwise {
            get {
                return this.tabledsStockProductwise;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PendingPaymentsDataTable PendingPayments {
            get {
                return this.tablePendingPayments;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SelectedPaymentsDataTable SelectedPayments {
            get {
                return this.tableSelectedPayments;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PaymentDetailsDataTable PaymentDetails {
            get {
                return this.tablePaymentDetails;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tbPaidPaymentSummaryDataTable tbPaidPaymentSummary {
            get {
                return this.tabletbPaidPaymentSummary;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tbPaidPaymentModeDataTable tbPaidPaymentMode {
            get {
                return this.tabletbPaidPaymentMode;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SupplierPaymentSummaryDataTable SupplierPaymentSummary {
            get {
                return this.tableSupplierPaymentSummary;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TransactionSummaryDataTable TransactionSummary {
            get {
                return this.tableTransactionSummary;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public StockDetailsDataTable StockDetails {
            get {
                return this.tableStockDetails;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dsSalesDetailsDataTable dsSalesDetails {
            get {
                return this.tabledsSalesDetails;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tbReportMonthlyAnalyseDataTable tbReportMonthlyAnalyse {
            get {
                return this.tabletbReportMonthlyAnalyse;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CollectionDataTable Collection {
            get {
                return this.tableCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SelectedDataTable Selected {
            get {
                return this.tableSelected;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dsPurchasingDetailsDataTable dsPurchasingDetails {
            get {
                return this.tabledsPurchasingDetails;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dsAnalyseDataDataTable dsAnalyseData {
            get {
                return this.tabledsAnalyseData;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dsProductBinCardDataTable dsProductBinCard {
            get {
                return this.tabledsProductBinCard;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dsBarcodeDataTable dsBarcode {
            get {
                return this.tabledsBarcode;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SupplierStatementDataTable SupplierStatement {
            get {
                return this.tableSupplierStatement;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dsChequeReconDataTable dsChequeRecon {
            get {
                return this.tabledsChequeRecon;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dsChequeReconDetailsDataTable dsChequeReconDetails {
            get {
                return this.tabledsChequeReconDetails;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dsProfitableProductDataTable dsProfitableProduct {
            get {
                return this.tabledsProfitableProduct;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dsReOrderLevelDetailsDataTable dsReOrderLevelDetails {
            get {
                return this.tabledsReOrderLevelDetails;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ManufacturerDetailsDataTable ManufacturerDetails {
            get {
                return this.tableManufacturerDetails;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dsCreditorsOutstandingDataTable dsCreditorsOutstanding {
            get {
                return this.tabledsCreditorsOutstanding;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dsProductMovingDataTable dsProductMoving {
            get {
                return this.tabledsProductMoving;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dsProductSalesComparisonDataTable dsProductSalesComparison {
            get {
                return this.tabledsProductSalesComparison;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dsProductDetails_ChangeDataTable dsProductDetails_Change {
            get {
                return this.tabledsProductDetails_Change;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dsTempPacketProductDataTable dsTempPacketProduct {
            get {
                return this.tabledsTempPacketProduct;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dsPacketingProductNoteDataTable dsPacketingProductNote {
            get {
                return this.tabledsPacketingProductNote;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dsNonMovingProductDataTable dsNonMovingProduct {
            get {
                return this.tabledsNonMovingProduct;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dsHourlySalesDataTable dsHourlySales {
            get {
                return this.tabledsHourlySales;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dsDailyCollectionDataTable dsDailyCollection {
            get {
                return this.tabledsDailyCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dsReceiptWiseSalesDataTable dsReceiptWiseSales {
            get {
                return this.tabledsReceiptWiseSales;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dsSalesmanSalesDataTable dsSalesmanSales {
            get {
                return this.tabledsSalesmanSales;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dsPurSalesStockDataTable dsPurSalesStock {
            get {
                return this.tabledsPurSalesStock;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dsGivenDateStockDataTable dsGivenDateStock {
            get {
                return this.tabledsGivenDateStock;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dsProductToBeReturnDataTable dsProductToBeReturn {
            get {
                return this.tabledsProductToBeReturn;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dsProdROLDataTable dsProdROL {
            get {
                return this.tabledsProdROL;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dsProductReqDataTable dsProductReq {
            get {
                return this.tabledsProductReq;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dsProductDiscountDataTable dsProductDiscount {
            get {
                return this.tabledsProductDiscount;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PendingReturnsDataTable PendingReturns {
            get {
                return this.tablePendingReturns;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SelectedSetoffDataTable SelectedSetoff {
            get {
                return this.tableSelectedSetoff;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dsPaymentsetOffDetailsDataTable dsPaymentsetOffDetails {
            get {
                return this.tabledsPaymentsetOffDetails;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dsPaymentSetOffSummaryDataTable dsPaymentSetOffSummary {
            get {
                return this.tabledsPaymentSetOffSummary;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dsPriceMasterDetailsDataTable dsPriceMasterDetails {
            get {
                return this.tabledsPriceMasterDetails;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dsSystem_LogDataTable dsSystem_Log {
            get {
                return this.tabledsSystem_Log;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dsPostDatedChequeDataTable dsPostDatedCheque {
            get {
                return this.tabledsPostDatedCheque;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dsProductLinkTempDataTable dsProductLinkTemp {
            get {
                return this.tabledsProductLinkTemp;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PriceChangeDataTable PriceChange {
            get {
                return this.tablePriceChange;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dsPosSalesSummaryDataTable dsPosSalesSummary {
            get {
                return this.tabledsPosSalesSummary;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DataTable1DataTable DataTable1 {
            get {
                return this.tableDataTable1;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tb_Customer_DetailDataTable tb_Customer_Detail {
            get {
                return this.tabletb_Customer_Detail;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dsCustomerSalesDataTable dsCustomerSales {
            get {
                return this.tabledsCustomerSales;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dsPurchScheduleDataTable dsPurchSchedule {
            get {
                return this.tabledsPurchSchedule;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CompanyProfileDataTable CompanyProfile {
            get {
                return this.tableCompanyProfile;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dsFreeIssuedProductDataTable dsFreeIssuedProduct {
            get {
                return this.tabledsFreeIssuedProduct;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dsLocaWiseTGNSummaryDataTable dsLocaWiseTGNSummary {
            get {
                return this.tabledsLocaWiseTGNSummary;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dsReturnChequeDataTable dsReturnCheque {
            get {
                return this.tabledsReturnCheque;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dsProductDiscardDataTable dsProductDiscard {
            get {
                return this.tabledsProductDiscard;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dsChqReconnDataTable dsChqReconn {
            get {
                return this.tabledsChqReconn;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dsLocaWiseDeptSaleDataTable dsLocaWiseDeptSale {
            get {
                return this.tabledsLocaWiseDeptSale;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dsProdWiseSpecialDiscDataTable dsProdWiseSpecialDisc {
            get {
                return this.tabledsProdWiseSpecialDisc;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dsProdCombinationDataTable dsProdCombination {
            get {
                return this.tabledsProdCombination;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dsPurchaseScheduleDataTable dsPurchaseSchedule {
            get {
                return this.tabledsPurchaseSchedule;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dsLocaWiseProdOrderDataTable dsLocaWiseProdOrder {
            get {
                return this.tabledsLocaWiseProdOrder;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dsPurchaseDataTable dsPurchase {
            get {
                return this.tabledsPurchase;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dsProductSumDetailsDataTable dsProductSumDetails {
            get {
                return this.tabledsProductSumDetails;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dsDailySalesSummaryDetailWiseDataTable dsDailySalesSummaryDetailWise {
            get {
                return this.tabledsDailySalesSummaryDetailWise;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dsCompanyLogoDataTable dsCompanyLogo {
            get {
                return this.tabledsCompanyLogo;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dsCashINOUTDataTable dsCashINOUT {
            get {
                return this.tabledsCashINOUT;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dsDailyCollectionSummaryDataTable dsDailyCollectionSummary {
            get {
                return this.tabledsDailyCollectionSummary;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dsCusWiseDailySummDataTable dsCusWiseDailySumm {
            get {
                return this.tabledsCusWiseDailySumm;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dsExpenceTransactionDataTable dsExpenceTransaction {
            get {
                return this.tabledsExpenceTransaction;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dsDayBookRepDataTable dsDayBookRep {
            get {
                return this.tabledsDayBookRep;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dtBatchWisePriceDataTable dtBatchWisePrice {
            get {
                return this.tabledtBatchWisePrice;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dsCusAddressDataTable dsCusAddress {
            get {
                return this.tabledsCusAddress;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dsTempPacketProduct1DataTable dsTempPacketProduct1 {
            get {
                return this.tabledsTempPacketProduct1;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dsProdBundleDataTable dsProdBundle {
            get {
                return this.tabledsProdBundle;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public StatementDataTable Statement {
            get {
                return this.tableStatement;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CompanyDataTable Company {
            get {
                return this.tableCompany;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dsInvoiceColSummeryDataTable dsInvoiceColSummery {
            get {
                return this.tabledsInvoiceColSummery;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dsCashDenoDataTable dsCashDeno {
            get {
                return this.tabledsCashDeno;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CRM_CustomerDataTable CRM_Customer {
            get {
                return this.tableCRM_Customer;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dtOGFUploadDataTable dtOGFUpload {
            get {
                return this.tabledtOGFUpload;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CustomerDataTable Customer {
            get {
                return this.tableCustomer;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DailyDetailsDataTable DailyDetails {
            get {
                return this.tableDailyDetails;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Statement1DataTable Statement1 {
            get {
                return this.tableStatement1;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dsIssuedVoucherDataTable dsIssuedVoucher {
            get {
                return this.tabledsIssuedVoucher;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dsReceivedVoucherDataTable dsReceivedVoucher {
            get {
                return this.tabledsReceivedVoucher;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dtExpDetailsDataTable dtExpDetails {
            get {
                return this.tabledtExpDetails;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DayEnd_Pos_TransactionDataTable DayEnd_Pos_Transaction {
            get {
                return this.tableDayEnd_Pos_Transaction;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            dsForReports cln = ((dsForReports)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Department"] != null)) {
                    base.Tables.Add(new DepartmentDataTable(ds.Tables["Department"]));
                }
                if ((ds.Tables["Category"] != null)) {
                    base.Tables.Add(new CategoryDataTable(ds.Tables["Category"]));
                }
                if ((ds.Tables["StockAdjust"] != null)) {
                    base.Tables.Add(new StockAdjustDataTable(ds.Tables["StockAdjust"]));
                }
                if ((ds.Tables["TransferNote"] != null)) {
                    base.Tables.Add(new TransferNoteDataTable(ds.Tables["TransferNote"]));
                }
                if ((ds.Tables["dsTogDetails"] != null)) {
                    base.Tables.Add(new dsTogDetailsDataTable(ds.Tables["dsTogDetails"]));
                }
                if ((ds.Tables["dsStockAdjustDetails"] != null)) {
                    base.Tables.Add(new dsStockAdjustDetailsDataTable(ds.Tables["dsStockAdjustDetails"]));
                }
                if ((ds.Tables["GoodReceivedNote"] != null)) {
                    base.Tables.Add(new GoodReceivedNoteDataTable(ds.Tables["GoodReceivedNote"]));
                }
                if ((ds.Tables["dsGRNDetailsForRep"] != null)) {
                    base.Tables.Add(new dsGRNDetailsForRepDataTable(ds.Tables["dsGRNDetailsForRep"]));
                }
                if ((ds.Tables["PurchaseOrder"] != null)) {
                    base.Tables.Add(new PurchaseOrderDataTable(ds.Tables["PurchaseOrder"]));
                }
                if ((ds.Tables["dsPurchaseOrderDetails"] != null)) {
                    base.Tables.Add(new dsPurchaseOrderDetailsDataTable(ds.Tables["dsPurchaseOrderDetails"]));
                }
                if ((ds.Tables["Product"] != null)) {
                    base.Tables.Add(new ProductDataTable(ds.Tables["Product"]));
                }
                if ((ds.Tables["Invoice"] != null)) {
                    base.Tables.Add(new InvoiceDataTable(ds.Tables["Invoice"]));
                }
                if ((ds.Tables["dsAccount"] != null)) {
                    base.Tables.Add(new dsAccountDataTable(ds.Tables["dsAccount"]));
                }
                if ((ds.Tables["dsInvoiceDetails"] != null)) {
                    base.Tables.Add(new dsInvoiceDetailsDataTable(ds.Tables["dsInvoiceDetails"]));
                }
                if ((ds.Tables["dsStockProductwise"] != null)) {
                    base.Tables.Add(new dsStockProductwiseDataTable(ds.Tables["dsStockProductwise"]));
                }
                if ((ds.Tables["PendingPayments"] != null)) {
                    base.Tables.Add(new PendingPaymentsDataTable(ds.Tables["PendingPayments"]));
                }
                if ((ds.Tables["SelectedPayments"] != null)) {
                    base.Tables.Add(new SelectedPaymentsDataTable(ds.Tables["SelectedPayments"]));
                }
                if ((ds.Tables["PaymentDetails"] != null)) {
                    base.Tables.Add(new PaymentDetailsDataTable(ds.Tables["PaymentDetails"]));
                }
                if ((ds.Tables["tbPaidPaymentSummary"] != null)) {
                    base.Tables.Add(new tbPaidPaymentSummaryDataTable(ds.Tables["tbPaidPaymentSummary"]));
                }
                if ((ds.Tables["tbPaidPaymentMode"] != null)) {
                    base.Tables.Add(new tbPaidPaymentModeDataTable(ds.Tables["tbPaidPaymentMode"]));
                }
                if ((ds.Tables["SupplierPaymentSummary"] != null)) {
                    base.Tables.Add(new SupplierPaymentSummaryDataTable(ds.Tables["SupplierPaymentSummary"]));
                }
                if ((ds.Tables["TransactionSummary"] != null)) {
                    base.Tables.Add(new TransactionSummaryDataTable(ds.Tables["TransactionSummary"]));
                }
                if ((ds.Tables["StockDetails"] != null)) {
                    base.Tables.Add(new StockDetailsDataTable(ds.Tables["StockDetails"]));
                }
                if ((ds.Tables["dsSalesDetails"] != null)) {
                    base.Tables.Add(new dsSalesDetailsDataTable(ds.Tables["dsSalesDetails"]));
                }
                if ((ds.Tables["tbReportMonthlyAnalyse"] != null)) {
                    base.Tables.Add(new tbReportMonthlyAnalyseDataTable(ds.Tables["tbReportMonthlyAnalyse"]));
                }
                if ((ds.Tables["Collection"] != null)) {
                    base.Tables.Add(new CollectionDataTable(ds.Tables["Collection"]));
                }
                if ((ds.Tables["Selected"] != null)) {
                    base.Tables.Add(new SelectedDataTable(ds.Tables["Selected"]));
                }
                if ((ds.Tables["dsPurchasingDetails"] != null)) {
                    base.Tables.Add(new dsPurchasingDetailsDataTable(ds.Tables["dsPurchasingDetails"]));
                }
                if ((ds.Tables["dsAnalyseData"] != null)) {
                    base.Tables.Add(new dsAnalyseDataDataTable(ds.Tables["dsAnalyseData"]));
                }
                if ((ds.Tables["dsProductBinCard"] != null)) {
                    base.Tables.Add(new dsProductBinCardDataTable(ds.Tables["dsProductBinCard"]));
                }
                if ((ds.Tables["dsBarcode"] != null)) {
                    base.Tables.Add(new dsBarcodeDataTable(ds.Tables["dsBarcode"]));
                }
                if ((ds.Tables["SupplierStatement"] != null)) {
                    base.Tables.Add(new SupplierStatementDataTable(ds.Tables["SupplierStatement"]));
                }
                if ((ds.Tables["dsChequeRecon"] != null)) {
                    base.Tables.Add(new dsChequeReconDataTable(ds.Tables["dsChequeRecon"]));
                }
                if ((ds.Tables["dsChequeReconDetails"] != null)) {
                    base.Tables.Add(new dsChequeReconDetailsDataTable(ds.Tables["dsChequeReconDetails"]));
                }
                if ((ds.Tables["dsProfitableProduct"] != null)) {
                    base.Tables.Add(new dsProfitableProductDataTable(ds.Tables["dsProfitableProduct"]));
                }
                if ((ds.Tables["dsReOrderLevelDetails"] != null)) {
                    base.Tables.Add(new dsReOrderLevelDetailsDataTable(ds.Tables["dsReOrderLevelDetails"]));
                }
                if ((ds.Tables["ManufacturerDetails"] != null)) {
                    base.Tables.Add(new ManufacturerDetailsDataTable(ds.Tables["ManufacturerDetails"]));
                }
                if ((ds.Tables["dsCreditorsOutstanding"] != null)) {
                    base.Tables.Add(new dsCreditorsOutstandingDataTable(ds.Tables["dsCreditorsOutstanding"]));
                }
                if ((ds.Tables["dsProductMoving"] != null)) {
                    base.Tables.Add(new dsProductMovingDataTable(ds.Tables["dsProductMoving"]));
                }
                if ((ds.Tables["dsProductSalesComparison"] != null)) {
                    base.Tables.Add(new dsProductSalesComparisonDataTable(ds.Tables["dsProductSalesComparison"]));
                }
                if ((ds.Tables["dsProductDetails_Change"] != null)) {
                    base.Tables.Add(new dsProductDetails_ChangeDataTable(ds.Tables["dsProductDetails_Change"]));
                }
                if ((ds.Tables["dsTempPacketProduct"] != null)) {
                    base.Tables.Add(new dsTempPacketProductDataTable(ds.Tables["dsTempPacketProduct"]));
                }
                if ((ds.Tables["dsPacketingProductNote"] != null)) {
                    base.Tables.Add(new dsPacketingProductNoteDataTable(ds.Tables["dsPacketingProductNote"]));
                }
                if ((ds.Tables["dsNonMovingProduct"] != null)) {
                    base.Tables.Add(new dsNonMovingProductDataTable(ds.Tables["dsNonMovingProduct"]));
                }
                if ((ds.Tables["dsHourlySales"] != null)) {
                    base.Tables.Add(new dsHourlySalesDataTable(ds.Tables["dsHourlySales"]));
                }
                if ((ds.Tables["dsDailyCollection"] != null)) {
                    base.Tables.Add(new dsDailyCollectionDataTable(ds.Tables["dsDailyCollection"]));
                }
                if ((ds.Tables["dsReceiptWiseSales"] != null)) {
                    base.Tables.Add(new dsReceiptWiseSalesDataTable(ds.Tables["dsReceiptWiseSales"]));
                }
                if ((ds.Tables["dsSalesmanSales"] != null)) {
                    base.Tables.Add(new dsSalesmanSalesDataTable(ds.Tables["dsSalesmanSales"]));
                }
                if ((ds.Tables["dsPurSalesStock"] != null)) {
                    base.Tables.Add(new dsPurSalesStockDataTable(ds.Tables["dsPurSalesStock"]));
                }
                if ((ds.Tables["dsGivenDateStock"] != null)) {
                    base.Tables.Add(new dsGivenDateStockDataTable(ds.Tables["dsGivenDateStock"]));
                }
                if ((ds.Tables["dsProductToBeReturn"] != null)) {
                    base.Tables.Add(new dsProductToBeReturnDataTable(ds.Tables["dsProductToBeReturn"]));
                }
                if ((ds.Tables["dsProdROL"] != null)) {
                    base.Tables.Add(new dsProdROLDataTable(ds.Tables["dsProdROL"]));
                }
                if ((ds.Tables["dsProductReq"] != null)) {
                    base.Tables.Add(new dsProductReqDataTable(ds.Tables["dsProductReq"]));
                }
                if ((ds.Tables["dsProductDiscount"] != null)) {
                    base.Tables.Add(new dsProductDiscountDataTable(ds.Tables["dsProductDiscount"]));
                }
                if ((ds.Tables["PendingReturns"] != null)) {
                    base.Tables.Add(new PendingReturnsDataTable(ds.Tables["PendingReturns"]));
                }
                if ((ds.Tables["SelectedSetoff"] != null)) {
                    base.Tables.Add(new SelectedSetoffDataTable(ds.Tables["SelectedSetoff"]));
                }
                if ((ds.Tables["dsPaymentsetOffDetails"] != null)) {
                    base.Tables.Add(new dsPaymentsetOffDetailsDataTable(ds.Tables["dsPaymentsetOffDetails"]));
                }
                if ((ds.Tables["dsPaymentSetOffSummary"] != null)) {
                    base.Tables.Add(new dsPaymentSetOffSummaryDataTable(ds.Tables["dsPaymentSetOffSummary"]));
                }
                if ((ds.Tables["dsPriceMasterDetails"] != null)) {
                    base.Tables.Add(new dsPriceMasterDetailsDataTable(ds.Tables["dsPriceMasterDetails"]));
                }
                if ((ds.Tables["dsSystem_Log"] != null)) {
                    base.Tables.Add(new dsSystem_LogDataTable(ds.Tables["dsSystem_Log"]));
                }
                if ((ds.Tables["dsPostDatedCheque"] != null)) {
                    base.Tables.Add(new dsPostDatedChequeDataTable(ds.Tables["dsPostDatedCheque"]));
                }
                if ((ds.Tables["dsProductLinkTemp"] != null)) {
                    base.Tables.Add(new dsProductLinkTempDataTable(ds.Tables["dsProductLinkTemp"]));
                }
                if ((ds.Tables["PriceChange"] != null)) {
                    base.Tables.Add(new PriceChangeDataTable(ds.Tables["PriceChange"]));
                }
                if ((ds.Tables["dsPosSalesSummary"] != null)) {
                    base.Tables.Add(new dsPosSalesSummaryDataTable(ds.Tables["dsPosSalesSummary"]));
                }
                if ((ds.Tables["DataTable1"] != null)) {
                    base.Tables.Add(new DataTable1DataTable(ds.Tables["DataTable1"]));
                }
                if ((ds.Tables["tb_Customer_Detail"] != null)) {
                    base.Tables.Add(new tb_Customer_DetailDataTable(ds.Tables["tb_Customer_Detail"]));
                }
                if ((ds.Tables["dsCustomerSales"] != null)) {
                    base.Tables.Add(new dsCustomerSalesDataTable(ds.Tables["dsCustomerSales"]));
                }
                if ((ds.Tables["dsPurchSchedule"] != null)) {
                    base.Tables.Add(new dsPurchScheduleDataTable(ds.Tables["dsPurchSchedule"]));
                }
                if ((ds.Tables["CompanyProfile"] != null)) {
                    base.Tables.Add(new CompanyProfileDataTable(ds.Tables["CompanyProfile"]));
                }
                if ((ds.Tables["dsFreeIssuedProduct"] != null)) {
                    base.Tables.Add(new dsFreeIssuedProductDataTable(ds.Tables["dsFreeIssuedProduct"]));
                }
                if ((ds.Tables["dsLocaWiseTGNSummary"] != null)) {
                    base.Tables.Add(new dsLocaWiseTGNSummaryDataTable(ds.Tables["dsLocaWiseTGNSummary"]));
                }
                if ((ds.Tables["dsReturnCheque"] != null)) {
                    base.Tables.Add(new dsReturnChequeDataTable(ds.Tables["dsReturnCheque"]));
                }
                if ((ds.Tables["dsProductDiscard"] != null)) {
                    base.Tables.Add(new dsProductDiscardDataTable(ds.Tables["dsProductDiscard"]));
                }
                if ((ds.Tables["dsChqReconn"] != null)) {
                    base.Tables.Add(new dsChqReconnDataTable(ds.Tables["dsChqReconn"]));
                }
                if ((ds.Tables["dsLocaWiseDeptSale"] != null)) {
                    base.Tables.Add(new dsLocaWiseDeptSaleDataTable(ds.Tables["dsLocaWiseDeptSale"]));
                }
                if ((ds.Tables["dsProdWiseSpecialDisc"] != null)) {
                    base.Tables.Add(new dsProdWiseSpecialDiscDataTable(ds.Tables["dsProdWiseSpecialDisc"]));
                }
                if ((ds.Tables["dsProdCombination"] != null)) {
                    base.Tables.Add(new dsProdCombinationDataTable(ds.Tables["dsProdCombination"]));
                }
                if ((ds.Tables["dsPurchaseSchedule"] != null)) {
                    base.Tables.Add(new dsPurchaseScheduleDataTable(ds.Tables["dsPurchaseSchedule"]));
                }
                if ((ds.Tables["dsLocaWiseProdOrder"] != null)) {
                    base.Tables.Add(new dsLocaWiseProdOrderDataTable(ds.Tables["dsLocaWiseProdOrder"]));
                }
                if ((ds.Tables["dsPurchase"] != null)) {
                    base.Tables.Add(new dsPurchaseDataTable(ds.Tables["dsPurchase"]));
                }
                if ((ds.Tables["dsProductSumDetails"] != null)) {
                    base.Tables.Add(new dsProductSumDetailsDataTable(ds.Tables["dsProductSumDetails"]));
                }
                if ((ds.Tables["dsDailySalesSummaryDetailWise"] != null)) {
                    base.Tables.Add(new dsDailySalesSummaryDetailWiseDataTable(ds.Tables["dsDailySalesSummaryDetailWise"]));
                }
                if ((ds.Tables["dsCompanyLogo"] != null)) {
                    base.Tables.Add(new dsCompanyLogoDataTable(ds.Tables["dsCompanyLogo"]));
                }
                if ((ds.Tables["dsCashINOUT"] != null)) {
                    base.Tables.Add(new dsCashINOUTDataTable(ds.Tables["dsCashINOUT"]));
                }
                if ((ds.Tables["dsDailyCollectionSummary"] != null)) {
                    base.Tables.Add(new dsDailyCollectionSummaryDataTable(ds.Tables["dsDailyCollectionSummary"]));
                }
                if ((ds.Tables["dsCusWiseDailySumm"] != null)) {
                    base.Tables.Add(new dsCusWiseDailySummDataTable(ds.Tables["dsCusWiseDailySumm"]));
                }
                if ((ds.Tables["dsExpenceTransaction"] != null)) {
                    base.Tables.Add(new dsExpenceTransactionDataTable(ds.Tables["dsExpenceTransaction"]));
                }
                if ((ds.Tables["dsDayBookRep"] != null)) {
                    base.Tables.Add(new dsDayBookRepDataTable(ds.Tables["dsDayBookRep"]));
                }
                if ((ds.Tables["dtBatchWisePrice"] != null)) {
                    base.Tables.Add(new dtBatchWisePriceDataTable(ds.Tables["dtBatchWisePrice"]));
                }
                if ((ds.Tables["dsCusAddress"] != null)) {
                    base.Tables.Add(new dsCusAddressDataTable(ds.Tables["dsCusAddress"]));
                }
                if ((ds.Tables["dsTempPacketProduct1"] != null)) {
                    base.Tables.Add(new dsTempPacketProduct1DataTable(ds.Tables["dsTempPacketProduct1"]));
                }
                if ((ds.Tables["dsProdBundle"] != null)) {
                    base.Tables.Add(new dsProdBundleDataTable(ds.Tables["dsProdBundle"]));
                }
                if ((ds.Tables["Statement"] != null)) {
                    base.Tables.Add(new StatementDataTable(ds.Tables["Statement"]));
                }
                if ((ds.Tables["Company"] != null)) {
                    base.Tables.Add(new CompanyDataTable(ds.Tables["Company"]));
                }
                if ((ds.Tables["dsInvoiceColSummery"] != null)) {
                    base.Tables.Add(new dsInvoiceColSummeryDataTable(ds.Tables["dsInvoiceColSummery"]));
                }
                if ((ds.Tables["dsCashDeno"] != null)) {
                    base.Tables.Add(new dsCashDenoDataTable(ds.Tables["dsCashDeno"]));
                }
                if ((ds.Tables["CRM_Customer"] != null)) {
                    base.Tables.Add(new CRM_CustomerDataTable(ds.Tables["CRM_Customer"]));
                }
                if ((ds.Tables["dtOGFUpload"] != null)) {
                    base.Tables.Add(new dtOGFUploadDataTable(ds.Tables["dtOGFUpload"]));
                }
                if ((ds.Tables["Customer"] != null)) {
                    base.Tables.Add(new CustomerDataTable(ds.Tables["Customer"]));
                }
                if ((ds.Tables["DailyDetails"] != null)) {
                    base.Tables.Add(new DailyDetailsDataTable(ds.Tables["DailyDetails"]));
                }
                if ((ds.Tables["Statement1"] != null)) {
                    base.Tables.Add(new Statement1DataTable(ds.Tables["Statement1"]));
                }
                if ((ds.Tables["dsIssuedVoucher"] != null)) {
                    base.Tables.Add(new dsIssuedVoucherDataTable(ds.Tables["dsIssuedVoucher"]));
                }
                if ((ds.Tables["dsReceivedVoucher"] != null)) {
                    base.Tables.Add(new dsReceivedVoucherDataTable(ds.Tables["dsReceivedVoucher"]));
                }
                if ((ds.Tables["dtExpDetails"] != null)) {
                    base.Tables.Add(new dtExpDetailsDataTable(ds.Tables["dtExpDetails"]));
                }
                if ((ds.Tables["DayEnd_Pos_Transaction"] != null)) {
                    base.Tables.Add(new DayEnd_Pos_TransactionDataTable(ds.Tables["DayEnd_Pos_Transaction"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableDepartment = ((DepartmentDataTable)(base.Tables["Department"]));
            if ((initTable == true)) {
                if ((this.tableDepartment != null)) {
                    this.tableDepartment.InitVars();
                }
            }
            this.tableCategory = ((CategoryDataTable)(base.Tables["Category"]));
            if ((initTable == true)) {
                if ((this.tableCategory != null)) {
                    this.tableCategory.InitVars();
                }
            }
            this.tableStockAdjust = ((StockAdjustDataTable)(base.Tables["StockAdjust"]));
            if ((initTable == true)) {
                if ((this.tableStockAdjust != null)) {
                    this.tableStockAdjust.InitVars();
                }
            }
            this.tableTransferNote = ((TransferNoteDataTable)(base.Tables["TransferNote"]));
            if ((initTable == true)) {
                if ((this.tableTransferNote != null)) {
                    this.tableTransferNote.InitVars();
                }
            }
            this.tabledsTogDetails = ((dsTogDetailsDataTable)(base.Tables["dsTogDetails"]));
            if ((initTable == true)) {
                if ((this.tabledsTogDetails != null)) {
                    this.tabledsTogDetails.InitVars();
                }
            }
            this.tabledsStockAdjustDetails = ((dsStockAdjustDetailsDataTable)(base.Tables["dsStockAdjustDetails"]));
            if ((initTable == true)) {
                if ((this.tabledsStockAdjustDetails != null)) {
                    this.tabledsStockAdjustDetails.InitVars();
                }
            }
            this.tableGoodReceivedNote = ((GoodReceivedNoteDataTable)(base.Tables["GoodReceivedNote"]));
            if ((initTable == true)) {
                if ((this.tableGoodReceivedNote != null)) {
                    this.tableGoodReceivedNote.InitVars();
                }
            }
            this.tabledsGRNDetailsForRep = ((dsGRNDetailsForRepDataTable)(base.Tables["dsGRNDetailsForRep"]));
            if ((initTable == true)) {
                if ((this.tabledsGRNDetailsForRep != null)) {
                    this.tabledsGRNDetailsForRep.InitVars();
                }
            }
            this.tablePurchaseOrder = ((PurchaseOrderDataTable)(base.Tables["PurchaseOrder"]));
            if ((initTable == true)) {
                if ((this.tablePurchaseOrder != null)) {
                    this.tablePurchaseOrder.InitVars();
                }
            }
            this.tabledsPurchaseOrderDetails = ((dsPurchaseOrderDetailsDataTable)(base.Tables["dsPurchaseOrderDetails"]));
            if ((initTable == true)) {
                if ((this.tabledsPurchaseOrderDetails != null)) {
                    this.tabledsPurchaseOrderDetails.InitVars();
                }
            }
            this.tableProduct = ((ProductDataTable)(base.Tables["Product"]));
            if ((initTable == true)) {
                if ((this.tableProduct != null)) {
                    this.tableProduct.InitVars();
                }
            }
            this.tableInvoice = ((InvoiceDataTable)(base.Tables["Invoice"]));
            if ((initTable == true)) {
                if ((this.tableInvoice != null)) {
                    this.tableInvoice.InitVars();
                }
            }
            this.tabledsAccount = ((dsAccountDataTable)(base.Tables["dsAccount"]));
            if ((initTable == true)) {
                if ((this.tabledsAccount != null)) {
                    this.tabledsAccount.InitVars();
                }
            }
            this.tabledsInvoiceDetails = ((dsInvoiceDetailsDataTable)(base.Tables["dsInvoiceDetails"]));
            if ((initTable == true)) {
                if ((this.tabledsInvoiceDetails != null)) {
                    this.tabledsInvoiceDetails.InitVars();
                }
            }
            this.tabledsStockProductwise = ((dsStockProductwiseDataTable)(base.Tables["dsStockProductwise"]));
            if ((initTable == true)) {
                if ((this.tabledsStockProductwise != null)) {
                    this.tabledsStockProductwise.InitVars();
                }
            }
            this.tablePendingPayments = ((PendingPaymentsDataTable)(base.Tables["PendingPayments"]));
            if ((initTable == true)) {
                if ((this.tablePendingPayments != null)) {
                    this.tablePendingPayments.InitVars();
                }
            }
            this.tableSelectedPayments = ((SelectedPaymentsDataTable)(base.Tables["SelectedPayments"]));
            if ((initTable == true)) {
                if ((this.tableSelectedPayments != null)) {
                    this.tableSelectedPayments.InitVars();
                }
            }
            this.tablePaymentDetails = ((PaymentDetailsDataTable)(base.Tables["PaymentDetails"]));
            if ((initTable == true)) {
                if ((this.tablePaymentDetails != null)) {
                    this.tablePaymentDetails.InitVars();
                }
            }
            this.tabletbPaidPaymentSummary = ((tbPaidPaymentSummaryDataTable)(base.Tables["tbPaidPaymentSummary"]));
            if ((initTable == true)) {
                if ((this.tabletbPaidPaymentSummary != null)) {
                    this.tabletbPaidPaymentSummary.InitVars();
                }
            }
            this.tabletbPaidPaymentMode = ((tbPaidPaymentModeDataTable)(base.Tables["tbPaidPaymentMode"]));
            if ((initTable == true)) {
                if ((this.tabletbPaidPaymentMode != null)) {
                    this.tabletbPaidPaymentMode.InitVars();
                }
            }
            this.tableSupplierPaymentSummary = ((SupplierPaymentSummaryDataTable)(base.Tables["SupplierPaymentSummary"]));
            if ((initTable == true)) {
                if ((this.tableSupplierPaymentSummary != null)) {
                    this.tableSupplierPaymentSummary.InitVars();
                }
            }
            this.tableTransactionSummary = ((TransactionSummaryDataTable)(base.Tables["TransactionSummary"]));
            if ((initTable == true)) {
                if ((this.tableTransactionSummary != null)) {
                    this.tableTransactionSummary.InitVars();
                }
            }
            this.tableStockDetails = ((StockDetailsDataTable)(base.Tables["StockDetails"]));
            if ((initTable == true)) {
                if ((this.tableStockDetails != null)) {
                    this.tableStockDetails.InitVars();
                }
            }
            this.tabledsSalesDetails = ((dsSalesDetailsDataTable)(base.Tables["dsSalesDetails"]));
            if ((initTable == true)) {
                if ((this.tabledsSalesDetails != null)) {
                    this.tabledsSalesDetails.InitVars();
                }
            }
            this.tabletbReportMonthlyAnalyse = ((tbReportMonthlyAnalyseDataTable)(base.Tables["tbReportMonthlyAnalyse"]));
            if ((initTable == true)) {
                if ((this.tabletbReportMonthlyAnalyse != null)) {
                    this.tabletbReportMonthlyAnalyse.InitVars();
                }
            }
            this.tableCollection = ((CollectionDataTable)(base.Tables["Collection"]));
            if ((initTable == true)) {
                if ((this.tableCollection != null)) {
                    this.tableCollection.InitVars();
                }
            }
            this.tableSelected = ((SelectedDataTable)(base.Tables["Selected"]));
            if ((initTable == true)) {
                if ((this.tableSelected != null)) {
                    this.tableSelected.InitVars();
                }
            }
            this.tabledsPurchasingDetails = ((dsPurchasingDetailsDataTable)(base.Tables["dsPurchasingDetails"]));
            if ((initTable == true)) {
                if ((this.tabledsPurchasingDetails != null)) {
                    this.tabledsPurchasingDetails.InitVars();
                }
            }
            this.tabledsAnalyseData = ((dsAnalyseDataDataTable)(base.Tables["dsAnalyseData"]));
            if ((initTable == true)) {
                if ((this.tabledsAnalyseData != null)) {
                    this.tabledsAnalyseData.InitVars();
                }
            }
            this.tabledsProductBinCard = ((dsProductBinCardDataTable)(base.Tables["dsProductBinCard"]));
            if ((initTable == true)) {
                if ((this.tabledsProductBinCard != null)) {
                    this.tabledsProductBinCard.InitVars();
                }
            }
            this.tabledsBarcode = ((dsBarcodeDataTable)(base.Tables["dsBarcode"]));
            if ((initTable == true)) {
                if ((this.tabledsBarcode != null)) {
                    this.tabledsBarcode.InitVars();
                }
            }
            this.tableSupplierStatement = ((SupplierStatementDataTable)(base.Tables["SupplierStatement"]));
            if ((initTable == true)) {
                if ((this.tableSupplierStatement != null)) {
                    this.tableSupplierStatement.InitVars();
                }
            }
            this.tabledsChequeRecon = ((dsChequeReconDataTable)(base.Tables["dsChequeRecon"]));
            if ((initTable == true)) {
                if ((this.tabledsChequeRecon != null)) {
                    this.tabledsChequeRecon.InitVars();
                }
            }
            this.tabledsChequeReconDetails = ((dsChequeReconDetailsDataTable)(base.Tables["dsChequeReconDetails"]));
            if ((initTable == true)) {
                if ((this.tabledsChequeReconDetails != null)) {
                    this.tabledsChequeReconDetails.InitVars();
                }
            }
            this.tabledsProfitableProduct = ((dsProfitableProductDataTable)(base.Tables["dsProfitableProduct"]));
            if ((initTable == true)) {
                if ((this.tabledsProfitableProduct != null)) {
                    this.tabledsProfitableProduct.InitVars();
                }
            }
            this.tabledsReOrderLevelDetails = ((dsReOrderLevelDetailsDataTable)(base.Tables["dsReOrderLevelDetails"]));
            if ((initTable == true)) {
                if ((this.tabledsReOrderLevelDetails != null)) {
                    this.tabledsReOrderLevelDetails.InitVars();
                }
            }
            this.tableManufacturerDetails = ((ManufacturerDetailsDataTable)(base.Tables["ManufacturerDetails"]));
            if ((initTable == true)) {
                if ((this.tableManufacturerDetails != null)) {
                    this.tableManufacturerDetails.InitVars();
                }
            }
            this.tabledsCreditorsOutstanding = ((dsCreditorsOutstandingDataTable)(base.Tables["dsCreditorsOutstanding"]));
            if ((initTable == true)) {
                if ((this.tabledsCreditorsOutstanding != null)) {
                    this.tabledsCreditorsOutstanding.InitVars();
                }
            }
            this.tabledsProductMoving = ((dsProductMovingDataTable)(base.Tables["dsProductMoving"]));
            if ((initTable == true)) {
                if ((this.tabledsProductMoving != null)) {
                    this.tabledsProductMoving.InitVars();
                }
            }
            this.tabledsProductSalesComparison = ((dsProductSalesComparisonDataTable)(base.Tables["dsProductSalesComparison"]));
            if ((initTable == true)) {
                if ((this.tabledsProductSalesComparison != null)) {
                    this.tabledsProductSalesComparison.InitVars();
                }
            }
            this.tabledsProductDetails_Change = ((dsProductDetails_ChangeDataTable)(base.Tables["dsProductDetails_Change"]));
            if ((initTable == true)) {
                if ((this.tabledsProductDetails_Change != null)) {
                    this.tabledsProductDetails_Change.InitVars();
                }
            }
            this.tabledsTempPacketProduct = ((dsTempPacketProductDataTable)(base.Tables["dsTempPacketProduct"]));
            if ((initTable == true)) {
                if ((this.tabledsTempPacketProduct != null)) {
                    this.tabledsTempPacketProduct.InitVars();
                }
            }
            this.tabledsPacketingProductNote = ((dsPacketingProductNoteDataTable)(base.Tables["dsPacketingProductNote"]));
            if ((initTable == true)) {
                if ((this.tabledsPacketingProductNote != null)) {
                    this.tabledsPacketingProductNote.InitVars();
                }
            }
            this.tabledsNonMovingProduct = ((dsNonMovingProductDataTable)(base.Tables["dsNonMovingProduct"]));
            if ((initTable == true)) {
                if ((this.tabledsNonMovingProduct != null)) {
                    this.tabledsNonMovingProduct.InitVars();
                }
            }
            this.tabledsHourlySales = ((dsHourlySalesDataTable)(base.Tables["dsHourlySales"]));
            if ((initTable == true)) {
                if ((this.tabledsHourlySales != null)) {
                    this.tabledsHourlySales.InitVars();
                }
            }
            this.tabledsDailyCollection = ((dsDailyCollectionDataTable)(base.Tables["dsDailyCollection"]));
            if ((initTable == true)) {
                if ((this.tabledsDailyCollection != null)) {
                    this.tabledsDailyCollection.InitVars();
                }
            }
            this.tabledsReceiptWiseSales = ((dsReceiptWiseSalesDataTable)(base.Tables["dsReceiptWiseSales"]));
            if ((initTable == true)) {
                if ((this.tabledsReceiptWiseSales != null)) {
                    this.tabledsReceiptWiseSales.InitVars();
                }
            }
            this.tabledsSalesmanSales = ((dsSalesmanSalesDataTable)(base.Tables["dsSalesmanSales"]));
            if ((initTable == true)) {
                if ((this.tabledsSalesmanSales != null)) {
                    this.tabledsSalesmanSales.InitVars();
                }
            }
            this.tabledsPurSalesStock = ((dsPurSalesStockDataTable)(base.Tables["dsPurSalesStock"]));
            if ((initTable == true)) {
                if ((this.tabledsPurSalesStock != null)) {
                    this.tabledsPurSalesStock.InitVars();
                }
            }
            this.tabledsGivenDateStock = ((dsGivenDateStockDataTable)(base.Tables["dsGivenDateStock"]));
            if ((initTable == true)) {
                if ((this.tabledsGivenDateStock != null)) {
                    this.tabledsGivenDateStock.InitVars();
                }
            }
            this.tabledsProductToBeReturn = ((dsProductToBeReturnDataTable)(base.Tables["dsProductToBeReturn"]));
            if ((initTable == true)) {
                if ((this.tabledsProductToBeReturn != null)) {
                    this.tabledsProductToBeReturn.InitVars();
                }
            }
            this.tabledsProdROL = ((dsProdROLDataTable)(base.Tables["dsProdROL"]));
            if ((initTable == true)) {
                if ((this.tabledsProdROL != null)) {
                    this.tabledsProdROL.InitVars();
                }
            }
            this.tabledsProductReq = ((dsProductReqDataTable)(base.Tables["dsProductReq"]));
            if ((initTable == true)) {
                if ((this.tabledsProductReq != null)) {
                    this.tabledsProductReq.InitVars();
                }
            }
            this.tabledsProductDiscount = ((dsProductDiscountDataTable)(base.Tables["dsProductDiscount"]));
            if ((initTable == true)) {
                if ((this.tabledsProductDiscount != null)) {
                    this.tabledsProductDiscount.InitVars();
                }
            }
            this.tablePendingReturns = ((PendingReturnsDataTable)(base.Tables["PendingReturns"]));
            if ((initTable == true)) {
                if ((this.tablePendingReturns != null)) {
                    this.tablePendingReturns.InitVars();
                }
            }
            this.tableSelectedSetoff = ((SelectedSetoffDataTable)(base.Tables["SelectedSetoff"]));
            if ((initTable == true)) {
                if ((this.tableSelectedSetoff != null)) {
                    this.tableSelectedSetoff.InitVars();
                }
            }
            this.tabledsPaymentsetOffDetails = ((dsPaymentsetOffDetailsDataTable)(base.Tables["dsPaymentsetOffDetails"]));
            if ((initTable == true)) {
                if ((this.tabledsPaymentsetOffDetails != null)) {
                    this.tabledsPaymentsetOffDetails.InitVars();
                }
            }
            this.tabledsPaymentSetOffSummary = ((dsPaymentSetOffSummaryDataTable)(base.Tables["dsPaymentSetOffSummary"]));
            if ((initTable == true)) {
                if ((this.tabledsPaymentSetOffSummary != null)) {
                    this.tabledsPaymentSetOffSummary.InitVars();
                }
            }
            this.tabledsPriceMasterDetails = ((dsPriceMasterDetailsDataTable)(base.Tables["dsPriceMasterDetails"]));
            if ((initTable == true)) {
                if ((this.tabledsPriceMasterDetails != null)) {
                    this.tabledsPriceMasterDetails.InitVars();
                }
            }
            this.tabledsSystem_Log = ((dsSystem_LogDataTable)(base.Tables["dsSystem_Log"]));
            if ((initTable == true)) {
                if ((this.tabledsSystem_Log != null)) {
                    this.tabledsSystem_Log.InitVars();
                }
            }
            this.tabledsPostDatedCheque = ((dsPostDatedChequeDataTable)(base.Tables["dsPostDatedCheque"]));
            if ((initTable == true)) {
                if ((this.tabledsPostDatedCheque != null)) {
                    this.tabledsPostDatedCheque.InitVars();
                }
            }
            this.tabledsProductLinkTemp = ((dsProductLinkTempDataTable)(base.Tables["dsProductLinkTemp"]));
            if ((initTable == true)) {
                if ((this.tabledsProductLinkTemp != null)) {
                    this.tabledsProductLinkTemp.InitVars();
                }
            }
            this.tablePriceChange = ((PriceChangeDataTable)(base.Tables["PriceChange"]));
            if ((initTable == true)) {
                if ((this.tablePriceChange != null)) {
                    this.tablePriceChange.InitVars();
                }
            }
            this.tabledsPosSalesSummary = ((dsPosSalesSummaryDataTable)(base.Tables["dsPosSalesSummary"]));
            if ((initTable == true)) {
                if ((this.tabledsPosSalesSummary != null)) {
                    this.tabledsPosSalesSummary.InitVars();
                }
            }
            this.tableDataTable1 = ((DataTable1DataTable)(base.Tables["DataTable1"]));
            if ((initTable == true)) {
                if ((this.tableDataTable1 != null)) {
                    this.tableDataTable1.InitVars();
                }
            }
            this.tabletb_Customer_Detail = ((tb_Customer_DetailDataTable)(base.Tables["tb_Customer_Detail"]));
            if ((initTable == true)) {
                if ((this.tabletb_Customer_Detail != null)) {
                    this.tabletb_Customer_Detail.InitVars();
                }
            }
            this.tabledsCustomerSales = ((dsCustomerSalesDataTable)(base.Tables["dsCustomerSales"]));
            if ((initTable == true)) {
                if ((this.tabledsCustomerSales != null)) {
                    this.tabledsCustomerSales.InitVars();
                }
            }
            this.tabledsPurchSchedule = ((dsPurchScheduleDataTable)(base.Tables["dsPurchSchedule"]));
            if ((initTable == true)) {
                if ((this.tabledsPurchSchedule != null)) {
                    this.tabledsPurchSchedule.InitVars();
                }
            }
            this.tableCompanyProfile = ((CompanyProfileDataTable)(base.Tables["CompanyProfile"]));
            if ((initTable == true)) {
                if ((this.tableCompanyProfile != null)) {
                    this.tableCompanyProfile.InitVars();
                }
            }
            this.tabledsFreeIssuedProduct = ((dsFreeIssuedProductDataTable)(base.Tables["dsFreeIssuedProduct"]));
            if ((initTable == true)) {
                if ((this.tabledsFreeIssuedProduct != null)) {
                    this.tabledsFreeIssuedProduct.InitVars();
                }
            }
            this.tabledsLocaWiseTGNSummary = ((dsLocaWiseTGNSummaryDataTable)(base.Tables["dsLocaWiseTGNSummary"]));
            if ((initTable == true)) {
                if ((this.tabledsLocaWiseTGNSummary != null)) {
                    this.tabledsLocaWiseTGNSummary.InitVars();
                }
            }
            this.tabledsReturnCheque = ((dsReturnChequeDataTable)(base.Tables["dsReturnCheque"]));
            if ((initTable == true)) {
                if ((this.tabledsReturnCheque != null)) {
                    this.tabledsReturnCheque.InitVars();
                }
            }
            this.tabledsProductDiscard = ((dsProductDiscardDataTable)(base.Tables["dsProductDiscard"]));
            if ((initTable == true)) {
                if ((this.tabledsProductDiscard != null)) {
                    this.tabledsProductDiscard.InitVars();
                }
            }
            this.tabledsChqReconn = ((dsChqReconnDataTable)(base.Tables["dsChqReconn"]));
            if ((initTable == true)) {
                if ((this.tabledsChqReconn != null)) {
                    this.tabledsChqReconn.InitVars();
                }
            }
            this.tabledsLocaWiseDeptSale = ((dsLocaWiseDeptSaleDataTable)(base.Tables["dsLocaWiseDeptSale"]));
            if ((initTable == true)) {
                if ((this.tabledsLocaWiseDeptSale != null)) {
                    this.tabledsLocaWiseDeptSale.InitVars();
                }
            }
            this.tabledsProdWiseSpecialDisc = ((dsProdWiseSpecialDiscDataTable)(base.Tables["dsProdWiseSpecialDisc"]));
            if ((initTable == true)) {
                if ((this.tabledsProdWiseSpecialDisc != null)) {
                    this.tabledsProdWiseSpecialDisc.InitVars();
                }
            }
            this.tabledsProdCombination = ((dsProdCombinationDataTable)(base.Tables["dsProdCombination"]));
            if ((initTable == true)) {
                if ((this.tabledsProdCombination != null)) {
                    this.tabledsProdCombination.InitVars();
                }
            }
            this.tabledsPurchaseSchedule = ((dsPurchaseScheduleDataTable)(base.Tables["dsPurchaseSchedule"]));
            if ((initTable == true)) {
                if ((this.tabledsPurchaseSchedule != null)) {
                    this.tabledsPurchaseSchedule.InitVars();
                }
            }
            this.tabledsLocaWiseProdOrder = ((dsLocaWiseProdOrderDataTable)(base.Tables["dsLocaWiseProdOrder"]));
            if ((initTable == true)) {
                if ((this.tabledsLocaWiseProdOrder != null)) {
                    this.tabledsLocaWiseProdOrder.InitVars();
                }
            }
            this.tabledsPurchase = ((dsPurchaseDataTable)(base.Tables["dsPurchase"]));
            if ((initTable == true)) {
                if ((this.tabledsPurchase != null)) {
                    this.tabledsPurchase.InitVars();
                }
            }
            this.tabledsProductSumDetails = ((dsProductSumDetailsDataTable)(base.Tables["dsProductSumDetails"]));
            if ((initTable == true)) {
                if ((this.tabledsProductSumDetails != null)) {
                    this.tabledsProductSumDetails.InitVars();
                }
            }
            this.tabledsDailySalesSummaryDetailWise = ((dsDailySalesSummaryDetailWiseDataTable)(base.Tables["dsDailySalesSummaryDetailWise"]));
            if ((initTable == true)) {
                if ((this.tabledsDailySalesSummaryDetailWise != null)) {
                    this.tabledsDailySalesSummaryDetailWise.InitVars();
                }
            }
            this.tabledsCompanyLogo = ((dsCompanyLogoDataTable)(base.Tables["dsCompanyLogo"]));
            if ((initTable == true)) {
                if ((this.tabledsCompanyLogo != null)) {
                    this.tabledsCompanyLogo.InitVars();
                }
            }
            this.tabledsCashINOUT = ((dsCashINOUTDataTable)(base.Tables["dsCashINOUT"]));
            if ((initTable == true)) {
                if ((this.tabledsCashINOUT != null)) {
                    this.tabledsCashINOUT.InitVars();
                }
            }
            this.tabledsDailyCollectionSummary = ((dsDailyCollectionSummaryDataTable)(base.Tables["dsDailyCollectionSummary"]));
            if ((initTable == true)) {
                if ((this.tabledsDailyCollectionSummary != null)) {
                    this.tabledsDailyCollectionSummary.InitVars();
                }
            }
            this.tabledsCusWiseDailySumm = ((dsCusWiseDailySummDataTable)(base.Tables["dsCusWiseDailySumm"]));
            if ((initTable == true)) {
                if ((this.tabledsCusWiseDailySumm != null)) {
                    this.tabledsCusWiseDailySumm.InitVars();
                }
            }
            this.tabledsExpenceTransaction = ((dsExpenceTransactionDataTable)(base.Tables["dsExpenceTransaction"]));
            if ((initTable == true)) {
                if ((this.tabledsExpenceTransaction != null)) {
                    this.tabledsExpenceTransaction.InitVars();
                }
            }
            this.tabledsDayBookRep = ((dsDayBookRepDataTable)(base.Tables["dsDayBookRep"]));
            if ((initTable == true)) {
                if ((this.tabledsDayBookRep != null)) {
                    this.tabledsDayBookRep.InitVars();
                }
            }
            this.tabledtBatchWisePrice = ((dtBatchWisePriceDataTable)(base.Tables["dtBatchWisePrice"]));
            if ((initTable == true)) {
                if ((this.tabledtBatchWisePrice != null)) {
                    this.tabledtBatchWisePrice.InitVars();
                }
            }
            this.tabledsCusAddress = ((dsCusAddressDataTable)(base.Tables["dsCusAddress"]));
            if ((initTable == true)) {
                if ((this.tabledsCusAddress != null)) {
                    this.tabledsCusAddress.InitVars();
                }
            }
            this.tabledsTempPacketProduct1 = ((dsTempPacketProduct1DataTable)(base.Tables["dsTempPacketProduct1"]));
            if ((initTable == true)) {
                if ((this.tabledsTempPacketProduct1 != null)) {
                    this.tabledsTempPacketProduct1.InitVars();
                }
            }
            this.tabledsProdBundle = ((dsProdBundleDataTable)(base.Tables["dsProdBundle"]));
            if ((initTable == true)) {
                if ((this.tabledsProdBundle != null)) {
                    this.tabledsProdBundle.InitVars();
                }
            }
            this.tableStatement = ((StatementDataTable)(base.Tables["Statement"]));
            if ((initTable == true)) {
                if ((this.tableStatement != null)) {
                    this.tableStatement.InitVars();
                }
            }
            this.tableCompany = ((CompanyDataTable)(base.Tables["Company"]));
            if ((initTable == true)) {
                if ((this.tableCompany != null)) {
                    this.tableCompany.InitVars();
                }
            }
            this.tabledsInvoiceColSummery = ((dsInvoiceColSummeryDataTable)(base.Tables["dsInvoiceColSummery"]));
            if ((initTable == true)) {
                if ((this.tabledsInvoiceColSummery != null)) {
                    this.tabledsInvoiceColSummery.InitVars();
                }
            }
            this.tabledsCashDeno = ((dsCashDenoDataTable)(base.Tables["dsCashDeno"]));
            if ((initTable == true)) {
                if ((this.tabledsCashDeno != null)) {
                    this.tabledsCashDeno.InitVars();
                }
            }
            this.tableCRM_Customer = ((CRM_CustomerDataTable)(base.Tables["CRM_Customer"]));
            if ((initTable == true)) {
                if ((this.tableCRM_Customer != null)) {
                    this.tableCRM_Customer.InitVars();
                }
            }
            this.tabledtOGFUpload = ((dtOGFUploadDataTable)(base.Tables["dtOGFUpload"]));
            if ((initTable == true)) {
                if ((this.tabledtOGFUpload != null)) {
                    this.tabledtOGFUpload.InitVars();
                }
            }
            this.tableCustomer = ((CustomerDataTable)(base.Tables["Customer"]));
            if ((initTable == true)) {
                if ((this.tableCustomer != null)) {
                    this.tableCustomer.InitVars();
                }
            }
            this.tableDailyDetails = ((DailyDetailsDataTable)(base.Tables["DailyDetails"]));
            if ((initTable == true)) {
                if ((this.tableDailyDetails != null)) {
                    this.tableDailyDetails.InitVars();
                }
            }
            this.tableStatement1 = ((Statement1DataTable)(base.Tables["Statement1"]));
            if ((initTable == true)) {
                if ((this.tableStatement1 != null)) {
                    this.tableStatement1.InitVars();
                }
            }
            this.tabledsIssuedVoucher = ((dsIssuedVoucherDataTable)(base.Tables["dsIssuedVoucher"]));
            if ((initTable == true)) {
                if ((this.tabledsIssuedVoucher != null)) {
                    this.tabledsIssuedVoucher.InitVars();
                }
            }
            this.tabledsReceivedVoucher = ((dsReceivedVoucherDataTable)(base.Tables["dsReceivedVoucher"]));
            if ((initTable == true)) {
                if ((this.tabledsReceivedVoucher != null)) {
                    this.tabledsReceivedVoucher.InitVars();
                }
            }
            this.tabledtExpDetails = ((dtExpDetailsDataTable)(base.Tables["dtExpDetails"]));
            if ((initTable == true)) {
                if ((this.tabledtExpDetails != null)) {
                    this.tabledtExpDetails.InitVars();
                }
            }
            this.tableDayEnd_Pos_Transaction = ((DayEnd_Pos_TransactionDataTable)(base.Tables["DayEnd_Pos_Transaction"]));
            if ((initTable == true)) {
                if ((this.tableDayEnd_Pos_Transaction != null)) {
                    this.tableDayEnd_Pos_Transaction.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "dsForReports";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/dsForReports.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableDepartment = new DepartmentDataTable();
            base.Tables.Add(this.tableDepartment);
            this.tableCategory = new CategoryDataTable();
            base.Tables.Add(this.tableCategory);
            this.tableStockAdjust = new StockAdjustDataTable();
            base.Tables.Add(this.tableStockAdjust);
            this.tableTransferNote = new TransferNoteDataTable();
            base.Tables.Add(this.tableTransferNote);
            this.tabledsTogDetails = new dsTogDetailsDataTable();
            base.Tables.Add(this.tabledsTogDetails);
            this.tabledsStockAdjustDetails = new dsStockAdjustDetailsDataTable();
            base.Tables.Add(this.tabledsStockAdjustDetails);
            this.tableGoodReceivedNote = new GoodReceivedNoteDataTable();
            base.Tables.Add(this.tableGoodReceivedNote);
            this.tabledsGRNDetailsForRep = new dsGRNDetailsForRepDataTable();
            base.Tables.Add(this.tabledsGRNDetailsForRep);
            this.tablePurchaseOrder = new PurchaseOrderDataTable();
            base.Tables.Add(this.tablePurchaseOrder);
            this.tabledsPurchaseOrderDetails = new dsPurchaseOrderDetailsDataTable();
            base.Tables.Add(this.tabledsPurchaseOrderDetails);
            this.tableProduct = new ProductDataTable();
            base.Tables.Add(this.tableProduct);
            this.tableInvoice = new InvoiceDataTable();
            base.Tables.Add(this.tableInvoice);
            this.tabledsAccount = new dsAccountDataTable();
            base.Tables.Add(this.tabledsAccount);
            this.tabledsInvoiceDetails = new dsInvoiceDetailsDataTable();
            base.Tables.Add(this.tabledsInvoiceDetails);
            this.tabledsStockProductwise = new dsStockProductwiseDataTable();
            base.Tables.Add(this.tabledsStockProductwise);
            this.tablePendingPayments = new PendingPaymentsDataTable();
            base.Tables.Add(this.tablePendingPayments);
            this.tableSelectedPayments = new SelectedPaymentsDataTable();
            base.Tables.Add(this.tableSelectedPayments);
            this.tablePaymentDetails = new PaymentDetailsDataTable();
            base.Tables.Add(this.tablePaymentDetails);
            this.tabletbPaidPaymentSummary = new tbPaidPaymentSummaryDataTable();
            base.Tables.Add(this.tabletbPaidPaymentSummary);
            this.tabletbPaidPaymentMode = new tbPaidPaymentModeDataTable();
            base.Tables.Add(this.tabletbPaidPaymentMode);
            this.tableSupplierPaymentSummary = new SupplierPaymentSummaryDataTable();
            base.Tables.Add(this.tableSupplierPaymentSummary);
            this.tableTransactionSummary = new TransactionSummaryDataTable();
            base.Tables.Add(this.tableTransactionSummary);
            this.tableStockDetails = new StockDetailsDataTable();
            base.Tables.Add(this.tableStockDetails);
            this.tabledsSalesDetails = new dsSalesDetailsDataTable();
            base.Tables.Add(this.tabledsSalesDetails);
            this.tabletbReportMonthlyAnalyse = new tbReportMonthlyAnalyseDataTable();
            base.Tables.Add(this.tabletbReportMonthlyAnalyse);
            this.tableCollection = new CollectionDataTable();
            base.Tables.Add(this.tableCollection);
            this.tableSelected = new SelectedDataTable();
            base.Tables.Add(this.tableSelected);
            this.tabledsPurchasingDetails = new dsPurchasingDetailsDataTable();
            base.Tables.Add(this.tabledsPurchasingDetails);
            this.tabledsAnalyseData = new dsAnalyseDataDataTable();
            base.Tables.Add(this.tabledsAnalyseData);
            this.tabledsProductBinCard = new dsProductBinCardDataTable();
            base.Tables.Add(this.tabledsProductBinCard);
            this.tabledsBarcode = new dsBarcodeDataTable();
            base.Tables.Add(this.tabledsBarcode);
            this.tableSupplierStatement = new SupplierStatementDataTable();
            base.Tables.Add(this.tableSupplierStatement);
            this.tabledsChequeRecon = new dsChequeReconDataTable();
            base.Tables.Add(this.tabledsChequeRecon);
            this.tabledsChequeReconDetails = new dsChequeReconDetailsDataTable();
            base.Tables.Add(this.tabledsChequeReconDetails);
            this.tabledsProfitableProduct = new dsProfitableProductDataTable();
            base.Tables.Add(this.tabledsProfitableProduct);
            this.tabledsReOrderLevelDetails = new dsReOrderLevelDetailsDataTable();
            base.Tables.Add(this.tabledsReOrderLevelDetails);
            this.tableManufacturerDetails = new ManufacturerDetailsDataTable();
            base.Tables.Add(this.tableManufacturerDetails);
            this.tabledsCreditorsOutstanding = new dsCreditorsOutstandingDataTable();
            base.Tables.Add(this.tabledsCreditorsOutstanding);
            this.tabledsProductMoving = new dsProductMovingDataTable();
            base.Tables.Add(this.tabledsProductMoving);
            this.tabledsProductSalesComparison = new dsProductSalesComparisonDataTable();
            base.Tables.Add(this.tabledsProductSalesComparison);
            this.tabledsProductDetails_Change = new dsProductDetails_ChangeDataTable();
            base.Tables.Add(this.tabledsProductDetails_Change);
            this.tabledsTempPacketProduct = new dsTempPacketProductDataTable();
            base.Tables.Add(this.tabledsTempPacketProduct);
            this.tabledsPacketingProductNote = new dsPacketingProductNoteDataTable();
            base.Tables.Add(this.tabledsPacketingProductNote);
            this.tabledsNonMovingProduct = new dsNonMovingProductDataTable();
            base.Tables.Add(this.tabledsNonMovingProduct);
            this.tabledsHourlySales = new dsHourlySalesDataTable();
            base.Tables.Add(this.tabledsHourlySales);
            this.tabledsDailyCollection = new dsDailyCollectionDataTable();
            base.Tables.Add(this.tabledsDailyCollection);
            this.tabledsReceiptWiseSales = new dsReceiptWiseSalesDataTable();
            base.Tables.Add(this.tabledsReceiptWiseSales);
            this.tabledsSalesmanSales = new dsSalesmanSalesDataTable();
            base.Tables.Add(this.tabledsSalesmanSales);
            this.tabledsPurSalesStock = new dsPurSalesStockDataTable();
            base.Tables.Add(this.tabledsPurSalesStock);
            this.tabledsGivenDateStock = new dsGivenDateStockDataTable();
            base.Tables.Add(this.tabledsGivenDateStock);
            this.tabledsProductToBeReturn = new dsProductToBeReturnDataTable();
            base.Tables.Add(this.tabledsProductToBeReturn);
            this.tabledsProdROL = new dsProdROLDataTable();
            base.Tables.Add(this.tabledsProdROL);
            this.tabledsProductReq = new dsProductReqDataTable();
            base.Tables.Add(this.tabledsProductReq);
            this.tabledsProductDiscount = new dsProductDiscountDataTable();
            base.Tables.Add(this.tabledsProductDiscount);
            this.tablePendingReturns = new PendingReturnsDataTable();
            base.Tables.Add(this.tablePendingReturns);
            this.tableSelectedSetoff = new SelectedSetoffDataTable();
            base.Tables.Add(this.tableSelectedSetoff);
            this.tabledsPaymentsetOffDetails = new dsPaymentsetOffDetailsDataTable();
            base.Tables.Add(this.tabledsPaymentsetOffDetails);
            this.tabledsPaymentSetOffSummary = new dsPaymentSetOffSummaryDataTable();
            base.Tables.Add(this.tabledsPaymentSetOffSummary);
            this.tabledsPriceMasterDetails = new dsPriceMasterDetailsDataTable();
            base.Tables.Add(this.tabledsPriceMasterDetails);
            this.tabledsSystem_Log = new dsSystem_LogDataTable();
            base.Tables.Add(this.tabledsSystem_Log);
            this.tabledsPostDatedCheque = new dsPostDatedChequeDataTable();
            base.Tables.Add(this.tabledsPostDatedCheque);
            this.tabledsProductLinkTemp = new dsProductLinkTempDataTable();
            base.Tables.Add(this.tabledsProductLinkTemp);
            this.tablePriceChange = new PriceChangeDataTable();
            base.Tables.Add(this.tablePriceChange);
            this.tabledsPosSalesSummary = new dsPosSalesSummaryDataTable();
            base.Tables.Add(this.tabledsPosSalesSummary);
            this.tableDataTable1 = new DataTable1DataTable();
            base.Tables.Add(this.tableDataTable1);
            this.tabletb_Customer_Detail = new tb_Customer_DetailDataTable();
            base.Tables.Add(this.tabletb_Customer_Detail);
            this.tabledsCustomerSales = new dsCustomerSalesDataTable();
            base.Tables.Add(this.tabledsCustomerSales);
            this.tabledsPurchSchedule = new dsPurchScheduleDataTable();
            base.Tables.Add(this.tabledsPurchSchedule);
            this.tableCompanyProfile = new CompanyProfileDataTable();
            base.Tables.Add(this.tableCompanyProfile);
            this.tabledsFreeIssuedProduct = new dsFreeIssuedProductDataTable();
            base.Tables.Add(this.tabledsFreeIssuedProduct);
            this.tabledsLocaWiseTGNSummary = new dsLocaWiseTGNSummaryDataTable();
            base.Tables.Add(this.tabledsLocaWiseTGNSummary);
            this.tabledsReturnCheque = new dsReturnChequeDataTable();
            base.Tables.Add(this.tabledsReturnCheque);
            this.tabledsProductDiscard = new dsProductDiscardDataTable();
            base.Tables.Add(this.tabledsProductDiscard);
            this.tabledsChqReconn = new dsChqReconnDataTable();
            base.Tables.Add(this.tabledsChqReconn);
            this.tabledsLocaWiseDeptSale = new dsLocaWiseDeptSaleDataTable();
            base.Tables.Add(this.tabledsLocaWiseDeptSale);
            this.tabledsProdWiseSpecialDisc = new dsProdWiseSpecialDiscDataTable();
            base.Tables.Add(this.tabledsProdWiseSpecialDisc);
            this.tabledsProdCombination = new dsProdCombinationDataTable();
            base.Tables.Add(this.tabledsProdCombination);
            this.tabledsPurchaseSchedule = new dsPurchaseScheduleDataTable();
            base.Tables.Add(this.tabledsPurchaseSchedule);
            this.tabledsLocaWiseProdOrder = new dsLocaWiseProdOrderDataTable();
            base.Tables.Add(this.tabledsLocaWiseProdOrder);
            this.tabledsPurchase = new dsPurchaseDataTable();
            base.Tables.Add(this.tabledsPurchase);
            this.tabledsProductSumDetails = new dsProductSumDetailsDataTable();
            base.Tables.Add(this.tabledsProductSumDetails);
            this.tabledsDailySalesSummaryDetailWise = new dsDailySalesSummaryDetailWiseDataTable();
            base.Tables.Add(this.tabledsDailySalesSummaryDetailWise);
            this.tabledsCompanyLogo = new dsCompanyLogoDataTable();
            base.Tables.Add(this.tabledsCompanyLogo);
            this.tabledsCashINOUT = new dsCashINOUTDataTable();
            base.Tables.Add(this.tabledsCashINOUT);
            this.tabledsDailyCollectionSummary = new dsDailyCollectionSummaryDataTable();
            base.Tables.Add(this.tabledsDailyCollectionSummary);
            this.tabledsCusWiseDailySumm = new dsCusWiseDailySummDataTable();
            base.Tables.Add(this.tabledsCusWiseDailySumm);
            this.tabledsExpenceTransaction = new dsExpenceTransactionDataTable();
            base.Tables.Add(this.tabledsExpenceTransaction);
            this.tabledsDayBookRep = new dsDayBookRepDataTable();
            base.Tables.Add(this.tabledsDayBookRep);
            this.tabledtBatchWisePrice = new dtBatchWisePriceDataTable();
            base.Tables.Add(this.tabledtBatchWisePrice);
            this.tabledsCusAddress = new dsCusAddressDataTable();
            base.Tables.Add(this.tabledsCusAddress);
            this.tabledsTempPacketProduct1 = new dsTempPacketProduct1DataTable();
            base.Tables.Add(this.tabledsTempPacketProduct1);
            this.tabledsProdBundle = new dsProdBundleDataTable();
            base.Tables.Add(this.tabledsProdBundle);
            this.tableStatement = new StatementDataTable();
            base.Tables.Add(this.tableStatement);
            this.tableCompany = new CompanyDataTable();
            base.Tables.Add(this.tableCompany);
            this.tabledsInvoiceColSummery = new dsInvoiceColSummeryDataTable();
            base.Tables.Add(this.tabledsInvoiceColSummery);
            this.tabledsCashDeno = new dsCashDenoDataTable();
            base.Tables.Add(this.tabledsCashDeno);
            this.tableCRM_Customer = new CRM_CustomerDataTable();
            base.Tables.Add(this.tableCRM_Customer);
            this.tabledtOGFUpload = new dtOGFUploadDataTable();
            base.Tables.Add(this.tabledtOGFUpload);
            this.tableCustomer = new CustomerDataTable();
            base.Tables.Add(this.tableCustomer);
            this.tableDailyDetails = new DailyDetailsDataTable();
            base.Tables.Add(this.tableDailyDetails);
            this.tableStatement1 = new Statement1DataTable();
            base.Tables.Add(this.tableStatement1);
            this.tabledsIssuedVoucher = new dsIssuedVoucherDataTable();
            base.Tables.Add(this.tabledsIssuedVoucher);
            this.tabledsReceivedVoucher = new dsReceivedVoucherDataTable();
            base.Tables.Add(this.tabledsReceivedVoucher);
            this.tabledtExpDetails = new dtExpDetailsDataTable();
            base.Tables.Add(this.tabledtExpDetails);
            this.tableDayEnd_Pos_Transaction = new DayEnd_Pos_TransactionDataTable();
            base.Tables.Add(this.tableDayEnd_Pos_Transaction);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeDepartment() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCategory() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeStockAdjust() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeTransferNote() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedsTogDetails() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedsStockAdjustDetails() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeGoodReceivedNote() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedsGRNDetailsForRep() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePurchaseOrder() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedsPurchaseOrderDetails() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeProduct() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeInvoice() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedsAccount() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedsInvoiceDetails() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedsStockProductwise() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePendingPayments() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSelectedPayments() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePaymentDetails() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetbPaidPaymentSummary() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetbPaidPaymentMode() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSupplierPaymentSummary() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeTransactionSummary() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeStockDetails() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedsSalesDetails() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetbReportMonthlyAnalyse() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCollection() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSelected() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedsPurchasingDetails() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedsAnalyseData() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedsProductBinCard() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedsBarcode() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSupplierStatement() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedsChequeRecon() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedsChequeReconDetails() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedsProfitableProduct() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedsReOrderLevelDetails() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeManufacturerDetails() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedsCreditorsOutstanding() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedsProductMoving() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedsProductSalesComparison() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedsProductDetails_Change() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedsTempPacketProduct() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedsPacketingProductNote() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedsNonMovingProduct() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedsHourlySales() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedsDailyCollection() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedsReceiptWiseSales() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedsSalesmanSales() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedsPurSalesStock() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedsGivenDateStock() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedsProductToBeReturn() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedsProdROL() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedsProductReq() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedsProductDiscount() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePendingReturns() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSelectedSetoff() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedsPaymentsetOffDetails() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedsPaymentSetOffSummary() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedsPriceMasterDetails() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedsSystem_Log() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedsPostDatedCheque() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedsProductLinkTemp() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePriceChange() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedsPosSalesSummary() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeDataTable1() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetb_Customer_Detail() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedsCustomerSales() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedsPurchSchedule() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCompanyProfile() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedsFreeIssuedProduct() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedsLocaWiseTGNSummary() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedsReturnCheque() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedsProductDiscard() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedsChqReconn() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedsLocaWiseDeptSale() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedsProdWiseSpecialDisc() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedsProdCombination() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedsPurchaseSchedule() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedsLocaWiseProdOrder() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedsPurchase() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedsProductSumDetails() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedsDailySalesSummaryDetailWise() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedsCompanyLogo() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedsCashINOUT() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedsDailyCollectionSummary() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedsCusWiseDailySumm() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedsExpenceTransaction() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedsDayBookRep() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedtBatchWisePrice() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedsCusAddress() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedsTempPacketProduct1() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedsProdBundle() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeStatement() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCompany() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedsInvoiceColSummery() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedsCashDeno() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCRM_Customer() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedtOGFUpload() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCustomer() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeDailyDetails() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeStatement1() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedsIssuedVoucher() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedsReceivedVoucher() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedtExpDetails() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeDayEnd_Pos_Transaction() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dsForReports ds = new dsForReports();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void DepartmentRowChangeEventHandler(object sender, DepartmentRowChangeEvent e);
        
        public delegate void CategoryRowChangeEventHandler(object sender, CategoryRowChangeEvent e);
        
        public delegate void StockAdjustRowChangeEventHandler(object sender, StockAdjustRowChangeEvent e);
        
        public delegate void TransferNoteRowChangeEventHandler(object sender, TransferNoteRowChangeEvent e);
        
        public delegate void dsTogDetailsRowChangeEventHandler(object sender, dsTogDetailsRowChangeEvent e);
        
        public delegate void dsStockAdjustDetailsRowChangeEventHandler(object sender, dsStockAdjustDetailsRowChangeEvent e);
        
        public delegate void GoodReceivedNoteRowChangeEventHandler(object sender, GoodReceivedNoteRowChangeEvent e);
        
        public delegate void dsGRNDetailsForRepRowChangeEventHandler(object sender, dsGRNDetailsForRepRowChangeEvent e);
        
        public delegate void PurchaseOrderRowChangeEventHandler(object sender, PurchaseOrderRowChangeEvent e);
        
        public delegate void dsPurchaseOrderDetailsRowChangeEventHandler(object sender, dsPurchaseOrderDetailsRowChangeEvent e);
        
        public delegate void ProductRowChangeEventHandler(object sender, ProductRowChangeEvent e);
        
        public delegate void InvoiceRowChangeEventHandler(object sender, InvoiceRowChangeEvent e);
        
        public delegate void dsAccountRowChangeEventHandler(object sender, dsAccountRowChangeEvent e);
        
        public delegate void dsInvoiceDetailsRowChangeEventHandler(object sender, dsInvoiceDetailsRowChangeEvent e);
        
        public delegate void dsStockProductwiseRowChangeEventHandler(object sender, dsStockProductwiseRowChangeEvent e);
        
        public delegate void PendingPaymentsRowChangeEventHandler(object sender, PendingPaymentsRowChangeEvent e);
        
        public delegate void SelectedPaymentsRowChangeEventHandler(object sender, SelectedPaymentsRowChangeEvent e);
        
        public delegate void PaymentDetailsRowChangeEventHandler(object sender, PaymentDetailsRowChangeEvent e);
        
        public delegate void tbPaidPaymentSummaryRowChangeEventHandler(object sender, tbPaidPaymentSummaryRowChangeEvent e);
        
        public delegate void tbPaidPaymentModeRowChangeEventHandler(object sender, tbPaidPaymentModeRowChangeEvent e);
        
        public delegate void SupplierPaymentSummaryRowChangeEventHandler(object sender, SupplierPaymentSummaryRowChangeEvent e);
        
        public delegate void TransactionSummaryRowChangeEventHandler(object sender, TransactionSummaryRowChangeEvent e);
        
        public delegate void StockDetailsRowChangeEventHandler(object sender, StockDetailsRowChangeEvent e);
        
        public delegate void dsSalesDetailsRowChangeEventHandler(object sender, dsSalesDetailsRowChangeEvent e);
        
        public delegate void tbReportMonthlyAnalyseRowChangeEventHandler(object sender, tbReportMonthlyAnalyseRowChangeEvent e);
        
        public delegate void CollectionRowChangeEventHandler(object sender, CollectionRowChangeEvent e);
        
        public delegate void SelectedRowChangeEventHandler(object sender, SelectedRowChangeEvent e);
        
        public delegate void dsPurchasingDetailsRowChangeEventHandler(object sender, dsPurchasingDetailsRowChangeEvent e);
        
        public delegate void dsAnalyseDataRowChangeEventHandler(object sender, dsAnalyseDataRowChangeEvent e);
        
        public delegate void dsProductBinCardRowChangeEventHandler(object sender, dsProductBinCardRowChangeEvent e);
        
        public delegate void dsBarcodeRowChangeEventHandler(object sender, dsBarcodeRowChangeEvent e);
        
        public delegate void SupplierStatementRowChangeEventHandler(object sender, SupplierStatementRowChangeEvent e);
        
        public delegate void dsChequeReconRowChangeEventHandler(object sender, dsChequeReconRowChangeEvent e);
        
        public delegate void dsChequeReconDetailsRowChangeEventHandler(object sender, dsChequeReconDetailsRowChangeEvent e);
        
        public delegate void dsProfitableProductRowChangeEventHandler(object sender, dsProfitableProductRowChangeEvent e);
        
        public delegate void dsReOrderLevelDetailsRowChangeEventHandler(object sender, dsReOrderLevelDetailsRowChangeEvent e);
        
        public delegate void ManufacturerDetailsRowChangeEventHandler(object sender, ManufacturerDetailsRowChangeEvent e);
        
        public delegate void dsCreditorsOutstandingRowChangeEventHandler(object sender, dsCreditorsOutstandingRowChangeEvent e);
        
        public delegate void dsProductMovingRowChangeEventHandler(object sender, dsProductMovingRowChangeEvent e);
        
        public delegate void dsProductSalesComparisonRowChangeEventHandler(object sender, dsProductSalesComparisonRowChangeEvent e);
        
        public delegate void dsProductDetails_ChangeRowChangeEventHandler(object sender, dsProductDetails_ChangeRowChangeEvent e);
        
        public delegate void dsTempPacketProductRowChangeEventHandler(object sender, dsTempPacketProductRowChangeEvent e);
        
        public delegate void dsPacketingProductNoteRowChangeEventHandler(object sender, dsPacketingProductNoteRowChangeEvent e);
        
        public delegate void dsNonMovingProductRowChangeEventHandler(object sender, dsNonMovingProductRowChangeEvent e);
        
        public delegate void dsHourlySalesRowChangeEventHandler(object sender, dsHourlySalesRowChangeEvent e);
        
        public delegate void dsDailyCollectionRowChangeEventHandler(object sender, dsDailyCollectionRowChangeEvent e);
        
        public delegate void dsReceiptWiseSalesRowChangeEventHandler(object sender, dsReceiptWiseSalesRowChangeEvent e);
        
        public delegate void dsSalesmanSalesRowChangeEventHandler(object sender, dsSalesmanSalesRowChangeEvent e);
        
        public delegate void dsPurSalesStockRowChangeEventHandler(object sender, dsPurSalesStockRowChangeEvent e);
        
        public delegate void dsGivenDateStockRowChangeEventHandler(object sender, dsGivenDateStockRowChangeEvent e);
        
        public delegate void dsProductToBeReturnRowChangeEventHandler(object sender, dsProductToBeReturnRowChangeEvent e);
        
        public delegate void dsProdROLRowChangeEventHandler(object sender, dsProdROLRowChangeEvent e);
        
        public delegate void dsProductReqRowChangeEventHandler(object sender, dsProductReqRowChangeEvent e);
        
        public delegate void dsProductDiscountRowChangeEventHandler(object sender, dsProductDiscountRowChangeEvent e);
        
        public delegate void PendingReturnsRowChangeEventHandler(object sender, PendingReturnsRowChangeEvent e);
        
        public delegate void SelectedSetoffRowChangeEventHandler(object sender, SelectedSetoffRowChangeEvent e);
        
        public delegate void dsPaymentsetOffDetailsRowChangeEventHandler(object sender, dsPaymentsetOffDetailsRowChangeEvent e);
        
        public delegate void dsPaymentSetOffSummaryRowChangeEventHandler(object sender, dsPaymentSetOffSummaryRowChangeEvent e);
        
        public delegate void dsPriceMasterDetailsRowChangeEventHandler(object sender, dsPriceMasterDetailsRowChangeEvent e);
        
        public delegate void dsSystem_LogRowChangeEventHandler(object sender, dsSystem_LogRowChangeEvent e);
        
        public delegate void dsPostDatedChequeRowChangeEventHandler(object sender, dsPostDatedChequeRowChangeEvent e);
        
        public delegate void dsProductLinkTempRowChangeEventHandler(object sender, dsProductLinkTempRowChangeEvent e);
        
        public delegate void PriceChangeRowChangeEventHandler(object sender, PriceChangeRowChangeEvent e);
        
        public delegate void dsPosSalesSummaryRowChangeEventHandler(object sender, dsPosSalesSummaryRowChangeEvent e);
        
        public delegate void DataTable1RowChangeEventHandler(object sender, DataTable1RowChangeEvent e);
        
        public delegate void tb_Customer_DetailRowChangeEventHandler(object sender, tb_Customer_DetailRowChangeEvent e);
        
        public delegate void dsCustomerSalesRowChangeEventHandler(object sender, dsCustomerSalesRowChangeEvent e);
        
        public delegate void dsPurchScheduleRowChangeEventHandler(object sender, dsPurchScheduleRowChangeEvent e);
        
        public delegate void CompanyProfileRowChangeEventHandler(object sender, CompanyProfileRowChangeEvent e);
        
        public delegate void dsFreeIssuedProductRowChangeEventHandler(object sender, dsFreeIssuedProductRowChangeEvent e);
        
        public delegate void dsLocaWiseTGNSummaryRowChangeEventHandler(object sender, dsLocaWiseTGNSummaryRowChangeEvent e);
        
        public delegate void dsReturnChequeRowChangeEventHandler(object sender, dsReturnChequeRowChangeEvent e);
        
        public delegate void dsProductDiscardRowChangeEventHandler(object sender, dsProductDiscardRowChangeEvent e);
        
        public delegate void dsChqReconnRowChangeEventHandler(object sender, dsChqReconnRowChangeEvent e);
        
        public delegate void dsLocaWiseDeptSaleRowChangeEventHandler(object sender, dsLocaWiseDeptSaleRowChangeEvent e);
        
        public delegate void dsProdWiseSpecialDiscRowChangeEventHandler(object sender, dsProdWiseSpecialDiscRowChangeEvent e);
        
        public delegate void dsProdCombinationRowChangeEventHandler(object sender, dsProdCombinationRowChangeEvent e);
        
        public delegate void dsPurchaseScheduleRowChangeEventHandler(object sender, dsPurchaseScheduleRowChangeEvent e);
        
        public delegate void dsLocaWiseProdOrderRowChangeEventHandler(object sender, dsLocaWiseProdOrderRowChangeEvent e);
        
        public delegate void dsPurchaseRowChangeEventHandler(object sender, dsPurchaseRowChangeEvent e);
        
        public delegate void dsProductSumDetailsRowChangeEventHandler(object sender, dsProductSumDetailsRowChangeEvent e);
        
        public delegate void dsDailySalesSummaryDetailWiseRowChangeEventHandler(object sender, dsDailySalesSummaryDetailWiseRowChangeEvent e);
        
        public delegate void dsCompanyLogoRowChangeEventHandler(object sender, dsCompanyLogoRowChangeEvent e);
        
        public delegate void dsCashINOUTRowChangeEventHandler(object sender, dsCashINOUTRowChangeEvent e);
        
        public delegate void dsDailyCollectionSummaryRowChangeEventHandler(object sender, dsDailyCollectionSummaryRowChangeEvent e);
        
        public delegate void dsCusWiseDailySummRowChangeEventHandler(object sender, dsCusWiseDailySummRowChangeEvent e);
        
        public delegate void dsExpenceTransactionRowChangeEventHandler(object sender, dsExpenceTransactionRowChangeEvent e);
        
        public delegate void dsDayBookRepRowChangeEventHandler(object sender, dsDayBookRepRowChangeEvent e);
        
        public delegate void dtBatchWisePriceRowChangeEventHandler(object sender, dtBatchWisePriceRowChangeEvent e);
        
        public delegate void dsCusAddressRowChangeEventHandler(object sender, dsCusAddressRowChangeEvent e);
        
        public delegate void dsTempPacketProduct1RowChangeEventHandler(object sender, dsTempPacketProduct1RowChangeEvent e);
        
        public delegate void dsProdBundleRowChangeEventHandler(object sender, dsProdBundleRowChangeEvent e);
        
        public delegate void StatementRowChangeEventHandler(object sender, StatementRowChangeEvent e);
        
        public delegate void CompanyRowChangeEventHandler(object sender, CompanyRowChangeEvent e);
        
        public delegate void dsInvoiceColSummeryRowChangeEventHandler(object sender, dsInvoiceColSummeryRowChangeEvent e);
        
        public delegate void dsCashDenoRowChangeEventHandler(object sender, dsCashDenoRowChangeEvent e);
        
        public delegate void CRM_CustomerRowChangeEventHandler(object sender, CRM_CustomerRowChangeEvent e);
        
        public delegate void dtOGFUploadRowChangeEventHandler(object sender, dtOGFUploadRowChangeEvent e);
        
        public delegate void CustomerRowChangeEventHandler(object sender, CustomerRowChangeEvent e);
        
        public delegate void DailyDetailsRowChangeEventHandler(object sender, DailyDetailsRowChangeEvent e);
        
        public delegate void Statement1RowChangeEventHandler(object sender, Statement1RowChangeEvent e);
        
        public delegate void dsIssuedVoucherRowChangeEventHandler(object sender, dsIssuedVoucherRowChangeEvent e);
        
        public delegate void dsReceivedVoucherRowChangeEventHandler(object sender, dsReceivedVoucherRowChangeEvent e);
        
        public delegate void dtExpDetailsRowChangeEventHandler(object sender, dtExpDetailsRowChangeEvent e);
        
        public delegate void DayEnd_Pos_TransactionRowChangeEventHandler(object sender, DayEnd_Pos_TransactionRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DepartmentDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnDept_Code;
            
            private global::System.Data.DataColumn columnDept_Name;
            
            private global::System.Data.DataColumn columnProd_Code;
            
            private global::System.Data.DataColumn columnProd_Name;
            
            private global::System.Data.DataColumn columnPurchase_price;
            
            private global::System.Data.DataColumn columnSelling_Price;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DepartmentDataTable() {
                this.TableName = "Department";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DepartmentDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DepartmentDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Dept_CodeColumn {
                get {
                    return this.columnDept_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Dept_NameColumn {
                get {
                    return this.columnDept_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Prod_CodeColumn {
                get {
                    return this.columnProd_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Prod_NameColumn {
                get {
                    return this.columnProd_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Purchase_priceColumn {
                get {
                    return this.columnPurchase_price;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Selling_PriceColumn {
                get {
                    return this.columnSelling_Price;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DepartmentRow this[int index] {
                get {
                    return ((DepartmentRow)(this.Rows[index]));
                }
            }
            
            public event DepartmentRowChangeEventHandler DepartmentRowChanging;
            
            public event DepartmentRowChangeEventHandler DepartmentRowChanged;
            
            public event DepartmentRowChangeEventHandler DepartmentRowDeleting;
            
            public event DepartmentRowChangeEventHandler DepartmentRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDepartmentRow(DepartmentRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DepartmentRow AddDepartmentRow(string Dept_Code, string Dept_Name, string Prod_Code, string Prod_Name, decimal Purchase_price, decimal Selling_Price) {
                DepartmentRow rowDepartmentRow = ((DepartmentRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Dept_Code,
                        Dept_Name,
                        Prod_Code,
                        Prod_Name,
                        Purchase_price,
                        Selling_Price};
                rowDepartmentRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDepartmentRow);
                return rowDepartmentRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                DepartmentDataTable cln = ((DepartmentDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DepartmentDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDept_Code = base.Columns["Dept_Code"];
                this.columnDept_Name = base.Columns["Dept_Name"];
                this.columnProd_Code = base.Columns["Prod_Code"];
                this.columnProd_Name = base.Columns["Prod_Name"];
                this.columnPurchase_price = base.Columns["Purchase_price"];
                this.columnSelling_Price = base.Columns["Selling_Price"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDept_Code = new global::System.Data.DataColumn("Dept_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDept_Code);
                this.columnDept_Name = new global::System.Data.DataColumn("Dept_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDept_Name);
                this.columnProd_Code = new global::System.Data.DataColumn("Prod_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Code);
                this.columnProd_Name = new global::System.Data.DataColumn("Prod_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Name);
                this.columnPurchase_price = new global::System.Data.DataColumn("Purchase_price", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPurchase_price);
                this.columnSelling_Price = new global::System.Data.DataColumn("Selling_Price", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelling_Price);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DepartmentRow NewDepartmentRow() {
                return ((DepartmentRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DepartmentRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(DepartmentRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DepartmentRowChanged != null)) {
                    this.DepartmentRowChanged(this, new DepartmentRowChangeEvent(((DepartmentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DepartmentRowChanging != null)) {
                    this.DepartmentRowChanging(this, new DepartmentRowChangeEvent(((DepartmentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DepartmentRowDeleted != null)) {
                    this.DepartmentRowDeleted(this, new DepartmentRowChangeEvent(((DepartmentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DepartmentRowDeleting != null)) {
                    this.DepartmentRowDeleting(this, new DepartmentRowChangeEvent(((DepartmentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDepartmentRow(DepartmentRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DepartmentDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CategoryDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnDept_Code;
            
            private global::System.Data.DataColumn columnDept_Name;
            
            private global::System.Data.DataColumn columnCat_Code;
            
            private global::System.Data.DataColumn columnCat_Name;
            
            private global::System.Data.DataColumn columnProd_Code;
            
            private global::System.Data.DataColumn columnProd_Name;
            
            private global::System.Data.DataColumn columnPurchase_price;
            
            private global::System.Data.DataColumn columnSelling_Price;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CategoryDataTable() {
                this.TableName = "Category";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CategoryDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CategoryDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Dept_CodeColumn {
                get {
                    return this.columnDept_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Dept_NameColumn {
                get {
                    return this.columnDept_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cat_CodeColumn {
                get {
                    return this.columnCat_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cat_NameColumn {
                get {
                    return this.columnCat_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Prod_CodeColumn {
                get {
                    return this.columnProd_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Prod_NameColumn {
                get {
                    return this.columnProd_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Purchase_priceColumn {
                get {
                    return this.columnPurchase_price;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Selling_PriceColumn {
                get {
                    return this.columnSelling_Price;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CategoryRow this[int index] {
                get {
                    return ((CategoryRow)(this.Rows[index]));
                }
            }
            
            public event CategoryRowChangeEventHandler CategoryRowChanging;
            
            public event CategoryRowChangeEventHandler CategoryRowChanged;
            
            public event CategoryRowChangeEventHandler CategoryRowDeleting;
            
            public event CategoryRowChangeEventHandler CategoryRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCategoryRow(CategoryRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CategoryRow AddCategoryRow(string Dept_Code, string Dept_Name, string Cat_Code, string Cat_Name, string Prod_Code, string Prod_Name, decimal Purchase_price, decimal Selling_Price) {
                CategoryRow rowCategoryRow = ((CategoryRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Dept_Code,
                        Dept_Name,
                        Cat_Code,
                        Cat_Name,
                        Prod_Code,
                        Prod_Name,
                        Purchase_price,
                        Selling_Price};
                rowCategoryRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCategoryRow);
                return rowCategoryRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                CategoryDataTable cln = ((CategoryDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CategoryDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDept_Code = base.Columns["Dept_Code"];
                this.columnDept_Name = base.Columns["Dept_Name"];
                this.columnCat_Code = base.Columns["Cat_Code"];
                this.columnCat_Name = base.Columns["Cat_Name"];
                this.columnProd_Code = base.Columns["Prod_Code"];
                this.columnProd_Name = base.Columns["Prod_Name"];
                this.columnPurchase_price = base.Columns["Purchase_price"];
                this.columnSelling_Price = base.Columns["Selling_Price"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDept_Code = new global::System.Data.DataColumn("Dept_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDept_Code);
                this.columnDept_Name = new global::System.Data.DataColumn("Dept_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDept_Name);
                this.columnCat_Code = new global::System.Data.DataColumn("Cat_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCat_Code);
                this.columnCat_Name = new global::System.Data.DataColumn("Cat_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCat_Name);
                this.columnProd_Code = new global::System.Data.DataColumn("Prod_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Code);
                this.columnProd_Name = new global::System.Data.DataColumn("Prod_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Name);
                this.columnPurchase_price = new global::System.Data.DataColumn("Purchase_price", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPurchase_price);
                this.columnSelling_Price = new global::System.Data.DataColumn("Selling_Price", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelling_Price);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CategoryRow NewCategoryRow() {
                return ((CategoryRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CategoryRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(CategoryRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CategoryRowChanged != null)) {
                    this.CategoryRowChanged(this, new CategoryRowChangeEvent(((CategoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CategoryRowChanging != null)) {
                    this.CategoryRowChanging(this, new CategoryRowChangeEvent(((CategoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CategoryRowDeleted != null)) {
                    this.CategoryRowDeleted(this, new CategoryRowChangeEvent(((CategoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CategoryRowDeleting != null)) {
                    this.CategoryRowDeleting(this, new CategoryRowChangeEvent(((CategoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCategoryRow(CategoryRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CategoryDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class StockAdjustDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnProd_Code;
            
            private global::System.Data.DataColumn columnProd_Name;
            
            private global::System.Data.DataColumn columnSelling_Price;
            
            private global::System.Data.DataColumn columnPurchase_price;
            
            private global::System.Data.DataColumn columnCurr_Qty;
            
            private global::System.Data.DataColumn columnPhy_Qty;
            
            private global::System.Data.DataColumn columnVar_Qty;
            
            private global::System.Data.DataColumn columnDoc_No;
            
            private global::System.Data.DataColumn columnLoca;
            
            private global::System.Data.DataColumn columnPack_Size;
            
            private global::System.Data.DataColumn columnBatchNo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockAdjustDataTable() {
                this.TableName = "StockAdjust";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal StockAdjustDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected StockAdjustDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Prod_CodeColumn {
                get {
                    return this.columnProd_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Prod_NameColumn {
                get {
                    return this.columnProd_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Selling_PriceColumn {
                get {
                    return this.columnSelling_Price;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Purchase_priceColumn {
                get {
                    return this.columnPurchase_price;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Curr_QtyColumn {
                get {
                    return this.columnCurr_Qty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Phy_QtyColumn {
                get {
                    return this.columnPhy_Qty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Var_QtyColumn {
                get {
                    return this.columnVar_Qty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Doc_NoColumn {
                get {
                    return this.columnDoc_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LocaColumn {
                get {
                    return this.columnLoca;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Pack_SizeColumn {
                get {
                    return this.columnPack_Size;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BatchNoColumn {
                get {
                    return this.columnBatchNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockAdjustRow this[int index] {
                get {
                    return ((StockAdjustRow)(this.Rows[index]));
                }
            }
            
            public event StockAdjustRowChangeEventHandler StockAdjustRowChanging;
            
            public event StockAdjustRowChangeEventHandler StockAdjustRowChanged;
            
            public event StockAdjustRowChangeEventHandler StockAdjustRowDeleting;
            
            public event StockAdjustRowChangeEventHandler StockAdjustRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddStockAdjustRow(StockAdjustRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockAdjustRow AddStockAdjustRow(string Prod_Code, string Prod_Name, string Selling_Price, string Purchase_price, string Curr_Qty, string Phy_Qty, string Var_Qty, string Doc_No, string Loca, string Pack_Size, string BatchNo) {
                StockAdjustRow rowStockAdjustRow = ((StockAdjustRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Prod_Code,
                        Prod_Name,
                        Selling_Price,
                        Purchase_price,
                        Curr_Qty,
                        Phy_Qty,
                        Var_Qty,
                        Doc_No,
                        Loca,
                        Pack_Size,
                        BatchNo};
                rowStockAdjustRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowStockAdjustRow);
                return rowStockAdjustRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                StockAdjustDataTable cln = ((StockAdjustDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new StockAdjustDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnProd_Code = base.Columns["Prod_Code"];
                this.columnProd_Name = base.Columns["Prod_Name"];
                this.columnSelling_Price = base.Columns["Selling_Price"];
                this.columnPurchase_price = base.Columns["Purchase_price"];
                this.columnCurr_Qty = base.Columns["Curr_Qty"];
                this.columnPhy_Qty = base.Columns["Phy_Qty"];
                this.columnVar_Qty = base.Columns["Var_Qty"];
                this.columnDoc_No = base.Columns["Doc_No"];
                this.columnLoca = base.Columns["Loca"];
                this.columnPack_Size = base.Columns["Pack_Size"];
                this.columnBatchNo = base.Columns["BatchNo"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnProd_Code = new global::System.Data.DataColumn("Prod_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Code);
                this.columnProd_Name = new global::System.Data.DataColumn("Prod_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Name);
                this.columnSelling_Price = new global::System.Data.DataColumn("Selling_Price", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelling_Price);
                this.columnPurchase_price = new global::System.Data.DataColumn("Purchase_price", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPurchase_price);
                this.columnCurr_Qty = new global::System.Data.DataColumn("Curr_Qty", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurr_Qty);
                this.columnPhy_Qty = new global::System.Data.DataColumn("Phy_Qty", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhy_Qty);
                this.columnVar_Qty = new global::System.Data.DataColumn("Var_Qty", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVar_Qty);
                this.columnDoc_No = new global::System.Data.DataColumn("Doc_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDoc_No);
                this.columnLoca = new global::System.Data.DataColumn("Loca", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoca);
                this.columnPack_Size = new global::System.Data.DataColumn("Pack_Size", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPack_Size);
                this.columnBatchNo = new global::System.Data.DataColumn("BatchNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBatchNo);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockAdjustRow NewStockAdjustRow() {
                return ((StockAdjustRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new StockAdjustRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(StockAdjustRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.StockAdjustRowChanged != null)) {
                    this.StockAdjustRowChanged(this, new StockAdjustRowChangeEvent(((StockAdjustRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.StockAdjustRowChanging != null)) {
                    this.StockAdjustRowChanging(this, new StockAdjustRowChangeEvent(((StockAdjustRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.StockAdjustRowDeleted != null)) {
                    this.StockAdjustRowDeleted(this, new StockAdjustRowChangeEvent(((StockAdjustRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.StockAdjustRowDeleting != null)) {
                    this.StockAdjustRowDeleting(this, new StockAdjustRowChangeEvent(((StockAdjustRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveStockAdjustRow(StockAdjustRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "StockAdjustDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TransferNoteDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnProd_Code;
            
            private global::System.Data.DataColumn columnProd_Name;
            
            private global::System.Data.DataColumn columnSelling_Price;
            
            private global::System.Data.DataColumn columnPurchase_price;
            
            private global::System.Data.DataColumn columnPack_Size;
            
            private global::System.Data.DataColumn columnQty;
            
            private global::System.Data.DataColumn columnAmount;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TransferNoteDataTable() {
                this.TableName = "TransferNote";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TransferNoteDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected TransferNoteDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Prod_CodeColumn {
                get {
                    return this.columnProd_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Prod_NameColumn {
                get {
                    return this.columnProd_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Selling_PriceColumn {
                get {
                    return this.columnSelling_Price;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Purchase_priceColumn {
                get {
                    return this.columnPurchase_price;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Pack_SizeColumn {
                get {
                    return this.columnPack_Size;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QtyColumn {
                get {
                    return this.columnQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TransferNoteRow this[int index] {
                get {
                    return ((TransferNoteRow)(this.Rows[index]));
                }
            }
            
            public event TransferNoteRowChangeEventHandler TransferNoteRowChanging;
            
            public event TransferNoteRowChangeEventHandler TransferNoteRowChanged;
            
            public event TransferNoteRowChangeEventHandler TransferNoteRowDeleting;
            
            public event TransferNoteRowChangeEventHandler TransferNoteRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddTransferNoteRow(TransferNoteRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TransferNoteRow AddTransferNoteRow(string Prod_Code, string Prod_Name, string Selling_Price, string Purchase_price, string Pack_Size, string Qty, string Amount) {
                TransferNoteRow rowTransferNoteRow = ((TransferNoteRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Prod_Code,
                        Prod_Name,
                        Selling_Price,
                        Purchase_price,
                        Pack_Size,
                        Qty,
                        Amount};
                rowTransferNoteRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTransferNoteRow);
                return rowTransferNoteRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                TransferNoteDataTable cln = ((TransferNoteDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TransferNoteDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnProd_Code = base.Columns["Prod_Code"];
                this.columnProd_Name = base.Columns["Prod_Name"];
                this.columnSelling_Price = base.Columns["Selling_Price"];
                this.columnPurchase_price = base.Columns["Purchase_price"];
                this.columnPack_Size = base.Columns["Pack_Size"];
                this.columnQty = base.Columns["Qty"];
                this.columnAmount = base.Columns["Amount"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnProd_Code = new global::System.Data.DataColumn("Prod_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Code);
                this.columnProd_Name = new global::System.Data.DataColumn("Prod_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Name);
                this.columnSelling_Price = new global::System.Data.DataColumn("Selling_Price", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelling_Price);
                this.columnPurchase_price = new global::System.Data.DataColumn("Purchase_price", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPurchase_price);
                this.columnPack_Size = new global::System.Data.DataColumn("Pack_Size", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPack_Size);
                this.columnQty = new global::System.Data.DataColumn("Qty", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQty);
                this.columnAmount = new global::System.Data.DataColumn("Amount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TransferNoteRow NewTransferNoteRow() {
                return ((TransferNoteRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TransferNoteRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(TransferNoteRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TransferNoteRowChanged != null)) {
                    this.TransferNoteRowChanged(this, new TransferNoteRowChangeEvent(((TransferNoteRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TransferNoteRowChanging != null)) {
                    this.TransferNoteRowChanging(this, new TransferNoteRowChangeEvent(((TransferNoteRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TransferNoteRowDeleted != null)) {
                    this.TransferNoteRowDeleted(this, new TransferNoteRowChangeEvent(((TransferNoteRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TransferNoteRowDeleting != null)) {
                    this.TransferNoteRowDeleting(this, new TransferNoteRowChangeEvent(((TransferNoteRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveTransferNoteRow(TransferNoteRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TransferNoteDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dsTogDetailsDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnDoc_No;
            
            private global::System.Data.DataColumn columnLoca;
            
            private global::System.Data.DataColumn columnLocaDesc;
            
            private global::System.Data.DataColumn columnTo_Loca;
            
            private global::System.Data.DataColumn columnTo_LocaDesc;
            
            private global::System.Data.DataColumn columnPost_Date;
            
            private global::System.Data.DataColumn columnAmount;
            
            private global::System.Data.DataColumn columnRemarks;
            
            private global::System.Data.DataColumn columnProd_Code;
            
            private global::System.Data.DataColumn columnProd_Name;
            
            private global::System.Data.DataColumn columnQty;
            
            private global::System.Data.DataColumn columnPurchase_Price;
            
            private global::System.Data.DataColumn columnSelling_Price;
            
            private global::System.Data.DataColumn columnPack_Size;
            
            private global::System.Data.DataColumn columnStatus;
            
            private global::System.Data.DataColumn columnUnit;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsTogDetailsDataTable() {
                this.TableName = "dsTogDetails";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsTogDetailsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dsTogDetailsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Doc_NoColumn {
                get {
                    return this.columnDoc_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LocaColumn {
                get {
                    return this.columnLoca;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LocaDescColumn {
                get {
                    return this.columnLocaDesc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn To_LocaColumn {
                get {
                    return this.columnTo_Loca;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn To_LocaDescColumn {
                get {
                    return this.columnTo_LocaDesc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Post_DateColumn {
                get {
                    return this.columnPost_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RemarksColumn {
                get {
                    return this.columnRemarks;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Prod_CodeColumn {
                get {
                    return this.columnProd_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Prod_NameColumn {
                get {
                    return this.columnProd_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QtyColumn {
                get {
                    return this.columnQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Purchase_PriceColumn {
                get {
                    return this.columnPurchase_Price;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Selling_PriceColumn {
                get {
                    return this.columnSelling_Price;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Pack_SizeColumn {
                get {
                    return this.columnPack_Size;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StatusColumn {
                get {
                    return this.columnStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UnitColumn {
                get {
                    return this.columnUnit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsTogDetailsRow this[int index] {
                get {
                    return ((dsTogDetailsRow)(this.Rows[index]));
                }
            }
            
            public event dsTogDetailsRowChangeEventHandler dsTogDetailsRowChanging;
            
            public event dsTogDetailsRowChangeEventHandler dsTogDetailsRowChanged;
            
            public event dsTogDetailsRowChangeEventHandler dsTogDetailsRowDeleting;
            
            public event dsTogDetailsRowChangeEventHandler dsTogDetailsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddsTogDetailsRow(dsTogDetailsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsTogDetailsRow AdddsTogDetailsRow(
                        string Doc_No, 
                        string Loca, 
                        string LocaDesc, 
                        string To_Loca, 
                        string To_LocaDesc, 
                        string Post_Date, 
                        decimal Amount, 
                        string Remarks, 
                        string Prod_Code, 
                        string Prod_Name, 
                        double Qty, 
                        decimal Purchase_Price, 
                        decimal Selling_Price, 
                        short Pack_Size, 
                        string Status, 
                        string Unit) {
                dsTogDetailsRow rowdsTogDetailsRow = ((dsTogDetailsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Doc_No,
                        Loca,
                        LocaDesc,
                        To_Loca,
                        To_LocaDesc,
                        Post_Date,
                        Amount,
                        Remarks,
                        Prod_Code,
                        Prod_Name,
                        Qty,
                        Purchase_Price,
                        Selling_Price,
                        Pack_Size,
                        Status,
                        Unit};
                rowdsTogDetailsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdsTogDetailsRow);
                return rowdsTogDetailsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dsTogDetailsDataTable cln = ((dsTogDetailsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dsTogDetailsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDoc_No = base.Columns["Doc_No"];
                this.columnLoca = base.Columns["Loca"];
                this.columnLocaDesc = base.Columns["LocaDesc"];
                this.columnTo_Loca = base.Columns["To_Loca"];
                this.columnTo_LocaDesc = base.Columns["To_LocaDesc"];
                this.columnPost_Date = base.Columns["Post_Date"];
                this.columnAmount = base.Columns["Amount"];
                this.columnRemarks = base.Columns["Remarks"];
                this.columnProd_Code = base.Columns["Prod_Code"];
                this.columnProd_Name = base.Columns["Prod_Name"];
                this.columnQty = base.Columns["Qty"];
                this.columnPurchase_Price = base.Columns["Purchase_Price"];
                this.columnSelling_Price = base.Columns["Selling_Price"];
                this.columnPack_Size = base.Columns["Pack_Size"];
                this.columnStatus = base.Columns["Status"];
                this.columnUnit = base.Columns["Unit"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDoc_No = new global::System.Data.DataColumn("Doc_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDoc_No);
                this.columnLoca = new global::System.Data.DataColumn("Loca", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoca);
                this.columnLocaDesc = new global::System.Data.DataColumn("LocaDesc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocaDesc);
                this.columnTo_Loca = new global::System.Data.DataColumn("To_Loca", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTo_Loca);
                this.columnTo_LocaDesc = new global::System.Data.DataColumn("To_LocaDesc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTo_LocaDesc);
                this.columnPost_Date = new global::System.Data.DataColumn("Post_Date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPost_Date);
                this.columnAmount = new global::System.Data.DataColumn("Amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
                this.columnRemarks = new global::System.Data.DataColumn("Remarks", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemarks);
                this.columnProd_Code = new global::System.Data.DataColumn("Prod_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Code);
                this.columnProd_Name = new global::System.Data.DataColumn("Prod_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Name);
                this.columnQty = new global::System.Data.DataColumn("Qty", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQty);
                this.columnPurchase_Price = new global::System.Data.DataColumn("Purchase_Price", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPurchase_Price);
                this.columnSelling_Price = new global::System.Data.DataColumn("Selling_Price", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelling_Price);
                this.columnPack_Size = new global::System.Data.DataColumn("Pack_Size", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPack_Size);
                this.columnStatus = new global::System.Data.DataColumn("Status", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatus);
                this.columnUnit = new global::System.Data.DataColumn("Unit", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnit);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsTogDetailsRow NewdsTogDetailsRow() {
                return ((dsTogDetailsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dsTogDetailsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dsTogDetailsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dsTogDetailsRowChanged != null)) {
                    this.dsTogDetailsRowChanged(this, new dsTogDetailsRowChangeEvent(((dsTogDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dsTogDetailsRowChanging != null)) {
                    this.dsTogDetailsRowChanging(this, new dsTogDetailsRowChangeEvent(((dsTogDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dsTogDetailsRowDeleted != null)) {
                    this.dsTogDetailsRowDeleted(this, new dsTogDetailsRowChangeEvent(((dsTogDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dsTogDetailsRowDeleting != null)) {
                    this.dsTogDetailsRowDeleting(this, new dsTogDetailsRowChangeEvent(((dsTogDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedsTogDetailsRow(dsTogDetailsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dsTogDetailsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dsStockAdjustDetailsDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnLoca;
            
            private global::System.Data.DataColumn columnLoca_Descrip;
            
            private global::System.Data.DataColumn columnDoc_No;
            
            private global::System.Data.DataColumn columnPost_Date;
            
            private global::System.Data.DataColumn columnUser_Name;
            
            private global::System.Data.DataColumn columnProd_Code;
            
            private global::System.Data.DataColumn columnProd_Name;
            
            private global::System.Data.DataColumn columnQty;
            
            private global::System.Data.DataColumn columnPhy_Qty;
            
            private global::System.Data.DataColumn columnPurchase_Price;
            
            private global::System.Data.DataColumn columnSelling_Price;
            
            private global::System.Data.DataColumn columnPack_Size;
            
            private global::System.Data.DataColumn columnLn;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsStockAdjustDetailsDataTable() {
                this.TableName = "dsStockAdjustDetails";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsStockAdjustDetailsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dsStockAdjustDetailsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LocaColumn {
                get {
                    return this.columnLoca;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Loca_DescripColumn {
                get {
                    return this.columnLoca_Descrip;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Doc_NoColumn {
                get {
                    return this.columnDoc_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Post_DateColumn {
                get {
                    return this.columnPost_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn User_NameColumn {
                get {
                    return this.columnUser_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Prod_CodeColumn {
                get {
                    return this.columnProd_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Prod_NameColumn {
                get {
                    return this.columnProd_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QtyColumn {
                get {
                    return this.columnQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Phy_QtyColumn {
                get {
                    return this.columnPhy_Qty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Purchase_PriceColumn {
                get {
                    return this.columnPurchase_Price;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Selling_PriceColumn {
                get {
                    return this.columnSelling_Price;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Pack_SizeColumn {
                get {
                    return this.columnPack_Size;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LnColumn {
                get {
                    return this.columnLn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsStockAdjustDetailsRow this[int index] {
                get {
                    return ((dsStockAdjustDetailsRow)(this.Rows[index]));
                }
            }
            
            public event dsStockAdjustDetailsRowChangeEventHandler dsStockAdjustDetailsRowChanging;
            
            public event dsStockAdjustDetailsRowChangeEventHandler dsStockAdjustDetailsRowChanged;
            
            public event dsStockAdjustDetailsRowChangeEventHandler dsStockAdjustDetailsRowDeleting;
            
            public event dsStockAdjustDetailsRowChangeEventHandler dsStockAdjustDetailsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddsStockAdjustDetailsRow(dsStockAdjustDetailsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsStockAdjustDetailsRow AdddsStockAdjustDetailsRow(string Loca, string Loca_Descrip, string Doc_No, string Post_Date, string User_Name, string Prod_Code, string Prod_Name, double Qty, double Phy_Qty, string Purchase_Price, string Selling_Price, string Pack_Size, string Ln) {
                dsStockAdjustDetailsRow rowdsStockAdjustDetailsRow = ((dsStockAdjustDetailsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Loca,
                        Loca_Descrip,
                        Doc_No,
                        Post_Date,
                        User_Name,
                        Prod_Code,
                        Prod_Name,
                        Qty,
                        Phy_Qty,
                        Purchase_Price,
                        Selling_Price,
                        Pack_Size,
                        Ln};
                rowdsStockAdjustDetailsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdsStockAdjustDetailsRow);
                return rowdsStockAdjustDetailsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dsStockAdjustDetailsDataTable cln = ((dsStockAdjustDetailsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dsStockAdjustDetailsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnLoca = base.Columns["Loca"];
                this.columnLoca_Descrip = base.Columns["Loca_Descrip"];
                this.columnDoc_No = base.Columns["Doc_No"];
                this.columnPost_Date = base.Columns["Post_Date"];
                this.columnUser_Name = base.Columns["User_Name"];
                this.columnProd_Code = base.Columns["Prod_Code"];
                this.columnProd_Name = base.Columns["Prod_Name"];
                this.columnQty = base.Columns["Qty"];
                this.columnPhy_Qty = base.Columns["Phy_Qty"];
                this.columnPurchase_Price = base.Columns["Purchase_Price"];
                this.columnSelling_Price = base.Columns["Selling_Price"];
                this.columnPack_Size = base.Columns["Pack_Size"];
                this.columnLn = base.Columns["Ln"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnLoca = new global::System.Data.DataColumn("Loca", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoca);
                this.columnLoca_Descrip = new global::System.Data.DataColumn("Loca_Descrip", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoca_Descrip);
                this.columnDoc_No = new global::System.Data.DataColumn("Doc_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDoc_No);
                this.columnPost_Date = new global::System.Data.DataColumn("Post_Date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPost_Date);
                this.columnUser_Name = new global::System.Data.DataColumn("User_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUser_Name);
                this.columnProd_Code = new global::System.Data.DataColumn("Prod_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Code);
                this.columnProd_Name = new global::System.Data.DataColumn("Prod_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Name);
                this.columnQty = new global::System.Data.DataColumn("Qty", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQty);
                this.columnPhy_Qty = new global::System.Data.DataColumn("Phy_Qty", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhy_Qty);
                this.columnPurchase_Price = new global::System.Data.DataColumn("Purchase_Price", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPurchase_Price);
                this.columnSelling_Price = new global::System.Data.DataColumn("Selling_Price", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelling_Price);
                this.columnPack_Size = new global::System.Data.DataColumn("Pack_Size", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPack_Size);
                this.columnLn = new global::System.Data.DataColumn("Ln", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsStockAdjustDetailsRow NewdsStockAdjustDetailsRow() {
                return ((dsStockAdjustDetailsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dsStockAdjustDetailsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dsStockAdjustDetailsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dsStockAdjustDetailsRowChanged != null)) {
                    this.dsStockAdjustDetailsRowChanged(this, new dsStockAdjustDetailsRowChangeEvent(((dsStockAdjustDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dsStockAdjustDetailsRowChanging != null)) {
                    this.dsStockAdjustDetailsRowChanging(this, new dsStockAdjustDetailsRowChangeEvent(((dsStockAdjustDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dsStockAdjustDetailsRowDeleted != null)) {
                    this.dsStockAdjustDetailsRowDeleted(this, new dsStockAdjustDetailsRowChangeEvent(((dsStockAdjustDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dsStockAdjustDetailsRowDeleting != null)) {
                    this.dsStockAdjustDetailsRowDeleting(this, new dsStockAdjustDetailsRowChangeEvent(((dsStockAdjustDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedsStockAdjustDetailsRow(dsStockAdjustDetailsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dsStockAdjustDetailsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class GoodReceivedNoteDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnProd_Code;
            
            private global::System.Data.DataColumn columnProd_Name;
            
            private global::System.Data.DataColumn columnUnit;
            
            private global::System.Data.DataColumn columnPurchase_Price;
            
            private global::System.Data.DataColumn columnSelling_Price;
            
            private global::System.Data.DataColumn columnQty;
            
            private global::System.Data.DataColumn columnFreeQty;
            
            private global::System.Data.DataColumn columnDiscount;
            
            private global::System.Data.DataColumn columnAmount;
            
            private global::System.Data.DataColumn columnMargin;
            
            private global::System.Data.DataColumn columnLn;
            
            private global::System.Data.DataColumn columnExpDate;
            
            private global::System.Data.DataColumn columnBatchNo;
            
            private global::System.Data.DataColumn columnVAT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GoodReceivedNoteDataTable() {
                this.TableName = "GoodReceivedNote";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GoodReceivedNoteDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected GoodReceivedNoteDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Prod_CodeColumn {
                get {
                    return this.columnProd_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Prod_NameColumn {
                get {
                    return this.columnProd_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UnitColumn {
                get {
                    return this.columnUnit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Purchase_PriceColumn {
                get {
                    return this.columnPurchase_Price;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Selling_PriceColumn {
                get {
                    return this.columnSelling_Price;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QtyColumn {
                get {
                    return this.columnQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FreeQtyColumn {
                get {
                    return this.columnFreeQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DiscountColumn {
                get {
                    return this.columnDiscount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MarginColumn {
                get {
                    return this.columnMargin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LnColumn {
                get {
                    return this.columnLn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExpDateColumn {
                get {
                    return this.columnExpDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BatchNoColumn {
                get {
                    return this.columnBatchNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VATColumn {
                get {
                    return this.columnVAT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GoodReceivedNoteRow this[int index] {
                get {
                    return ((GoodReceivedNoteRow)(this.Rows[index]));
                }
            }
            
            public event GoodReceivedNoteRowChangeEventHandler GoodReceivedNoteRowChanging;
            
            public event GoodReceivedNoteRowChangeEventHandler GoodReceivedNoteRowChanged;
            
            public event GoodReceivedNoteRowChangeEventHandler GoodReceivedNoteRowDeleting;
            
            public event GoodReceivedNoteRowChangeEventHandler GoodReceivedNoteRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddGoodReceivedNoteRow(GoodReceivedNoteRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GoodReceivedNoteRow AddGoodReceivedNoteRow(string Prod_Code, string Prod_Name, string Unit, string Purchase_Price, string Selling_Price, string Qty, string FreeQty, string Discount, string Amount, decimal Margin, string Ln, string ExpDate, string BatchNo, string VAT) {
                GoodReceivedNoteRow rowGoodReceivedNoteRow = ((GoodReceivedNoteRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Prod_Code,
                        Prod_Name,
                        Unit,
                        Purchase_Price,
                        Selling_Price,
                        Qty,
                        FreeQty,
                        Discount,
                        Amount,
                        Margin,
                        Ln,
                        ExpDate,
                        BatchNo,
                        VAT};
                rowGoodReceivedNoteRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowGoodReceivedNoteRow);
                return rowGoodReceivedNoteRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                GoodReceivedNoteDataTable cln = ((GoodReceivedNoteDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new GoodReceivedNoteDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnProd_Code = base.Columns["Prod_Code"];
                this.columnProd_Name = base.Columns["Prod_Name"];
                this.columnUnit = base.Columns["Unit"];
                this.columnPurchase_Price = base.Columns["Purchase_Price"];
                this.columnSelling_Price = base.Columns["Selling_Price"];
                this.columnQty = base.Columns["Qty"];
                this.columnFreeQty = base.Columns["FreeQty"];
                this.columnDiscount = base.Columns["Discount"];
                this.columnAmount = base.Columns["Amount"];
                this.columnMargin = base.Columns["Margin"];
                this.columnLn = base.Columns["Ln"];
                this.columnExpDate = base.Columns["ExpDate"];
                this.columnBatchNo = base.Columns["BatchNo"];
                this.columnVAT = base.Columns["VAT"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnProd_Code = new global::System.Data.DataColumn("Prod_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Code);
                this.columnProd_Name = new global::System.Data.DataColumn("Prod_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Name);
                this.columnUnit = new global::System.Data.DataColumn("Unit", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnit);
                this.columnPurchase_Price = new global::System.Data.DataColumn("Purchase_Price", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPurchase_Price);
                this.columnSelling_Price = new global::System.Data.DataColumn("Selling_Price", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelling_Price);
                this.columnQty = new global::System.Data.DataColumn("Qty", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQty);
                this.columnFreeQty = new global::System.Data.DataColumn("FreeQty", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFreeQty);
                this.columnDiscount = new global::System.Data.DataColumn("Discount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiscount);
                this.columnAmount = new global::System.Data.DataColumn("Amount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
                this.columnMargin = new global::System.Data.DataColumn("Margin", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMargin);
                this.columnLn = new global::System.Data.DataColumn("Ln", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLn);
                this.columnExpDate = new global::System.Data.DataColumn("ExpDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExpDate);
                this.columnBatchNo = new global::System.Data.DataColumn("BatchNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBatchNo);
                this.columnVAT = new global::System.Data.DataColumn("VAT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVAT);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GoodReceivedNoteRow NewGoodReceivedNoteRow() {
                return ((GoodReceivedNoteRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new GoodReceivedNoteRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(GoodReceivedNoteRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GoodReceivedNoteRowChanged != null)) {
                    this.GoodReceivedNoteRowChanged(this, new GoodReceivedNoteRowChangeEvent(((GoodReceivedNoteRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GoodReceivedNoteRowChanging != null)) {
                    this.GoodReceivedNoteRowChanging(this, new GoodReceivedNoteRowChangeEvent(((GoodReceivedNoteRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GoodReceivedNoteRowDeleted != null)) {
                    this.GoodReceivedNoteRowDeleted(this, new GoodReceivedNoteRowChangeEvent(((GoodReceivedNoteRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GoodReceivedNoteRowDeleting != null)) {
                    this.GoodReceivedNoteRowDeleting(this, new GoodReceivedNoteRowChangeEvent(((GoodReceivedNoteRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveGoodReceivedNoteRow(GoodReceivedNoteRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "GoodReceivedNoteDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dsGRNDetailsForRepDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnDoc_no;
            
            private global::System.Data.DataColumn columnLoca;
            
            private global::System.Data.DataColumn columnLoca_Descrip;
            
            private global::System.Data.DataColumn columnPost_Date;
            
            private global::System.Data.DataColumn columninv_no;
            
            private global::System.Data.DataColumn columnInv_Amt;
            
            private global::System.Data.DataColumn columnPorder_no;
            
            private global::System.Data.DataColumn columnNet_Amount;
            
            private global::System.Data.DataColumn columnGross_Amount;
            
            private global::System.Data.DataColumn columnSub_Discount;
            
            private global::System.Data.DataColumn columnDisc;
            
            private global::System.Data.DataColumn columnRemarks;
            
            private global::System.Data.DataColumn columnReference;
            
            private global::System.Data.DataColumn columnPay_Type;
            
            private global::System.Data.DataColumn columnTax;
            
            private global::System.Data.DataColumn columnProd_code;
            
            private global::System.Data.DataColumn columnProd_Name;
            
            private global::System.Data.DataColumn columnQty;
            
            private global::System.Data.DataColumn columnFreeQty;
            
            private global::System.Data.DataColumn columnPurchase_Price;
            
            private global::System.Data.DataColumn columnSelling_Price;
            
            private global::System.Data.DataColumn columnWhole_Price;
            
            private global::System.Data.DataColumn columnDiscount;
            
            private global::System.Data.DataColumn columnAmount;
            
            private global::System.Data.DataColumn columnLn;
            
            private global::System.Data.DataColumn columnStatus;
            
            private global::System.Data.DataColumn columnSupp_Name;
            
            private global::System.Data.DataColumn columnSupplier_Id;
            
            private global::System.Data.DataColumn columnAccessUser;
            
            private global::System.Data.DataColumn columnUser_Name;
            
            private global::System.Data.DataColumn columnWh_Per;
            
            private global::System.Data.DataColumn columnShipment;
            
            private global::System.Data.DataColumn columnExpDate;
            
            private global::System.Data.DataColumn columnBatchNo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsGRNDetailsForRepDataTable() {
                this.TableName = "dsGRNDetailsForRep";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsGRNDetailsForRepDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dsGRNDetailsForRepDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Doc_noColumn {
                get {
                    return this.columnDoc_no;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LocaColumn {
                get {
                    return this.columnLoca;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Loca_DescripColumn {
                get {
                    return this.columnLoca_Descrip;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Post_DateColumn {
                get {
                    return this.columnPost_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn inv_noColumn {
                get {
                    return this.columninv_no;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Inv_AmtColumn {
                get {
                    return this.columnInv_Amt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Porder_noColumn {
                get {
                    return this.columnPorder_no;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Net_AmountColumn {
                get {
                    return this.columnNet_Amount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Gross_AmountColumn {
                get {
                    return this.columnGross_Amount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Sub_DiscountColumn {
                get {
                    return this.columnSub_Discount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DiscColumn {
                get {
                    return this.columnDisc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RemarksColumn {
                get {
                    return this.columnRemarks;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReferenceColumn {
                get {
                    return this.columnReference;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Pay_TypeColumn {
                get {
                    return this.columnPay_Type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TaxColumn {
                get {
                    return this.columnTax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Prod_codeColumn {
                get {
                    return this.columnProd_code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Prod_NameColumn {
                get {
                    return this.columnProd_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QtyColumn {
                get {
                    return this.columnQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FreeQtyColumn {
                get {
                    return this.columnFreeQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Purchase_PriceColumn {
                get {
                    return this.columnPurchase_Price;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Selling_PriceColumn {
                get {
                    return this.columnSelling_Price;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Whole_PriceColumn {
                get {
                    return this.columnWhole_Price;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DiscountColumn {
                get {
                    return this.columnDiscount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LnColumn {
                get {
                    return this.columnLn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StatusColumn {
                get {
                    return this.columnStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Supp_NameColumn {
                get {
                    return this.columnSupp_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Supplier_IdColumn {
                get {
                    return this.columnSupplier_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AccessUserColumn {
                get {
                    return this.columnAccessUser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn User_NameColumn {
                get {
                    return this.columnUser_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Wh_PerColumn {
                get {
                    return this.columnWh_Per;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShipmentColumn {
                get {
                    return this.columnShipment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExpDateColumn {
                get {
                    return this.columnExpDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BatchNoColumn {
                get {
                    return this.columnBatchNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsGRNDetailsForRepRow this[int index] {
                get {
                    return ((dsGRNDetailsForRepRow)(this.Rows[index]));
                }
            }
            
            public event dsGRNDetailsForRepRowChangeEventHandler dsGRNDetailsForRepRowChanging;
            
            public event dsGRNDetailsForRepRowChangeEventHandler dsGRNDetailsForRepRowChanged;
            
            public event dsGRNDetailsForRepRowChangeEventHandler dsGRNDetailsForRepRowDeleting;
            
            public event dsGRNDetailsForRepRowChangeEventHandler dsGRNDetailsForRepRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddsGRNDetailsForRepRow(dsGRNDetailsForRepRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsGRNDetailsForRepRow AdddsGRNDetailsForRepRow(
                        string Doc_no, 
                        string Loca, 
                        string Loca_Descrip, 
                        string Post_Date, 
                        string inv_no, 
                        decimal Inv_Amt, 
                        string Porder_no, 
                        decimal Net_Amount, 
                        decimal Gross_Amount, 
                        decimal Sub_Discount, 
                        string Disc, 
                        string Remarks, 
                        string Reference, 
                        string Pay_Type, 
                        string Tax, 
                        string Prod_code, 
                        string Prod_Name, 
                        double Qty, 
                        double FreeQty, 
                        decimal Purchase_Price, 
                        decimal Selling_Price, 
                        decimal Whole_Price, 
                        decimal Discount, 
                        decimal Amount, 
                        string Ln, 
                        string Status, 
                        string Supp_Name, 
                        string Supplier_Id, 
                        string AccessUser, 
                        string User_Name, 
                        decimal Wh_Per, 
                        string Shipment, 
                        string ExpDate, 
                        string BatchNo) {
                dsGRNDetailsForRepRow rowdsGRNDetailsForRepRow = ((dsGRNDetailsForRepRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Doc_no,
                        Loca,
                        Loca_Descrip,
                        Post_Date,
                        inv_no,
                        Inv_Amt,
                        Porder_no,
                        Net_Amount,
                        Gross_Amount,
                        Sub_Discount,
                        Disc,
                        Remarks,
                        Reference,
                        Pay_Type,
                        Tax,
                        Prod_code,
                        Prod_Name,
                        Qty,
                        FreeQty,
                        Purchase_Price,
                        Selling_Price,
                        Whole_Price,
                        Discount,
                        Amount,
                        Ln,
                        Status,
                        Supp_Name,
                        Supplier_Id,
                        AccessUser,
                        User_Name,
                        Wh_Per,
                        Shipment,
                        ExpDate,
                        BatchNo};
                rowdsGRNDetailsForRepRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdsGRNDetailsForRepRow);
                return rowdsGRNDetailsForRepRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dsGRNDetailsForRepDataTable cln = ((dsGRNDetailsForRepDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dsGRNDetailsForRepDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDoc_no = base.Columns["Doc_no"];
                this.columnLoca = base.Columns["Loca"];
                this.columnLoca_Descrip = base.Columns["Loca_Descrip"];
                this.columnPost_Date = base.Columns["Post_Date"];
                this.columninv_no = base.Columns["inv_no"];
                this.columnInv_Amt = base.Columns["Inv_Amt"];
                this.columnPorder_no = base.Columns["Porder_no"];
                this.columnNet_Amount = base.Columns["Net_Amount"];
                this.columnGross_Amount = base.Columns["Gross_Amount"];
                this.columnSub_Discount = base.Columns["Sub_Discount"];
                this.columnDisc = base.Columns["Disc"];
                this.columnRemarks = base.Columns["Remarks"];
                this.columnReference = base.Columns["Reference"];
                this.columnPay_Type = base.Columns["Pay_Type"];
                this.columnTax = base.Columns["Tax"];
                this.columnProd_code = base.Columns["Prod_code"];
                this.columnProd_Name = base.Columns["Prod_Name"];
                this.columnQty = base.Columns["Qty"];
                this.columnFreeQty = base.Columns["FreeQty"];
                this.columnPurchase_Price = base.Columns["Purchase_Price"];
                this.columnSelling_Price = base.Columns["Selling_Price"];
                this.columnWhole_Price = base.Columns["Whole_Price"];
                this.columnDiscount = base.Columns["Discount"];
                this.columnAmount = base.Columns["Amount"];
                this.columnLn = base.Columns["Ln"];
                this.columnStatus = base.Columns["Status"];
                this.columnSupp_Name = base.Columns["Supp_Name"];
                this.columnSupplier_Id = base.Columns["Supplier_Id"];
                this.columnAccessUser = base.Columns["AccessUser"];
                this.columnUser_Name = base.Columns["User_Name"];
                this.columnWh_Per = base.Columns["Wh_Per"];
                this.columnShipment = base.Columns["Shipment"];
                this.columnExpDate = base.Columns["ExpDate"];
                this.columnBatchNo = base.Columns["BatchNo"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDoc_no = new global::System.Data.DataColumn("Doc_no", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDoc_no);
                this.columnLoca = new global::System.Data.DataColumn("Loca", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoca);
                this.columnLoca_Descrip = new global::System.Data.DataColumn("Loca_Descrip", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoca_Descrip);
                this.columnPost_Date = new global::System.Data.DataColumn("Post_Date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPost_Date);
                this.columninv_no = new global::System.Data.DataColumn("inv_no", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columninv_no);
                this.columnInv_Amt = new global::System.Data.DataColumn("Inv_Amt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInv_Amt);
                this.columnPorder_no = new global::System.Data.DataColumn("Porder_no", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPorder_no);
                this.columnNet_Amount = new global::System.Data.DataColumn("Net_Amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNet_Amount);
                this.columnGross_Amount = new global::System.Data.DataColumn("Gross_Amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGross_Amount);
                this.columnSub_Discount = new global::System.Data.DataColumn("Sub_Discount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSub_Discount);
                this.columnDisc = new global::System.Data.DataColumn("Disc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDisc);
                this.columnRemarks = new global::System.Data.DataColumn("Remarks", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemarks);
                this.columnReference = new global::System.Data.DataColumn("Reference", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReference);
                this.columnPay_Type = new global::System.Data.DataColumn("Pay_Type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPay_Type);
                this.columnTax = new global::System.Data.DataColumn("Tax", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTax);
                this.columnProd_code = new global::System.Data.DataColumn("Prod_code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_code);
                this.columnProd_Name = new global::System.Data.DataColumn("Prod_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Name);
                this.columnQty = new global::System.Data.DataColumn("Qty", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQty);
                this.columnFreeQty = new global::System.Data.DataColumn("FreeQty", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFreeQty);
                this.columnPurchase_Price = new global::System.Data.DataColumn("Purchase_Price", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPurchase_Price);
                this.columnSelling_Price = new global::System.Data.DataColumn("Selling_Price", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelling_Price);
                this.columnWhole_Price = new global::System.Data.DataColumn("Whole_Price", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWhole_Price);
                this.columnDiscount = new global::System.Data.DataColumn("Discount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiscount);
                this.columnAmount = new global::System.Data.DataColumn("Amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
                this.columnLn = new global::System.Data.DataColumn("Ln", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLn);
                this.columnStatus = new global::System.Data.DataColumn("Status", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatus);
                this.columnSupp_Name = new global::System.Data.DataColumn("Supp_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupp_Name);
                this.columnSupplier_Id = new global::System.Data.DataColumn("Supplier_Id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplier_Id);
                this.columnAccessUser = new global::System.Data.DataColumn("AccessUser", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccessUser);
                this.columnUser_Name = new global::System.Data.DataColumn("User_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUser_Name);
                this.columnWh_Per = new global::System.Data.DataColumn("Wh_Per", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWh_Per);
                this.columnShipment = new global::System.Data.DataColumn("Shipment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShipment);
                this.columnExpDate = new global::System.Data.DataColumn("ExpDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExpDate);
                this.columnBatchNo = new global::System.Data.DataColumn("BatchNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBatchNo);
                this.columnWhole_Price.Caption = "Selling_Price";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsGRNDetailsForRepRow NewdsGRNDetailsForRepRow() {
                return ((dsGRNDetailsForRepRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dsGRNDetailsForRepRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dsGRNDetailsForRepRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dsGRNDetailsForRepRowChanged != null)) {
                    this.dsGRNDetailsForRepRowChanged(this, new dsGRNDetailsForRepRowChangeEvent(((dsGRNDetailsForRepRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dsGRNDetailsForRepRowChanging != null)) {
                    this.dsGRNDetailsForRepRowChanging(this, new dsGRNDetailsForRepRowChangeEvent(((dsGRNDetailsForRepRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dsGRNDetailsForRepRowDeleted != null)) {
                    this.dsGRNDetailsForRepRowDeleted(this, new dsGRNDetailsForRepRowChangeEvent(((dsGRNDetailsForRepRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dsGRNDetailsForRepRowDeleting != null)) {
                    this.dsGRNDetailsForRepRowDeleting(this, new dsGRNDetailsForRepRowChangeEvent(((dsGRNDetailsForRepRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedsGRNDetailsForRepRow(dsGRNDetailsForRepRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dsGRNDetailsForRepDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PurchaseOrderDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnDoc_No;
            
            private global::System.Data.DataColumn columnProd_Code;
            
            private global::System.Data.DataColumn columnProd_Name;
            
            private global::System.Data.DataColumn columnUnit;
            
            private global::System.Data.DataColumn columnPurchase_Price;
            
            private global::System.Data.DataColumn columnSelling_Price;
            
            private global::System.Data.DataColumn columnQty;
            
            private global::System.Data.DataColumn columnAmount;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PurchaseOrderDataTable() {
                this.TableName = "PurchaseOrder";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PurchaseOrderDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected PurchaseOrderDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Doc_NoColumn {
                get {
                    return this.columnDoc_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Prod_CodeColumn {
                get {
                    return this.columnProd_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Prod_NameColumn {
                get {
                    return this.columnProd_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UnitColumn {
                get {
                    return this.columnUnit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Purchase_PriceColumn {
                get {
                    return this.columnPurchase_Price;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Selling_PriceColumn {
                get {
                    return this.columnSelling_Price;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QtyColumn {
                get {
                    return this.columnQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PurchaseOrderRow this[int index] {
                get {
                    return ((PurchaseOrderRow)(this.Rows[index]));
                }
            }
            
            public event PurchaseOrderRowChangeEventHandler PurchaseOrderRowChanging;
            
            public event PurchaseOrderRowChangeEventHandler PurchaseOrderRowChanged;
            
            public event PurchaseOrderRowChangeEventHandler PurchaseOrderRowDeleting;
            
            public event PurchaseOrderRowChangeEventHandler PurchaseOrderRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPurchaseOrderRow(PurchaseOrderRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PurchaseOrderRow AddPurchaseOrderRow(string Doc_No, string Prod_Code, string Prod_Name, string Unit, string Purchase_Price, string Selling_Price, string Qty, string Amount) {
                PurchaseOrderRow rowPurchaseOrderRow = ((PurchaseOrderRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Doc_No,
                        Prod_Code,
                        Prod_Name,
                        Unit,
                        Purchase_Price,
                        Selling_Price,
                        Qty,
                        Amount};
                rowPurchaseOrderRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPurchaseOrderRow);
                return rowPurchaseOrderRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                PurchaseOrderDataTable cln = ((PurchaseOrderDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PurchaseOrderDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDoc_No = base.Columns["Doc_No"];
                this.columnProd_Code = base.Columns["Prod_Code"];
                this.columnProd_Name = base.Columns["Prod_Name"];
                this.columnUnit = base.Columns["Unit"];
                this.columnPurchase_Price = base.Columns["Purchase_Price"];
                this.columnSelling_Price = base.Columns["Selling_Price"];
                this.columnQty = base.Columns["Qty"];
                this.columnAmount = base.Columns["Amount"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDoc_No = new global::System.Data.DataColumn("Doc_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDoc_No);
                this.columnProd_Code = new global::System.Data.DataColumn("Prod_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Code);
                this.columnProd_Name = new global::System.Data.DataColumn("Prod_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Name);
                this.columnUnit = new global::System.Data.DataColumn("Unit", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnit);
                this.columnPurchase_Price = new global::System.Data.DataColumn("Purchase_Price", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPurchase_Price);
                this.columnSelling_Price = new global::System.Data.DataColumn("Selling_Price", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelling_Price);
                this.columnQty = new global::System.Data.DataColumn("Qty", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQty);
                this.columnAmount = new global::System.Data.DataColumn("Amount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PurchaseOrderRow NewPurchaseOrderRow() {
                return ((PurchaseOrderRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PurchaseOrderRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(PurchaseOrderRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PurchaseOrderRowChanged != null)) {
                    this.PurchaseOrderRowChanged(this, new PurchaseOrderRowChangeEvent(((PurchaseOrderRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PurchaseOrderRowChanging != null)) {
                    this.PurchaseOrderRowChanging(this, new PurchaseOrderRowChangeEvent(((PurchaseOrderRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PurchaseOrderRowDeleted != null)) {
                    this.PurchaseOrderRowDeleted(this, new PurchaseOrderRowChangeEvent(((PurchaseOrderRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PurchaseOrderRowDeleting != null)) {
                    this.PurchaseOrderRowDeleting(this, new PurchaseOrderRowChangeEvent(((PurchaseOrderRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePurchaseOrderRow(PurchaseOrderRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PurchaseOrderDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dsPurchaseOrderDetailsDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnDoc_No;
            
            private global::System.Data.DataColumn columnPost_Date;
            
            private global::System.Data.DataColumn columnSupplier_Id;
            
            private global::System.Data.DataColumn columnSupp_Name;
            
            private global::System.Data.DataColumn columnPay_Type;
            
            private global::System.Data.DataColumn columnRemarks;
            
            private global::System.Data.DataColumn columnExpected_Date;
            
            private global::System.Data.DataColumn columnAddRemarks;
            
            private global::System.Data.DataColumn columnReference;
            
            private global::System.Data.DataColumn columnPayRemark1;
            
            private global::System.Data.DataColumn columnPayRemark2;
            
            private global::System.Data.DataColumn columnProd_Code;
            
            private global::System.Data.DataColumn columnProd_Name;
            
            private global::System.Data.DataColumn columnQty;
            
            private global::System.Data.DataColumn columnPurchase_Price;
            
            private global::System.Data.DataColumn columnSelling_Price;
            
            private global::System.Data.DataColumn columnAmount;
            
            private global::System.Data.DataColumn columnLn;
            
            private global::System.Data.DataColumn columnAddress1;
            
            private global::System.Data.DataColumn columnAddress2;
            
            private global::System.Data.DataColumn columnAddress3;
            
            private global::System.Data.DataColumn columnAddress4;
            
            private global::System.Data.DataColumn columnTel;
            
            private global::System.Data.DataColumn columnFax;
            
            private global::System.Data.DataColumn columnTax;
            
            private global::System.Data.DataColumn columnNetAmount;
            
            private global::System.Data.DataColumn columnPay1;
            
            private global::System.Data.DataColumn columnStatus;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsPurchaseOrderDetailsDataTable() {
                this.TableName = "dsPurchaseOrderDetails";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsPurchaseOrderDetailsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dsPurchaseOrderDetailsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Doc_NoColumn {
                get {
                    return this.columnDoc_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Post_DateColumn {
                get {
                    return this.columnPost_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Supplier_IdColumn {
                get {
                    return this.columnSupplier_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Supp_NameColumn {
                get {
                    return this.columnSupp_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Pay_TypeColumn {
                get {
                    return this.columnPay_Type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RemarksColumn {
                get {
                    return this.columnRemarks;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Expected_DateColumn {
                get {
                    return this.columnExpected_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AddRemarksColumn {
                get {
                    return this.columnAddRemarks;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReferenceColumn {
                get {
                    return this.columnReference;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PayRemark1Column {
                get {
                    return this.columnPayRemark1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PayRemark2Column {
                get {
                    return this.columnPayRemark2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Prod_CodeColumn {
                get {
                    return this.columnProd_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Prod_NameColumn {
                get {
                    return this.columnProd_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QtyColumn {
                get {
                    return this.columnQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Purchase_PriceColumn {
                get {
                    return this.columnPurchase_Price;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Selling_PriceColumn {
                get {
                    return this.columnSelling_Price;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LnColumn {
                get {
                    return this.columnLn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Address1Column {
                get {
                    return this.columnAddress1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Address2Column {
                get {
                    return this.columnAddress2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Address3Column {
                get {
                    return this.columnAddress3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Address4Column {
                get {
                    return this.columnAddress4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TelColumn {
                get {
                    return this.columnTel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FaxColumn {
                get {
                    return this.columnFax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TaxColumn {
                get {
                    return this.columnTax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NetAmountColumn {
                get {
                    return this.columnNetAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Pay1Column {
                get {
                    return this.columnPay1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StatusColumn {
                get {
                    return this.columnStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsPurchaseOrderDetailsRow this[int index] {
                get {
                    return ((dsPurchaseOrderDetailsRow)(this.Rows[index]));
                }
            }
            
            public event dsPurchaseOrderDetailsRowChangeEventHandler dsPurchaseOrderDetailsRowChanging;
            
            public event dsPurchaseOrderDetailsRowChangeEventHandler dsPurchaseOrderDetailsRowChanged;
            
            public event dsPurchaseOrderDetailsRowChangeEventHandler dsPurchaseOrderDetailsRowDeleting;
            
            public event dsPurchaseOrderDetailsRowChangeEventHandler dsPurchaseOrderDetailsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddsPurchaseOrderDetailsRow(dsPurchaseOrderDetailsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsPurchaseOrderDetailsRow AdddsPurchaseOrderDetailsRow(
                        string Doc_No, 
                        string Post_Date, 
                        string Supplier_Id, 
                        string Supp_Name, 
                        string Pay_Type, 
                        string Remarks, 
                        string Expected_Date, 
                        string AddRemarks, 
                        string Reference, 
                        string PayRemark1, 
                        string PayRemark2, 
                        string Prod_Code, 
                        string Prod_Name, 
                        double Qty, 
                        string Purchase_Price, 
                        decimal Selling_Price, 
                        decimal Amount, 
                        string Ln, 
                        string Address1, 
                        string Address2, 
                        string Address3, 
                        string Address4, 
                        string Tel, 
                        string Fax, 
                        string Tax, 
                        decimal NetAmount, 
                        string Pay1, 
                        string Status) {
                dsPurchaseOrderDetailsRow rowdsPurchaseOrderDetailsRow = ((dsPurchaseOrderDetailsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Doc_No,
                        Post_Date,
                        Supplier_Id,
                        Supp_Name,
                        Pay_Type,
                        Remarks,
                        Expected_Date,
                        AddRemarks,
                        Reference,
                        PayRemark1,
                        PayRemark2,
                        Prod_Code,
                        Prod_Name,
                        Qty,
                        Purchase_Price,
                        Selling_Price,
                        Amount,
                        Ln,
                        Address1,
                        Address2,
                        Address3,
                        Address4,
                        Tel,
                        Fax,
                        Tax,
                        NetAmount,
                        Pay1,
                        Status};
                rowdsPurchaseOrderDetailsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdsPurchaseOrderDetailsRow);
                return rowdsPurchaseOrderDetailsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dsPurchaseOrderDetailsDataTable cln = ((dsPurchaseOrderDetailsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dsPurchaseOrderDetailsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDoc_No = base.Columns["Doc_No"];
                this.columnPost_Date = base.Columns["Post_Date"];
                this.columnSupplier_Id = base.Columns["Supplier_Id"];
                this.columnSupp_Name = base.Columns["Supp_Name"];
                this.columnPay_Type = base.Columns["Pay_Type"];
                this.columnRemarks = base.Columns["Remarks"];
                this.columnExpected_Date = base.Columns["Expected_Date"];
                this.columnAddRemarks = base.Columns["AddRemarks"];
                this.columnReference = base.Columns["Reference"];
                this.columnPayRemark1 = base.Columns["PayRemark1"];
                this.columnPayRemark2 = base.Columns["PayRemark2"];
                this.columnProd_Code = base.Columns["Prod_Code"];
                this.columnProd_Name = base.Columns["Prod_Name"];
                this.columnQty = base.Columns["Qty"];
                this.columnPurchase_Price = base.Columns["Purchase_Price"];
                this.columnSelling_Price = base.Columns["Selling_Price"];
                this.columnAmount = base.Columns["Amount"];
                this.columnLn = base.Columns["Ln"];
                this.columnAddress1 = base.Columns["Address1"];
                this.columnAddress2 = base.Columns["Address2"];
                this.columnAddress3 = base.Columns["Address3"];
                this.columnAddress4 = base.Columns["Address4"];
                this.columnTel = base.Columns["Tel"];
                this.columnFax = base.Columns["Fax"];
                this.columnTax = base.Columns["Tax"];
                this.columnNetAmount = base.Columns["NetAmount"];
                this.columnPay1 = base.Columns["Pay1"];
                this.columnStatus = base.Columns["Status"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDoc_No = new global::System.Data.DataColumn("Doc_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDoc_No);
                this.columnPost_Date = new global::System.Data.DataColumn("Post_Date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPost_Date);
                this.columnSupplier_Id = new global::System.Data.DataColumn("Supplier_Id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplier_Id);
                this.columnSupp_Name = new global::System.Data.DataColumn("Supp_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupp_Name);
                this.columnPay_Type = new global::System.Data.DataColumn("Pay_Type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPay_Type);
                this.columnRemarks = new global::System.Data.DataColumn("Remarks", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemarks);
                this.columnExpected_Date = new global::System.Data.DataColumn("Expected_Date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExpected_Date);
                this.columnAddRemarks = new global::System.Data.DataColumn("AddRemarks", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddRemarks);
                this.columnReference = new global::System.Data.DataColumn("Reference", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReference);
                this.columnPayRemark1 = new global::System.Data.DataColumn("PayRemark1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPayRemark1);
                this.columnPayRemark2 = new global::System.Data.DataColumn("PayRemark2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPayRemark2);
                this.columnProd_Code = new global::System.Data.DataColumn("Prod_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Code);
                this.columnProd_Name = new global::System.Data.DataColumn("Prod_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Name);
                this.columnQty = new global::System.Data.DataColumn("Qty", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQty);
                this.columnPurchase_Price = new global::System.Data.DataColumn("Purchase_Price", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPurchase_Price);
                this.columnSelling_Price = new global::System.Data.DataColumn("Selling_Price", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelling_Price);
                this.columnAmount = new global::System.Data.DataColumn("Amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
                this.columnLn = new global::System.Data.DataColumn("Ln", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLn);
                this.columnAddress1 = new global::System.Data.DataColumn("Address1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress1);
                this.columnAddress2 = new global::System.Data.DataColumn("Address2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress2);
                this.columnAddress3 = new global::System.Data.DataColumn("Address3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress3);
                this.columnAddress4 = new global::System.Data.DataColumn("Address4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress4);
                this.columnTel = new global::System.Data.DataColumn("Tel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTel);
                this.columnFax = new global::System.Data.DataColumn("Fax", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFax);
                this.columnTax = new global::System.Data.DataColumn("Tax", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTax);
                this.columnNetAmount = new global::System.Data.DataColumn("NetAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNetAmount);
                this.columnPay1 = new global::System.Data.DataColumn("Pay1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPay1);
                this.columnStatus = new global::System.Data.DataColumn("Status", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatus);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsPurchaseOrderDetailsRow NewdsPurchaseOrderDetailsRow() {
                return ((dsPurchaseOrderDetailsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dsPurchaseOrderDetailsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dsPurchaseOrderDetailsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dsPurchaseOrderDetailsRowChanged != null)) {
                    this.dsPurchaseOrderDetailsRowChanged(this, new dsPurchaseOrderDetailsRowChangeEvent(((dsPurchaseOrderDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dsPurchaseOrderDetailsRowChanging != null)) {
                    this.dsPurchaseOrderDetailsRowChanging(this, new dsPurchaseOrderDetailsRowChangeEvent(((dsPurchaseOrderDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dsPurchaseOrderDetailsRowDeleted != null)) {
                    this.dsPurchaseOrderDetailsRowDeleted(this, new dsPurchaseOrderDetailsRowChangeEvent(((dsPurchaseOrderDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dsPurchaseOrderDetailsRowDeleting != null)) {
                    this.dsPurchaseOrderDetailsRowDeleting(this, new dsPurchaseOrderDetailsRowChangeEvent(((dsPurchaseOrderDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedsPurchaseOrderDetailsRow(dsPurchaseOrderDetailsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dsPurchaseOrderDetailsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ProductDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnProd_Code;
            
            private global::System.Data.DataColumn columnProd_Name;
            
            private global::System.Data.DataColumn columnPurchase_Price;
            
            private global::System.Data.DataColumn columnSelling_Price;
            
            private global::System.Data.DataColumn columnProd_Image;
            
            private global::System.Data.DataColumn columnMarked_Price;
            
            private global::System.Data.DataColumn columnWhole_Price;
            
            private global::System.Data.DataColumn columnQty;
            
            private global::System.Data.DataColumn columnPrice_Level;
            
            private global::System.Data.DataColumn columnLockedItem;
            
            private global::System.Data.DataColumn columnLoca;
            
            private global::System.Data.DataColumn columnCodeFrom;
            
            private global::System.Data.DataColumn columnCodeTo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProductDataTable() {
                this.TableName = "Product";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ProductDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ProductDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Prod_CodeColumn {
                get {
                    return this.columnProd_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Prod_NameColumn {
                get {
                    return this.columnProd_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Purchase_PriceColumn {
                get {
                    return this.columnPurchase_Price;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Selling_PriceColumn {
                get {
                    return this.columnSelling_Price;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Prod_ImageColumn {
                get {
                    return this.columnProd_Image;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Marked_PriceColumn {
                get {
                    return this.columnMarked_Price;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Whole_PriceColumn {
                get {
                    return this.columnWhole_Price;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QtyColumn {
                get {
                    return this.columnQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Price_LevelColumn {
                get {
                    return this.columnPrice_Level;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LockedItemColumn {
                get {
                    return this.columnLockedItem;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LocaColumn {
                get {
                    return this.columnLoca;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CodeFromColumn {
                get {
                    return this.columnCodeFrom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CodeToColumn {
                get {
                    return this.columnCodeTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProductRow this[int index] {
                get {
                    return ((ProductRow)(this.Rows[index]));
                }
            }
            
            public event ProductRowChangeEventHandler ProductRowChanging;
            
            public event ProductRowChangeEventHandler ProductRowChanged;
            
            public event ProductRowChangeEventHandler ProductRowDeleting;
            
            public event ProductRowChangeEventHandler ProductRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddProductRow(ProductRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProductRow AddProductRow(string Prod_Code, string Prod_Name, decimal Purchase_Price, decimal Selling_Price, byte Prod_Image, decimal Marked_Price, decimal Whole_Price, double Qty, string Price_Level, string LockedItem, string Loca, string CodeFrom, string CodeTo) {
                ProductRow rowProductRow = ((ProductRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Prod_Code,
                        Prod_Name,
                        Purchase_Price,
                        Selling_Price,
                        Prod_Image,
                        Marked_Price,
                        Whole_Price,
                        Qty,
                        Price_Level,
                        LockedItem,
                        Loca,
                        CodeFrom,
                        CodeTo};
                rowProductRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowProductRow);
                return rowProductRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ProductDataTable cln = ((ProductDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ProductDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnProd_Code = base.Columns["Prod_Code"];
                this.columnProd_Name = base.Columns["Prod_Name"];
                this.columnPurchase_Price = base.Columns["Purchase_Price"];
                this.columnSelling_Price = base.Columns["Selling_Price"];
                this.columnProd_Image = base.Columns["Prod_Image"];
                this.columnMarked_Price = base.Columns["Marked_Price"];
                this.columnWhole_Price = base.Columns["Whole_Price"];
                this.columnQty = base.Columns["Qty"];
                this.columnPrice_Level = base.Columns["Price_Level"];
                this.columnLockedItem = base.Columns["LockedItem"];
                this.columnLoca = base.Columns["Loca"];
                this.columnCodeFrom = base.Columns["CodeFrom"];
                this.columnCodeTo = base.Columns["CodeTo"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnProd_Code = new global::System.Data.DataColumn("Prod_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Code);
                this.columnProd_Name = new global::System.Data.DataColumn("Prod_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Name);
                this.columnPurchase_Price = new global::System.Data.DataColumn("Purchase_Price", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPurchase_Price);
                this.columnSelling_Price = new global::System.Data.DataColumn("Selling_Price", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelling_Price);
                this.columnProd_Image = new global::System.Data.DataColumn("Prod_Image", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Image);
                this.columnMarked_Price = new global::System.Data.DataColumn("Marked_Price", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMarked_Price);
                this.columnWhole_Price = new global::System.Data.DataColumn("Whole_Price", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWhole_Price);
                this.columnQty = new global::System.Data.DataColumn("Qty", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQty);
                this.columnPrice_Level = new global::System.Data.DataColumn("Price_Level", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrice_Level);
                this.columnLockedItem = new global::System.Data.DataColumn("LockedItem", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLockedItem);
                this.columnLoca = new global::System.Data.DataColumn("Loca", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoca);
                this.columnCodeFrom = new global::System.Data.DataColumn("CodeFrom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodeFrom);
                this.columnCodeTo = new global::System.Data.DataColumn("CodeTo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodeTo);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProductRow NewProductRow() {
                return ((ProductRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ProductRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ProductRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ProductRowChanged != null)) {
                    this.ProductRowChanged(this, new ProductRowChangeEvent(((ProductRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ProductRowChanging != null)) {
                    this.ProductRowChanging(this, new ProductRowChangeEvent(((ProductRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ProductRowDeleted != null)) {
                    this.ProductRowDeleted(this, new ProductRowChangeEvent(((ProductRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ProductRowDeleting != null)) {
                    this.ProductRowDeleting(this, new ProductRowChangeEvent(((ProductRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveProductRow(ProductRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ProductDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class InvoiceDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnProd_Code;
            
            private global::System.Data.DataColumn columnProd_Name;
            
            private global::System.Data.DataColumn columnUnit;
            
            private global::System.Data.DataColumn columnSelling_Price;
            
            private global::System.Data.DataColumn columnQty;
            
            private global::System.Data.DataColumn columnFreeQty;
            
            private global::System.Data.DataColumn columnDiscount;
            
            private global::System.Data.DataColumn columnAmount;
            
            private global::System.Data.DataColumn columnLn;
            
            private global::System.Data.DataColumn columnExpDate;
            
            private global::System.Data.DataColumn columnBatchNo;
            
            private global::System.Data.DataColumn columnVAT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public InvoiceDataTable() {
                this.TableName = "Invoice";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal InvoiceDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected InvoiceDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Prod_CodeColumn {
                get {
                    return this.columnProd_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Prod_NameColumn {
                get {
                    return this.columnProd_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UnitColumn {
                get {
                    return this.columnUnit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Selling_PriceColumn {
                get {
                    return this.columnSelling_Price;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QtyColumn {
                get {
                    return this.columnQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FreeQtyColumn {
                get {
                    return this.columnFreeQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DiscountColumn {
                get {
                    return this.columnDiscount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LnColumn {
                get {
                    return this.columnLn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExpDateColumn {
                get {
                    return this.columnExpDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BatchNoColumn {
                get {
                    return this.columnBatchNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VATColumn {
                get {
                    return this.columnVAT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public InvoiceRow this[int index] {
                get {
                    return ((InvoiceRow)(this.Rows[index]));
                }
            }
            
            public event InvoiceRowChangeEventHandler InvoiceRowChanging;
            
            public event InvoiceRowChangeEventHandler InvoiceRowChanged;
            
            public event InvoiceRowChangeEventHandler InvoiceRowDeleting;
            
            public event InvoiceRowChangeEventHandler InvoiceRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddInvoiceRow(InvoiceRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public InvoiceRow AddInvoiceRow(string Prod_Code, string Prod_Name, string Unit, string Selling_Price, string Qty, string FreeQty, string Discount, string Amount, string Ln, string ExpDate, string BatchNo, string VAT) {
                InvoiceRow rowInvoiceRow = ((InvoiceRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Prod_Code,
                        Prod_Name,
                        Unit,
                        Selling_Price,
                        Qty,
                        FreeQty,
                        Discount,
                        Amount,
                        Ln,
                        ExpDate,
                        BatchNo,
                        VAT};
                rowInvoiceRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowInvoiceRow);
                return rowInvoiceRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                InvoiceDataTable cln = ((InvoiceDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new InvoiceDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnProd_Code = base.Columns["Prod_Code"];
                this.columnProd_Name = base.Columns["Prod_Name"];
                this.columnUnit = base.Columns["Unit"];
                this.columnSelling_Price = base.Columns["Selling_Price"];
                this.columnQty = base.Columns["Qty"];
                this.columnFreeQty = base.Columns["FreeQty"];
                this.columnDiscount = base.Columns["Discount"];
                this.columnAmount = base.Columns["Amount"];
                this.columnLn = base.Columns["Ln"];
                this.columnExpDate = base.Columns["ExpDate"];
                this.columnBatchNo = base.Columns["BatchNo"];
                this.columnVAT = base.Columns["VAT"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnProd_Code = new global::System.Data.DataColumn("Prod_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Code);
                this.columnProd_Name = new global::System.Data.DataColumn("Prod_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Name);
                this.columnUnit = new global::System.Data.DataColumn("Unit", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnit);
                this.columnSelling_Price = new global::System.Data.DataColumn("Selling_Price", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelling_Price);
                this.columnQty = new global::System.Data.DataColumn("Qty", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQty);
                this.columnFreeQty = new global::System.Data.DataColumn("FreeQty", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFreeQty);
                this.columnDiscount = new global::System.Data.DataColumn("Discount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiscount);
                this.columnAmount = new global::System.Data.DataColumn("Amount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
                this.columnLn = new global::System.Data.DataColumn("Ln", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLn);
                this.columnExpDate = new global::System.Data.DataColumn("ExpDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExpDate);
                this.columnBatchNo = new global::System.Data.DataColumn("BatchNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBatchNo);
                this.columnVAT = new global::System.Data.DataColumn("VAT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVAT);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public InvoiceRow NewInvoiceRow() {
                return ((InvoiceRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new InvoiceRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(InvoiceRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.InvoiceRowChanged != null)) {
                    this.InvoiceRowChanged(this, new InvoiceRowChangeEvent(((InvoiceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.InvoiceRowChanging != null)) {
                    this.InvoiceRowChanging(this, new InvoiceRowChangeEvent(((InvoiceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.InvoiceRowDeleted != null)) {
                    this.InvoiceRowDeleted(this, new InvoiceRowChangeEvent(((InvoiceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.InvoiceRowDeleting != null)) {
                    this.InvoiceRowDeleting(this, new InvoiceRowChangeEvent(((InvoiceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveInvoiceRow(InvoiceRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "InvoiceDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dsAccountDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnAcc_Code;
            
            private global::System.Data.DataColumn columnAcc_Name;
            
            private global::System.Data.DataColumn columnAddress1;
            
            private global::System.Data.DataColumn columnAddress2;
            
            private global::System.Data.DataColumn columnAddress3;
            
            private global::System.Data.DataColumn columnCity;
            
            private global::System.Data.DataColumn columnCountry;
            
            private global::System.Data.DataColumn columnTelephone;
            
            private global::System.Data.DataColumn columnFax;
            
            private global::System.Data.DataColumn columnEmail;
            
            private global::System.Data.DataColumn columnContact_Prsn;
            
            private global::System.Data.DataColumn columnCredit_Limit;
            
            private global::System.Data.DataColumn columnPeriod;
            
            private global::System.Data.DataColumn columnBankDraft;
            
            private global::System.Data.DataColumn columnProd_Code;
            
            private global::System.Data.DataColumn columnProd_Name;
            
            private global::System.Data.DataColumn columnPurchase_price;
            
            private global::System.Data.DataColumn columnSelling_Price;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsAccountDataTable() {
                this.TableName = "dsAccount";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsAccountDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dsAccountDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Acc_CodeColumn {
                get {
                    return this.columnAcc_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Acc_NameColumn {
                get {
                    return this.columnAcc_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Address1Column {
                get {
                    return this.columnAddress1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Address2Column {
                get {
                    return this.columnAddress2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Address3Column {
                get {
                    return this.columnAddress3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CityColumn {
                get {
                    return this.columnCity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CountryColumn {
                get {
                    return this.columnCountry;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TelephoneColumn {
                get {
                    return this.columnTelephone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FaxColumn {
                get {
                    return this.columnFax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmailColumn {
                get {
                    return this.columnEmail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Contact_PrsnColumn {
                get {
                    return this.columnContact_Prsn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Credit_LimitColumn {
                get {
                    return this.columnCredit_Limit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PeriodColumn {
                get {
                    return this.columnPeriod;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BankDraftColumn {
                get {
                    return this.columnBankDraft;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Prod_CodeColumn {
                get {
                    return this.columnProd_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Prod_NameColumn {
                get {
                    return this.columnProd_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Purchase_priceColumn {
                get {
                    return this.columnPurchase_price;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Selling_PriceColumn {
                get {
                    return this.columnSelling_Price;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsAccountRow this[int index] {
                get {
                    return ((dsAccountRow)(this.Rows[index]));
                }
            }
            
            public event dsAccountRowChangeEventHandler dsAccountRowChanging;
            
            public event dsAccountRowChangeEventHandler dsAccountRowChanged;
            
            public event dsAccountRowChangeEventHandler dsAccountRowDeleting;
            
            public event dsAccountRowChangeEventHandler dsAccountRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddsAccountRow(dsAccountRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsAccountRow AdddsAccountRow(
                        string Acc_Code, 
                        string Acc_Name, 
                        string Address1, 
                        string Address2, 
                        string Address3, 
                        string City, 
                        string Country, 
                        string Telephone, 
                        string Fax, 
                        string Email, 
                        string Contact_Prsn, 
                        string Credit_Limit, 
                        string Period, 
                        string BankDraft, 
                        string Prod_Code, 
                        string Prod_Name, 
                        decimal Purchase_price, 
                        decimal Selling_Price) {
                dsAccountRow rowdsAccountRow = ((dsAccountRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Acc_Code,
                        Acc_Name,
                        Address1,
                        Address2,
                        Address3,
                        City,
                        Country,
                        Telephone,
                        Fax,
                        Email,
                        Contact_Prsn,
                        Credit_Limit,
                        Period,
                        BankDraft,
                        Prod_Code,
                        Prod_Name,
                        Purchase_price,
                        Selling_Price};
                rowdsAccountRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdsAccountRow);
                return rowdsAccountRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dsAccountDataTable cln = ((dsAccountDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dsAccountDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnAcc_Code = base.Columns["Acc_Code"];
                this.columnAcc_Name = base.Columns["Acc_Name"];
                this.columnAddress1 = base.Columns["Address1"];
                this.columnAddress2 = base.Columns["Address2"];
                this.columnAddress3 = base.Columns["Address3"];
                this.columnCity = base.Columns["City"];
                this.columnCountry = base.Columns["Country"];
                this.columnTelephone = base.Columns["Telephone"];
                this.columnFax = base.Columns["Fax"];
                this.columnEmail = base.Columns["Email"];
                this.columnContact_Prsn = base.Columns["Contact_Prsn"];
                this.columnCredit_Limit = base.Columns["Credit_Limit"];
                this.columnPeriod = base.Columns["Period"];
                this.columnBankDraft = base.Columns["BankDraft"];
                this.columnProd_Code = base.Columns["Prod_Code"];
                this.columnProd_Name = base.Columns["Prod_Name"];
                this.columnPurchase_price = base.Columns["Purchase_price"];
                this.columnSelling_Price = base.Columns["Selling_Price"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnAcc_Code = new global::System.Data.DataColumn("Acc_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAcc_Code);
                this.columnAcc_Name = new global::System.Data.DataColumn("Acc_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAcc_Name);
                this.columnAddress1 = new global::System.Data.DataColumn("Address1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress1);
                this.columnAddress2 = new global::System.Data.DataColumn("Address2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress2);
                this.columnAddress3 = new global::System.Data.DataColumn("Address3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress3);
                this.columnCity = new global::System.Data.DataColumn("City", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCity);
                this.columnCountry = new global::System.Data.DataColumn("Country", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCountry);
                this.columnTelephone = new global::System.Data.DataColumn("Telephone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTelephone);
                this.columnFax = new global::System.Data.DataColumn("Fax", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFax);
                this.columnEmail = new global::System.Data.DataColumn("Email", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmail);
                this.columnContact_Prsn = new global::System.Data.DataColumn("Contact_Prsn", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContact_Prsn);
                this.columnCredit_Limit = new global::System.Data.DataColumn("Credit_Limit", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCredit_Limit);
                this.columnPeriod = new global::System.Data.DataColumn("Period", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPeriod);
                this.columnBankDraft = new global::System.Data.DataColumn("BankDraft", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBankDraft);
                this.columnProd_Code = new global::System.Data.DataColumn("Prod_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Code);
                this.columnProd_Name = new global::System.Data.DataColumn("Prod_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Name);
                this.columnPurchase_price = new global::System.Data.DataColumn("Purchase_price", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPurchase_price);
                this.columnSelling_Price = new global::System.Data.DataColumn("Selling_Price", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelling_Price);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsAccountRow NewdsAccountRow() {
                return ((dsAccountRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dsAccountRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dsAccountRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dsAccountRowChanged != null)) {
                    this.dsAccountRowChanged(this, new dsAccountRowChangeEvent(((dsAccountRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dsAccountRowChanging != null)) {
                    this.dsAccountRowChanging(this, new dsAccountRowChangeEvent(((dsAccountRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dsAccountRowDeleted != null)) {
                    this.dsAccountRowDeleted(this, new dsAccountRowChangeEvent(((dsAccountRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dsAccountRowDeleting != null)) {
                    this.dsAccountRowDeleting(this, new dsAccountRowChangeEvent(((dsAccountRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedsAccountRow(dsAccountRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dsAccountDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dsInvoiceDetailsDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnDoc_No;
            
            private global::System.Data.DataColumn columnPost_Date;
            
            private global::System.Data.DataColumn columnCust_Code;
            
            private global::System.Data.DataColumn columnCust_Name;
            
            private global::System.Data.DataColumn columnAddress1;
            
            private global::System.Data.DataColumn columnAddress2;
            
            private global::System.Data.DataColumn columnAddress3;
            
            private global::System.Data.DataColumn columnAddress4;
            
            private global::System.Data.DataColumn columnSales_Assist;
            
            private global::System.Data.DataColumn columnPorder_No;
            
            private global::System.Data.DataColumn columnRemarks;
            
            private global::System.Data.DataColumn columnReference;
            
            private global::System.Data.DataColumn columnProd_Code;
            
            private global::System.Data.DataColumn columnProd_Name;
            
            private global::System.Data.DataColumn columnQty;
            
            private global::System.Data.DataColumn columnFreeQty;
            
            private global::System.Data.DataColumn columnSelling_Price;
            
            private global::System.Data.DataColumn columnDiscount;
            
            private global::System.Data.DataColumn columnAmount;
            
            private global::System.Data.DataColumn columnLn;
            
            private global::System.Data.DataColumn columnPayRemark1;
            
            private global::System.Data.DataColumn columnSub_Discount;
            
            private global::System.Data.DataColumn columnTax;
            
            private global::System.Data.DataColumn columnNet_Amount;
            
            private global::System.Data.DataColumn columnGross_Amount;
            
            private global::System.Data.DataColumn columnStatus;
            
            private global::System.Data.DataColumn columnMarked_Price;
            
            private global::System.Data.DataColumn columnCompanyName;
            
            private global::System.Data.DataColumn columnCompanyAddress;
            
            private global::System.Data.DataColumn columnCompanyTelephone;
            
            private global::System.Data.DataColumn columnCompanyEmail;
            
            private global::System.Data.DataColumn columnBalance;
            
            private global::System.Data.DataColumn columnInv_Amt;
            
            private global::System.Data.DataColumn columnUnit;
            
            private global::System.Data.DataColumn columnInvoType;
            
            private global::System.Data.DataColumn columnExpDate;
            
            private global::System.Data.DataColumn columnBatchNo;
            
            private global::System.Data.DataColumn columnVAT;
            
            private global::System.Data.DataColumn columnTaxPer;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsInvoiceDetailsDataTable() {
                this.TableName = "dsInvoiceDetails";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsInvoiceDetailsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dsInvoiceDetailsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Doc_NoColumn {
                get {
                    return this.columnDoc_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Post_DateColumn {
                get {
                    return this.columnPost_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cust_CodeColumn {
                get {
                    return this.columnCust_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cust_NameColumn {
                get {
                    return this.columnCust_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Address1Column {
                get {
                    return this.columnAddress1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Address2Column {
                get {
                    return this.columnAddress2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Address3Column {
                get {
                    return this.columnAddress3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Address4Column {
                get {
                    return this.columnAddress4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Sales_AssistColumn {
                get {
                    return this.columnSales_Assist;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Porder_NoColumn {
                get {
                    return this.columnPorder_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RemarksColumn {
                get {
                    return this.columnRemarks;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReferenceColumn {
                get {
                    return this.columnReference;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Prod_CodeColumn {
                get {
                    return this.columnProd_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Prod_NameColumn {
                get {
                    return this.columnProd_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QtyColumn {
                get {
                    return this.columnQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FreeQtyColumn {
                get {
                    return this.columnFreeQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Selling_PriceColumn {
                get {
                    return this.columnSelling_Price;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DiscountColumn {
                get {
                    return this.columnDiscount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LnColumn {
                get {
                    return this.columnLn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PayRemark1Column {
                get {
                    return this.columnPayRemark1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Sub_DiscountColumn {
                get {
                    return this.columnSub_Discount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TaxColumn {
                get {
                    return this.columnTax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Net_AmountColumn {
                get {
                    return this.columnNet_Amount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Gross_AmountColumn {
                get {
                    return this.columnGross_Amount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StatusColumn {
                get {
                    return this.columnStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Marked_PriceColumn {
                get {
                    return this.columnMarked_Price;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompanyNameColumn {
                get {
                    return this.columnCompanyName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompanyAddressColumn {
                get {
                    return this.columnCompanyAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompanyTelephoneColumn {
                get {
                    return this.columnCompanyTelephone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompanyEmailColumn {
                get {
                    return this.columnCompanyEmail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BalanceColumn {
                get {
                    return this.columnBalance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Inv_AmtColumn {
                get {
                    return this.columnInv_Amt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UnitColumn {
                get {
                    return this.columnUnit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InvoTypeColumn {
                get {
                    return this.columnInvoType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExpDateColumn {
                get {
                    return this.columnExpDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BatchNoColumn {
                get {
                    return this.columnBatchNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VATColumn {
                get {
                    return this.columnVAT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TaxPerColumn {
                get {
                    return this.columnTaxPer;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsInvoiceDetailsRow this[int index] {
                get {
                    return ((dsInvoiceDetailsRow)(this.Rows[index]));
                }
            }
            
            public event dsInvoiceDetailsRowChangeEventHandler dsInvoiceDetailsRowChanging;
            
            public event dsInvoiceDetailsRowChangeEventHandler dsInvoiceDetailsRowChanged;
            
            public event dsInvoiceDetailsRowChangeEventHandler dsInvoiceDetailsRowDeleting;
            
            public event dsInvoiceDetailsRowChangeEventHandler dsInvoiceDetailsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddsInvoiceDetailsRow(dsInvoiceDetailsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsInvoiceDetailsRow AdddsInvoiceDetailsRow(
                        string Doc_No, 
                        string Post_Date, 
                        string Cust_Code, 
                        string Cust_Name, 
                        string Address1, 
                        string Address2, 
                        string Address3, 
                        string Address4, 
                        string Sales_Assist, 
                        string Porder_No, 
                        string Remarks, 
                        string Reference, 
                        string Prod_Code, 
                        string Prod_Name, 
                        double Qty, 
                        decimal FreeQty, 
                        decimal Selling_Price, 
                        decimal Discount, 
                        decimal Amount, 
                        string Ln, 
                        string PayRemark1, 
                        decimal Sub_Discount, 
                        decimal Tax, 
                        decimal Net_Amount, 
                        decimal Gross_Amount, 
                        string Status, 
                        decimal Marked_Price, 
                        string CompanyName, 
                        string CompanyAddress, 
                        string CompanyTelephone, 
                        string CompanyEmail, 
                        decimal Balance, 
                        decimal Inv_Amt, 
                        string Unit, 
                        string InvoType, 
                        string ExpDate, 
                        string BatchNo, 
                        string VAT, 
                        decimal TaxPer) {
                dsInvoiceDetailsRow rowdsInvoiceDetailsRow = ((dsInvoiceDetailsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Doc_No,
                        Post_Date,
                        Cust_Code,
                        Cust_Name,
                        Address1,
                        Address2,
                        Address3,
                        Address4,
                        Sales_Assist,
                        Porder_No,
                        Remarks,
                        Reference,
                        Prod_Code,
                        Prod_Name,
                        Qty,
                        FreeQty,
                        Selling_Price,
                        Discount,
                        Amount,
                        Ln,
                        PayRemark1,
                        Sub_Discount,
                        Tax,
                        Net_Amount,
                        Gross_Amount,
                        Status,
                        Marked_Price,
                        CompanyName,
                        CompanyAddress,
                        CompanyTelephone,
                        CompanyEmail,
                        Balance,
                        Inv_Amt,
                        Unit,
                        InvoType,
                        ExpDate,
                        BatchNo,
                        VAT,
                        TaxPer};
                rowdsInvoiceDetailsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdsInvoiceDetailsRow);
                return rowdsInvoiceDetailsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dsInvoiceDetailsDataTable cln = ((dsInvoiceDetailsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dsInvoiceDetailsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDoc_No = base.Columns["Doc_No"];
                this.columnPost_Date = base.Columns["Post_Date"];
                this.columnCust_Code = base.Columns["Cust_Code"];
                this.columnCust_Name = base.Columns["Cust_Name"];
                this.columnAddress1 = base.Columns["Address1"];
                this.columnAddress2 = base.Columns["Address2"];
                this.columnAddress3 = base.Columns["Address3"];
                this.columnAddress4 = base.Columns["Address4"];
                this.columnSales_Assist = base.Columns["Sales_Assist"];
                this.columnPorder_No = base.Columns["Porder_No"];
                this.columnRemarks = base.Columns["Remarks"];
                this.columnReference = base.Columns["Reference"];
                this.columnProd_Code = base.Columns["Prod_Code"];
                this.columnProd_Name = base.Columns["Prod_Name"];
                this.columnQty = base.Columns["Qty"];
                this.columnFreeQty = base.Columns["FreeQty"];
                this.columnSelling_Price = base.Columns["Selling_Price"];
                this.columnDiscount = base.Columns["Discount"];
                this.columnAmount = base.Columns["Amount"];
                this.columnLn = base.Columns["Ln"];
                this.columnPayRemark1 = base.Columns["PayRemark1"];
                this.columnSub_Discount = base.Columns["Sub_Discount"];
                this.columnTax = base.Columns["Tax"];
                this.columnNet_Amount = base.Columns["Net_Amount"];
                this.columnGross_Amount = base.Columns["Gross_Amount"];
                this.columnStatus = base.Columns["Status"];
                this.columnMarked_Price = base.Columns["Marked_Price"];
                this.columnCompanyName = base.Columns["CompanyName"];
                this.columnCompanyAddress = base.Columns["CompanyAddress"];
                this.columnCompanyTelephone = base.Columns["CompanyTelephone"];
                this.columnCompanyEmail = base.Columns["CompanyEmail"];
                this.columnBalance = base.Columns["Balance"];
                this.columnInv_Amt = base.Columns["Inv_Amt"];
                this.columnUnit = base.Columns["Unit"];
                this.columnInvoType = base.Columns["InvoType"];
                this.columnExpDate = base.Columns["ExpDate"];
                this.columnBatchNo = base.Columns["BatchNo"];
                this.columnVAT = base.Columns["VAT"];
                this.columnTaxPer = base.Columns["TaxPer"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDoc_No = new global::System.Data.DataColumn("Doc_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDoc_No);
                this.columnPost_Date = new global::System.Data.DataColumn("Post_Date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPost_Date);
                this.columnCust_Code = new global::System.Data.DataColumn("Cust_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCust_Code);
                this.columnCust_Name = new global::System.Data.DataColumn("Cust_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCust_Name);
                this.columnAddress1 = new global::System.Data.DataColumn("Address1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress1);
                this.columnAddress2 = new global::System.Data.DataColumn("Address2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress2);
                this.columnAddress3 = new global::System.Data.DataColumn("Address3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress3);
                this.columnAddress4 = new global::System.Data.DataColumn("Address4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress4);
                this.columnSales_Assist = new global::System.Data.DataColumn("Sales_Assist", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSales_Assist);
                this.columnPorder_No = new global::System.Data.DataColumn("Porder_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPorder_No);
                this.columnRemarks = new global::System.Data.DataColumn("Remarks", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemarks);
                this.columnReference = new global::System.Data.DataColumn("Reference", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReference);
                this.columnProd_Code = new global::System.Data.DataColumn("Prod_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Code);
                this.columnProd_Name = new global::System.Data.DataColumn("Prod_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Name);
                this.columnQty = new global::System.Data.DataColumn("Qty", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQty);
                this.columnFreeQty = new global::System.Data.DataColumn("FreeQty", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFreeQty);
                this.columnSelling_Price = new global::System.Data.DataColumn("Selling_Price", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelling_Price);
                this.columnDiscount = new global::System.Data.DataColumn("Discount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiscount);
                this.columnAmount = new global::System.Data.DataColumn("Amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
                this.columnLn = new global::System.Data.DataColumn("Ln", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLn);
                this.columnPayRemark1 = new global::System.Data.DataColumn("PayRemark1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPayRemark1);
                this.columnSub_Discount = new global::System.Data.DataColumn("Sub_Discount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSub_Discount);
                this.columnTax = new global::System.Data.DataColumn("Tax", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTax);
                this.columnNet_Amount = new global::System.Data.DataColumn("Net_Amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNet_Amount);
                this.columnGross_Amount = new global::System.Data.DataColumn("Gross_Amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGross_Amount);
                this.columnStatus = new global::System.Data.DataColumn("Status", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatus);
                this.columnMarked_Price = new global::System.Data.DataColumn("Marked_Price", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMarked_Price);
                this.columnCompanyName = new global::System.Data.DataColumn("CompanyName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompanyName);
                this.columnCompanyAddress = new global::System.Data.DataColumn("CompanyAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompanyAddress);
                this.columnCompanyTelephone = new global::System.Data.DataColumn("CompanyTelephone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompanyTelephone);
                this.columnCompanyEmail = new global::System.Data.DataColumn("CompanyEmail", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompanyEmail);
                this.columnBalance = new global::System.Data.DataColumn("Balance", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBalance);
                this.columnInv_Amt = new global::System.Data.DataColumn("Inv_Amt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInv_Amt);
                this.columnUnit = new global::System.Data.DataColumn("Unit", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnit);
                this.columnInvoType = new global::System.Data.DataColumn("InvoType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoType);
                this.columnExpDate = new global::System.Data.DataColumn("ExpDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExpDate);
                this.columnBatchNo = new global::System.Data.DataColumn("BatchNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBatchNo);
                this.columnVAT = new global::System.Data.DataColumn("VAT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVAT);
                this.columnTaxPer = new global::System.Data.DataColumn("TaxPer", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTaxPer);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsInvoiceDetailsRow NewdsInvoiceDetailsRow() {
                return ((dsInvoiceDetailsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dsInvoiceDetailsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dsInvoiceDetailsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dsInvoiceDetailsRowChanged != null)) {
                    this.dsInvoiceDetailsRowChanged(this, new dsInvoiceDetailsRowChangeEvent(((dsInvoiceDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dsInvoiceDetailsRowChanging != null)) {
                    this.dsInvoiceDetailsRowChanging(this, new dsInvoiceDetailsRowChangeEvent(((dsInvoiceDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dsInvoiceDetailsRowDeleted != null)) {
                    this.dsInvoiceDetailsRowDeleted(this, new dsInvoiceDetailsRowChangeEvent(((dsInvoiceDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dsInvoiceDetailsRowDeleting != null)) {
                    this.dsInvoiceDetailsRowDeleting(this, new dsInvoiceDetailsRowChangeEvent(((dsInvoiceDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedsInvoiceDetailsRow(dsInvoiceDetailsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dsInvoiceDetailsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dsStockProductwiseDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnProd_Code;
            
            private global::System.Data.DataColumn columnProd_Name;
            
            private global::System.Data.DataColumn columnPurchase_Price;
            
            private global::System.Data.DataColumn columnSelling_Price;
            
            private global::System.Data.DataColumn columnQty;
            
            private global::System.Data.DataColumn columnLoca;
            
            private global::System.Data.DataColumn columnLoca_Descrip;
            
            private global::System.Data.DataColumn columnCodeFrom;
            
            private global::System.Data.DataColumn columnCodeTo;
            
            private global::System.Data.DataColumn columnDepartment_Id;
            
            private global::System.Data.DataColumn columnDept_Name;
            
            private global::System.Data.DataColumn columnCategory_Id;
            
            private global::System.Data.DataColumn columnCat_Name;
            
            private global::System.Data.DataColumn columnSupplier_Id;
            
            private global::System.Data.DataColumn columnSupp_Name;
            
            private global::System.Data.DataColumn columnManufacturer_Id;
            
            private global::System.Data.DataColumn columnManf_Name;
            
            private global::System.Data.DataColumn columnOpening_Stock;
            
            private global::System.Data.DataColumn columnSoldQty;
            
            private global::System.Data.DataColumn columnDateFrom;
            
            private global::System.Data.DataColumn columnDateTo;
            
            private global::System.Data.DataColumn columnProd_Image;
            
            private global::System.Data.DataColumn columnImageView;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsStockProductwiseDataTable() {
                this.TableName = "dsStockProductwise";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsStockProductwiseDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dsStockProductwiseDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Prod_CodeColumn {
                get {
                    return this.columnProd_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Prod_NameColumn {
                get {
                    return this.columnProd_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Purchase_PriceColumn {
                get {
                    return this.columnPurchase_Price;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Selling_PriceColumn {
                get {
                    return this.columnSelling_Price;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QtyColumn {
                get {
                    return this.columnQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LocaColumn {
                get {
                    return this.columnLoca;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Loca_DescripColumn {
                get {
                    return this.columnLoca_Descrip;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CodeFromColumn {
                get {
                    return this.columnCodeFrom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CodeToColumn {
                get {
                    return this.columnCodeTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Department_IdColumn {
                get {
                    return this.columnDepartment_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Dept_NameColumn {
                get {
                    return this.columnDept_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Category_IdColumn {
                get {
                    return this.columnCategory_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cat_NameColumn {
                get {
                    return this.columnCat_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Supplier_IdColumn {
                get {
                    return this.columnSupplier_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Supp_NameColumn {
                get {
                    return this.columnSupp_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Manufacturer_IdColumn {
                get {
                    return this.columnManufacturer_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Manf_NameColumn {
                get {
                    return this.columnManf_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Opening_StockColumn {
                get {
                    return this.columnOpening_Stock;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SoldQtyColumn {
                get {
                    return this.columnSoldQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateFromColumn {
                get {
                    return this.columnDateFrom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateToColumn {
                get {
                    return this.columnDateTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Prod_ImageColumn {
                get {
                    return this.columnProd_Image;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ImageViewColumn {
                get {
                    return this.columnImageView;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsStockProductwiseRow this[int index] {
                get {
                    return ((dsStockProductwiseRow)(this.Rows[index]));
                }
            }
            
            public event dsStockProductwiseRowChangeEventHandler dsStockProductwiseRowChanging;
            
            public event dsStockProductwiseRowChangeEventHandler dsStockProductwiseRowChanged;
            
            public event dsStockProductwiseRowChangeEventHandler dsStockProductwiseRowDeleting;
            
            public event dsStockProductwiseRowChangeEventHandler dsStockProductwiseRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddsStockProductwiseRow(dsStockProductwiseRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsStockProductwiseRow AdddsStockProductwiseRow(
                        string Prod_Code, 
                        string Prod_Name, 
                        decimal Purchase_Price, 
                        decimal Selling_Price, 
                        double Qty, 
                        string Loca, 
                        string Loca_Descrip, 
                        string CodeFrom, 
                        string CodeTo, 
                        string Department_Id, 
                        string Dept_Name, 
                        string Category_Id, 
                        string Cat_Name, 
                        string Supplier_Id, 
                        string Supp_Name, 
                        string Manufacturer_Id, 
                        string Manf_Name, 
                        double Opening_Stock, 
                        double SoldQty, 
                        string DateFrom, 
                        string DateTo, 
                        byte[] Prod_Image, 
                        bool ImageView) {
                dsStockProductwiseRow rowdsStockProductwiseRow = ((dsStockProductwiseRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Prod_Code,
                        Prod_Name,
                        Purchase_Price,
                        Selling_Price,
                        Qty,
                        Loca,
                        Loca_Descrip,
                        CodeFrom,
                        CodeTo,
                        Department_Id,
                        Dept_Name,
                        Category_Id,
                        Cat_Name,
                        Supplier_Id,
                        Supp_Name,
                        Manufacturer_Id,
                        Manf_Name,
                        Opening_Stock,
                        SoldQty,
                        DateFrom,
                        DateTo,
                        Prod_Image,
                        ImageView};
                rowdsStockProductwiseRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdsStockProductwiseRow);
                return rowdsStockProductwiseRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dsStockProductwiseDataTable cln = ((dsStockProductwiseDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dsStockProductwiseDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnProd_Code = base.Columns["Prod_Code"];
                this.columnProd_Name = base.Columns["Prod_Name"];
                this.columnPurchase_Price = base.Columns["Purchase_Price"];
                this.columnSelling_Price = base.Columns["Selling_Price"];
                this.columnQty = base.Columns["Qty"];
                this.columnLoca = base.Columns["Loca"];
                this.columnLoca_Descrip = base.Columns["Loca_Descrip"];
                this.columnCodeFrom = base.Columns["CodeFrom"];
                this.columnCodeTo = base.Columns["CodeTo"];
                this.columnDepartment_Id = base.Columns["Department_Id"];
                this.columnDept_Name = base.Columns["Dept_Name"];
                this.columnCategory_Id = base.Columns["Category_Id"];
                this.columnCat_Name = base.Columns["Cat_Name"];
                this.columnSupplier_Id = base.Columns["Supplier_Id"];
                this.columnSupp_Name = base.Columns["Supp_Name"];
                this.columnManufacturer_Id = base.Columns["Manufacturer_Id"];
                this.columnManf_Name = base.Columns["Manf_Name"];
                this.columnOpening_Stock = base.Columns["Opening_Stock"];
                this.columnSoldQty = base.Columns["SoldQty"];
                this.columnDateFrom = base.Columns["DateFrom"];
                this.columnDateTo = base.Columns["DateTo"];
                this.columnProd_Image = base.Columns["Prod_Image"];
                this.columnImageView = base.Columns["ImageView"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnProd_Code = new global::System.Data.DataColumn("Prod_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Code);
                this.columnProd_Name = new global::System.Data.DataColumn("Prod_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Name);
                this.columnPurchase_Price = new global::System.Data.DataColumn("Purchase_Price", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPurchase_Price);
                this.columnSelling_Price = new global::System.Data.DataColumn("Selling_Price", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelling_Price);
                this.columnQty = new global::System.Data.DataColumn("Qty", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQty);
                this.columnLoca = new global::System.Data.DataColumn("Loca", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoca);
                this.columnLoca_Descrip = new global::System.Data.DataColumn("Loca_Descrip", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoca_Descrip);
                this.columnCodeFrom = new global::System.Data.DataColumn("CodeFrom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodeFrom);
                this.columnCodeTo = new global::System.Data.DataColumn("CodeTo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodeTo);
                this.columnDepartment_Id = new global::System.Data.DataColumn("Department_Id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDepartment_Id);
                this.columnDept_Name = new global::System.Data.DataColumn("Dept_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDept_Name);
                this.columnCategory_Id = new global::System.Data.DataColumn("Category_Id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCategory_Id);
                this.columnCat_Name = new global::System.Data.DataColumn("Cat_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCat_Name);
                this.columnSupplier_Id = new global::System.Data.DataColumn("Supplier_Id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplier_Id);
                this.columnSupp_Name = new global::System.Data.DataColumn("Supp_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupp_Name);
                this.columnManufacturer_Id = new global::System.Data.DataColumn("Manufacturer_Id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnManufacturer_Id);
                this.columnManf_Name = new global::System.Data.DataColumn("Manf_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnManf_Name);
                this.columnOpening_Stock = new global::System.Data.DataColumn("Opening_Stock", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOpening_Stock);
                this.columnSoldQty = new global::System.Data.DataColumn("SoldQty", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSoldQty);
                this.columnDateFrom = new global::System.Data.DataColumn("DateFrom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateFrom);
                this.columnDateTo = new global::System.Data.DataColumn("DateTo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateTo);
                this.columnProd_Image = new global::System.Data.DataColumn("Prod_Image", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Image);
                this.columnImageView = new global::System.Data.DataColumn("ImageView", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImageView);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsStockProductwiseRow NewdsStockProductwiseRow() {
                return ((dsStockProductwiseRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dsStockProductwiseRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dsStockProductwiseRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dsStockProductwiseRowChanged != null)) {
                    this.dsStockProductwiseRowChanged(this, new dsStockProductwiseRowChangeEvent(((dsStockProductwiseRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dsStockProductwiseRowChanging != null)) {
                    this.dsStockProductwiseRowChanging(this, new dsStockProductwiseRowChangeEvent(((dsStockProductwiseRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dsStockProductwiseRowDeleted != null)) {
                    this.dsStockProductwiseRowDeleted(this, new dsStockProductwiseRowChangeEvent(((dsStockProductwiseRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dsStockProductwiseRowDeleting != null)) {
                    this.dsStockProductwiseRowDeleting(this, new dsStockProductwiseRowChangeEvent(((dsStockProductwiseRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedsStockProductwiseRow(dsStockProductwiseRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dsStockProductwiseDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PendingPaymentsDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnDoc_No;
            
            private global::System.Data.DataColumn columnTransaction_Date;
            
            private global::System.Data.DataColumn columnTransaction_Amount;
            
            private global::System.Data.DataColumn columnBalance_Amount;
            
            private global::System.Data.DataColumn columnTemp_DocNo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PendingPaymentsDataTable() {
                this.TableName = "PendingPayments";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PendingPaymentsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected PendingPaymentsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Doc_NoColumn {
                get {
                    return this.columnDoc_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Transaction_DateColumn {
                get {
                    return this.columnTransaction_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Transaction_AmountColumn {
                get {
                    return this.columnTransaction_Amount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Balance_AmountColumn {
                get {
                    return this.columnBalance_Amount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Temp_DocNoColumn {
                get {
                    return this.columnTemp_DocNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PendingPaymentsRow this[int index] {
                get {
                    return ((PendingPaymentsRow)(this.Rows[index]));
                }
            }
            
            public event PendingPaymentsRowChangeEventHandler PendingPaymentsRowChanging;
            
            public event PendingPaymentsRowChangeEventHandler PendingPaymentsRowChanged;
            
            public event PendingPaymentsRowChangeEventHandler PendingPaymentsRowDeleting;
            
            public event PendingPaymentsRowChangeEventHandler PendingPaymentsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPendingPaymentsRow(PendingPaymentsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PendingPaymentsRow AddPendingPaymentsRow(string Doc_No, string Transaction_Date, string Transaction_Amount, string Balance_Amount, string Temp_DocNo) {
                PendingPaymentsRow rowPendingPaymentsRow = ((PendingPaymentsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Doc_No,
                        Transaction_Date,
                        Transaction_Amount,
                        Balance_Amount,
                        Temp_DocNo};
                rowPendingPaymentsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPendingPaymentsRow);
                return rowPendingPaymentsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                PendingPaymentsDataTable cln = ((PendingPaymentsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PendingPaymentsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDoc_No = base.Columns["Doc_No"];
                this.columnTransaction_Date = base.Columns["Transaction_Date"];
                this.columnTransaction_Amount = base.Columns["Transaction_Amount"];
                this.columnBalance_Amount = base.Columns["Balance_Amount"];
                this.columnTemp_DocNo = base.Columns["Temp_DocNo"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDoc_No = new global::System.Data.DataColumn("Doc_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDoc_No);
                this.columnTransaction_Date = new global::System.Data.DataColumn("Transaction_Date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTransaction_Date);
                this.columnTransaction_Amount = new global::System.Data.DataColumn("Transaction_Amount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTransaction_Amount);
                this.columnBalance_Amount = new global::System.Data.DataColumn("Balance_Amount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBalance_Amount);
                this.columnTemp_DocNo = new global::System.Data.DataColumn("Temp_DocNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTemp_DocNo);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PendingPaymentsRow NewPendingPaymentsRow() {
                return ((PendingPaymentsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PendingPaymentsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(PendingPaymentsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PendingPaymentsRowChanged != null)) {
                    this.PendingPaymentsRowChanged(this, new PendingPaymentsRowChangeEvent(((PendingPaymentsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PendingPaymentsRowChanging != null)) {
                    this.PendingPaymentsRowChanging(this, new PendingPaymentsRowChangeEvent(((PendingPaymentsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PendingPaymentsRowDeleted != null)) {
                    this.PendingPaymentsRowDeleted(this, new PendingPaymentsRowChangeEvent(((PendingPaymentsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PendingPaymentsRowDeleting != null)) {
                    this.PendingPaymentsRowDeleting(this, new PendingPaymentsRowChangeEvent(((PendingPaymentsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePendingPaymentsRow(PendingPaymentsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PendingPaymentsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SelectedPaymentsDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnDoc_No;
            
            private global::System.Data.DataColumn columnTransaction_Date;
            
            private global::System.Data.DataColumn columnTransaction_Amount;
            
            private global::System.Data.DataColumn columnBalance_Amount;
            
            private global::System.Data.DataColumn columnPaid_Amount;
            
            private global::System.Data.DataColumn columnTemp_DocNo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SelectedPaymentsDataTable() {
                this.TableName = "SelectedPayments";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SelectedPaymentsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected SelectedPaymentsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Doc_NoColumn {
                get {
                    return this.columnDoc_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Transaction_DateColumn {
                get {
                    return this.columnTransaction_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Transaction_AmountColumn {
                get {
                    return this.columnTransaction_Amount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Balance_AmountColumn {
                get {
                    return this.columnBalance_Amount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Paid_AmountColumn {
                get {
                    return this.columnPaid_Amount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Temp_DocNoColumn {
                get {
                    return this.columnTemp_DocNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SelectedPaymentsRow this[int index] {
                get {
                    return ((SelectedPaymentsRow)(this.Rows[index]));
                }
            }
            
            public event SelectedPaymentsRowChangeEventHandler SelectedPaymentsRowChanging;
            
            public event SelectedPaymentsRowChangeEventHandler SelectedPaymentsRowChanged;
            
            public event SelectedPaymentsRowChangeEventHandler SelectedPaymentsRowDeleting;
            
            public event SelectedPaymentsRowChangeEventHandler SelectedPaymentsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSelectedPaymentsRow(SelectedPaymentsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SelectedPaymentsRow AddSelectedPaymentsRow(string Doc_No, string Transaction_Date, string Transaction_Amount, string Balance_Amount, string Paid_Amount, string Temp_DocNo) {
                SelectedPaymentsRow rowSelectedPaymentsRow = ((SelectedPaymentsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Doc_No,
                        Transaction_Date,
                        Transaction_Amount,
                        Balance_Amount,
                        Paid_Amount,
                        Temp_DocNo};
                rowSelectedPaymentsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSelectedPaymentsRow);
                return rowSelectedPaymentsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                SelectedPaymentsDataTable cln = ((SelectedPaymentsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SelectedPaymentsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDoc_No = base.Columns["Doc_No"];
                this.columnTransaction_Date = base.Columns["Transaction_Date"];
                this.columnTransaction_Amount = base.Columns["Transaction_Amount"];
                this.columnBalance_Amount = base.Columns["Balance_Amount"];
                this.columnPaid_Amount = base.Columns["Paid_Amount"];
                this.columnTemp_DocNo = base.Columns["Temp_DocNo"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDoc_No = new global::System.Data.DataColumn("Doc_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDoc_No);
                this.columnTransaction_Date = new global::System.Data.DataColumn("Transaction_Date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTransaction_Date);
                this.columnTransaction_Amount = new global::System.Data.DataColumn("Transaction_Amount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTransaction_Amount);
                this.columnBalance_Amount = new global::System.Data.DataColumn("Balance_Amount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBalance_Amount);
                this.columnPaid_Amount = new global::System.Data.DataColumn("Paid_Amount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaid_Amount);
                this.columnTemp_DocNo = new global::System.Data.DataColumn("Temp_DocNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTemp_DocNo);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SelectedPaymentsRow NewSelectedPaymentsRow() {
                return ((SelectedPaymentsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SelectedPaymentsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(SelectedPaymentsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SelectedPaymentsRowChanged != null)) {
                    this.SelectedPaymentsRowChanged(this, new SelectedPaymentsRowChangeEvent(((SelectedPaymentsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SelectedPaymentsRowChanging != null)) {
                    this.SelectedPaymentsRowChanging(this, new SelectedPaymentsRowChangeEvent(((SelectedPaymentsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SelectedPaymentsRowDeleted != null)) {
                    this.SelectedPaymentsRowDeleted(this, new SelectedPaymentsRowChangeEvent(((SelectedPaymentsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SelectedPaymentsRowDeleting != null)) {
                    this.SelectedPaymentsRowDeleting(this, new SelectedPaymentsRowChangeEvent(((SelectedPaymentsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSelectedPaymentsRow(SelectedPaymentsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SelectedPaymentsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PaymentDetailsDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnTemp_DocNo;
            
            private global::System.Data.DataColumn columnPayment_Mode;
            
            private global::System.Data.DataColumn columnBank_Name;
            
            private global::System.Data.DataColumn columnCheque_No;
            
            private global::System.Data.DataColumn columnBranch;
            
            private global::System.Data.DataColumn columnAmount;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PaymentDetailsDataTable() {
                this.TableName = "PaymentDetails";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PaymentDetailsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected PaymentDetailsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Temp_DocNoColumn {
                get {
                    return this.columnTemp_DocNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Payment_ModeColumn {
                get {
                    return this.columnPayment_Mode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Bank_NameColumn {
                get {
                    return this.columnBank_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cheque_NoColumn {
                get {
                    return this.columnCheque_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BranchColumn {
                get {
                    return this.columnBranch;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PaymentDetailsRow this[int index] {
                get {
                    return ((PaymentDetailsRow)(this.Rows[index]));
                }
            }
            
            public event PaymentDetailsRowChangeEventHandler PaymentDetailsRowChanging;
            
            public event PaymentDetailsRowChangeEventHandler PaymentDetailsRowChanged;
            
            public event PaymentDetailsRowChangeEventHandler PaymentDetailsRowDeleting;
            
            public event PaymentDetailsRowChangeEventHandler PaymentDetailsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPaymentDetailsRow(PaymentDetailsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PaymentDetailsRow AddPaymentDetailsRow(string Temp_DocNo, string Payment_Mode, string Bank_Name, string Cheque_No, string Branch, string Amount) {
                PaymentDetailsRow rowPaymentDetailsRow = ((PaymentDetailsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Temp_DocNo,
                        Payment_Mode,
                        Bank_Name,
                        Cheque_No,
                        Branch,
                        Amount};
                rowPaymentDetailsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPaymentDetailsRow);
                return rowPaymentDetailsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                PaymentDetailsDataTable cln = ((PaymentDetailsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PaymentDetailsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnTemp_DocNo = base.Columns["Temp_DocNo"];
                this.columnPayment_Mode = base.Columns["Payment_Mode"];
                this.columnBank_Name = base.Columns["Bank_Name"];
                this.columnCheque_No = base.Columns["Cheque_No"];
                this.columnBranch = base.Columns["Branch"];
                this.columnAmount = base.Columns["Amount"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnTemp_DocNo = new global::System.Data.DataColumn("Temp_DocNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTemp_DocNo);
                this.columnPayment_Mode = new global::System.Data.DataColumn("Payment_Mode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPayment_Mode);
                this.columnBank_Name = new global::System.Data.DataColumn("Bank_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBank_Name);
                this.columnCheque_No = new global::System.Data.DataColumn("Cheque_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCheque_No);
                this.columnBranch = new global::System.Data.DataColumn("Branch", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBranch);
                this.columnAmount = new global::System.Data.DataColumn("Amount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PaymentDetailsRow NewPaymentDetailsRow() {
                return ((PaymentDetailsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PaymentDetailsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(PaymentDetailsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PaymentDetailsRowChanged != null)) {
                    this.PaymentDetailsRowChanged(this, new PaymentDetailsRowChangeEvent(((PaymentDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PaymentDetailsRowChanging != null)) {
                    this.PaymentDetailsRowChanging(this, new PaymentDetailsRowChangeEvent(((PaymentDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PaymentDetailsRowDeleted != null)) {
                    this.PaymentDetailsRowDeleted(this, new PaymentDetailsRowChangeEvent(((PaymentDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PaymentDetailsRowDeleting != null)) {
                    this.PaymentDetailsRowDeleting(this, new PaymentDetailsRowChangeEvent(((PaymentDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePaymentDetailsRow(PaymentDetailsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PaymentDetailsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tbPaidPaymentSummaryDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnOrg_Doc_no;
            
            private global::System.Data.DataColumn columnPost_Date;
            
            private global::System.Data.DataColumn columnDoc_No;
            
            private global::System.Data.DataColumn columnTransaction_Date;
            
            private global::System.Data.DataColumn columnBalance_Amount;
            
            private global::System.Data.DataColumn columnTransaction_Amount;
            
            private global::System.Data.DataColumn columnPaid_Amount;
            
            private global::System.Data.DataColumn columnLoca;
            
            private global::System.Data.DataColumn columnLoca_Descrip;
            
            private global::System.Data.DataColumn columnAcc_Code;
            
            private global::System.Data.DataColumn columnAcc_Name;
            
            private global::System.Data.DataColumn columnAddress1;
            
            private global::System.Data.DataColumn columnAddress2;
            
            private global::System.Data.DataColumn columnAddress3;
            
            private global::System.Data.DataColumn columnAddress4;
            
            private global::System.Data.DataColumn columnUser_Name;
            
            private global::System.Data.DataColumn columnStatus;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tbPaidPaymentSummaryDataTable() {
                this.TableName = "tbPaidPaymentSummary";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tbPaidPaymentSummaryDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tbPaidPaymentSummaryDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Org_Doc_noColumn {
                get {
                    return this.columnOrg_Doc_no;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Post_DateColumn {
                get {
                    return this.columnPost_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Doc_NoColumn {
                get {
                    return this.columnDoc_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Transaction_DateColumn {
                get {
                    return this.columnTransaction_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Balance_AmountColumn {
                get {
                    return this.columnBalance_Amount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Transaction_AmountColumn {
                get {
                    return this.columnTransaction_Amount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Paid_AmountColumn {
                get {
                    return this.columnPaid_Amount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LocaColumn {
                get {
                    return this.columnLoca;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Loca_DescripColumn {
                get {
                    return this.columnLoca_Descrip;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Acc_CodeColumn {
                get {
                    return this.columnAcc_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Acc_NameColumn {
                get {
                    return this.columnAcc_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Address1Column {
                get {
                    return this.columnAddress1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Address2Column {
                get {
                    return this.columnAddress2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Address3Column {
                get {
                    return this.columnAddress3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Address4Column {
                get {
                    return this.columnAddress4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn User_NameColumn {
                get {
                    return this.columnUser_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StatusColumn {
                get {
                    return this.columnStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tbPaidPaymentSummaryRow this[int index] {
                get {
                    return ((tbPaidPaymentSummaryRow)(this.Rows[index]));
                }
            }
            
            public event tbPaidPaymentSummaryRowChangeEventHandler tbPaidPaymentSummaryRowChanging;
            
            public event tbPaidPaymentSummaryRowChangeEventHandler tbPaidPaymentSummaryRowChanged;
            
            public event tbPaidPaymentSummaryRowChangeEventHandler tbPaidPaymentSummaryRowDeleting;
            
            public event tbPaidPaymentSummaryRowChangeEventHandler tbPaidPaymentSummaryRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtbPaidPaymentSummaryRow(tbPaidPaymentSummaryRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tbPaidPaymentSummaryRow AddtbPaidPaymentSummaryRow(
                        string Org_Doc_no, 
                        string Post_Date, 
                        string Doc_No, 
                        string Transaction_Date, 
                        string Balance_Amount, 
                        string Transaction_Amount, 
                        string Paid_Amount, 
                        string Loca, 
                        string Loca_Descrip, 
                        string Acc_Code, 
                        string Acc_Name, 
                        string Address1, 
                        string Address2, 
                        string Address3, 
                        string Address4, 
                        string User_Name, 
                        string Status) {
                tbPaidPaymentSummaryRow rowtbPaidPaymentSummaryRow = ((tbPaidPaymentSummaryRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Org_Doc_no,
                        Post_Date,
                        Doc_No,
                        Transaction_Date,
                        Balance_Amount,
                        Transaction_Amount,
                        Paid_Amount,
                        Loca,
                        Loca_Descrip,
                        Acc_Code,
                        Acc_Name,
                        Address1,
                        Address2,
                        Address3,
                        Address4,
                        User_Name,
                        Status};
                rowtbPaidPaymentSummaryRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtbPaidPaymentSummaryRow);
                return rowtbPaidPaymentSummaryRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tbPaidPaymentSummaryDataTable cln = ((tbPaidPaymentSummaryDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tbPaidPaymentSummaryDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnOrg_Doc_no = base.Columns["Org_Doc_no"];
                this.columnPost_Date = base.Columns["Post_Date"];
                this.columnDoc_No = base.Columns["Doc_No"];
                this.columnTransaction_Date = base.Columns["Transaction_Date"];
                this.columnBalance_Amount = base.Columns["Balance_Amount"];
                this.columnTransaction_Amount = base.Columns["Transaction_Amount"];
                this.columnPaid_Amount = base.Columns["Paid_Amount"];
                this.columnLoca = base.Columns["Loca"];
                this.columnLoca_Descrip = base.Columns["Loca_Descrip"];
                this.columnAcc_Code = base.Columns["Acc_Code"];
                this.columnAcc_Name = base.Columns["Acc_Name"];
                this.columnAddress1 = base.Columns["Address1"];
                this.columnAddress2 = base.Columns["Address2"];
                this.columnAddress3 = base.Columns["Address3"];
                this.columnAddress4 = base.Columns["Address4"];
                this.columnUser_Name = base.Columns["User_Name"];
                this.columnStatus = base.Columns["Status"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnOrg_Doc_no = new global::System.Data.DataColumn("Org_Doc_no", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrg_Doc_no);
                this.columnPost_Date = new global::System.Data.DataColumn("Post_Date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPost_Date);
                this.columnDoc_No = new global::System.Data.DataColumn("Doc_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDoc_No);
                this.columnTransaction_Date = new global::System.Data.DataColumn("Transaction_Date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTransaction_Date);
                this.columnBalance_Amount = new global::System.Data.DataColumn("Balance_Amount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBalance_Amount);
                this.columnTransaction_Amount = new global::System.Data.DataColumn("Transaction_Amount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTransaction_Amount);
                this.columnPaid_Amount = new global::System.Data.DataColumn("Paid_Amount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaid_Amount);
                this.columnLoca = new global::System.Data.DataColumn("Loca", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoca);
                this.columnLoca_Descrip = new global::System.Data.DataColumn("Loca_Descrip", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoca_Descrip);
                this.columnAcc_Code = new global::System.Data.DataColumn("Acc_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAcc_Code);
                this.columnAcc_Name = new global::System.Data.DataColumn("Acc_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAcc_Name);
                this.columnAddress1 = new global::System.Data.DataColumn("Address1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress1);
                this.columnAddress2 = new global::System.Data.DataColumn("Address2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress2);
                this.columnAddress3 = new global::System.Data.DataColumn("Address3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress3);
                this.columnAddress4 = new global::System.Data.DataColumn("Address4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress4);
                this.columnUser_Name = new global::System.Data.DataColumn("User_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUser_Name);
                this.columnStatus = new global::System.Data.DataColumn("Status", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatus);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tbPaidPaymentSummaryRow NewtbPaidPaymentSummaryRow() {
                return ((tbPaidPaymentSummaryRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tbPaidPaymentSummaryRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tbPaidPaymentSummaryRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tbPaidPaymentSummaryRowChanged != null)) {
                    this.tbPaidPaymentSummaryRowChanged(this, new tbPaidPaymentSummaryRowChangeEvent(((tbPaidPaymentSummaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tbPaidPaymentSummaryRowChanging != null)) {
                    this.tbPaidPaymentSummaryRowChanging(this, new tbPaidPaymentSummaryRowChangeEvent(((tbPaidPaymentSummaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tbPaidPaymentSummaryRowDeleted != null)) {
                    this.tbPaidPaymentSummaryRowDeleted(this, new tbPaidPaymentSummaryRowChangeEvent(((tbPaidPaymentSummaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tbPaidPaymentSummaryRowDeleting != null)) {
                    this.tbPaidPaymentSummaryRowDeleting(this, new tbPaidPaymentSummaryRowChangeEvent(((tbPaidPaymentSummaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetbPaidPaymentSummaryRow(tbPaidPaymentSummaryRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tbPaidPaymentSummaryDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tbPaidPaymentModeDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnPayment_Mode;
            
            private global::System.Data.DataColumn columnBank_Name;
            
            private global::System.Data.DataColumn columnCheque_No;
            
            private global::System.Data.DataColumn columnCheque_Date;
            
            private global::System.Data.DataColumn columnBranch;
            
            private global::System.Data.DataColumn columnAmount;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tbPaidPaymentModeDataTable() {
                this.TableName = "tbPaidPaymentMode";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tbPaidPaymentModeDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tbPaidPaymentModeDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Payment_ModeColumn {
                get {
                    return this.columnPayment_Mode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Bank_NameColumn {
                get {
                    return this.columnBank_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cheque_NoColumn {
                get {
                    return this.columnCheque_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cheque_DateColumn {
                get {
                    return this.columnCheque_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BranchColumn {
                get {
                    return this.columnBranch;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tbPaidPaymentModeRow this[int index] {
                get {
                    return ((tbPaidPaymentModeRow)(this.Rows[index]));
                }
            }
            
            public event tbPaidPaymentModeRowChangeEventHandler tbPaidPaymentModeRowChanging;
            
            public event tbPaidPaymentModeRowChangeEventHandler tbPaidPaymentModeRowChanged;
            
            public event tbPaidPaymentModeRowChangeEventHandler tbPaidPaymentModeRowDeleting;
            
            public event tbPaidPaymentModeRowChangeEventHandler tbPaidPaymentModeRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtbPaidPaymentModeRow(tbPaidPaymentModeRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tbPaidPaymentModeRow AddtbPaidPaymentModeRow(string Payment_Mode, string Bank_Name, string Cheque_No, string Cheque_Date, string Branch, string Amount) {
                tbPaidPaymentModeRow rowtbPaidPaymentModeRow = ((tbPaidPaymentModeRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Payment_Mode,
                        Bank_Name,
                        Cheque_No,
                        Cheque_Date,
                        Branch,
                        Amount};
                rowtbPaidPaymentModeRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtbPaidPaymentModeRow);
                return rowtbPaidPaymentModeRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tbPaidPaymentModeDataTable cln = ((tbPaidPaymentModeDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tbPaidPaymentModeDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnPayment_Mode = base.Columns["Payment_Mode"];
                this.columnBank_Name = base.Columns["Bank_Name"];
                this.columnCheque_No = base.Columns["Cheque_No"];
                this.columnCheque_Date = base.Columns["Cheque_Date"];
                this.columnBranch = base.Columns["Branch"];
                this.columnAmount = base.Columns["Amount"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnPayment_Mode = new global::System.Data.DataColumn("Payment_Mode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPayment_Mode);
                this.columnBank_Name = new global::System.Data.DataColumn("Bank_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBank_Name);
                this.columnCheque_No = new global::System.Data.DataColumn("Cheque_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCheque_No);
                this.columnCheque_Date = new global::System.Data.DataColumn("Cheque_Date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCheque_Date);
                this.columnBranch = new global::System.Data.DataColumn("Branch", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBranch);
                this.columnAmount = new global::System.Data.DataColumn("Amount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tbPaidPaymentModeRow NewtbPaidPaymentModeRow() {
                return ((tbPaidPaymentModeRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tbPaidPaymentModeRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tbPaidPaymentModeRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tbPaidPaymentModeRowChanged != null)) {
                    this.tbPaidPaymentModeRowChanged(this, new tbPaidPaymentModeRowChangeEvent(((tbPaidPaymentModeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tbPaidPaymentModeRowChanging != null)) {
                    this.tbPaidPaymentModeRowChanging(this, new tbPaidPaymentModeRowChangeEvent(((tbPaidPaymentModeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tbPaidPaymentModeRowDeleted != null)) {
                    this.tbPaidPaymentModeRowDeleted(this, new tbPaidPaymentModeRowChangeEvent(((tbPaidPaymentModeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tbPaidPaymentModeRowDeleting != null)) {
                    this.tbPaidPaymentModeRowDeleting(this, new tbPaidPaymentModeRowChangeEvent(((tbPaidPaymentModeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetbPaidPaymentModeRow(tbPaidPaymentModeRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tbPaidPaymentModeDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SupplierPaymentSummaryDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnAcc_Code;
            
            private global::System.Data.DataColumn columnAcc_Name;
            
            private global::System.Data.DataColumn columnOrg_Doc_no;
            
            private global::System.Data.DataColumn columnPost_Date;
            
            private global::System.Data.DataColumn columnPayment_Mode;
            
            private global::System.Data.DataColumn columnBank_Name;
            
            private global::System.Data.DataColumn columnCheque_No;
            
            private global::System.Data.DataColumn columnCheque_Date;
            
            private global::System.Data.DataColumn columnBranch;
            
            private global::System.Data.DataColumn columnAmount;
            
            private global::System.Data.DataColumn columnCodeFrom;
            
            private global::System.Data.DataColumn columnCodeTo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SupplierPaymentSummaryDataTable() {
                this.TableName = "SupplierPaymentSummary";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SupplierPaymentSummaryDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected SupplierPaymentSummaryDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Acc_CodeColumn {
                get {
                    return this.columnAcc_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Acc_NameColumn {
                get {
                    return this.columnAcc_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Org_Doc_noColumn {
                get {
                    return this.columnOrg_Doc_no;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Post_DateColumn {
                get {
                    return this.columnPost_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Payment_ModeColumn {
                get {
                    return this.columnPayment_Mode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Bank_NameColumn {
                get {
                    return this.columnBank_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cheque_NoColumn {
                get {
                    return this.columnCheque_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cheque_DateColumn {
                get {
                    return this.columnCheque_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BranchColumn {
                get {
                    return this.columnBranch;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CodeFromColumn {
                get {
                    return this.columnCodeFrom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CodeToColumn {
                get {
                    return this.columnCodeTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SupplierPaymentSummaryRow this[int index] {
                get {
                    return ((SupplierPaymentSummaryRow)(this.Rows[index]));
                }
            }
            
            public event SupplierPaymentSummaryRowChangeEventHandler SupplierPaymentSummaryRowChanging;
            
            public event SupplierPaymentSummaryRowChangeEventHandler SupplierPaymentSummaryRowChanged;
            
            public event SupplierPaymentSummaryRowChangeEventHandler SupplierPaymentSummaryRowDeleting;
            
            public event SupplierPaymentSummaryRowChangeEventHandler SupplierPaymentSummaryRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSupplierPaymentSummaryRow(SupplierPaymentSummaryRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SupplierPaymentSummaryRow AddSupplierPaymentSummaryRow(string Acc_Code, string Acc_Name, string Org_Doc_no, string Post_Date, string Payment_Mode, string Bank_Name, string Cheque_No, string Cheque_Date, string Branch, string Amount, string CodeFrom, string CodeTo) {
                SupplierPaymentSummaryRow rowSupplierPaymentSummaryRow = ((SupplierPaymentSummaryRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Acc_Code,
                        Acc_Name,
                        Org_Doc_no,
                        Post_Date,
                        Payment_Mode,
                        Bank_Name,
                        Cheque_No,
                        Cheque_Date,
                        Branch,
                        Amount,
                        CodeFrom,
                        CodeTo};
                rowSupplierPaymentSummaryRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSupplierPaymentSummaryRow);
                return rowSupplierPaymentSummaryRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                SupplierPaymentSummaryDataTable cln = ((SupplierPaymentSummaryDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SupplierPaymentSummaryDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnAcc_Code = base.Columns["Acc_Code"];
                this.columnAcc_Name = base.Columns["Acc_Name"];
                this.columnOrg_Doc_no = base.Columns["Org_Doc_no"];
                this.columnPost_Date = base.Columns["Post_Date"];
                this.columnPayment_Mode = base.Columns["Payment_Mode"];
                this.columnBank_Name = base.Columns["Bank_Name"];
                this.columnCheque_No = base.Columns["Cheque_No"];
                this.columnCheque_Date = base.Columns["Cheque_Date"];
                this.columnBranch = base.Columns["Branch"];
                this.columnAmount = base.Columns["Amount"];
                this.columnCodeFrom = base.Columns["CodeFrom"];
                this.columnCodeTo = base.Columns["CodeTo"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnAcc_Code = new global::System.Data.DataColumn("Acc_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAcc_Code);
                this.columnAcc_Name = new global::System.Data.DataColumn("Acc_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAcc_Name);
                this.columnOrg_Doc_no = new global::System.Data.DataColumn("Org_Doc_no", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrg_Doc_no);
                this.columnPost_Date = new global::System.Data.DataColumn("Post_Date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPost_Date);
                this.columnPayment_Mode = new global::System.Data.DataColumn("Payment_Mode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPayment_Mode);
                this.columnBank_Name = new global::System.Data.DataColumn("Bank_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBank_Name);
                this.columnCheque_No = new global::System.Data.DataColumn("Cheque_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCheque_No);
                this.columnCheque_Date = new global::System.Data.DataColumn("Cheque_Date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCheque_Date);
                this.columnBranch = new global::System.Data.DataColumn("Branch", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBranch);
                this.columnAmount = new global::System.Data.DataColumn("Amount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
                this.columnCodeFrom = new global::System.Data.DataColumn("CodeFrom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodeFrom);
                this.columnCodeTo = new global::System.Data.DataColumn("CodeTo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodeTo);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SupplierPaymentSummaryRow NewSupplierPaymentSummaryRow() {
                return ((SupplierPaymentSummaryRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SupplierPaymentSummaryRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(SupplierPaymentSummaryRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SupplierPaymentSummaryRowChanged != null)) {
                    this.SupplierPaymentSummaryRowChanged(this, new SupplierPaymentSummaryRowChangeEvent(((SupplierPaymentSummaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SupplierPaymentSummaryRowChanging != null)) {
                    this.SupplierPaymentSummaryRowChanging(this, new SupplierPaymentSummaryRowChangeEvent(((SupplierPaymentSummaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SupplierPaymentSummaryRowDeleted != null)) {
                    this.SupplierPaymentSummaryRowDeleted(this, new SupplierPaymentSummaryRowChangeEvent(((SupplierPaymentSummaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SupplierPaymentSummaryRowDeleting != null)) {
                    this.SupplierPaymentSummaryRowDeleting(this, new SupplierPaymentSummaryRowChangeEvent(((SupplierPaymentSummaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSupplierPaymentSummaryRow(SupplierPaymentSummaryRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SupplierPaymentSummaryDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TransactionSummaryDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnLoca;
            
            private global::System.Data.DataColumn columnLoca_Descrip;
            
            private global::System.Data.DataColumn columnTo_LocaDesc;
            
            private global::System.Data.DataColumn columnSupplier_Id;
            
            private global::System.Data.DataColumn columnSupp_Name;
            
            private global::System.Data.DataColumn columnPost_Date;
            
            private global::System.Data.DataColumn columnNet_Amount;
            
            private global::System.Data.DataColumn columnDoc_No;
            
            private global::System.Data.DataColumn columnCodeFrom;
            
            private global::System.Data.DataColumn columnCodeTo;
            
            private global::System.Data.DataColumn columnTo_Loca;
            
            private global::System.Data.DataColumn columnAmount;
            
            private global::System.Data.DataColumn columnDiscount;
            
            private global::System.Data.DataColumn columnProd_Code;
            
            private global::System.Data.DataColumn columnProd_Name;
            
            private global::System.Data.DataColumn columnBarcode;
            
            private global::System.Data.DataColumn columnQty;
            
            private global::System.Data.DataColumn columnFreeQty;
            
            private global::System.Data.DataColumn columnDisc;
            
            private global::System.Data.DataColumn columnPurchase_Price;
            
            private global::System.Data.DataColumn columnSelling_Price;
            
            private global::System.Data.DataColumn columnUnit;
            
            private global::System.Data.DataColumn columnItAmount;
            
            private global::System.Data.DataColumn columnPayType;
            
            private global::System.Data.DataColumn columnCash;
            
            private global::System.Data.DataColumn columnCredit;
            
            private global::System.Data.DataColumn columnBalance;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TransactionSummaryDataTable() {
                this.TableName = "TransactionSummary";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TransactionSummaryDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected TransactionSummaryDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LocaColumn {
                get {
                    return this.columnLoca;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Loca_DescripColumn {
                get {
                    return this.columnLoca_Descrip;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn To_LocaDescColumn {
                get {
                    return this.columnTo_LocaDesc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Supplier_IdColumn {
                get {
                    return this.columnSupplier_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Supp_NameColumn {
                get {
                    return this.columnSupp_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Post_DateColumn {
                get {
                    return this.columnPost_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Net_AmountColumn {
                get {
                    return this.columnNet_Amount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Doc_NoColumn {
                get {
                    return this.columnDoc_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CodeFromColumn {
                get {
                    return this.columnCodeFrom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CodeToColumn {
                get {
                    return this.columnCodeTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn To_LocaColumn {
                get {
                    return this.columnTo_Loca;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DiscountColumn {
                get {
                    return this.columnDiscount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Prod_CodeColumn {
                get {
                    return this.columnProd_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Prod_NameColumn {
                get {
                    return this.columnProd_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BarcodeColumn {
                get {
                    return this.columnBarcode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QtyColumn {
                get {
                    return this.columnQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FreeQtyColumn {
                get {
                    return this.columnFreeQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DiscColumn {
                get {
                    return this.columnDisc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Purchase_PriceColumn {
                get {
                    return this.columnPurchase_Price;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Selling_PriceColumn {
                get {
                    return this.columnSelling_Price;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UnitColumn {
                get {
                    return this.columnUnit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItAmountColumn {
                get {
                    return this.columnItAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PayTypeColumn {
                get {
                    return this.columnPayType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CashColumn {
                get {
                    return this.columnCash;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreditColumn {
                get {
                    return this.columnCredit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BalanceColumn {
                get {
                    return this.columnBalance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TransactionSummaryRow this[int index] {
                get {
                    return ((TransactionSummaryRow)(this.Rows[index]));
                }
            }
            
            public event TransactionSummaryRowChangeEventHandler TransactionSummaryRowChanging;
            
            public event TransactionSummaryRowChangeEventHandler TransactionSummaryRowChanged;
            
            public event TransactionSummaryRowChangeEventHandler TransactionSummaryRowDeleting;
            
            public event TransactionSummaryRowChangeEventHandler TransactionSummaryRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddTransactionSummaryRow(TransactionSummaryRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TransactionSummaryRow AddTransactionSummaryRow(
                        string Loca, 
                        string Loca_Descrip, 
                        string To_LocaDesc, 
                        string Supplier_Id, 
                        string Supp_Name, 
                        string Post_Date, 
                        string Net_Amount, 
                        string Doc_No, 
                        string CodeFrom, 
                        string CodeTo, 
                        string To_Loca, 
                        decimal Amount, 
                        decimal Discount, 
                        string Prod_Code, 
                        string Prod_Name, 
                        string Barcode, 
                        decimal Qty, 
                        decimal FreeQty, 
                        decimal Disc, 
                        decimal Purchase_Price, 
                        decimal Selling_Price, 
                        string Unit, 
                        decimal ItAmount, 
                        string PayType, 
                        decimal Cash, 
                        decimal Credit, 
                        decimal Balance) {
                TransactionSummaryRow rowTransactionSummaryRow = ((TransactionSummaryRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Loca,
                        Loca_Descrip,
                        To_LocaDesc,
                        Supplier_Id,
                        Supp_Name,
                        Post_Date,
                        Net_Amount,
                        Doc_No,
                        CodeFrom,
                        CodeTo,
                        To_Loca,
                        Amount,
                        Discount,
                        Prod_Code,
                        Prod_Name,
                        Barcode,
                        Qty,
                        FreeQty,
                        Disc,
                        Purchase_Price,
                        Selling_Price,
                        Unit,
                        ItAmount,
                        PayType,
                        Cash,
                        Credit,
                        Balance};
                rowTransactionSummaryRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTransactionSummaryRow);
                return rowTransactionSummaryRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                TransactionSummaryDataTable cln = ((TransactionSummaryDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TransactionSummaryDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnLoca = base.Columns["Loca"];
                this.columnLoca_Descrip = base.Columns["Loca_Descrip"];
                this.columnTo_LocaDesc = base.Columns["To_LocaDesc"];
                this.columnSupplier_Id = base.Columns["Supplier_Id"];
                this.columnSupp_Name = base.Columns["Supp_Name"];
                this.columnPost_Date = base.Columns["Post_Date"];
                this.columnNet_Amount = base.Columns["Net_Amount"];
                this.columnDoc_No = base.Columns["Doc_No"];
                this.columnCodeFrom = base.Columns["CodeFrom"];
                this.columnCodeTo = base.Columns["CodeTo"];
                this.columnTo_Loca = base.Columns["To_Loca"];
                this.columnAmount = base.Columns["Amount"];
                this.columnDiscount = base.Columns["Discount"];
                this.columnProd_Code = base.Columns["Prod_Code"];
                this.columnProd_Name = base.Columns["Prod_Name"];
                this.columnBarcode = base.Columns["Barcode"];
                this.columnQty = base.Columns["Qty"];
                this.columnFreeQty = base.Columns["FreeQty"];
                this.columnDisc = base.Columns["Disc"];
                this.columnPurchase_Price = base.Columns["Purchase_Price"];
                this.columnSelling_Price = base.Columns["Selling_Price"];
                this.columnUnit = base.Columns["Unit"];
                this.columnItAmount = base.Columns["ItAmount"];
                this.columnPayType = base.Columns["PayType"];
                this.columnCash = base.Columns["Cash"];
                this.columnCredit = base.Columns["Credit"];
                this.columnBalance = base.Columns["Balance"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnLoca = new global::System.Data.DataColumn("Loca", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoca);
                this.columnLoca_Descrip = new global::System.Data.DataColumn("Loca_Descrip", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoca_Descrip);
                this.columnTo_LocaDesc = new global::System.Data.DataColumn("To_LocaDesc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTo_LocaDesc);
                this.columnSupplier_Id = new global::System.Data.DataColumn("Supplier_Id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplier_Id);
                this.columnSupp_Name = new global::System.Data.DataColumn("Supp_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupp_Name);
                this.columnPost_Date = new global::System.Data.DataColumn("Post_Date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPost_Date);
                this.columnNet_Amount = new global::System.Data.DataColumn("Net_Amount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNet_Amount);
                this.columnDoc_No = new global::System.Data.DataColumn("Doc_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDoc_No);
                this.columnCodeFrom = new global::System.Data.DataColumn("CodeFrom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodeFrom);
                this.columnCodeTo = new global::System.Data.DataColumn("CodeTo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodeTo);
                this.columnTo_Loca = new global::System.Data.DataColumn("To_Loca", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTo_Loca);
                this.columnAmount = new global::System.Data.DataColumn("Amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
                this.columnDiscount = new global::System.Data.DataColumn("Discount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiscount);
                this.columnProd_Code = new global::System.Data.DataColumn("Prod_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Code);
                this.columnProd_Name = new global::System.Data.DataColumn("Prod_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Name);
                this.columnBarcode = new global::System.Data.DataColumn("Barcode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBarcode);
                this.columnQty = new global::System.Data.DataColumn("Qty", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQty);
                this.columnFreeQty = new global::System.Data.DataColumn("FreeQty", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFreeQty);
                this.columnDisc = new global::System.Data.DataColumn("Disc", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDisc);
                this.columnPurchase_Price = new global::System.Data.DataColumn("Purchase_Price", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPurchase_Price);
                this.columnSelling_Price = new global::System.Data.DataColumn("Selling_Price", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelling_Price);
                this.columnUnit = new global::System.Data.DataColumn("Unit", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnit);
                this.columnItAmount = new global::System.Data.DataColumn("ItAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItAmount);
                this.columnPayType = new global::System.Data.DataColumn("PayType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPayType);
                this.columnCash = new global::System.Data.DataColumn("Cash", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCash);
                this.columnCredit = new global::System.Data.DataColumn("Credit", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCredit);
                this.columnBalance = new global::System.Data.DataColumn("Balance", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBalance);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TransactionSummaryRow NewTransactionSummaryRow() {
                return ((TransactionSummaryRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TransactionSummaryRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(TransactionSummaryRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TransactionSummaryRowChanged != null)) {
                    this.TransactionSummaryRowChanged(this, new TransactionSummaryRowChangeEvent(((TransactionSummaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TransactionSummaryRowChanging != null)) {
                    this.TransactionSummaryRowChanging(this, new TransactionSummaryRowChangeEvent(((TransactionSummaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TransactionSummaryRowDeleted != null)) {
                    this.TransactionSummaryRowDeleted(this, new TransactionSummaryRowChangeEvent(((TransactionSummaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TransactionSummaryRowDeleting != null)) {
                    this.TransactionSummaryRowDeleting(this, new TransactionSummaryRowChangeEvent(((TransactionSummaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveTransactionSummaryRow(TransactionSummaryRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TransactionSummaryDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class StockDetailsDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnProd_Code;
            
            private global::System.Data.DataColumn columnProd_Name;
            
            private global::System.Data.DataColumn columnDepartment_Id;
            
            private global::System.Data.DataColumn columnCategory_Id;
            
            private global::System.Data.DataColumn columnSupplier_Id;
            
            private global::System.Data.DataColumn columnDept_Name;
            
            private global::System.Data.DataColumn columnCat_Name;
            
            private global::System.Data.DataColumn columnSupp_Name;
            
            private global::System.Data.DataColumn columnManf_Name;
            
            private global::System.Data.DataColumn columnPurchase_price;
            
            private global::System.Data.DataColumn columnSelling_Price;
            
            private global::System.Data.DataColumn columnQty;
            
            private global::System.Data.DataColumn columnCodeFrom;
            
            private global::System.Data.DataColumn columnCodeTo;
            
            private global::System.Data.DataColumn columnManufacturer_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockDetailsDataTable() {
                this.TableName = "StockDetails";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal StockDetailsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected StockDetailsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Prod_CodeColumn {
                get {
                    return this.columnProd_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Prod_NameColumn {
                get {
                    return this.columnProd_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Department_IdColumn {
                get {
                    return this.columnDepartment_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Category_IdColumn {
                get {
                    return this.columnCategory_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Supplier_IdColumn {
                get {
                    return this.columnSupplier_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Dept_NameColumn {
                get {
                    return this.columnDept_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cat_NameColumn {
                get {
                    return this.columnCat_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Supp_NameColumn {
                get {
                    return this.columnSupp_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Manf_NameColumn {
                get {
                    return this.columnManf_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Purchase_priceColumn {
                get {
                    return this.columnPurchase_price;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Selling_PriceColumn {
                get {
                    return this.columnSelling_Price;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QtyColumn {
                get {
                    return this.columnQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CodeFromColumn {
                get {
                    return this.columnCodeFrom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CodeToColumn {
                get {
                    return this.columnCodeTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Manufacturer_IdColumn {
                get {
                    return this.columnManufacturer_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockDetailsRow this[int index] {
                get {
                    return ((StockDetailsRow)(this.Rows[index]));
                }
            }
            
            public event StockDetailsRowChangeEventHandler StockDetailsRowChanging;
            
            public event StockDetailsRowChangeEventHandler StockDetailsRowChanged;
            
            public event StockDetailsRowChangeEventHandler StockDetailsRowDeleting;
            
            public event StockDetailsRowChangeEventHandler StockDetailsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddStockDetailsRow(StockDetailsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockDetailsRow AddStockDetailsRow(string Prod_Code, string Prod_Name, string Department_Id, string Category_Id, string Supplier_Id, string Dept_Name, string Cat_Name, string Supp_Name, string Manf_Name, string Purchase_price, string Selling_Price, string Qty, string CodeFrom, string CodeTo, string Manufacturer_Id) {
                StockDetailsRow rowStockDetailsRow = ((StockDetailsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Prod_Code,
                        Prod_Name,
                        Department_Id,
                        Category_Id,
                        Supplier_Id,
                        Dept_Name,
                        Cat_Name,
                        Supp_Name,
                        Manf_Name,
                        Purchase_price,
                        Selling_Price,
                        Qty,
                        CodeFrom,
                        CodeTo,
                        Manufacturer_Id};
                rowStockDetailsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowStockDetailsRow);
                return rowStockDetailsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                StockDetailsDataTable cln = ((StockDetailsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new StockDetailsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnProd_Code = base.Columns["Prod_Code"];
                this.columnProd_Name = base.Columns["Prod_Name"];
                this.columnDepartment_Id = base.Columns["Department_Id"];
                this.columnCategory_Id = base.Columns["Category_Id"];
                this.columnSupplier_Id = base.Columns["Supplier_Id"];
                this.columnDept_Name = base.Columns["Dept_Name"];
                this.columnCat_Name = base.Columns["Cat_Name"];
                this.columnSupp_Name = base.Columns["Supp_Name"];
                this.columnManf_Name = base.Columns["Manf_Name"];
                this.columnPurchase_price = base.Columns["Purchase_price"];
                this.columnSelling_Price = base.Columns["Selling_Price"];
                this.columnQty = base.Columns["Qty"];
                this.columnCodeFrom = base.Columns["CodeFrom"];
                this.columnCodeTo = base.Columns["CodeTo"];
                this.columnManufacturer_Id = base.Columns["Manufacturer_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnProd_Code = new global::System.Data.DataColumn("Prod_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Code);
                this.columnProd_Name = new global::System.Data.DataColumn("Prod_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Name);
                this.columnDepartment_Id = new global::System.Data.DataColumn("Department_Id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDepartment_Id);
                this.columnCategory_Id = new global::System.Data.DataColumn("Category_Id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCategory_Id);
                this.columnSupplier_Id = new global::System.Data.DataColumn("Supplier_Id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplier_Id);
                this.columnDept_Name = new global::System.Data.DataColumn("Dept_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDept_Name);
                this.columnCat_Name = new global::System.Data.DataColumn("Cat_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCat_Name);
                this.columnSupp_Name = new global::System.Data.DataColumn("Supp_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupp_Name);
                this.columnManf_Name = new global::System.Data.DataColumn("Manf_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnManf_Name);
                this.columnPurchase_price = new global::System.Data.DataColumn("Purchase_price", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPurchase_price);
                this.columnSelling_Price = new global::System.Data.DataColumn("Selling_Price", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelling_Price);
                this.columnQty = new global::System.Data.DataColumn("Qty", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQty);
                this.columnCodeFrom = new global::System.Data.DataColumn("CodeFrom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodeFrom);
                this.columnCodeTo = new global::System.Data.DataColumn("CodeTo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodeTo);
                this.columnManufacturer_Id = new global::System.Data.DataColumn("Manufacturer_Id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnManufacturer_Id);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockDetailsRow NewStockDetailsRow() {
                return ((StockDetailsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new StockDetailsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(StockDetailsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.StockDetailsRowChanged != null)) {
                    this.StockDetailsRowChanged(this, new StockDetailsRowChangeEvent(((StockDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.StockDetailsRowChanging != null)) {
                    this.StockDetailsRowChanging(this, new StockDetailsRowChangeEvent(((StockDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.StockDetailsRowDeleted != null)) {
                    this.StockDetailsRowDeleted(this, new StockDetailsRowChangeEvent(((StockDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.StockDetailsRowDeleting != null)) {
                    this.StockDetailsRowDeleting(this, new StockDetailsRowChangeEvent(((StockDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveStockDetailsRow(StockDetailsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "StockDetailsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dsSalesDetailsDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnProd_Code;
            
            private global::System.Data.DataColumn columnProd_Name;
            
            private global::System.Data.DataColumn columnPurchase_Price;
            
            private global::System.Data.DataColumn columnSelling_Price;
            
            private global::System.Data.DataColumn columnQty;
            
            private global::System.Data.DataColumn columnLoca;
            
            private global::System.Data.DataColumn columnLoca_Descrip;
            
            private global::System.Data.DataColumn columnCodeFrom;
            
            private global::System.Data.DataColumn columnCodeTo;
            
            private global::System.Data.DataColumn columnDepartment_Id;
            
            private global::System.Data.DataColumn columnDept_Name;
            
            private global::System.Data.DataColumn columnCategory_Id;
            
            private global::System.Data.DataColumn columnCat_Name;
            
            private global::System.Data.DataColumn columnSupplier_Id;
            
            private global::System.Data.DataColumn columnSupp_Name;
            
            private global::System.Data.DataColumn columnManufacturer_Id;
            
            private global::System.Data.DataColumn columnManf_Name;
            
            private global::System.Data.DataColumn columnAmount;
            
            private global::System.Data.DataColumn columnIid;
            
            private global::System.Data.DataColumn columnDateFrom;
            
            private global::System.Data.DataColumn columnDateTo;
            
            private global::System.Data.DataColumn columnSales_Date;
            
            private global::System.Data.DataColumn columnProd_Image;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsSalesDetailsDataTable() {
                this.TableName = "dsSalesDetails";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsSalesDetailsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dsSalesDetailsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Prod_CodeColumn {
                get {
                    return this.columnProd_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Prod_NameColumn {
                get {
                    return this.columnProd_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Purchase_PriceColumn {
                get {
                    return this.columnPurchase_Price;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Selling_PriceColumn {
                get {
                    return this.columnSelling_Price;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QtyColumn {
                get {
                    return this.columnQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LocaColumn {
                get {
                    return this.columnLoca;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Loca_DescripColumn {
                get {
                    return this.columnLoca_Descrip;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CodeFromColumn {
                get {
                    return this.columnCodeFrom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CodeToColumn {
                get {
                    return this.columnCodeTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Department_IdColumn {
                get {
                    return this.columnDepartment_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Dept_NameColumn {
                get {
                    return this.columnDept_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Category_IdColumn {
                get {
                    return this.columnCategory_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cat_NameColumn {
                get {
                    return this.columnCat_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Supplier_IdColumn {
                get {
                    return this.columnSupplier_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Supp_NameColumn {
                get {
                    return this.columnSupp_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Manufacturer_IdColumn {
                get {
                    return this.columnManufacturer_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Manf_NameColumn {
                get {
                    return this.columnManf_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IidColumn {
                get {
                    return this.columnIid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateFromColumn {
                get {
                    return this.columnDateFrom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateToColumn {
                get {
                    return this.columnDateTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Sales_DateColumn {
                get {
                    return this.columnSales_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Prod_ImageColumn {
                get {
                    return this.columnProd_Image;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsSalesDetailsRow this[int index] {
                get {
                    return ((dsSalesDetailsRow)(this.Rows[index]));
                }
            }
            
            public event dsSalesDetailsRowChangeEventHandler dsSalesDetailsRowChanging;
            
            public event dsSalesDetailsRowChangeEventHandler dsSalesDetailsRowChanged;
            
            public event dsSalesDetailsRowChangeEventHandler dsSalesDetailsRowDeleting;
            
            public event dsSalesDetailsRowChangeEventHandler dsSalesDetailsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddsSalesDetailsRow(dsSalesDetailsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsSalesDetailsRow AdddsSalesDetailsRow(
                        string Prod_Code, 
                        string Prod_Name, 
                        decimal Purchase_Price, 
                        decimal Selling_Price, 
                        double Qty, 
                        string Loca, 
                        string Loca_Descrip, 
                        string CodeFrom, 
                        string CodeTo, 
                        string Department_Id, 
                        string Dept_Name, 
                        string Category_Id, 
                        string Cat_Name, 
                        string Supplier_Id, 
                        string Supp_Name, 
                        string Manufacturer_Id, 
                        string Manf_Name, 
                        decimal Amount, 
                        string Iid, 
                        string DateFrom, 
                        string DateTo, 
                        System.DateTime Sales_Date, 
                        byte[] Prod_Image) {
                dsSalesDetailsRow rowdsSalesDetailsRow = ((dsSalesDetailsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Prod_Code,
                        Prod_Name,
                        Purchase_Price,
                        Selling_Price,
                        Qty,
                        Loca,
                        Loca_Descrip,
                        CodeFrom,
                        CodeTo,
                        Department_Id,
                        Dept_Name,
                        Category_Id,
                        Cat_Name,
                        Supplier_Id,
                        Supp_Name,
                        Manufacturer_Id,
                        Manf_Name,
                        Amount,
                        Iid,
                        DateFrom,
                        DateTo,
                        Sales_Date,
                        Prod_Image};
                rowdsSalesDetailsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdsSalesDetailsRow);
                return rowdsSalesDetailsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dsSalesDetailsDataTable cln = ((dsSalesDetailsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dsSalesDetailsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnProd_Code = base.Columns["Prod_Code"];
                this.columnProd_Name = base.Columns["Prod_Name"];
                this.columnPurchase_Price = base.Columns["Purchase_Price"];
                this.columnSelling_Price = base.Columns["Selling_Price"];
                this.columnQty = base.Columns["Qty"];
                this.columnLoca = base.Columns["Loca"];
                this.columnLoca_Descrip = base.Columns["Loca_Descrip"];
                this.columnCodeFrom = base.Columns["CodeFrom"];
                this.columnCodeTo = base.Columns["CodeTo"];
                this.columnDepartment_Id = base.Columns["Department_Id"];
                this.columnDept_Name = base.Columns["Dept_Name"];
                this.columnCategory_Id = base.Columns["Category_Id"];
                this.columnCat_Name = base.Columns["Cat_Name"];
                this.columnSupplier_Id = base.Columns["Supplier_Id"];
                this.columnSupp_Name = base.Columns["Supp_Name"];
                this.columnManufacturer_Id = base.Columns["Manufacturer_Id"];
                this.columnManf_Name = base.Columns["Manf_Name"];
                this.columnAmount = base.Columns["Amount"];
                this.columnIid = base.Columns["Iid"];
                this.columnDateFrom = base.Columns["DateFrom"];
                this.columnDateTo = base.Columns["DateTo"];
                this.columnSales_Date = base.Columns["Sales_Date"];
                this.columnProd_Image = base.Columns["Prod_Image"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnProd_Code = new global::System.Data.DataColumn("Prod_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Code);
                this.columnProd_Name = new global::System.Data.DataColumn("Prod_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Name);
                this.columnPurchase_Price = new global::System.Data.DataColumn("Purchase_Price", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPurchase_Price);
                this.columnSelling_Price = new global::System.Data.DataColumn("Selling_Price", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelling_Price);
                this.columnQty = new global::System.Data.DataColumn("Qty", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQty);
                this.columnLoca = new global::System.Data.DataColumn("Loca", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoca);
                this.columnLoca_Descrip = new global::System.Data.DataColumn("Loca_Descrip", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoca_Descrip);
                this.columnCodeFrom = new global::System.Data.DataColumn("CodeFrom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodeFrom);
                this.columnCodeTo = new global::System.Data.DataColumn("CodeTo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodeTo);
                this.columnDepartment_Id = new global::System.Data.DataColumn("Department_Id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDepartment_Id);
                this.columnDept_Name = new global::System.Data.DataColumn("Dept_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDept_Name);
                this.columnCategory_Id = new global::System.Data.DataColumn("Category_Id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCategory_Id);
                this.columnCat_Name = new global::System.Data.DataColumn("Cat_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCat_Name);
                this.columnSupplier_Id = new global::System.Data.DataColumn("Supplier_Id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplier_Id);
                this.columnSupp_Name = new global::System.Data.DataColumn("Supp_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupp_Name);
                this.columnManufacturer_Id = new global::System.Data.DataColumn("Manufacturer_Id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnManufacturer_Id);
                this.columnManf_Name = new global::System.Data.DataColumn("Manf_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnManf_Name);
                this.columnAmount = new global::System.Data.DataColumn("Amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
                this.columnIid = new global::System.Data.DataColumn("Iid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIid);
                this.columnDateFrom = new global::System.Data.DataColumn("DateFrom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateFrom);
                this.columnDateTo = new global::System.Data.DataColumn("DateTo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateTo);
                this.columnSales_Date = new global::System.Data.DataColumn("Sales_Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSales_Date);
                this.columnProd_Image = new global::System.Data.DataColumn("Prod_Image", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Image);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsSalesDetailsRow NewdsSalesDetailsRow() {
                return ((dsSalesDetailsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dsSalesDetailsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dsSalesDetailsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dsSalesDetailsRowChanged != null)) {
                    this.dsSalesDetailsRowChanged(this, new dsSalesDetailsRowChangeEvent(((dsSalesDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dsSalesDetailsRowChanging != null)) {
                    this.dsSalesDetailsRowChanging(this, new dsSalesDetailsRowChangeEvent(((dsSalesDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dsSalesDetailsRowDeleted != null)) {
                    this.dsSalesDetailsRowDeleted(this, new dsSalesDetailsRowChangeEvent(((dsSalesDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dsSalesDetailsRowDeleting != null)) {
                    this.dsSalesDetailsRowDeleting(this, new dsSalesDetailsRowChangeEvent(((dsSalesDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedsSalesDetailsRow(dsSalesDetailsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dsSalesDetailsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tbReportMonthlyAnalyseDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnMonth_Name;
            
            private global::System.Data.DataColumn columnSale_Amount;
            
            private global::System.Data.DataColumn columnPurch_amount;
            
            private global::System.Data.DataColumn columnidx;
            
            private global::System.Data.DataColumn columnSale_Qty;
            
            private global::System.Data.DataColumn columnPurch_Qty;
            
            private global::System.Data.DataColumn columnProd_Code;
            
            private global::System.Data.DataColumn columnProd_Name;
            
            private global::System.Data.DataColumn columnDateFrom;
            
            private global::System.Data.DataColumn columnDateTo;
            
            private global::System.Data.DataColumn columnProfit_Amount;
            
            private global::System.Data.DataColumn columnTr_Date;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tbReportMonthlyAnalyseDataTable() {
                this.TableName = "tbReportMonthlyAnalyse";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tbReportMonthlyAnalyseDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tbReportMonthlyAnalyseDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Month_NameColumn {
                get {
                    return this.columnMonth_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Sale_AmountColumn {
                get {
                    return this.columnSale_Amount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Purch_amountColumn {
                get {
                    return this.columnPurch_amount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idxColumn {
                get {
                    return this.columnidx;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Sale_QtyColumn {
                get {
                    return this.columnSale_Qty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Purch_QtyColumn {
                get {
                    return this.columnPurch_Qty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Prod_CodeColumn {
                get {
                    return this.columnProd_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Prod_NameColumn {
                get {
                    return this.columnProd_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateFromColumn {
                get {
                    return this.columnDateFrom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateToColumn {
                get {
                    return this.columnDateTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Profit_AmountColumn {
                get {
                    return this.columnProfit_Amount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Tr_DateColumn {
                get {
                    return this.columnTr_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tbReportMonthlyAnalyseRow this[int index] {
                get {
                    return ((tbReportMonthlyAnalyseRow)(this.Rows[index]));
                }
            }
            
            public event tbReportMonthlyAnalyseRowChangeEventHandler tbReportMonthlyAnalyseRowChanging;
            
            public event tbReportMonthlyAnalyseRowChangeEventHandler tbReportMonthlyAnalyseRowChanged;
            
            public event tbReportMonthlyAnalyseRowChangeEventHandler tbReportMonthlyAnalyseRowDeleting;
            
            public event tbReportMonthlyAnalyseRowChangeEventHandler tbReportMonthlyAnalyseRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtbReportMonthlyAnalyseRow(tbReportMonthlyAnalyseRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tbReportMonthlyAnalyseRow AddtbReportMonthlyAnalyseRow(string Month_Name, double Sale_Amount, double Purch_amount, string idx, decimal Sale_Qty, decimal Purch_Qty, string Prod_Code, string Prod_Name, string DateFrom, string DateTo, string Profit_Amount, System.DateTime Tr_Date) {
                tbReportMonthlyAnalyseRow rowtbReportMonthlyAnalyseRow = ((tbReportMonthlyAnalyseRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Month_Name,
                        Sale_Amount,
                        Purch_amount,
                        idx,
                        Sale_Qty,
                        Purch_Qty,
                        Prod_Code,
                        Prod_Name,
                        DateFrom,
                        DateTo,
                        Profit_Amount,
                        Tr_Date};
                rowtbReportMonthlyAnalyseRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtbReportMonthlyAnalyseRow);
                return rowtbReportMonthlyAnalyseRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tbReportMonthlyAnalyseDataTable cln = ((tbReportMonthlyAnalyseDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tbReportMonthlyAnalyseDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMonth_Name = base.Columns["Month_Name"];
                this.columnSale_Amount = base.Columns["Sale_Amount"];
                this.columnPurch_amount = base.Columns["Purch_amount"];
                this.columnidx = base.Columns["idx"];
                this.columnSale_Qty = base.Columns["Sale_Qty"];
                this.columnPurch_Qty = base.Columns["Purch_Qty"];
                this.columnProd_Code = base.Columns["Prod_Code"];
                this.columnProd_Name = base.Columns["Prod_Name"];
                this.columnDateFrom = base.Columns["DateFrom"];
                this.columnDateTo = base.Columns["DateTo"];
                this.columnProfit_Amount = base.Columns["Profit_Amount"];
                this.columnTr_Date = base.Columns["Tr_Date"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMonth_Name = new global::System.Data.DataColumn("Month_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMonth_Name);
                this.columnSale_Amount = new global::System.Data.DataColumn("Sale_Amount", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSale_Amount);
                this.columnPurch_amount = new global::System.Data.DataColumn("Purch_amount", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPurch_amount);
                this.columnidx = new global::System.Data.DataColumn("idx", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnidx);
                this.columnSale_Qty = new global::System.Data.DataColumn("Sale_Qty", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSale_Qty);
                this.columnPurch_Qty = new global::System.Data.DataColumn("Purch_Qty", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPurch_Qty);
                this.columnProd_Code = new global::System.Data.DataColumn("Prod_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Code);
                this.columnProd_Name = new global::System.Data.DataColumn("Prod_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Name);
                this.columnDateFrom = new global::System.Data.DataColumn("DateFrom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateFrom);
                this.columnDateTo = new global::System.Data.DataColumn("DateTo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateTo);
                this.columnProfit_Amount = new global::System.Data.DataColumn("Profit_Amount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProfit_Amount);
                this.columnTr_Date = new global::System.Data.DataColumn("Tr_Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTr_Date);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tbReportMonthlyAnalyseRow NewtbReportMonthlyAnalyseRow() {
                return ((tbReportMonthlyAnalyseRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tbReportMonthlyAnalyseRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tbReportMonthlyAnalyseRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tbReportMonthlyAnalyseRowChanged != null)) {
                    this.tbReportMonthlyAnalyseRowChanged(this, new tbReportMonthlyAnalyseRowChangeEvent(((tbReportMonthlyAnalyseRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tbReportMonthlyAnalyseRowChanging != null)) {
                    this.tbReportMonthlyAnalyseRowChanging(this, new tbReportMonthlyAnalyseRowChangeEvent(((tbReportMonthlyAnalyseRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tbReportMonthlyAnalyseRowDeleted != null)) {
                    this.tbReportMonthlyAnalyseRowDeleted(this, new tbReportMonthlyAnalyseRowChangeEvent(((tbReportMonthlyAnalyseRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tbReportMonthlyAnalyseRowDeleting != null)) {
                    this.tbReportMonthlyAnalyseRowDeleting(this, new tbReportMonthlyAnalyseRowChangeEvent(((tbReportMonthlyAnalyseRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetbReportMonthlyAnalyseRow(tbReportMonthlyAnalyseRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tbReportMonthlyAnalyseDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CollectionDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnCode;
            
            private global::System.Data.DataColumn columnName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CollectionDataTable() {
                this.TableName = "Collection";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CollectionDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CollectionDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CodeColumn {
                get {
                    return this.columnCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CollectionRow this[int index] {
                get {
                    return ((CollectionRow)(this.Rows[index]));
                }
            }
            
            public event CollectionRowChangeEventHandler CollectionRowChanging;
            
            public event CollectionRowChangeEventHandler CollectionRowChanged;
            
            public event CollectionRowChangeEventHandler CollectionRowDeleting;
            
            public event CollectionRowChangeEventHandler CollectionRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCollectionRow(CollectionRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CollectionRow AddCollectionRow(string Code, string Name) {
                CollectionRow rowCollectionRow = ((CollectionRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Code,
                        Name};
                rowCollectionRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCollectionRow);
                return rowCollectionRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                CollectionDataTable cln = ((CollectionDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CollectionDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCode = base.Columns["Code"];
                this.columnName = base.Columns["Name"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCode = new global::System.Data.DataColumn("Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCode);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CollectionRow NewCollectionRow() {
                return ((CollectionRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CollectionRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(CollectionRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CollectionRowChanged != null)) {
                    this.CollectionRowChanged(this, new CollectionRowChangeEvent(((CollectionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CollectionRowChanging != null)) {
                    this.CollectionRowChanging(this, new CollectionRowChangeEvent(((CollectionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CollectionRowDeleted != null)) {
                    this.CollectionRowDeleted(this, new CollectionRowChangeEvent(((CollectionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CollectionRowDeleting != null)) {
                    this.CollectionRowDeleting(this, new CollectionRowChangeEvent(((CollectionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCollectionRow(CollectionRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CollectionDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SelectedDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnCode;
            
            private global::System.Data.DataColumn columnName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SelectedDataTable() {
                this.TableName = "Selected";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SelectedDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected SelectedDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CodeColumn {
                get {
                    return this.columnCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SelectedRow this[int index] {
                get {
                    return ((SelectedRow)(this.Rows[index]));
                }
            }
            
            public event SelectedRowChangeEventHandler SelectedRowChanging;
            
            public event SelectedRowChangeEventHandler SelectedRowChanged;
            
            public event SelectedRowChangeEventHandler SelectedRowDeleting;
            
            public event SelectedRowChangeEventHandler SelectedRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSelectedRow(SelectedRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SelectedRow AddSelectedRow(string Code, string Name) {
                SelectedRow rowSelectedRow = ((SelectedRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Code,
                        Name};
                rowSelectedRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSelectedRow);
                return rowSelectedRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                SelectedDataTable cln = ((SelectedDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SelectedDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCode = base.Columns["Code"];
                this.columnName = base.Columns["Name"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCode = new global::System.Data.DataColumn("Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCode);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SelectedRow NewSelectedRow() {
                return ((SelectedRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SelectedRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(SelectedRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SelectedRowChanged != null)) {
                    this.SelectedRowChanged(this, new SelectedRowChangeEvent(((SelectedRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SelectedRowChanging != null)) {
                    this.SelectedRowChanging(this, new SelectedRowChangeEvent(((SelectedRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SelectedRowDeleted != null)) {
                    this.SelectedRowDeleted(this, new SelectedRowChangeEvent(((SelectedRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SelectedRowDeleting != null)) {
                    this.SelectedRowDeleting(this, new SelectedRowChangeEvent(((SelectedRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSelectedRow(SelectedRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SelectedDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dsPurchasingDetailsDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnProd_Code;
            
            private global::System.Data.DataColumn columnProd_Name;
            
            private global::System.Data.DataColumn columnPurchase_Price;
            
            private global::System.Data.DataColumn columnSelling_Price;
            
            private global::System.Data.DataColumn columnQty;
            
            private global::System.Data.DataColumn columnLoca;
            
            private global::System.Data.DataColumn columnLoca_Descrip;
            
            private global::System.Data.DataColumn columnCodeFrom;
            
            private global::System.Data.DataColumn columnCodeTo;
            
            private global::System.Data.DataColumn columnDepartment_Id;
            
            private global::System.Data.DataColumn columnDept_Name;
            
            private global::System.Data.DataColumn columnCategory_Id;
            
            private global::System.Data.DataColumn columnCat_Name;
            
            private global::System.Data.DataColumn columnSupplier_Id;
            
            private global::System.Data.DataColumn columnSupp_Name;
            
            private global::System.Data.DataColumn columnManufacturer_Id;
            
            private global::System.Data.DataColumn columnManf_Name;
            
            private global::System.Data.DataColumn columnAmount;
            
            private global::System.Data.DataColumn columnDateFrom;
            
            private global::System.Data.DataColumn columnDateTo;
            
            private global::System.Data.DataColumn columnPurch_Date;
            
            private global::System.Data.DataColumn columnDoc_No;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsPurchasingDetailsDataTable() {
                this.TableName = "dsPurchasingDetails";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsPurchasingDetailsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dsPurchasingDetailsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Prod_CodeColumn {
                get {
                    return this.columnProd_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Prod_NameColumn {
                get {
                    return this.columnProd_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Purchase_PriceColumn {
                get {
                    return this.columnPurchase_Price;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Selling_PriceColumn {
                get {
                    return this.columnSelling_Price;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QtyColumn {
                get {
                    return this.columnQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LocaColumn {
                get {
                    return this.columnLoca;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Loca_DescripColumn {
                get {
                    return this.columnLoca_Descrip;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CodeFromColumn {
                get {
                    return this.columnCodeFrom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CodeToColumn {
                get {
                    return this.columnCodeTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Department_IdColumn {
                get {
                    return this.columnDepartment_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Dept_NameColumn {
                get {
                    return this.columnDept_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Category_IdColumn {
                get {
                    return this.columnCategory_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cat_NameColumn {
                get {
                    return this.columnCat_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Supplier_IdColumn {
                get {
                    return this.columnSupplier_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Supp_NameColumn {
                get {
                    return this.columnSupp_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Manufacturer_IdColumn {
                get {
                    return this.columnManufacturer_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Manf_NameColumn {
                get {
                    return this.columnManf_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateFromColumn {
                get {
                    return this.columnDateFrom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateToColumn {
                get {
                    return this.columnDateTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Purch_DateColumn {
                get {
                    return this.columnPurch_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Doc_NoColumn {
                get {
                    return this.columnDoc_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsPurchasingDetailsRow this[int index] {
                get {
                    return ((dsPurchasingDetailsRow)(this.Rows[index]));
                }
            }
            
            public event dsPurchasingDetailsRowChangeEventHandler dsPurchasingDetailsRowChanging;
            
            public event dsPurchasingDetailsRowChangeEventHandler dsPurchasingDetailsRowChanged;
            
            public event dsPurchasingDetailsRowChangeEventHandler dsPurchasingDetailsRowDeleting;
            
            public event dsPurchasingDetailsRowChangeEventHandler dsPurchasingDetailsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddsPurchasingDetailsRow(dsPurchasingDetailsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsPurchasingDetailsRow AdddsPurchasingDetailsRow(
                        string Prod_Code, 
                        string Prod_Name, 
                        decimal Purchase_Price, 
                        decimal Selling_Price, 
                        double Qty, 
                        string Loca, 
                        string Loca_Descrip, 
                        string CodeFrom, 
                        string CodeTo, 
                        string Department_Id, 
                        string Dept_Name, 
                        string Category_Id, 
                        string Cat_Name, 
                        string Supplier_Id, 
                        string Supp_Name, 
                        string Manufacturer_Id, 
                        string Manf_Name, 
                        decimal Amount, 
                        string DateFrom, 
                        string DateTo, 
                        string Purch_Date, 
                        string Doc_No) {
                dsPurchasingDetailsRow rowdsPurchasingDetailsRow = ((dsPurchasingDetailsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Prod_Code,
                        Prod_Name,
                        Purchase_Price,
                        Selling_Price,
                        Qty,
                        Loca,
                        Loca_Descrip,
                        CodeFrom,
                        CodeTo,
                        Department_Id,
                        Dept_Name,
                        Category_Id,
                        Cat_Name,
                        Supplier_Id,
                        Supp_Name,
                        Manufacturer_Id,
                        Manf_Name,
                        Amount,
                        DateFrom,
                        DateTo,
                        Purch_Date,
                        Doc_No};
                rowdsPurchasingDetailsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdsPurchasingDetailsRow);
                return rowdsPurchasingDetailsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dsPurchasingDetailsDataTable cln = ((dsPurchasingDetailsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dsPurchasingDetailsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnProd_Code = base.Columns["Prod_Code"];
                this.columnProd_Name = base.Columns["Prod_Name"];
                this.columnPurchase_Price = base.Columns["Purchase_Price"];
                this.columnSelling_Price = base.Columns["Selling_Price"];
                this.columnQty = base.Columns["Qty"];
                this.columnLoca = base.Columns["Loca"];
                this.columnLoca_Descrip = base.Columns["Loca_Descrip"];
                this.columnCodeFrom = base.Columns["CodeFrom"];
                this.columnCodeTo = base.Columns["CodeTo"];
                this.columnDepartment_Id = base.Columns["Department_Id"];
                this.columnDept_Name = base.Columns["Dept_Name"];
                this.columnCategory_Id = base.Columns["Category_Id"];
                this.columnCat_Name = base.Columns["Cat_Name"];
                this.columnSupplier_Id = base.Columns["Supplier_Id"];
                this.columnSupp_Name = base.Columns["Supp_Name"];
                this.columnManufacturer_Id = base.Columns["Manufacturer_Id"];
                this.columnManf_Name = base.Columns["Manf_Name"];
                this.columnAmount = base.Columns["Amount"];
                this.columnDateFrom = base.Columns["DateFrom"];
                this.columnDateTo = base.Columns["DateTo"];
                this.columnPurch_Date = base.Columns["Purch_Date"];
                this.columnDoc_No = base.Columns["Doc_No"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnProd_Code = new global::System.Data.DataColumn("Prod_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Code);
                this.columnProd_Name = new global::System.Data.DataColumn("Prod_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Name);
                this.columnPurchase_Price = new global::System.Data.DataColumn("Purchase_Price", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPurchase_Price);
                this.columnSelling_Price = new global::System.Data.DataColumn("Selling_Price", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelling_Price);
                this.columnQty = new global::System.Data.DataColumn("Qty", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQty);
                this.columnLoca = new global::System.Data.DataColumn("Loca", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoca);
                this.columnLoca_Descrip = new global::System.Data.DataColumn("Loca_Descrip", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoca_Descrip);
                this.columnCodeFrom = new global::System.Data.DataColumn("CodeFrom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodeFrom);
                this.columnCodeTo = new global::System.Data.DataColumn("CodeTo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodeTo);
                this.columnDepartment_Id = new global::System.Data.DataColumn("Department_Id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDepartment_Id);
                this.columnDept_Name = new global::System.Data.DataColumn("Dept_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDept_Name);
                this.columnCategory_Id = new global::System.Data.DataColumn("Category_Id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCategory_Id);
                this.columnCat_Name = new global::System.Data.DataColumn("Cat_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCat_Name);
                this.columnSupplier_Id = new global::System.Data.DataColumn("Supplier_Id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplier_Id);
                this.columnSupp_Name = new global::System.Data.DataColumn("Supp_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupp_Name);
                this.columnManufacturer_Id = new global::System.Data.DataColumn("Manufacturer_Id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnManufacturer_Id);
                this.columnManf_Name = new global::System.Data.DataColumn("Manf_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnManf_Name);
                this.columnAmount = new global::System.Data.DataColumn("Amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
                this.columnDateFrom = new global::System.Data.DataColumn("DateFrom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateFrom);
                this.columnDateTo = new global::System.Data.DataColumn("DateTo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateTo);
                this.columnPurch_Date = new global::System.Data.DataColumn("Purch_Date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPurch_Date);
                this.columnDoc_No = new global::System.Data.DataColumn("Doc_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDoc_No);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsPurchasingDetailsRow NewdsPurchasingDetailsRow() {
                return ((dsPurchasingDetailsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dsPurchasingDetailsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dsPurchasingDetailsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dsPurchasingDetailsRowChanged != null)) {
                    this.dsPurchasingDetailsRowChanged(this, new dsPurchasingDetailsRowChangeEvent(((dsPurchasingDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dsPurchasingDetailsRowChanging != null)) {
                    this.dsPurchasingDetailsRowChanging(this, new dsPurchasingDetailsRowChangeEvent(((dsPurchasingDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dsPurchasingDetailsRowDeleted != null)) {
                    this.dsPurchasingDetailsRowDeleted(this, new dsPurchasingDetailsRowChangeEvent(((dsPurchasingDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dsPurchasingDetailsRowDeleting != null)) {
                    this.dsPurchasingDetailsRowDeleting(this, new dsPurchasingDetailsRowChangeEvent(((dsPurchasingDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedsPurchasingDetailsRow(dsPurchasingDetailsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dsPurchasingDetailsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dsAnalyseDataDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnProd_Code;
            
            private global::System.Data.DataColumn columnProd_Name;
            
            private global::System.Data.DataColumn columnPurchase_price;
            
            private global::System.Data.DataColumn columnSelling_Price;
            
            private global::System.Data.DataColumn columnPurch_Amount;
            
            private global::System.Data.DataColumn columnSel_Amount;
            
            private global::System.Data.DataColumn columnPro_Amount;
            
            private global::System.Data.DataColumn columnTr_Date;
            
            private global::System.Data.DataColumn columnSel_Qty;
            
            private global::System.Data.DataColumn columnDateFrom;
            
            private global::System.Data.DataColumn columnDateTo;
            
            private global::System.Data.DataColumn columnQty;
            
            private global::System.Data.DataColumn columnPur_Qty;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsAnalyseDataDataTable() {
                this.TableName = "dsAnalyseData";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsAnalyseDataDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dsAnalyseDataDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Prod_CodeColumn {
                get {
                    return this.columnProd_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Prod_NameColumn {
                get {
                    return this.columnProd_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Purchase_priceColumn {
                get {
                    return this.columnPurchase_price;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Selling_PriceColumn {
                get {
                    return this.columnSelling_Price;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Purch_AmountColumn {
                get {
                    return this.columnPurch_Amount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Sel_AmountColumn {
                get {
                    return this.columnSel_Amount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Pro_AmountColumn {
                get {
                    return this.columnPro_Amount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Tr_DateColumn {
                get {
                    return this.columnTr_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Sel_QtyColumn {
                get {
                    return this.columnSel_Qty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateFromColumn {
                get {
                    return this.columnDateFrom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateToColumn {
                get {
                    return this.columnDateTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QtyColumn {
                get {
                    return this.columnQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Pur_QtyColumn {
                get {
                    return this.columnPur_Qty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsAnalyseDataRow this[int index] {
                get {
                    return ((dsAnalyseDataRow)(this.Rows[index]));
                }
            }
            
            public event dsAnalyseDataRowChangeEventHandler dsAnalyseDataRowChanging;
            
            public event dsAnalyseDataRowChangeEventHandler dsAnalyseDataRowChanged;
            
            public event dsAnalyseDataRowChangeEventHandler dsAnalyseDataRowDeleting;
            
            public event dsAnalyseDataRowChangeEventHandler dsAnalyseDataRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddsAnalyseDataRow(dsAnalyseDataRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsAnalyseDataRow AdddsAnalyseDataRow(string Prod_Code, string Prod_Name, decimal Purchase_price, decimal Selling_Price, decimal Purch_Amount, decimal Sel_Amount, decimal Pro_Amount, string Tr_Date, double Sel_Qty, string DateFrom, string DateTo, double Qty, double Pur_Qty) {
                dsAnalyseDataRow rowdsAnalyseDataRow = ((dsAnalyseDataRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Prod_Code,
                        Prod_Name,
                        Purchase_price,
                        Selling_Price,
                        Purch_Amount,
                        Sel_Amount,
                        Pro_Amount,
                        Tr_Date,
                        Sel_Qty,
                        DateFrom,
                        DateTo,
                        Qty,
                        Pur_Qty};
                rowdsAnalyseDataRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdsAnalyseDataRow);
                return rowdsAnalyseDataRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dsAnalyseDataDataTable cln = ((dsAnalyseDataDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dsAnalyseDataDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnProd_Code = base.Columns["Prod_Code"];
                this.columnProd_Name = base.Columns["Prod_Name"];
                this.columnPurchase_price = base.Columns["Purchase_price"];
                this.columnSelling_Price = base.Columns["Selling_Price"];
                this.columnPurch_Amount = base.Columns["Purch_Amount"];
                this.columnSel_Amount = base.Columns["Sel_Amount"];
                this.columnPro_Amount = base.Columns["Pro_Amount"];
                this.columnTr_Date = base.Columns["Tr_Date"];
                this.columnSel_Qty = base.Columns["Sel_Qty"];
                this.columnDateFrom = base.Columns["DateFrom"];
                this.columnDateTo = base.Columns["DateTo"];
                this.columnQty = base.Columns["Qty"];
                this.columnPur_Qty = base.Columns["Pur_Qty"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnProd_Code = new global::System.Data.DataColumn("Prod_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Code);
                this.columnProd_Name = new global::System.Data.DataColumn("Prod_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Name);
                this.columnPurchase_price = new global::System.Data.DataColumn("Purchase_price", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPurchase_price);
                this.columnSelling_Price = new global::System.Data.DataColumn("Selling_Price", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelling_Price);
                this.columnPurch_Amount = new global::System.Data.DataColumn("Purch_Amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPurch_Amount);
                this.columnSel_Amount = new global::System.Data.DataColumn("Sel_Amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSel_Amount);
                this.columnPro_Amount = new global::System.Data.DataColumn("Pro_Amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPro_Amount);
                this.columnTr_Date = new global::System.Data.DataColumn("Tr_Date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTr_Date);
                this.columnSel_Qty = new global::System.Data.DataColumn("Sel_Qty", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSel_Qty);
                this.columnDateFrom = new global::System.Data.DataColumn("DateFrom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateFrom);
                this.columnDateTo = new global::System.Data.DataColumn("DateTo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateTo);
                this.columnQty = new global::System.Data.DataColumn("Qty", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQty);
                this.columnPur_Qty = new global::System.Data.DataColumn("Pur_Qty", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPur_Qty);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsAnalyseDataRow NewdsAnalyseDataRow() {
                return ((dsAnalyseDataRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dsAnalyseDataRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dsAnalyseDataRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dsAnalyseDataRowChanged != null)) {
                    this.dsAnalyseDataRowChanged(this, new dsAnalyseDataRowChangeEvent(((dsAnalyseDataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dsAnalyseDataRowChanging != null)) {
                    this.dsAnalyseDataRowChanging(this, new dsAnalyseDataRowChangeEvent(((dsAnalyseDataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dsAnalyseDataRowDeleted != null)) {
                    this.dsAnalyseDataRowDeleted(this, new dsAnalyseDataRowChangeEvent(((dsAnalyseDataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dsAnalyseDataRowDeleting != null)) {
                    this.dsAnalyseDataRowDeleting(this, new dsAnalyseDataRowChangeEvent(((dsAnalyseDataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedsAnalyseDataRow(dsAnalyseDataRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dsAnalyseDataDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dsProductBinCardDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnProd_Code;
            
            private global::System.Data.DataColumn columnQty;
            
            private global::System.Data.DataColumn columnIid;
            
            private global::System.Data.DataColumn columnLoca;
            
            private global::System.Data.DataColumn columnTo_Loca;
            
            private global::System.Data.DataColumn columnDoc_No;
            
            private global::System.Data.DataColumn columnPost_Date;
            
            private global::System.Data.DataColumn columnInsertDate;
            
            private global::System.Data.DataColumn columnTrId;
            
            private global::System.Data.DataColumn columnProd_Name;
            
            private global::System.Data.DataColumn columnPurchase_Price;
            
            private global::System.Data.DataColumn columnSelling_Price;
            
            private global::System.Data.DataColumn columnLoca_Descrip;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsProductBinCardDataTable() {
                this.TableName = "dsProductBinCard";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsProductBinCardDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dsProductBinCardDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Prod_CodeColumn {
                get {
                    return this.columnProd_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QtyColumn {
                get {
                    return this.columnQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IidColumn {
                get {
                    return this.columnIid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LocaColumn {
                get {
                    return this.columnLoca;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn To_LocaColumn {
                get {
                    return this.columnTo_Loca;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Doc_NoColumn {
                get {
                    return this.columnDoc_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Post_DateColumn {
                get {
                    return this.columnPost_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertDateColumn {
                get {
                    return this.columnInsertDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TrIdColumn {
                get {
                    return this.columnTrId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Prod_NameColumn {
                get {
                    return this.columnProd_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Purchase_PriceColumn {
                get {
                    return this.columnPurchase_Price;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Selling_PriceColumn {
                get {
                    return this.columnSelling_Price;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Loca_DescripColumn {
                get {
                    return this.columnLoca_Descrip;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsProductBinCardRow this[int index] {
                get {
                    return ((dsProductBinCardRow)(this.Rows[index]));
                }
            }
            
            public event dsProductBinCardRowChangeEventHandler dsProductBinCardRowChanging;
            
            public event dsProductBinCardRowChangeEventHandler dsProductBinCardRowChanged;
            
            public event dsProductBinCardRowChangeEventHandler dsProductBinCardRowDeleting;
            
            public event dsProductBinCardRowChangeEventHandler dsProductBinCardRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddsProductBinCardRow(dsProductBinCardRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsProductBinCardRow AdddsProductBinCardRow(string Prod_Code, double Qty, string Iid, string Loca, string To_Loca, string Doc_No, System.DateTime Post_Date, System.DateTime InsertDate, string TrId, string Prod_Name, decimal Purchase_Price, decimal Selling_Price, string Loca_Descrip) {
                dsProductBinCardRow rowdsProductBinCardRow = ((dsProductBinCardRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Prod_Code,
                        Qty,
                        Iid,
                        Loca,
                        To_Loca,
                        Doc_No,
                        Post_Date,
                        InsertDate,
                        TrId,
                        Prod_Name,
                        Purchase_Price,
                        Selling_Price,
                        Loca_Descrip};
                rowdsProductBinCardRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdsProductBinCardRow);
                return rowdsProductBinCardRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dsProductBinCardDataTable cln = ((dsProductBinCardDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dsProductBinCardDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnProd_Code = base.Columns["Prod_Code"];
                this.columnQty = base.Columns["Qty"];
                this.columnIid = base.Columns["Iid"];
                this.columnLoca = base.Columns["Loca"];
                this.columnTo_Loca = base.Columns["To_Loca"];
                this.columnDoc_No = base.Columns["Doc_No"];
                this.columnPost_Date = base.Columns["Post_Date"];
                this.columnInsertDate = base.Columns["InsertDate"];
                this.columnTrId = base.Columns["TrId"];
                this.columnProd_Name = base.Columns["Prod_Name"];
                this.columnPurchase_Price = base.Columns["Purchase_Price"];
                this.columnSelling_Price = base.Columns["Selling_Price"];
                this.columnLoca_Descrip = base.Columns["Loca_Descrip"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnProd_Code = new global::System.Data.DataColumn("Prod_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Code);
                this.columnQty = new global::System.Data.DataColumn("Qty", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQty);
                this.columnIid = new global::System.Data.DataColumn("Iid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIid);
                this.columnLoca = new global::System.Data.DataColumn("Loca", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoca);
                this.columnTo_Loca = new global::System.Data.DataColumn("To_Loca", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTo_Loca);
                this.columnDoc_No = new global::System.Data.DataColumn("Doc_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDoc_No);
                this.columnPost_Date = new global::System.Data.DataColumn("Post_Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPost_Date);
                this.columnInsertDate = new global::System.Data.DataColumn("InsertDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertDate);
                this.columnTrId = new global::System.Data.DataColumn("TrId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTrId);
                this.columnProd_Name = new global::System.Data.DataColumn("Prod_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Name);
                this.columnPurchase_Price = new global::System.Data.DataColumn("Purchase_Price", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPurchase_Price);
                this.columnSelling_Price = new global::System.Data.DataColumn("Selling_Price", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelling_Price);
                this.columnLoca_Descrip = new global::System.Data.DataColumn("Loca_Descrip", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoca_Descrip);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsProductBinCardRow NewdsProductBinCardRow() {
                return ((dsProductBinCardRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dsProductBinCardRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dsProductBinCardRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dsProductBinCardRowChanged != null)) {
                    this.dsProductBinCardRowChanged(this, new dsProductBinCardRowChangeEvent(((dsProductBinCardRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dsProductBinCardRowChanging != null)) {
                    this.dsProductBinCardRowChanging(this, new dsProductBinCardRowChangeEvent(((dsProductBinCardRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dsProductBinCardRowDeleted != null)) {
                    this.dsProductBinCardRowDeleted(this, new dsProductBinCardRowChangeEvent(((dsProductBinCardRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dsProductBinCardRowDeleting != null)) {
                    this.dsProductBinCardRowDeleting(this, new dsProductBinCardRowChangeEvent(((dsProductBinCardRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedsProductBinCardRow(dsProductBinCardRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dsProductBinCardDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dsBarcodeDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnProd_Code;
            
            private global::System.Data.DataColumn columnProd_Name;
            
            private global::System.Data.DataColumn columnSelling_Price;
            
            private global::System.Data.DataColumn columnQty;
            
            private global::System.Data.DataColumn columnSupp_Code;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsBarcodeDataTable() {
                this.TableName = "dsBarcode";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsBarcodeDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dsBarcodeDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Prod_CodeColumn {
                get {
                    return this.columnProd_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Prod_NameColumn {
                get {
                    return this.columnProd_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Selling_PriceColumn {
                get {
                    return this.columnSelling_Price;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QtyColumn {
                get {
                    return this.columnQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Supp_CodeColumn {
                get {
                    return this.columnSupp_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsBarcodeRow this[int index] {
                get {
                    return ((dsBarcodeRow)(this.Rows[index]));
                }
            }
            
            public event dsBarcodeRowChangeEventHandler dsBarcodeRowChanging;
            
            public event dsBarcodeRowChangeEventHandler dsBarcodeRowChanged;
            
            public event dsBarcodeRowChangeEventHandler dsBarcodeRowDeleting;
            
            public event dsBarcodeRowChangeEventHandler dsBarcodeRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddsBarcodeRow(dsBarcodeRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsBarcodeRow AdddsBarcodeRow(string Prod_Code, string Prod_Name, decimal Selling_Price, double Qty, string Supp_Code) {
                dsBarcodeRow rowdsBarcodeRow = ((dsBarcodeRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Prod_Code,
                        Prod_Name,
                        Selling_Price,
                        Qty,
                        Supp_Code};
                rowdsBarcodeRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdsBarcodeRow);
                return rowdsBarcodeRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dsBarcodeDataTable cln = ((dsBarcodeDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dsBarcodeDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnProd_Code = base.Columns["Prod_Code"];
                this.columnProd_Name = base.Columns["Prod_Name"];
                this.columnSelling_Price = base.Columns["Selling_Price"];
                this.columnQty = base.Columns["Qty"];
                this.columnSupp_Code = base.Columns["Supp_Code"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnProd_Code = new global::System.Data.DataColumn("Prod_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Code);
                this.columnProd_Name = new global::System.Data.DataColumn("Prod_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Name);
                this.columnSelling_Price = new global::System.Data.DataColumn("Selling_Price", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelling_Price);
                this.columnQty = new global::System.Data.DataColumn("Qty", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQty);
                this.columnSupp_Code = new global::System.Data.DataColumn("Supp_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupp_Code);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsBarcodeRow NewdsBarcodeRow() {
                return ((dsBarcodeRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dsBarcodeRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dsBarcodeRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dsBarcodeRowChanged != null)) {
                    this.dsBarcodeRowChanged(this, new dsBarcodeRowChangeEvent(((dsBarcodeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dsBarcodeRowChanging != null)) {
                    this.dsBarcodeRowChanging(this, new dsBarcodeRowChangeEvent(((dsBarcodeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dsBarcodeRowDeleted != null)) {
                    this.dsBarcodeRowDeleted(this, new dsBarcodeRowChangeEvent(((dsBarcodeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dsBarcodeRowDeleting != null)) {
                    this.dsBarcodeRowDeleting(this, new dsBarcodeRowChangeEvent(((dsBarcodeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedsBarcodeRow(dsBarcodeRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dsBarcodeDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SupplierStatementDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnAcc_No;
            
            private global::System.Data.DataColumn columnSupp_Name;
            
            private global::System.Data.DataColumn columnDoc_Date;
            
            private global::System.Data.DataColumn columnDoc_No;
            
            private global::System.Data.DataColumn columnCredit_Amount;
            
            private global::System.Data.DataColumn columnDebit_Amount;
            
            private global::System.Data.DataColumn columniid;
            
            private global::System.Data.DataColumn columnLoca;
            
            private global::System.Data.DataColumn columnLoca_Descrip;
            
            private global::System.Data.DataColumn columnAddress1;
            
            private global::System.Data.DataColumn columnAddress2;
            
            private global::System.Data.DataColumn columnAddress3;
            
            private global::System.Data.DataColumn columnAddress4;
            
            private global::System.Data.DataColumn columnTr_Date;
            
            private global::System.Data.DataColumn columnRef_No;
            
            private global::System.Data.DataColumn columnAcc_No2;
            
            private global::System.Data.DataColumn columnSupp_Name2;
            
            private global::System.Data.DataColumn columnCheque_Amount;
            
            private global::System.Data.DataColumn columnBranch;
            
            private global::System.Data.DataColumn columnBank_Name;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SupplierStatementDataTable() {
                this.TableName = "SupplierStatement";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SupplierStatementDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected SupplierStatementDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Acc_NoColumn {
                get {
                    return this.columnAcc_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Supp_NameColumn {
                get {
                    return this.columnSupp_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Doc_DateColumn {
                get {
                    return this.columnDoc_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Doc_NoColumn {
                get {
                    return this.columnDoc_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Credit_AmountColumn {
                get {
                    return this.columnCredit_Amount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Debit_AmountColumn {
                get {
                    return this.columnDebit_Amount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn iidColumn {
                get {
                    return this.columniid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LocaColumn {
                get {
                    return this.columnLoca;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Loca_DescripColumn {
                get {
                    return this.columnLoca_Descrip;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Address1Column {
                get {
                    return this.columnAddress1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Address2Column {
                get {
                    return this.columnAddress2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Address3Column {
                get {
                    return this.columnAddress3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Address4Column {
                get {
                    return this.columnAddress4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Tr_DateColumn {
                get {
                    return this.columnTr_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Ref_NoColumn {
                get {
                    return this.columnRef_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Acc_No2Column {
                get {
                    return this.columnAcc_No2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Supp_Name2Column {
                get {
                    return this.columnSupp_Name2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cheque_AmountColumn {
                get {
                    return this.columnCheque_Amount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BranchColumn {
                get {
                    return this.columnBranch;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Bank_NameColumn {
                get {
                    return this.columnBank_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SupplierStatementRow this[int index] {
                get {
                    return ((SupplierStatementRow)(this.Rows[index]));
                }
            }
            
            public event SupplierStatementRowChangeEventHandler SupplierStatementRowChanging;
            
            public event SupplierStatementRowChangeEventHandler SupplierStatementRowChanged;
            
            public event SupplierStatementRowChangeEventHandler SupplierStatementRowDeleting;
            
            public event SupplierStatementRowChangeEventHandler SupplierStatementRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSupplierStatementRow(SupplierStatementRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SupplierStatementRow AddSupplierStatementRow(
                        string Acc_No, 
                        string Supp_Name, 
                        string Doc_Date, 
                        string Doc_No, 
                        decimal Credit_Amount, 
                        decimal Debit_Amount, 
                        string iid, 
                        string Loca, 
                        decimal Loca_Descrip, 
                        string Address1, 
                        string Address2, 
                        string Address3, 
                        string Address4, 
                        System.DateTime Tr_Date, 
                        string Ref_No, 
                        string Acc_No2, 
                        string Supp_Name2, 
                        decimal Cheque_Amount, 
                        string Branch, 
                        string Bank_Name) {
                SupplierStatementRow rowSupplierStatementRow = ((SupplierStatementRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Acc_No,
                        Supp_Name,
                        Doc_Date,
                        Doc_No,
                        Credit_Amount,
                        Debit_Amount,
                        iid,
                        Loca,
                        Loca_Descrip,
                        Address1,
                        Address2,
                        Address3,
                        Address4,
                        Tr_Date,
                        Ref_No,
                        Acc_No2,
                        Supp_Name2,
                        Cheque_Amount,
                        Branch,
                        Bank_Name};
                rowSupplierStatementRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSupplierStatementRow);
                return rowSupplierStatementRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                SupplierStatementDataTable cln = ((SupplierStatementDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SupplierStatementDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnAcc_No = base.Columns["Acc_No"];
                this.columnSupp_Name = base.Columns["Supp_Name"];
                this.columnDoc_Date = base.Columns["Doc_Date"];
                this.columnDoc_No = base.Columns["Doc_No"];
                this.columnCredit_Amount = base.Columns["Credit_Amount"];
                this.columnDebit_Amount = base.Columns["Debit_Amount"];
                this.columniid = base.Columns["iid"];
                this.columnLoca = base.Columns["Loca"];
                this.columnLoca_Descrip = base.Columns["Loca_Descrip"];
                this.columnAddress1 = base.Columns["Address1"];
                this.columnAddress2 = base.Columns["Address2"];
                this.columnAddress3 = base.Columns["Address3"];
                this.columnAddress4 = base.Columns["Address4"];
                this.columnTr_Date = base.Columns["Tr_Date"];
                this.columnRef_No = base.Columns["Ref_No"];
                this.columnAcc_No2 = base.Columns["Acc_No2"];
                this.columnSupp_Name2 = base.Columns["Supp_Name2"];
                this.columnCheque_Amount = base.Columns["Cheque_Amount"];
                this.columnBranch = base.Columns["Branch"];
                this.columnBank_Name = base.Columns["Bank_Name"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnAcc_No = new global::System.Data.DataColumn("Acc_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAcc_No);
                this.columnSupp_Name = new global::System.Data.DataColumn("Supp_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupp_Name);
                this.columnDoc_Date = new global::System.Data.DataColumn("Doc_Date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDoc_Date);
                this.columnDoc_No = new global::System.Data.DataColumn("Doc_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDoc_No);
                this.columnCredit_Amount = new global::System.Data.DataColumn("Credit_Amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCredit_Amount);
                this.columnDebit_Amount = new global::System.Data.DataColumn("Debit_Amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDebit_Amount);
                this.columniid = new global::System.Data.DataColumn("iid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columniid);
                this.columnLoca = new global::System.Data.DataColumn("Loca", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoca);
                this.columnLoca_Descrip = new global::System.Data.DataColumn("Loca_Descrip", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoca_Descrip);
                this.columnAddress1 = new global::System.Data.DataColumn("Address1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress1);
                this.columnAddress2 = new global::System.Data.DataColumn("Address2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress2);
                this.columnAddress3 = new global::System.Data.DataColumn("Address3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress3);
                this.columnAddress4 = new global::System.Data.DataColumn("Address4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress4);
                this.columnTr_Date = new global::System.Data.DataColumn("Tr_Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTr_Date);
                this.columnRef_No = new global::System.Data.DataColumn("Ref_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRef_No);
                this.columnAcc_No2 = new global::System.Data.DataColumn("Acc_No2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAcc_No2);
                this.columnSupp_Name2 = new global::System.Data.DataColumn("Supp_Name2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupp_Name2);
                this.columnCheque_Amount = new global::System.Data.DataColumn("Cheque_Amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCheque_Amount);
                this.columnBranch = new global::System.Data.DataColumn("Branch", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBranch);
                this.columnBank_Name = new global::System.Data.DataColumn("Bank_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBank_Name);
                this.columnAcc_No2.Caption = "Acc_No";
                this.columnSupp_Name2.Caption = "Supp_Name";
                this.columnCheque_Amount.Caption = "Debit_Amount";
                this.columnBranch.Caption = "Loca";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SupplierStatementRow NewSupplierStatementRow() {
                return ((SupplierStatementRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SupplierStatementRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(SupplierStatementRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SupplierStatementRowChanged != null)) {
                    this.SupplierStatementRowChanged(this, new SupplierStatementRowChangeEvent(((SupplierStatementRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SupplierStatementRowChanging != null)) {
                    this.SupplierStatementRowChanging(this, new SupplierStatementRowChangeEvent(((SupplierStatementRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SupplierStatementRowDeleted != null)) {
                    this.SupplierStatementRowDeleted(this, new SupplierStatementRowChangeEvent(((SupplierStatementRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SupplierStatementRowDeleting != null)) {
                    this.SupplierStatementRowDeleting(this, new SupplierStatementRowChangeEvent(((SupplierStatementRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSupplierStatementRow(SupplierStatementRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SupplierStatementDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dsChequeReconDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnCheque_No;
            
            private global::System.Data.DataColumn columnCheque_Date;
            
            private global::System.Data.DataColumn columnBank_Name;
            
            private global::System.Data.DataColumn columnBranch;
            
            private global::System.Data.DataColumn columnRealized;
            
            private global::System.Data.DataColumn columnAmount;
            
            private global::System.Data.DataColumn columnTr_Date;
            
            private global::System.Data.DataColumn columnRemark;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsChequeReconDataTable() {
                this.TableName = "dsChequeRecon";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsChequeReconDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dsChequeReconDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cheque_NoColumn {
                get {
                    return this.columnCheque_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cheque_DateColumn {
                get {
                    return this.columnCheque_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Bank_NameColumn {
                get {
                    return this.columnBank_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BranchColumn {
                get {
                    return this.columnBranch;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RealizedColumn {
                get {
                    return this.columnRealized;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Tr_DateColumn {
                get {
                    return this.columnTr_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RemarkColumn {
                get {
                    return this.columnRemark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsChequeReconRow this[int index] {
                get {
                    return ((dsChequeReconRow)(this.Rows[index]));
                }
            }
            
            public event dsChequeReconRowChangeEventHandler dsChequeReconRowChanging;
            
            public event dsChequeReconRowChangeEventHandler dsChequeReconRowChanged;
            
            public event dsChequeReconRowChangeEventHandler dsChequeReconRowDeleting;
            
            public event dsChequeReconRowChangeEventHandler dsChequeReconRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddsChequeReconRow(dsChequeReconRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsChequeReconRow AdddsChequeReconRow(string Cheque_No, string Cheque_Date, string Bank_Name, string Branch, string Realized, decimal Amount, System.DateTime Tr_Date, string Remark) {
                dsChequeReconRow rowdsChequeReconRow = ((dsChequeReconRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Cheque_No,
                        Cheque_Date,
                        Bank_Name,
                        Branch,
                        Realized,
                        Amount,
                        Tr_Date,
                        Remark};
                rowdsChequeReconRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdsChequeReconRow);
                return rowdsChequeReconRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dsChequeReconDataTable cln = ((dsChequeReconDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dsChequeReconDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCheque_No = base.Columns["Cheque_No"];
                this.columnCheque_Date = base.Columns["Cheque_Date"];
                this.columnBank_Name = base.Columns["Bank_Name"];
                this.columnBranch = base.Columns["Branch"];
                this.columnRealized = base.Columns["Realized"];
                this.columnAmount = base.Columns["Amount"];
                this.columnTr_Date = base.Columns["Tr_Date"];
                this.columnRemark = base.Columns["Remark"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCheque_No = new global::System.Data.DataColumn("Cheque_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCheque_No);
                this.columnCheque_Date = new global::System.Data.DataColumn("Cheque_Date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCheque_Date);
                this.columnBank_Name = new global::System.Data.DataColumn("Bank_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBank_Name);
                this.columnBranch = new global::System.Data.DataColumn("Branch", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBranch);
                this.columnRealized = new global::System.Data.DataColumn("Realized", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRealized);
                this.columnAmount = new global::System.Data.DataColumn("Amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
                this.columnTr_Date = new global::System.Data.DataColumn("Tr_Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTr_Date);
                this.columnRemark = new global::System.Data.DataColumn("Remark", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemark);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsChequeReconRow NewdsChequeReconRow() {
                return ((dsChequeReconRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dsChequeReconRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dsChequeReconRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dsChequeReconRowChanged != null)) {
                    this.dsChequeReconRowChanged(this, new dsChequeReconRowChangeEvent(((dsChequeReconRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dsChequeReconRowChanging != null)) {
                    this.dsChequeReconRowChanging(this, new dsChequeReconRowChangeEvent(((dsChequeReconRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dsChequeReconRowDeleted != null)) {
                    this.dsChequeReconRowDeleted(this, new dsChequeReconRowChangeEvent(((dsChequeReconRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dsChequeReconRowDeleting != null)) {
                    this.dsChequeReconRowDeleting(this, new dsChequeReconRowChangeEvent(((dsChequeReconRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedsChequeReconRow(dsChequeReconRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dsChequeReconDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dsChequeReconDetailsDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnLoca;
            
            private global::System.Data.DataColumn columnLoca_Descrip;
            
            private global::System.Data.DataColumn columnDoc_No;
            
            private global::System.Data.DataColumn columnSupplier_Id;
            
            private global::System.Data.DataColumn columnAcc_Name;
            
            private global::System.Data.DataColumn columnPost_Date;
            
            private global::System.Data.DataColumn columnInv_Date;
            
            private global::System.Data.DataColumn columnInv_No;
            
            private global::System.Data.DataColumn columnCode;
            
            private global::System.Data.DataColumn columnAmount;
            
            private global::System.Data.DataColumn columnRemarks;
            
            private global::System.Data.DataColumn columnTo_LocaDesc;
            
            private global::System.Data.DataColumn columnUser_Name;
            
            private global::System.Data.DataColumn columnIid;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsChequeReconDetailsDataTable() {
                this.TableName = "dsChequeReconDetails";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsChequeReconDetailsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dsChequeReconDetailsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LocaColumn {
                get {
                    return this.columnLoca;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Loca_DescripColumn {
                get {
                    return this.columnLoca_Descrip;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Doc_NoColumn {
                get {
                    return this.columnDoc_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Supplier_IdColumn {
                get {
                    return this.columnSupplier_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Acc_NameColumn {
                get {
                    return this.columnAcc_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Post_DateColumn {
                get {
                    return this.columnPost_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Inv_DateColumn {
                get {
                    return this.columnInv_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Inv_NoColumn {
                get {
                    return this.columnInv_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CodeColumn {
                get {
                    return this.columnCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RemarksColumn {
                get {
                    return this.columnRemarks;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn To_LocaDescColumn {
                get {
                    return this.columnTo_LocaDesc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn User_NameColumn {
                get {
                    return this.columnUser_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IidColumn {
                get {
                    return this.columnIid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsChequeReconDetailsRow this[int index] {
                get {
                    return ((dsChequeReconDetailsRow)(this.Rows[index]));
                }
            }
            
            public event dsChequeReconDetailsRowChangeEventHandler dsChequeReconDetailsRowChanging;
            
            public event dsChequeReconDetailsRowChangeEventHandler dsChequeReconDetailsRowChanged;
            
            public event dsChequeReconDetailsRowChangeEventHandler dsChequeReconDetailsRowDeleting;
            
            public event dsChequeReconDetailsRowChangeEventHandler dsChequeReconDetailsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddsChequeReconDetailsRow(dsChequeReconDetailsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsChequeReconDetailsRow AdddsChequeReconDetailsRow(string Loca, string Loca_Descrip, string Doc_No, string Supplier_Id, string Acc_Name, string Post_Date, string Inv_Date, string Inv_No, string Code, decimal Amount, string Remarks, string To_LocaDesc, string User_Name, string Iid) {
                dsChequeReconDetailsRow rowdsChequeReconDetailsRow = ((dsChequeReconDetailsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Loca,
                        Loca_Descrip,
                        Doc_No,
                        Supplier_Id,
                        Acc_Name,
                        Post_Date,
                        Inv_Date,
                        Inv_No,
                        Code,
                        Amount,
                        Remarks,
                        To_LocaDesc,
                        User_Name,
                        Iid};
                rowdsChequeReconDetailsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdsChequeReconDetailsRow);
                return rowdsChequeReconDetailsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dsChequeReconDetailsDataTable cln = ((dsChequeReconDetailsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dsChequeReconDetailsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnLoca = base.Columns["Loca"];
                this.columnLoca_Descrip = base.Columns["Loca_Descrip"];
                this.columnDoc_No = base.Columns["Doc_No"];
                this.columnSupplier_Id = base.Columns["Supplier_Id"];
                this.columnAcc_Name = base.Columns["Acc_Name"];
                this.columnPost_Date = base.Columns["Post_Date"];
                this.columnInv_Date = base.Columns["Inv_Date"];
                this.columnInv_No = base.Columns["Inv_No"];
                this.columnCode = base.Columns["Code"];
                this.columnAmount = base.Columns["Amount"];
                this.columnRemarks = base.Columns["Remarks"];
                this.columnTo_LocaDesc = base.Columns["To_LocaDesc"];
                this.columnUser_Name = base.Columns["User_Name"];
                this.columnIid = base.Columns["Iid"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnLoca = new global::System.Data.DataColumn("Loca", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoca);
                this.columnLoca_Descrip = new global::System.Data.DataColumn("Loca_Descrip", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoca_Descrip);
                this.columnDoc_No = new global::System.Data.DataColumn("Doc_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDoc_No);
                this.columnSupplier_Id = new global::System.Data.DataColumn("Supplier_Id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplier_Id);
                this.columnAcc_Name = new global::System.Data.DataColumn("Acc_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAcc_Name);
                this.columnPost_Date = new global::System.Data.DataColumn("Post_Date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPost_Date);
                this.columnInv_Date = new global::System.Data.DataColumn("Inv_Date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInv_Date);
                this.columnInv_No = new global::System.Data.DataColumn("Inv_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInv_No);
                this.columnCode = new global::System.Data.DataColumn("Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCode);
                this.columnAmount = new global::System.Data.DataColumn("Amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
                this.columnRemarks = new global::System.Data.DataColumn("Remarks", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemarks);
                this.columnTo_LocaDesc = new global::System.Data.DataColumn("To_LocaDesc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTo_LocaDesc);
                this.columnUser_Name = new global::System.Data.DataColumn("User_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUser_Name);
                this.columnIid = new global::System.Data.DataColumn("Iid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIid);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsChequeReconDetailsRow NewdsChequeReconDetailsRow() {
                return ((dsChequeReconDetailsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dsChequeReconDetailsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dsChequeReconDetailsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dsChequeReconDetailsRowChanged != null)) {
                    this.dsChequeReconDetailsRowChanged(this, new dsChequeReconDetailsRowChangeEvent(((dsChequeReconDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dsChequeReconDetailsRowChanging != null)) {
                    this.dsChequeReconDetailsRowChanging(this, new dsChequeReconDetailsRowChangeEvent(((dsChequeReconDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dsChequeReconDetailsRowDeleted != null)) {
                    this.dsChequeReconDetailsRowDeleted(this, new dsChequeReconDetailsRowChangeEvent(((dsChequeReconDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dsChequeReconDetailsRowDeleting != null)) {
                    this.dsChequeReconDetailsRowDeleting(this, new dsChequeReconDetailsRowChangeEvent(((dsChequeReconDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedsChequeReconDetailsRow(dsChequeReconDetailsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dsChequeReconDetailsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dsProfitableProductDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnProd_Code;
            
            private global::System.Data.DataColumn columnProd_Name;
            
            private global::System.Data.DataColumn columnPurchase_price;
            
            private global::System.Data.DataColumn columnSelling_Price;
            
            private global::System.Data.DataColumn columnSold_Qty;
            
            private global::System.Data.DataColumn columnPur_Qty;
            
            private global::System.Data.DataColumn columnProfit_Amount;
            
            private global::System.Data.DataColumn columnLoca;
            
            private global::System.Data.DataColumn columnLoca_Descrip;
            
            private global::System.Data.DataColumn columnDateFrom;
            
            private global::System.Data.DataColumn columnDateTo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsProfitableProductDataTable() {
                this.TableName = "dsProfitableProduct";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsProfitableProductDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dsProfitableProductDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Prod_CodeColumn {
                get {
                    return this.columnProd_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Prod_NameColumn {
                get {
                    return this.columnProd_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Purchase_priceColumn {
                get {
                    return this.columnPurchase_price;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Selling_PriceColumn {
                get {
                    return this.columnSelling_Price;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Sold_QtyColumn {
                get {
                    return this.columnSold_Qty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Pur_QtyColumn {
                get {
                    return this.columnPur_Qty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Profit_AmountColumn {
                get {
                    return this.columnProfit_Amount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LocaColumn {
                get {
                    return this.columnLoca;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Loca_DescripColumn {
                get {
                    return this.columnLoca_Descrip;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateFromColumn {
                get {
                    return this.columnDateFrom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateToColumn {
                get {
                    return this.columnDateTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsProfitableProductRow this[int index] {
                get {
                    return ((dsProfitableProductRow)(this.Rows[index]));
                }
            }
            
            public event dsProfitableProductRowChangeEventHandler dsProfitableProductRowChanging;
            
            public event dsProfitableProductRowChangeEventHandler dsProfitableProductRowChanged;
            
            public event dsProfitableProductRowChangeEventHandler dsProfitableProductRowDeleting;
            
            public event dsProfitableProductRowChangeEventHandler dsProfitableProductRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddsProfitableProductRow(dsProfitableProductRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsProfitableProductRow AdddsProfitableProductRow(string Prod_Code, string Prod_Name, string Purchase_price, string Selling_Price, string Sold_Qty, string Pur_Qty, string Profit_Amount, string Loca, string Loca_Descrip, string DateFrom, string DateTo) {
                dsProfitableProductRow rowdsProfitableProductRow = ((dsProfitableProductRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Prod_Code,
                        Prod_Name,
                        Purchase_price,
                        Selling_Price,
                        Sold_Qty,
                        Pur_Qty,
                        Profit_Amount,
                        Loca,
                        Loca_Descrip,
                        DateFrom,
                        DateTo};
                rowdsProfitableProductRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdsProfitableProductRow);
                return rowdsProfitableProductRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dsProfitableProductDataTable cln = ((dsProfitableProductDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dsProfitableProductDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnProd_Code = base.Columns["Prod_Code"];
                this.columnProd_Name = base.Columns["Prod_Name"];
                this.columnPurchase_price = base.Columns["Purchase_price"];
                this.columnSelling_Price = base.Columns["Selling_Price"];
                this.columnSold_Qty = base.Columns["Sold_Qty"];
                this.columnPur_Qty = base.Columns["Pur_Qty"];
                this.columnProfit_Amount = base.Columns["Profit_Amount"];
                this.columnLoca = base.Columns["Loca"];
                this.columnLoca_Descrip = base.Columns["Loca_Descrip"];
                this.columnDateFrom = base.Columns["DateFrom"];
                this.columnDateTo = base.Columns["DateTo"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnProd_Code = new global::System.Data.DataColumn("Prod_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Code);
                this.columnProd_Name = new global::System.Data.DataColumn("Prod_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Name);
                this.columnPurchase_price = new global::System.Data.DataColumn("Purchase_price", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPurchase_price);
                this.columnSelling_Price = new global::System.Data.DataColumn("Selling_Price", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelling_Price);
                this.columnSold_Qty = new global::System.Data.DataColumn("Sold_Qty", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSold_Qty);
                this.columnPur_Qty = new global::System.Data.DataColumn("Pur_Qty", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPur_Qty);
                this.columnProfit_Amount = new global::System.Data.DataColumn("Profit_Amount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProfit_Amount);
                this.columnLoca = new global::System.Data.DataColumn("Loca", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoca);
                this.columnLoca_Descrip = new global::System.Data.DataColumn("Loca_Descrip", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoca_Descrip);
                this.columnDateFrom = new global::System.Data.DataColumn("DateFrom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateFrom);
                this.columnDateTo = new global::System.Data.DataColumn("DateTo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateTo);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsProfitableProductRow NewdsProfitableProductRow() {
                return ((dsProfitableProductRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dsProfitableProductRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dsProfitableProductRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dsProfitableProductRowChanged != null)) {
                    this.dsProfitableProductRowChanged(this, new dsProfitableProductRowChangeEvent(((dsProfitableProductRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dsProfitableProductRowChanging != null)) {
                    this.dsProfitableProductRowChanging(this, new dsProfitableProductRowChangeEvent(((dsProfitableProductRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dsProfitableProductRowDeleted != null)) {
                    this.dsProfitableProductRowDeleted(this, new dsProfitableProductRowChangeEvent(((dsProfitableProductRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dsProfitableProductRowDeleting != null)) {
                    this.dsProfitableProductRowDeleting(this, new dsProfitableProductRowChangeEvent(((dsProfitableProductRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedsProfitableProductRow(dsProfitableProductRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dsProfitableProductDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dsReOrderLevelDetailsDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnProd_Code;
            
            private global::System.Data.DataColumn columnProd_Name;
            
            private global::System.Data.DataColumn columnPurchase_price;
            
            private global::System.Data.DataColumn columnSelling_Price;
            
            private global::System.Data.DataColumn columnSupplier_Id;
            
            private global::System.Data.DataColumn columnSupp_Name;
            
            private global::System.Data.DataColumn columnReorder_Level;
            
            private global::System.Data.DataColumn columnReorder_Qty;
            
            private global::System.Data.DataColumn columnQty;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsReOrderLevelDetailsDataTable() {
                this.TableName = "dsReOrderLevelDetails";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsReOrderLevelDetailsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dsReOrderLevelDetailsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Prod_CodeColumn {
                get {
                    return this.columnProd_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Prod_NameColumn {
                get {
                    return this.columnProd_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Purchase_priceColumn {
                get {
                    return this.columnPurchase_price;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Selling_PriceColumn {
                get {
                    return this.columnSelling_Price;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Supplier_IdColumn {
                get {
                    return this.columnSupplier_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Supp_NameColumn {
                get {
                    return this.columnSupp_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Reorder_LevelColumn {
                get {
                    return this.columnReorder_Level;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Reorder_QtyColumn {
                get {
                    return this.columnReorder_Qty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QtyColumn {
                get {
                    return this.columnQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsReOrderLevelDetailsRow this[int index] {
                get {
                    return ((dsReOrderLevelDetailsRow)(this.Rows[index]));
                }
            }
            
            public event dsReOrderLevelDetailsRowChangeEventHandler dsReOrderLevelDetailsRowChanging;
            
            public event dsReOrderLevelDetailsRowChangeEventHandler dsReOrderLevelDetailsRowChanged;
            
            public event dsReOrderLevelDetailsRowChangeEventHandler dsReOrderLevelDetailsRowDeleting;
            
            public event dsReOrderLevelDetailsRowChangeEventHandler dsReOrderLevelDetailsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddsReOrderLevelDetailsRow(dsReOrderLevelDetailsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsReOrderLevelDetailsRow AdddsReOrderLevelDetailsRow(string Prod_Code, string Prod_Name, string Purchase_price, string Selling_Price, string Supplier_Id, string Supp_Name, string Reorder_Level, string Reorder_Qty, string Qty) {
                dsReOrderLevelDetailsRow rowdsReOrderLevelDetailsRow = ((dsReOrderLevelDetailsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Prod_Code,
                        Prod_Name,
                        Purchase_price,
                        Selling_Price,
                        Supplier_Id,
                        Supp_Name,
                        Reorder_Level,
                        Reorder_Qty,
                        Qty};
                rowdsReOrderLevelDetailsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdsReOrderLevelDetailsRow);
                return rowdsReOrderLevelDetailsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dsReOrderLevelDetailsDataTable cln = ((dsReOrderLevelDetailsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dsReOrderLevelDetailsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnProd_Code = base.Columns["Prod_Code"];
                this.columnProd_Name = base.Columns["Prod_Name"];
                this.columnPurchase_price = base.Columns["Purchase_price"];
                this.columnSelling_Price = base.Columns["Selling_Price"];
                this.columnSupplier_Id = base.Columns["Supplier_Id"];
                this.columnSupp_Name = base.Columns["Supp_Name"];
                this.columnReorder_Level = base.Columns["Reorder_Level"];
                this.columnReorder_Qty = base.Columns["Reorder_Qty"];
                this.columnQty = base.Columns["Qty"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnProd_Code = new global::System.Data.DataColumn("Prod_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Code);
                this.columnProd_Name = new global::System.Data.DataColumn("Prod_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Name);
                this.columnPurchase_price = new global::System.Data.DataColumn("Purchase_price", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPurchase_price);
                this.columnSelling_Price = new global::System.Data.DataColumn("Selling_Price", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelling_Price);
                this.columnSupplier_Id = new global::System.Data.DataColumn("Supplier_Id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplier_Id);
                this.columnSupp_Name = new global::System.Data.DataColumn("Supp_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupp_Name);
                this.columnReorder_Level = new global::System.Data.DataColumn("Reorder_Level", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReorder_Level);
                this.columnReorder_Qty = new global::System.Data.DataColumn("Reorder_Qty", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReorder_Qty);
                this.columnQty = new global::System.Data.DataColumn("Qty", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQty);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsReOrderLevelDetailsRow NewdsReOrderLevelDetailsRow() {
                return ((dsReOrderLevelDetailsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dsReOrderLevelDetailsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dsReOrderLevelDetailsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dsReOrderLevelDetailsRowChanged != null)) {
                    this.dsReOrderLevelDetailsRowChanged(this, new dsReOrderLevelDetailsRowChangeEvent(((dsReOrderLevelDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dsReOrderLevelDetailsRowChanging != null)) {
                    this.dsReOrderLevelDetailsRowChanging(this, new dsReOrderLevelDetailsRowChangeEvent(((dsReOrderLevelDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dsReOrderLevelDetailsRowDeleted != null)) {
                    this.dsReOrderLevelDetailsRowDeleted(this, new dsReOrderLevelDetailsRowChangeEvent(((dsReOrderLevelDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dsReOrderLevelDetailsRowDeleting != null)) {
                    this.dsReOrderLevelDetailsRowDeleting(this, new dsReOrderLevelDetailsRowChangeEvent(((dsReOrderLevelDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedsReOrderLevelDetailsRow(dsReOrderLevelDetailsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dsReOrderLevelDetailsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ManufacturerDetailsDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnManf_Code;
            
            private global::System.Data.DataColumn columnManf_Name;
            
            private global::System.Data.DataColumn columnAddress1;
            
            private global::System.Data.DataColumn columnAddress2;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ManufacturerDetailsDataTable() {
                this.TableName = "ManufacturerDetails";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ManufacturerDetailsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ManufacturerDetailsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Manf_CodeColumn {
                get {
                    return this.columnManf_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Manf_NameColumn {
                get {
                    return this.columnManf_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Address1Column {
                get {
                    return this.columnAddress1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Address2Column {
                get {
                    return this.columnAddress2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ManufacturerDetailsRow this[int index] {
                get {
                    return ((ManufacturerDetailsRow)(this.Rows[index]));
                }
            }
            
            public event ManufacturerDetailsRowChangeEventHandler ManufacturerDetailsRowChanging;
            
            public event ManufacturerDetailsRowChangeEventHandler ManufacturerDetailsRowChanged;
            
            public event ManufacturerDetailsRowChangeEventHandler ManufacturerDetailsRowDeleting;
            
            public event ManufacturerDetailsRowChangeEventHandler ManufacturerDetailsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddManufacturerDetailsRow(ManufacturerDetailsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ManufacturerDetailsRow AddManufacturerDetailsRow(string Manf_Code, string Manf_Name, string Address1, string Address2) {
                ManufacturerDetailsRow rowManufacturerDetailsRow = ((ManufacturerDetailsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Manf_Code,
                        Manf_Name,
                        Address1,
                        Address2};
                rowManufacturerDetailsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowManufacturerDetailsRow);
                return rowManufacturerDetailsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ManufacturerDetailsDataTable cln = ((ManufacturerDetailsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ManufacturerDetailsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnManf_Code = base.Columns["Manf_Code"];
                this.columnManf_Name = base.Columns["Manf_Name"];
                this.columnAddress1 = base.Columns["Address1"];
                this.columnAddress2 = base.Columns["Address2"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnManf_Code = new global::System.Data.DataColumn("Manf_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnManf_Code);
                this.columnManf_Name = new global::System.Data.DataColumn("Manf_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnManf_Name);
                this.columnAddress1 = new global::System.Data.DataColumn("Address1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress1);
                this.columnAddress2 = new global::System.Data.DataColumn("Address2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress2);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ManufacturerDetailsRow NewManufacturerDetailsRow() {
                return ((ManufacturerDetailsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ManufacturerDetailsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ManufacturerDetailsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ManufacturerDetailsRowChanged != null)) {
                    this.ManufacturerDetailsRowChanged(this, new ManufacturerDetailsRowChangeEvent(((ManufacturerDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ManufacturerDetailsRowChanging != null)) {
                    this.ManufacturerDetailsRowChanging(this, new ManufacturerDetailsRowChangeEvent(((ManufacturerDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ManufacturerDetailsRowDeleted != null)) {
                    this.ManufacturerDetailsRowDeleted(this, new ManufacturerDetailsRowChangeEvent(((ManufacturerDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ManufacturerDetailsRowDeleting != null)) {
                    this.ManufacturerDetailsRowDeleting(this, new ManufacturerDetailsRowChangeEvent(((ManufacturerDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveManufacturerDetailsRow(ManufacturerDetailsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ManufacturerDetailsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dsCreditorsOutstandingDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnSupp_Code;
            
            private global::System.Data.DataColumn columnDoc_No;
            
            private global::System.Data.DataColumn columnDoc_Date;
            
            private global::System.Data.DataColumn columnTr_Date;
            
            private global::System.Data.DataColumn columnTr_Amount;
            
            private global::System.Data.DataColumn columnNo_Of_Days;
            
            private global::System.Data.DataColumn columnFirst_Bal_Amount;
            
            private global::System.Data.DataColumn columnSecond_Bal_Amount;
            
            private global::System.Data.DataColumn columnThird_Bal_Amount;
            
            private global::System.Data.DataColumn columnOver_Forth_Bal_Amount;
            
            private global::System.Data.DataColumn columnDayRange1;
            
            private global::System.Data.DataColumn columnDayRange2;
            
            private global::System.Data.DataColumn columnDayRange3;
            
            private global::System.Data.DataColumn columnDayRange4;
            
            private global::System.Data.DataColumn columnSupp_Name;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsCreditorsOutstandingDataTable() {
                this.TableName = "dsCreditorsOutstanding";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsCreditorsOutstandingDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dsCreditorsOutstandingDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Supp_CodeColumn {
                get {
                    return this.columnSupp_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Doc_NoColumn {
                get {
                    return this.columnDoc_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Doc_DateColumn {
                get {
                    return this.columnDoc_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Tr_DateColumn {
                get {
                    return this.columnTr_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Tr_AmountColumn {
                get {
                    return this.columnTr_Amount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn No_Of_DaysColumn {
                get {
                    return this.columnNo_Of_Days;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn First_Bal_AmountColumn {
                get {
                    return this.columnFirst_Bal_Amount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Second_Bal_AmountColumn {
                get {
                    return this.columnSecond_Bal_Amount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Third_Bal_AmountColumn {
                get {
                    return this.columnThird_Bal_Amount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Over_Forth_Bal_AmountColumn {
                get {
                    return this.columnOver_Forth_Bal_Amount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DayRange1Column {
                get {
                    return this.columnDayRange1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DayRange2Column {
                get {
                    return this.columnDayRange2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DayRange3Column {
                get {
                    return this.columnDayRange3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DayRange4Column {
                get {
                    return this.columnDayRange4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Supp_NameColumn {
                get {
                    return this.columnSupp_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsCreditorsOutstandingRow this[int index] {
                get {
                    return ((dsCreditorsOutstandingRow)(this.Rows[index]));
                }
            }
            
            public event dsCreditorsOutstandingRowChangeEventHandler dsCreditorsOutstandingRowChanging;
            
            public event dsCreditorsOutstandingRowChangeEventHandler dsCreditorsOutstandingRowChanged;
            
            public event dsCreditorsOutstandingRowChangeEventHandler dsCreditorsOutstandingRowDeleting;
            
            public event dsCreditorsOutstandingRowChangeEventHandler dsCreditorsOutstandingRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddsCreditorsOutstandingRow(dsCreditorsOutstandingRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsCreditorsOutstandingRow AdddsCreditorsOutstandingRow(string Supp_Code, string Doc_No, string Doc_Date, System.DateTime Tr_Date, decimal Tr_Amount, short No_Of_Days, decimal First_Bal_Amount, decimal Second_Bal_Amount, decimal Third_Bal_Amount, decimal Over_Forth_Bal_Amount, string DayRange1, string DayRange2, string DayRange3, string DayRange4, string Supp_Name) {
                dsCreditorsOutstandingRow rowdsCreditorsOutstandingRow = ((dsCreditorsOutstandingRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Supp_Code,
                        Doc_No,
                        Doc_Date,
                        Tr_Date,
                        Tr_Amount,
                        No_Of_Days,
                        First_Bal_Amount,
                        Second_Bal_Amount,
                        Third_Bal_Amount,
                        Over_Forth_Bal_Amount,
                        DayRange1,
                        DayRange2,
                        DayRange3,
                        DayRange4,
                        Supp_Name};
                rowdsCreditorsOutstandingRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdsCreditorsOutstandingRow);
                return rowdsCreditorsOutstandingRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dsCreditorsOutstandingDataTable cln = ((dsCreditorsOutstandingDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dsCreditorsOutstandingDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSupp_Code = base.Columns["Supp_Code"];
                this.columnDoc_No = base.Columns["Doc_No"];
                this.columnDoc_Date = base.Columns["Doc_Date"];
                this.columnTr_Date = base.Columns["Tr_Date"];
                this.columnTr_Amount = base.Columns["Tr_Amount"];
                this.columnNo_Of_Days = base.Columns["No_Of_Days"];
                this.columnFirst_Bal_Amount = base.Columns["First_Bal_Amount"];
                this.columnSecond_Bal_Amount = base.Columns["Second_Bal_Amount"];
                this.columnThird_Bal_Amount = base.Columns["Third_Bal_Amount"];
                this.columnOver_Forth_Bal_Amount = base.Columns["Over_Forth_Bal_Amount"];
                this.columnDayRange1 = base.Columns["DayRange1"];
                this.columnDayRange2 = base.Columns["DayRange2"];
                this.columnDayRange3 = base.Columns["DayRange3"];
                this.columnDayRange4 = base.Columns["DayRange4"];
                this.columnSupp_Name = base.Columns["Supp_Name"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSupp_Code = new global::System.Data.DataColumn("Supp_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupp_Code);
                this.columnDoc_No = new global::System.Data.DataColumn("Doc_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDoc_No);
                this.columnDoc_Date = new global::System.Data.DataColumn("Doc_Date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDoc_Date);
                this.columnTr_Date = new global::System.Data.DataColumn("Tr_Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTr_Date);
                this.columnTr_Amount = new global::System.Data.DataColumn("Tr_Amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTr_Amount);
                this.columnNo_Of_Days = new global::System.Data.DataColumn("No_Of_Days", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNo_Of_Days);
                this.columnFirst_Bal_Amount = new global::System.Data.DataColumn("First_Bal_Amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFirst_Bal_Amount);
                this.columnSecond_Bal_Amount = new global::System.Data.DataColumn("Second_Bal_Amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSecond_Bal_Amount);
                this.columnThird_Bal_Amount = new global::System.Data.DataColumn("Third_Bal_Amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnThird_Bal_Amount);
                this.columnOver_Forth_Bal_Amount = new global::System.Data.DataColumn("Over_Forth_Bal_Amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOver_Forth_Bal_Amount);
                this.columnDayRange1 = new global::System.Data.DataColumn("DayRange1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDayRange1);
                this.columnDayRange2 = new global::System.Data.DataColumn("DayRange2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDayRange2);
                this.columnDayRange3 = new global::System.Data.DataColumn("DayRange3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDayRange3);
                this.columnDayRange4 = new global::System.Data.DataColumn("DayRange4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDayRange4);
                this.columnSupp_Name = new global::System.Data.DataColumn("Supp_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupp_Name);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsCreditorsOutstandingRow NewdsCreditorsOutstandingRow() {
                return ((dsCreditorsOutstandingRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dsCreditorsOutstandingRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dsCreditorsOutstandingRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dsCreditorsOutstandingRowChanged != null)) {
                    this.dsCreditorsOutstandingRowChanged(this, new dsCreditorsOutstandingRowChangeEvent(((dsCreditorsOutstandingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dsCreditorsOutstandingRowChanging != null)) {
                    this.dsCreditorsOutstandingRowChanging(this, new dsCreditorsOutstandingRowChangeEvent(((dsCreditorsOutstandingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dsCreditorsOutstandingRowDeleted != null)) {
                    this.dsCreditorsOutstandingRowDeleted(this, new dsCreditorsOutstandingRowChangeEvent(((dsCreditorsOutstandingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dsCreditorsOutstandingRowDeleting != null)) {
                    this.dsCreditorsOutstandingRowDeleting(this, new dsCreditorsOutstandingRowChangeEvent(((dsCreditorsOutstandingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedsCreditorsOutstandingRow(dsCreditorsOutstandingRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dsCreditorsOutstandingDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dsProductMovingDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnProd_Code;
            
            private global::System.Data.DataColumn columnProd_Name;
            
            private global::System.Data.DataColumn columnQty;
            
            private global::System.Data.DataColumn columnSupplier_Id;
            
            private global::System.Data.DataColumn columnPurchase_price;
            
            private global::System.Data.DataColumn columnSelling_Price;
            
            private global::System.Data.DataColumn columnBal_Qty;
            
            private global::System.Data.DataColumn columnDateFrom;
            
            private global::System.Data.DataColumn columnDateTo;
            
            private global::System.Data.DataColumn columnLoca;
            
            private global::System.Data.DataColumn columnLoca_Descrip;
            
            private global::System.Data.DataColumn columnSupp_Code;
            
            private global::System.Data.DataColumn columnSupp_Name;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsProductMovingDataTable() {
                this.TableName = "dsProductMoving";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsProductMovingDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dsProductMovingDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Prod_CodeColumn {
                get {
                    return this.columnProd_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Prod_NameColumn {
                get {
                    return this.columnProd_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QtyColumn {
                get {
                    return this.columnQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Supplier_IdColumn {
                get {
                    return this.columnSupplier_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Purchase_priceColumn {
                get {
                    return this.columnPurchase_price;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Selling_PriceColumn {
                get {
                    return this.columnSelling_Price;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Bal_QtyColumn {
                get {
                    return this.columnBal_Qty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateFromColumn {
                get {
                    return this.columnDateFrom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateToColumn {
                get {
                    return this.columnDateTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LocaColumn {
                get {
                    return this.columnLoca;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Loca_DescripColumn {
                get {
                    return this.columnLoca_Descrip;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Supp_CodeColumn {
                get {
                    return this.columnSupp_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Supp_NameColumn {
                get {
                    return this.columnSupp_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsProductMovingRow this[int index] {
                get {
                    return ((dsProductMovingRow)(this.Rows[index]));
                }
            }
            
            public event dsProductMovingRowChangeEventHandler dsProductMovingRowChanging;
            
            public event dsProductMovingRowChangeEventHandler dsProductMovingRowChanged;
            
            public event dsProductMovingRowChangeEventHandler dsProductMovingRowDeleting;
            
            public event dsProductMovingRowChangeEventHandler dsProductMovingRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddsProductMovingRow(dsProductMovingRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsProductMovingRow AdddsProductMovingRow(string Prod_Code, string Prod_Name, double Qty, string Supplier_Id, decimal Purchase_price, decimal Selling_Price, double Bal_Qty, string DateFrom, string DateTo, string Loca, string Loca_Descrip, string Supp_Code, string Supp_Name) {
                dsProductMovingRow rowdsProductMovingRow = ((dsProductMovingRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Prod_Code,
                        Prod_Name,
                        Qty,
                        Supplier_Id,
                        Purchase_price,
                        Selling_Price,
                        Bal_Qty,
                        DateFrom,
                        DateTo,
                        Loca,
                        Loca_Descrip,
                        Supp_Code,
                        Supp_Name};
                rowdsProductMovingRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdsProductMovingRow);
                return rowdsProductMovingRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dsProductMovingDataTable cln = ((dsProductMovingDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dsProductMovingDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnProd_Code = base.Columns["Prod_Code"];
                this.columnProd_Name = base.Columns["Prod_Name"];
                this.columnQty = base.Columns["Qty"];
                this.columnSupplier_Id = base.Columns["Supplier_Id"];
                this.columnPurchase_price = base.Columns["Purchase_price"];
                this.columnSelling_Price = base.Columns["Selling_Price"];
                this.columnBal_Qty = base.Columns["Bal_Qty"];
                this.columnDateFrom = base.Columns["DateFrom"];
                this.columnDateTo = base.Columns["DateTo"];
                this.columnLoca = base.Columns["Loca"];
                this.columnLoca_Descrip = base.Columns["Loca_Descrip"];
                this.columnSupp_Code = base.Columns["Supp_Code"];
                this.columnSupp_Name = base.Columns["Supp_Name"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnProd_Code = new global::System.Data.DataColumn("Prod_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Code);
                this.columnProd_Name = new global::System.Data.DataColumn("Prod_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Name);
                this.columnQty = new global::System.Data.DataColumn("Qty", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQty);
                this.columnSupplier_Id = new global::System.Data.DataColumn("Supplier_Id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplier_Id);
                this.columnPurchase_price = new global::System.Data.DataColumn("Purchase_price", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPurchase_price);
                this.columnSelling_Price = new global::System.Data.DataColumn("Selling_Price", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelling_Price);
                this.columnBal_Qty = new global::System.Data.DataColumn("Bal_Qty", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBal_Qty);
                this.columnDateFrom = new global::System.Data.DataColumn("DateFrom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateFrom);
                this.columnDateTo = new global::System.Data.DataColumn("DateTo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateTo);
                this.columnLoca = new global::System.Data.DataColumn("Loca", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoca);
                this.columnLoca_Descrip = new global::System.Data.DataColumn("Loca_Descrip", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoca_Descrip);
                this.columnSupp_Code = new global::System.Data.DataColumn("Supp_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupp_Code);
                this.columnSupp_Name = new global::System.Data.DataColumn("Supp_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupp_Name);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsProductMovingRow NewdsProductMovingRow() {
                return ((dsProductMovingRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dsProductMovingRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dsProductMovingRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dsProductMovingRowChanged != null)) {
                    this.dsProductMovingRowChanged(this, new dsProductMovingRowChangeEvent(((dsProductMovingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dsProductMovingRowChanging != null)) {
                    this.dsProductMovingRowChanging(this, new dsProductMovingRowChangeEvent(((dsProductMovingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dsProductMovingRowDeleted != null)) {
                    this.dsProductMovingRowDeleted(this, new dsProductMovingRowChangeEvent(((dsProductMovingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dsProductMovingRowDeleting != null)) {
                    this.dsProductMovingRowDeleting(this, new dsProductMovingRowChangeEvent(((dsProductMovingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedsProductMovingRow(dsProductMovingRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dsProductMovingDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dsProductSalesComparisonDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnProd_Code;
            
            private global::System.Data.DataColumn columnProd_Name;
            
            private global::System.Data.DataColumn columnCode;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnPurchase_price;
            
            private global::System.Data.DataColumn columnSelling_Price;
            
            private global::System.Data.DataColumn columnLoca;
            
            private global::System.Data.DataColumn columnLoca_Descrip;
            
            private global::System.Data.DataColumn columnFirst_Qty;
            
            private global::System.Data.DataColumn columnFirst_Amount;
            
            private global::System.Data.DataColumn columnSecond_Qty;
            
            private global::System.Data.DataColumn columnSecond_Amount;
            
            private global::System.Data.DataColumn columnFirstDateFrom;
            
            private global::System.Data.DataColumn columnFirstDateTo;
            
            private global::System.Data.DataColumn columnSecondDateFrom;
            
            private global::System.Data.DataColumn columnSecondDateTo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsProductSalesComparisonDataTable() {
                this.TableName = "dsProductSalesComparison";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsProductSalesComparisonDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dsProductSalesComparisonDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Prod_CodeColumn {
                get {
                    return this.columnProd_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Prod_NameColumn {
                get {
                    return this.columnProd_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CodeColumn {
                get {
                    return this.columnCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Purchase_priceColumn {
                get {
                    return this.columnPurchase_price;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Selling_PriceColumn {
                get {
                    return this.columnSelling_Price;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LocaColumn {
                get {
                    return this.columnLoca;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Loca_DescripColumn {
                get {
                    return this.columnLoca_Descrip;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn First_QtyColumn {
                get {
                    return this.columnFirst_Qty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn First_AmountColumn {
                get {
                    return this.columnFirst_Amount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Second_QtyColumn {
                get {
                    return this.columnSecond_Qty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Second_AmountColumn {
                get {
                    return this.columnSecond_Amount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FirstDateFromColumn {
                get {
                    return this.columnFirstDateFrom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FirstDateToColumn {
                get {
                    return this.columnFirstDateTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SecondDateFromColumn {
                get {
                    return this.columnSecondDateFrom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SecondDateToColumn {
                get {
                    return this.columnSecondDateTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsProductSalesComparisonRow this[int index] {
                get {
                    return ((dsProductSalesComparisonRow)(this.Rows[index]));
                }
            }
            
            public event dsProductSalesComparisonRowChangeEventHandler dsProductSalesComparisonRowChanging;
            
            public event dsProductSalesComparisonRowChangeEventHandler dsProductSalesComparisonRowChanged;
            
            public event dsProductSalesComparisonRowChangeEventHandler dsProductSalesComparisonRowDeleting;
            
            public event dsProductSalesComparisonRowChangeEventHandler dsProductSalesComparisonRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddsProductSalesComparisonRow(dsProductSalesComparisonRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsProductSalesComparisonRow AdddsProductSalesComparisonRow(
                        string Prod_Code, 
                        string Prod_Name, 
                        string Code, 
                        string Description, 
                        decimal Purchase_price, 
                        decimal Selling_Price, 
                        string Loca, 
                        string Loca_Descrip, 
                        double First_Qty, 
                        decimal First_Amount, 
                        double Second_Qty, 
                        decimal Second_Amount, 
                        string FirstDateFrom, 
                        string FirstDateTo, 
                        string SecondDateFrom, 
                        string SecondDateTo) {
                dsProductSalesComparisonRow rowdsProductSalesComparisonRow = ((dsProductSalesComparisonRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Prod_Code,
                        Prod_Name,
                        Code,
                        Description,
                        Purchase_price,
                        Selling_Price,
                        Loca,
                        Loca_Descrip,
                        First_Qty,
                        First_Amount,
                        Second_Qty,
                        Second_Amount,
                        FirstDateFrom,
                        FirstDateTo,
                        SecondDateFrom,
                        SecondDateTo};
                rowdsProductSalesComparisonRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdsProductSalesComparisonRow);
                return rowdsProductSalesComparisonRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dsProductSalesComparisonDataTable cln = ((dsProductSalesComparisonDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dsProductSalesComparisonDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnProd_Code = base.Columns["Prod_Code"];
                this.columnProd_Name = base.Columns["Prod_Name"];
                this.columnCode = base.Columns["Code"];
                this.columnDescription = base.Columns["Description"];
                this.columnPurchase_price = base.Columns["Purchase_price"];
                this.columnSelling_Price = base.Columns["Selling_Price"];
                this.columnLoca = base.Columns["Loca"];
                this.columnLoca_Descrip = base.Columns["Loca_Descrip"];
                this.columnFirst_Qty = base.Columns["First_Qty"];
                this.columnFirst_Amount = base.Columns["First_Amount"];
                this.columnSecond_Qty = base.Columns["Second_Qty"];
                this.columnSecond_Amount = base.Columns["Second_Amount"];
                this.columnFirstDateFrom = base.Columns["FirstDateFrom"];
                this.columnFirstDateTo = base.Columns["FirstDateTo"];
                this.columnSecondDateFrom = base.Columns["SecondDateFrom"];
                this.columnSecondDateTo = base.Columns["SecondDateTo"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnProd_Code = new global::System.Data.DataColumn("Prod_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Code);
                this.columnProd_Name = new global::System.Data.DataColumn("Prod_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Name);
                this.columnCode = new global::System.Data.DataColumn("Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCode);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnPurchase_price = new global::System.Data.DataColumn("Purchase_price", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPurchase_price);
                this.columnSelling_Price = new global::System.Data.DataColumn("Selling_Price", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelling_Price);
                this.columnLoca = new global::System.Data.DataColumn("Loca", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoca);
                this.columnLoca_Descrip = new global::System.Data.DataColumn("Loca_Descrip", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoca_Descrip);
                this.columnFirst_Qty = new global::System.Data.DataColumn("First_Qty", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFirst_Qty);
                this.columnFirst_Amount = new global::System.Data.DataColumn("First_Amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFirst_Amount);
                this.columnSecond_Qty = new global::System.Data.DataColumn("Second_Qty", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSecond_Qty);
                this.columnSecond_Amount = new global::System.Data.DataColumn("Second_Amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSecond_Amount);
                this.columnFirstDateFrom = new global::System.Data.DataColumn("FirstDateFrom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFirstDateFrom);
                this.columnFirstDateTo = new global::System.Data.DataColumn("FirstDateTo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFirstDateTo);
                this.columnSecondDateFrom = new global::System.Data.DataColumn("SecondDateFrom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSecondDateFrom);
                this.columnSecondDateTo = new global::System.Data.DataColumn("SecondDateTo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSecondDateTo);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsProductSalesComparisonRow NewdsProductSalesComparisonRow() {
                return ((dsProductSalesComparisonRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dsProductSalesComparisonRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dsProductSalesComparisonRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dsProductSalesComparisonRowChanged != null)) {
                    this.dsProductSalesComparisonRowChanged(this, new dsProductSalesComparisonRowChangeEvent(((dsProductSalesComparisonRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dsProductSalesComparisonRowChanging != null)) {
                    this.dsProductSalesComparisonRowChanging(this, new dsProductSalesComparisonRowChangeEvent(((dsProductSalesComparisonRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dsProductSalesComparisonRowDeleted != null)) {
                    this.dsProductSalesComparisonRowDeleted(this, new dsProductSalesComparisonRowChangeEvent(((dsProductSalesComparisonRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dsProductSalesComparisonRowDeleting != null)) {
                    this.dsProductSalesComparisonRowDeleting(this, new dsProductSalesComparisonRowChangeEvent(((dsProductSalesComparisonRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedsProductSalesComparisonRow(dsProductSalesComparisonRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dsProductSalesComparisonDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dsProductDetails_ChangeDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnProd_Code;
            
            private global::System.Data.DataColumn columnProd_Name;
            
            private global::System.Data.DataColumn columnBarcode;
            
            private global::System.Data.DataColumn columnDepartment_Id;
            
            private global::System.Data.DataColumn columnDept_Name;
            
            private global::System.Data.DataColumn columnCategory_Id;
            
            private global::System.Data.DataColumn columnCat_Name;
            
            private global::System.Data.DataColumn columnSupplier_Id;
            
            private global::System.Data.DataColumn columnSupp_Name;
            
            private global::System.Data.DataColumn columnManufacturer_Id;
            
            private global::System.Data.DataColumn columnManf_Name;
            
            private global::System.Data.DataColumn columnPurchase_price;
            
            private global::System.Data.DataColumn columnSelling_Price;
            
            private global::System.Data.DataColumn columnDisc_Price;
            
            private global::System.Data.DataColumn columnReorder_Level;
            
            private global::System.Data.DataColumn columnUnit;
            
            private global::System.Data.DataColumn columnReorder_Qty;
            
            private global::System.Data.DataColumn columnRack_No;
            
            private global::System.Data.DataColumn columnPack_Size;
            
            private global::System.Data.DataColumn columnModified_User;
            
            private global::System.Data.DataColumn columnModified_Date;
            
            private global::System.Data.DataColumn columnLockedItem;
            
            private global::System.Data.DataColumn columnShort_Description;
            
            private global::System.Data.DataColumn columnWhole_Price;
            
            private global::System.Data.DataColumn columnDisc_Str;
            
            private global::System.Data.DataColumn columnChg_Iid;
            
            private global::System.Data.DataColumn columnChg_No;
            
            private global::System.Data.DataColumn columnDateFrom;
            
            private global::System.Data.DataColumn columnDateTo;
            
            private global::System.Data.DataColumn columnCodeFrom;
            
            private global::System.Data.DataColumn columnDescriptionFrom;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsProductDetails_ChangeDataTable() {
                this.TableName = "dsProductDetails_Change";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsProductDetails_ChangeDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dsProductDetails_ChangeDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Prod_CodeColumn {
                get {
                    return this.columnProd_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Prod_NameColumn {
                get {
                    return this.columnProd_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BarcodeColumn {
                get {
                    return this.columnBarcode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Department_IdColumn {
                get {
                    return this.columnDepartment_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Dept_NameColumn {
                get {
                    return this.columnDept_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Category_IdColumn {
                get {
                    return this.columnCategory_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cat_NameColumn {
                get {
                    return this.columnCat_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Supplier_IdColumn {
                get {
                    return this.columnSupplier_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Supp_NameColumn {
                get {
                    return this.columnSupp_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Manufacturer_IdColumn {
                get {
                    return this.columnManufacturer_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Manf_NameColumn {
                get {
                    return this.columnManf_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Purchase_priceColumn {
                get {
                    return this.columnPurchase_price;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Selling_PriceColumn {
                get {
                    return this.columnSelling_Price;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Disc_PriceColumn {
                get {
                    return this.columnDisc_Price;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Reorder_LevelColumn {
                get {
                    return this.columnReorder_Level;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UnitColumn {
                get {
                    return this.columnUnit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Reorder_QtyColumn {
                get {
                    return this.columnReorder_Qty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Rack_NoColumn {
                get {
                    return this.columnRack_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Pack_SizeColumn {
                get {
                    return this.columnPack_Size;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Modified_UserColumn {
                get {
                    return this.columnModified_User;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Modified_DateColumn {
                get {
                    return this.columnModified_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LockedItemColumn {
                get {
                    return this.columnLockedItem;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Short_DescriptionColumn {
                get {
                    return this.columnShort_Description;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Whole_PriceColumn {
                get {
                    return this.columnWhole_Price;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Disc_StrColumn {
                get {
                    return this.columnDisc_Str;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Chg_IidColumn {
                get {
                    return this.columnChg_Iid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Chg_NoColumn {
                get {
                    return this.columnChg_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateFromColumn {
                get {
                    return this.columnDateFrom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateToColumn {
                get {
                    return this.columnDateTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CodeFromColumn {
                get {
                    return this.columnCodeFrom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescriptionFromColumn {
                get {
                    return this.columnDescriptionFrom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsProductDetails_ChangeRow this[int index] {
                get {
                    return ((dsProductDetails_ChangeRow)(this.Rows[index]));
                }
            }
            
            public event dsProductDetails_ChangeRowChangeEventHandler dsProductDetails_ChangeRowChanging;
            
            public event dsProductDetails_ChangeRowChangeEventHandler dsProductDetails_ChangeRowChanged;
            
            public event dsProductDetails_ChangeRowChangeEventHandler dsProductDetails_ChangeRowDeleting;
            
            public event dsProductDetails_ChangeRowChangeEventHandler dsProductDetails_ChangeRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddsProductDetails_ChangeRow(dsProductDetails_ChangeRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsProductDetails_ChangeRow AdddsProductDetails_ChangeRow(
                        string Prod_Code, 
                        string Prod_Name, 
                        string Barcode, 
                        string Department_Id, 
                        string Dept_Name, 
                        string Category_Id, 
                        string Cat_Name, 
                        string Supplier_Id, 
                        string Supp_Name, 
                        string Manufacturer_Id, 
                        string Manf_Name, 
                        decimal Purchase_price, 
                        decimal Selling_Price, 
                        decimal Disc_Price, 
                        double Reorder_Level, 
                        string Unit, 
                        double Reorder_Qty, 
                        short Rack_No, 
                        short Pack_Size, 
                        string Modified_User, 
                        string Modified_Date, 
                        string LockedItem, 
                        string Short_Description, 
                        decimal Whole_Price, 
                        string Disc_Str, 
                        string Chg_Iid, 
                        string Chg_No, 
                        string DateFrom, 
                        string DateTo, 
                        string CodeFrom, 
                        string DescriptionFrom) {
                dsProductDetails_ChangeRow rowdsProductDetails_ChangeRow = ((dsProductDetails_ChangeRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Prod_Code,
                        Prod_Name,
                        Barcode,
                        Department_Id,
                        Dept_Name,
                        Category_Id,
                        Cat_Name,
                        Supplier_Id,
                        Supp_Name,
                        Manufacturer_Id,
                        Manf_Name,
                        Purchase_price,
                        Selling_Price,
                        Disc_Price,
                        Reorder_Level,
                        Unit,
                        Reorder_Qty,
                        Rack_No,
                        Pack_Size,
                        Modified_User,
                        Modified_Date,
                        LockedItem,
                        Short_Description,
                        Whole_Price,
                        Disc_Str,
                        Chg_Iid,
                        Chg_No,
                        DateFrom,
                        DateTo,
                        CodeFrom,
                        DescriptionFrom};
                rowdsProductDetails_ChangeRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdsProductDetails_ChangeRow);
                return rowdsProductDetails_ChangeRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dsProductDetails_ChangeDataTable cln = ((dsProductDetails_ChangeDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dsProductDetails_ChangeDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnProd_Code = base.Columns["Prod_Code"];
                this.columnProd_Name = base.Columns["Prod_Name"];
                this.columnBarcode = base.Columns["Barcode"];
                this.columnDepartment_Id = base.Columns["Department_Id"];
                this.columnDept_Name = base.Columns["Dept_Name"];
                this.columnCategory_Id = base.Columns["Category_Id"];
                this.columnCat_Name = base.Columns["Cat_Name"];
                this.columnSupplier_Id = base.Columns["Supplier_Id"];
                this.columnSupp_Name = base.Columns["Supp_Name"];
                this.columnManufacturer_Id = base.Columns["Manufacturer_Id"];
                this.columnManf_Name = base.Columns["Manf_Name"];
                this.columnPurchase_price = base.Columns["Purchase_price"];
                this.columnSelling_Price = base.Columns["Selling_Price"];
                this.columnDisc_Price = base.Columns["Disc_Price"];
                this.columnReorder_Level = base.Columns["Reorder_Level"];
                this.columnUnit = base.Columns["Unit"];
                this.columnReorder_Qty = base.Columns["Reorder_Qty"];
                this.columnRack_No = base.Columns["Rack_No"];
                this.columnPack_Size = base.Columns["Pack_Size"];
                this.columnModified_User = base.Columns["Modified_User"];
                this.columnModified_Date = base.Columns["Modified_Date"];
                this.columnLockedItem = base.Columns["LockedItem"];
                this.columnShort_Description = base.Columns["Short_Description"];
                this.columnWhole_Price = base.Columns["Whole_Price"];
                this.columnDisc_Str = base.Columns["Disc_Str"];
                this.columnChg_Iid = base.Columns["Chg_Iid"];
                this.columnChg_No = base.Columns["Chg_No"];
                this.columnDateFrom = base.Columns["DateFrom"];
                this.columnDateTo = base.Columns["DateTo"];
                this.columnCodeFrom = base.Columns["CodeFrom"];
                this.columnDescriptionFrom = base.Columns["DescriptionFrom"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnProd_Code = new global::System.Data.DataColumn("Prod_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Code);
                this.columnProd_Name = new global::System.Data.DataColumn("Prod_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Name);
                this.columnBarcode = new global::System.Data.DataColumn("Barcode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBarcode);
                this.columnDepartment_Id = new global::System.Data.DataColumn("Department_Id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDepartment_Id);
                this.columnDept_Name = new global::System.Data.DataColumn("Dept_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDept_Name);
                this.columnCategory_Id = new global::System.Data.DataColumn("Category_Id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCategory_Id);
                this.columnCat_Name = new global::System.Data.DataColumn("Cat_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCat_Name);
                this.columnSupplier_Id = new global::System.Data.DataColumn("Supplier_Id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplier_Id);
                this.columnSupp_Name = new global::System.Data.DataColumn("Supp_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupp_Name);
                this.columnManufacturer_Id = new global::System.Data.DataColumn("Manufacturer_Id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnManufacturer_Id);
                this.columnManf_Name = new global::System.Data.DataColumn("Manf_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnManf_Name);
                this.columnPurchase_price = new global::System.Data.DataColumn("Purchase_price", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPurchase_price);
                this.columnSelling_Price = new global::System.Data.DataColumn("Selling_Price", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelling_Price);
                this.columnDisc_Price = new global::System.Data.DataColumn("Disc_Price", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDisc_Price);
                this.columnReorder_Level = new global::System.Data.DataColumn("Reorder_Level", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReorder_Level);
                this.columnUnit = new global::System.Data.DataColumn("Unit", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnit);
                this.columnReorder_Qty = new global::System.Data.DataColumn("Reorder_Qty", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReorder_Qty);
                this.columnRack_No = new global::System.Data.DataColumn("Rack_No", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRack_No);
                this.columnPack_Size = new global::System.Data.DataColumn("Pack_Size", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPack_Size);
                this.columnModified_User = new global::System.Data.DataColumn("Modified_User", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModified_User);
                this.columnModified_Date = new global::System.Data.DataColumn("Modified_Date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModified_Date);
                this.columnLockedItem = new global::System.Data.DataColumn("LockedItem", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLockedItem);
                this.columnShort_Description = new global::System.Data.DataColumn("Short_Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShort_Description);
                this.columnWhole_Price = new global::System.Data.DataColumn("Whole_Price", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWhole_Price);
                this.columnDisc_Str = new global::System.Data.DataColumn("Disc_Str", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDisc_Str);
                this.columnChg_Iid = new global::System.Data.DataColumn("Chg_Iid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChg_Iid);
                this.columnChg_No = new global::System.Data.DataColumn("Chg_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChg_No);
                this.columnDateFrom = new global::System.Data.DataColumn("DateFrom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateFrom);
                this.columnDateTo = new global::System.Data.DataColumn("DateTo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateTo);
                this.columnCodeFrom = new global::System.Data.DataColumn("CodeFrom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodeFrom);
                this.columnDescriptionFrom = new global::System.Data.DataColumn("DescriptionFrom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescriptionFrom);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsProductDetails_ChangeRow NewdsProductDetails_ChangeRow() {
                return ((dsProductDetails_ChangeRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dsProductDetails_ChangeRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dsProductDetails_ChangeRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dsProductDetails_ChangeRowChanged != null)) {
                    this.dsProductDetails_ChangeRowChanged(this, new dsProductDetails_ChangeRowChangeEvent(((dsProductDetails_ChangeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dsProductDetails_ChangeRowChanging != null)) {
                    this.dsProductDetails_ChangeRowChanging(this, new dsProductDetails_ChangeRowChangeEvent(((dsProductDetails_ChangeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dsProductDetails_ChangeRowDeleted != null)) {
                    this.dsProductDetails_ChangeRowDeleted(this, new dsProductDetails_ChangeRowChangeEvent(((dsProductDetails_ChangeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dsProductDetails_ChangeRowDeleting != null)) {
                    this.dsProductDetails_ChangeRowDeleting(this, new dsProductDetails_ChangeRowChangeEvent(((dsProductDetails_ChangeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedsProductDetails_ChangeRow(dsProductDetails_ChangeRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dsProductDetails_ChangeDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dsTempPacketProductDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnProd_Code;
            
            private global::System.Data.DataColumn columnProd_Name;
            
            private global::System.Data.DataColumn columnPacket_Qty;
            
            private global::System.Data.DataColumn columnPurchase_price;
            
            private global::System.Data.DataColumn columnMain_Prod_Code;
            
            private global::System.Data.DataColumn columnMain_Prod_Name;
            
            private global::System.Data.DataColumn columnNo_Of_Packets;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsTempPacketProductDataTable() {
                this.TableName = "dsTempPacketProduct";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsTempPacketProductDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dsTempPacketProductDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Prod_CodeColumn {
                get {
                    return this.columnProd_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Prod_NameColumn {
                get {
                    return this.columnProd_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Packet_QtyColumn {
                get {
                    return this.columnPacket_Qty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Purchase_priceColumn {
                get {
                    return this.columnPurchase_price;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Main_Prod_CodeColumn {
                get {
                    return this.columnMain_Prod_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Main_Prod_NameColumn {
                get {
                    return this.columnMain_Prod_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn No_Of_PacketsColumn {
                get {
                    return this.columnNo_Of_Packets;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsTempPacketProductRow this[int index] {
                get {
                    return ((dsTempPacketProductRow)(this.Rows[index]));
                }
            }
            
            public event dsTempPacketProductRowChangeEventHandler dsTempPacketProductRowChanging;
            
            public event dsTempPacketProductRowChangeEventHandler dsTempPacketProductRowChanged;
            
            public event dsTempPacketProductRowChangeEventHandler dsTempPacketProductRowDeleting;
            
            public event dsTempPacketProductRowChangeEventHandler dsTempPacketProductRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddsTempPacketProductRow(dsTempPacketProductRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsTempPacketProductRow AdddsTempPacketProductRow(string Prod_Code, string Prod_Name, string Packet_Qty, string Purchase_price, string Main_Prod_Code, string Main_Prod_Name, string No_Of_Packets) {
                dsTempPacketProductRow rowdsTempPacketProductRow = ((dsTempPacketProductRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Prod_Code,
                        Prod_Name,
                        Packet_Qty,
                        Purchase_price,
                        Main_Prod_Code,
                        Main_Prod_Name,
                        No_Of_Packets};
                rowdsTempPacketProductRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdsTempPacketProductRow);
                return rowdsTempPacketProductRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dsTempPacketProductDataTable cln = ((dsTempPacketProductDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dsTempPacketProductDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnProd_Code = base.Columns["Prod_Code"];
                this.columnProd_Name = base.Columns["Prod_Name"];
                this.columnPacket_Qty = base.Columns["Packet_Qty"];
                this.columnPurchase_price = base.Columns["Purchase_price"];
                this.columnMain_Prod_Code = base.Columns["Main_Prod_Code"];
                this.columnMain_Prod_Name = base.Columns["Main_Prod_Name"];
                this.columnNo_Of_Packets = base.Columns["No_Of_Packets"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnProd_Code = new global::System.Data.DataColumn("Prod_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Code);
                this.columnProd_Name = new global::System.Data.DataColumn("Prod_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Name);
                this.columnPacket_Qty = new global::System.Data.DataColumn("Packet_Qty", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPacket_Qty);
                this.columnPurchase_price = new global::System.Data.DataColumn("Purchase_price", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPurchase_price);
                this.columnMain_Prod_Code = new global::System.Data.DataColumn("Main_Prod_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMain_Prod_Code);
                this.columnMain_Prod_Name = new global::System.Data.DataColumn("Main_Prod_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMain_Prod_Name);
                this.columnNo_Of_Packets = new global::System.Data.DataColumn("No_Of_Packets", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNo_Of_Packets);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsTempPacketProductRow NewdsTempPacketProductRow() {
                return ((dsTempPacketProductRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dsTempPacketProductRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dsTempPacketProductRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dsTempPacketProductRowChanged != null)) {
                    this.dsTempPacketProductRowChanged(this, new dsTempPacketProductRowChangeEvent(((dsTempPacketProductRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dsTempPacketProductRowChanging != null)) {
                    this.dsTempPacketProductRowChanging(this, new dsTempPacketProductRowChangeEvent(((dsTempPacketProductRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dsTempPacketProductRowDeleted != null)) {
                    this.dsTempPacketProductRowDeleted(this, new dsTempPacketProductRowChangeEvent(((dsTempPacketProductRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dsTempPacketProductRowDeleting != null)) {
                    this.dsTempPacketProductRowDeleting(this, new dsTempPacketProductRowChangeEvent(((dsTempPacketProductRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedsTempPacketProductRow(dsTempPacketProductRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dsTempPacketProductDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dsPacketingProductNoteDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnDoc_No;
            
            private global::System.Data.DataColumn columnPost_Date;
            
            private global::System.Data.DataColumn columnMain_Prod_Code;
            
            private global::System.Data.DataColumn columnMain_Prod_Name;
            
            private global::System.Data.DataColumn columnProd_Code;
            
            private global::System.Data.DataColumn columnProd_Name;
            
            private global::System.Data.DataColumn columnPurchase_price;
            
            private global::System.Data.DataColumn columnPacket_Qty;
            
            private global::System.Data.DataColumn columnNo_Of_Packets;
            
            private global::System.Data.DataColumn columnLoca;
            
            private global::System.Data.DataColumn columnLoca_Descrip;
            
            private global::System.Data.DataColumn columnStatus;
            
            private global::System.Data.DataColumn columnMPurchase;
            
            private global::System.Data.DataColumn columnMSelling;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsPacketingProductNoteDataTable() {
                this.TableName = "dsPacketingProductNote";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsPacketingProductNoteDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dsPacketingProductNoteDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Doc_NoColumn {
                get {
                    return this.columnDoc_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Post_DateColumn {
                get {
                    return this.columnPost_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Main_Prod_CodeColumn {
                get {
                    return this.columnMain_Prod_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Main_Prod_NameColumn {
                get {
                    return this.columnMain_Prod_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Prod_CodeColumn {
                get {
                    return this.columnProd_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Prod_NameColumn {
                get {
                    return this.columnProd_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Purchase_priceColumn {
                get {
                    return this.columnPurchase_price;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Packet_QtyColumn {
                get {
                    return this.columnPacket_Qty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn No_Of_PacketsColumn {
                get {
                    return this.columnNo_Of_Packets;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LocaColumn {
                get {
                    return this.columnLoca;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Loca_DescripColumn {
                get {
                    return this.columnLoca_Descrip;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StatusColumn {
                get {
                    return this.columnStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MPurchaseColumn {
                get {
                    return this.columnMPurchase;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MSellingColumn {
                get {
                    return this.columnMSelling;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsPacketingProductNoteRow this[int index] {
                get {
                    return ((dsPacketingProductNoteRow)(this.Rows[index]));
                }
            }
            
            public event dsPacketingProductNoteRowChangeEventHandler dsPacketingProductNoteRowChanging;
            
            public event dsPacketingProductNoteRowChangeEventHandler dsPacketingProductNoteRowChanged;
            
            public event dsPacketingProductNoteRowChangeEventHandler dsPacketingProductNoteRowDeleting;
            
            public event dsPacketingProductNoteRowChangeEventHandler dsPacketingProductNoteRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddsPacketingProductNoteRow(dsPacketingProductNoteRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsPacketingProductNoteRow AdddsPacketingProductNoteRow(string Doc_No, string Post_Date, string Main_Prod_Code, string Main_Prod_Name, string Prod_Code, string Prod_Name, decimal Purchase_price, double Packet_Qty, double No_Of_Packets, string Loca, string Loca_Descrip, string Status, decimal MPurchase, decimal MSelling) {
                dsPacketingProductNoteRow rowdsPacketingProductNoteRow = ((dsPacketingProductNoteRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Doc_No,
                        Post_Date,
                        Main_Prod_Code,
                        Main_Prod_Name,
                        Prod_Code,
                        Prod_Name,
                        Purchase_price,
                        Packet_Qty,
                        No_Of_Packets,
                        Loca,
                        Loca_Descrip,
                        Status,
                        MPurchase,
                        MSelling};
                rowdsPacketingProductNoteRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdsPacketingProductNoteRow);
                return rowdsPacketingProductNoteRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dsPacketingProductNoteDataTable cln = ((dsPacketingProductNoteDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dsPacketingProductNoteDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDoc_No = base.Columns["Doc_No"];
                this.columnPost_Date = base.Columns["Post_Date"];
                this.columnMain_Prod_Code = base.Columns["Main_Prod_Code"];
                this.columnMain_Prod_Name = base.Columns["Main_Prod_Name"];
                this.columnProd_Code = base.Columns["Prod_Code"];
                this.columnProd_Name = base.Columns["Prod_Name"];
                this.columnPurchase_price = base.Columns["Purchase_price"];
                this.columnPacket_Qty = base.Columns["Packet_Qty"];
                this.columnNo_Of_Packets = base.Columns["No_Of_Packets"];
                this.columnLoca = base.Columns["Loca"];
                this.columnLoca_Descrip = base.Columns["Loca_Descrip"];
                this.columnStatus = base.Columns["Status"];
                this.columnMPurchase = base.Columns["MPurchase"];
                this.columnMSelling = base.Columns["MSelling"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDoc_No = new global::System.Data.DataColumn("Doc_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDoc_No);
                this.columnPost_Date = new global::System.Data.DataColumn("Post_Date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPost_Date);
                this.columnMain_Prod_Code = new global::System.Data.DataColumn("Main_Prod_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMain_Prod_Code);
                this.columnMain_Prod_Name = new global::System.Data.DataColumn("Main_Prod_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMain_Prod_Name);
                this.columnProd_Code = new global::System.Data.DataColumn("Prod_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Code);
                this.columnProd_Name = new global::System.Data.DataColumn("Prod_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Name);
                this.columnPurchase_price = new global::System.Data.DataColumn("Purchase_price", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPurchase_price);
                this.columnPacket_Qty = new global::System.Data.DataColumn("Packet_Qty", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPacket_Qty);
                this.columnNo_Of_Packets = new global::System.Data.DataColumn("No_Of_Packets", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNo_Of_Packets);
                this.columnLoca = new global::System.Data.DataColumn("Loca", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoca);
                this.columnLoca_Descrip = new global::System.Data.DataColumn("Loca_Descrip", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoca_Descrip);
                this.columnStatus = new global::System.Data.DataColumn("Status", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatus);
                this.columnMPurchase = new global::System.Data.DataColumn("MPurchase", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMPurchase);
                this.columnMSelling = new global::System.Data.DataColumn("MSelling", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMSelling);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsPacketingProductNoteRow NewdsPacketingProductNoteRow() {
                return ((dsPacketingProductNoteRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dsPacketingProductNoteRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dsPacketingProductNoteRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dsPacketingProductNoteRowChanged != null)) {
                    this.dsPacketingProductNoteRowChanged(this, new dsPacketingProductNoteRowChangeEvent(((dsPacketingProductNoteRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dsPacketingProductNoteRowChanging != null)) {
                    this.dsPacketingProductNoteRowChanging(this, new dsPacketingProductNoteRowChangeEvent(((dsPacketingProductNoteRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dsPacketingProductNoteRowDeleted != null)) {
                    this.dsPacketingProductNoteRowDeleted(this, new dsPacketingProductNoteRowChangeEvent(((dsPacketingProductNoteRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dsPacketingProductNoteRowDeleting != null)) {
                    this.dsPacketingProductNoteRowDeleting(this, new dsPacketingProductNoteRowChangeEvent(((dsPacketingProductNoteRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedsPacketingProductNoteRow(dsPacketingProductNoteRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dsPacketingProductNoteDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dsNonMovingProductDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnProd_Code;
            
            private global::System.Data.DataColumn columnProd_Name;
            
            private global::System.Data.DataColumn columnPurchase_price;
            
            private global::System.Data.DataColumn columnSelling_Price;
            
            private global::System.Data.DataColumn columnSupplier_Id;
            
            private global::System.Data.DataColumn columnQty;
            
            private global::System.Data.DataColumn columnSupp_Name;
            
            private global::System.Data.DataColumn columnLoca_Descrip;
            
            private global::System.Data.DataColumn columnDateFrom;
            
            private global::System.Data.DataColumn columnDateTo;
            
            private global::System.Data.DataColumn columnLoca;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsNonMovingProductDataTable() {
                this.TableName = "dsNonMovingProduct";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsNonMovingProductDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dsNonMovingProductDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Prod_CodeColumn {
                get {
                    return this.columnProd_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Prod_NameColumn {
                get {
                    return this.columnProd_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Purchase_priceColumn {
                get {
                    return this.columnPurchase_price;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Selling_PriceColumn {
                get {
                    return this.columnSelling_Price;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Supplier_IdColumn {
                get {
                    return this.columnSupplier_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QtyColumn {
                get {
                    return this.columnQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Supp_NameColumn {
                get {
                    return this.columnSupp_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Loca_DescripColumn {
                get {
                    return this.columnLoca_Descrip;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateFromColumn {
                get {
                    return this.columnDateFrom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateToColumn {
                get {
                    return this.columnDateTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LocaColumn {
                get {
                    return this.columnLoca;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsNonMovingProductRow this[int index] {
                get {
                    return ((dsNonMovingProductRow)(this.Rows[index]));
                }
            }
            
            public event dsNonMovingProductRowChangeEventHandler dsNonMovingProductRowChanging;
            
            public event dsNonMovingProductRowChangeEventHandler dsNonMovingProductRowChanged;
            
            public event dsNonMovingProductRowChangeEventHandler dsNonMovingProductRowDeleting;
            
            public event dsNonMovingProductRowChangeEventHandler dsNonMovingProductRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddsNonMovingProductRow(dsNonMovingProductRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsNonMovingProductRow AdddsNonMovingProductRow(string Prod_Code, string Prod_Name, string Purchase_price, string Selling_Price, string Supplier_Id, string Qty, string Supp_Name, string Loca_Descrip, string DateFrom, string DateTo, string Loca) {
                dsNonMovingProductRow rowdsNonMovingProductRow = ((dsNonMovingProductRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Prod_Code,
                        Prod_Name,
                        Purchase_price,
                        Selling_Price,
                        Supplier_Id,
                        Qty,
                        Supp_Name,
                        Loca_Descrip,
                        DateFrom,
                        DateTo,
                        Loca};
                rowdsNonMovingProductRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdsNonMovingProductRow);
                return rowdsNonMovingProductRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dsNonMovingProductDataTable cln = ((dsNonMovingProductDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dsNonMovingProductDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnProd_Code = base.Columns["Prod_Code"];
                this.columnProd_Name = base.Columns["Prod_Name"];
                this.columnPurchase_price = base.Columns["Purchase_price"];
                this.columnSelling_Price = base.Columns["Selling_Price"];
                this.columnSupplier_Id = base.Columns["Supplier_Id"];
                this.columnQty = base.Columns["Qty"];
                this.columnSupp_Name = base.Columns["Supp_Name"];
                this.columnLoca_Descrip = base.Columns["Loca_Descrip"];
                this.columnDateFrom = base.Columns["DateFrom"];
                this.columnDateTo = base.Columns["DateTo"];
                this.columnLoca = base.Columns["Loca"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnProd_Code = new global::System.Data.DataColumn("Prod_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Code);
                this.columnProd_Name = new global::System.Data.DataColumn("Prod_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Name);
                this.columnPurchase_price = new global::System.Data.DataColumn("Purchase_price", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPurchase_price);
                this.columnSelling_Price = new global::System.Data.DataColumn("Selling_Price", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelling_Price);
                this.columnSupplier_Id = new global::System.Data.DataColumn("Supplier_Id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplier_Id);
                this.columnQty = new global::System.Data.DataColumn("Qty", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQty);
                this.columnSupp_Name = new global::System.Data.DataColumn("Supp_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupp_Name);
                this.columnLoca_Descrip = new global::System.Data.DataColumn("Loca_Descrip", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoca_Descrip);
                this.columnDateFrom = new global::System.Data.DataColumn("DateFrom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateFrom);
                this.columnDateTo = new global::System.Data.DataColumn("DateTo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateTo);
                this.columnLoca = new global::System.Data.DataColumn("Loca", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoca);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsNonMovingProductRow NewdsNonMovingProductRow() {
                return ((dsNonMovingProductRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dsNonMovingProductRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dsNonMovingProductRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dsNonMovingProductRowChanged != null)) {
                    this.dsNonMovingProductRowChanged(this, new dsNonMovingProductRowChangeEvent(((dsNonMovingProductRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dsNonMovingProductRowChanging != null)) {
                    this.dsNonMovingProductRowChanging(this, new dsNonMovingProductRowChangeEvent(((dsNonMovingProductRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dsNonMovingProductRowDeleted != null)) {
                    this.dsNonMovingProductRowDeleted(this, new dsNonMovingProductRowChangeEvent(((dsNonMovingProductRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dsNonMovingProductRowDeleting != null)) {
                    this.dsNonMovingProductRowDeleting(this, new dsNonMovingProductRowChangeEvent(((dsNonMovingProductRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedsNonMovingProductRow(dsNonMovingProductRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dsNonMovingProductDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dsHourlySalesDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnTime_Id;
            
            private global::System.Data.DataColumn columnTime_Desc;
            
            private global::System.Data.DataColumn columnQty;
            
            private global::System.Data.DataColumn columnAmount;
            
            private global::System.Data.DataColumn columnLoca;
            
            private global::System.Data.DataColumn columnLoca_Descrip;
            
            private global::System.Data.DataColumn columnDateFrom;
            
            private global::System.Data.DataColumn columnDateTo;
            
            private global::System.Data.DataColumn columnHeader;
            
            private global::System.Data.DataColumn columnBillDate_Tr;
            
            private global::System.Data.DataColumn columnBillDate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsHourlySalesDataTable() {
                this.TableName = "dsHourlySales";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsHourlySalesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dsHourlySalesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Time_IdColumn {
                get {
                    return this.columnTime_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Time_DescColumn {
                get {
                    return this.columnTime_Desc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QtyColumn {
                get {
                    return this.columnQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LocaColumn {
                get {
                    return this.columnLoca;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Loca_DescripColumn {
                get {
                    return this.columnLoca_Descrip;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateFromColumn {
                get {
                    return this.columnDateFrom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateToColumn {
                get {
                    return this.columnDateTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HeaderColumn {
                get {
                    return this.columnHeader;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BillDate_TrColumn {
                get {
                    return this.columnBillDate_Tr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BillDateColumn {
                get {
                    return this.columnBillDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsHourlySalesRow this[int index] {
                get {
                    return ((dsHourlySalesRow)(this.Rows[index]));
                }
            }
            
            public event dsHourlySalesRowChangeEventHandler dsHourlySalesRowChanging;
            
            public event dsHourlySalesRowChangeEventHandler dsHourlySalesRowChanged;
            
            public event dsHourlySalesRowChangeEventHandler dsHourlySalesRowDeleting;
            
            public event dsHourlySalesRowChangeEventHandler dsHourlySalesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddsHourlySalesRow(dsHourlySalesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsHourlySalesRow AdddsHourlySalesRow(short Time_Id, string Time_Desc, double Qty, decimal Amount, string Loca, string Loca_Descrip, string DateFrom, string DateTo, string Header, System.DateTime BillDate_Tr, string BillDate) {
                dsHourlySalesRow rowdsHourlySalesRow = ((dsHourlySalesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Time_Id,
                        Time_Desc,
                        Qty,
                        Amount,
                        Loca,
                        Loca_Descrip,
                        DateFrom,
                        DateTo,
                        Header,
                        BillDate_Tr,
                        BillDate};
                rowdsHourlySalesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdsHourlySalesRow);
                return rowdsHourlySalesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dsHourlySalesDataTable cln = ((dsHourlySalesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dsHourlySalesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnTime_Id = base.Columns["Time_Id"];
                this.columnTime_Desc = base.Columns["Time_Desc"];
                this.columnQty = base.Columns["Qty"];
                this.columnAmount = base.Columns["Amount"];
                this.columnLoca = base.Columns["Loca"];
                this.columnLoca_Descrip = base.Columns["Loca_Descrip"];
                this.columnDateFrom = base.Columns["DateFrom"];
                this.columnDateTo = base.Columns["DateTo"];
                this.columnHeader = base.Columns["Header"];
                this.columnBillDate_Tr = base.Columns["BillDate_Tr"];
                this.columnBillDate = base.Columns["BillDate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnTime_Id = new global::System.Data.DataColumn("Time_Id", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTime_Id);
                this.columnTime_Desc = new global::System.Data.DataColumn("Time_Desc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTime_Desc);
                this.columnQty = new global::System.Data.DataColumn("Qty", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQty);
                this.columnAmount = new global::System.Data.DataColumn("Amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
                this.columnLoca = new global::System.Data.DataColumn("Loca", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoca);
                this.columnLoca_Descrip = new global::System.Data.DataColumn("Loca_Descrip", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoca_Descrip);
                this.columnDateFrom = new global::System.Data.DataColumn("DateFrom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateFrom);
                this.columnDateTo = new global::System.Data.DataColumn("DateTo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateTo);
                this.columnHeader = new global::System.Data.DataColumn("Header", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHeader);
                this.columnBillDate_Tr = new global::System.Data.DataColumn("BillDate_Tr", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBillDate_Tr);
                this.columnBillDate = new global::System.Data.DataColumn("BillDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBillDate);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsHourlySalesRow NewdsHourlySalesRow() {
                return ((dsHourlySalesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dsHourlySalesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dsHourlySalesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dsHourlySalesRowChanged != null)) {
                    this.dsHourlySalesRowChanged(this, new dsHourlySalesRowChangeEvent(((dsHourlySalesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dsHourlySalesRowChanging != null)) {
                    this.dsHourlySalesRowChanging(this, new dsHourlySalesRowChangeEvent(((dsHourlySalesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dsHourlySalesRowDeleted != null)) {
                    this.dsHourlySalesRowDeleted(this, new dsHourlySalesRowChangeEvent(((dsHourlySalesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dsHourlySalesRowDeleting != null)) {
                    this.dsHourlySalesRowDeleting(this, new dsHourlySalesRowChangeEvent(((dsHourlySalesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedsHourlySalesRow(dsHourlySalesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dsHourlySalesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dsDailyCollectionDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnSale_Date;
            
            private global::System.Data.DataColumn columnTr_Date;
            
            private global::System.Data.DataColumn columnUnit_No;
            
            private global::System.Data.DataColumn columnPosNet_Amt;
            
            private global::System.Data.DataColumn columnPosCash_Amt;
            
            private global::System.Data.DataColumn columnPosCredit_amt;
            
            private global::System.Data.DataColumn columnCard1_Descr;
            
            private global::System.Data.DataColumn columnCard1_Amount;
            
            private global::System.Data.DataColumn columnCard2_Descr;
            
            private global::System.Data.DataColumn columnCard2_Amount;
            
            private global::System.Data.DataColumn columnCard3_Descr;
            
            private global::System.Data.DataColumn columnCard3_Amount;
            
            private global::System.Data.DataColumn columnCard4_Descr;
            
            private global::System.Data.DataColumn columnCard4_Amount;
            
            private global::System.Data.DataColumn columnCard5_Descr;
            
            private global::System.Data.DataColumn columnCard5_Amount;
            
            private global::System.Data.DataColumn columnPosBill_Count;
            
            private global::System.Data.DataColumn columnDateFrom;
            
            private global::System.Data.DataColumn columnDateTo;
            
            private global::System.Data.DataColumn columnLoca;
            
            private global::System.Data.DataColumn columnLoca_Descrip;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsDailyCollectionDataTable() {
                this.TableName = "dsDailyCollection";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsDailyCollectionDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dsDailyCollectionDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Sale_DateColumn {
                get {
                    return this.columnSale_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Tr_DateColumn {
                get {
                    return this.columnTr_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Unit_NoColumn {
                get {
                    return this.columnUnit_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PosNet_AmtColumn {
                get {
                    return this.columnPosNet_Amt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PosCash_AmtColumn {
                get {
                    return this.columnPosCash_Amt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PosCredit_amtColumn {
                get {
                    return this.columnPosCredit_amt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Card1_DescrColumn {
                get {
                    return this.columnCard1_Descr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Card1_AmountColumn {
                get {
                    return this.columnCard1_Amount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Card2_DescrColumn {
                get {
                    return this.columnCard2_Descr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Card2_AmountColumn {
                get {
                    return this.columnCard2_Amount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Card3_DescrColumn {
                get {
                    return this.columnCard3_Descr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Card3_AmountColumn {
                get {
                    return this.columnCard3_Amount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Card4_DescrColumn {
                get {
                    return this.columnCard4_Descr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Card4_AmountColumn {
                get {
                    return this.columnCard4_Amount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Card5_DescrColumn {
                get {
                    return this.columnCard5_Descr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Card5_AmountColumn {
                get {
                    return this.columnCard5_Amount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PosBill_CountColumn {
                get {
                    return this.columnPosBill_Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateFromColumn {
                get {
                    return this.columnDateFrom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateToColumn {
                get {
                    return this.columnDateTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LocaColumn {
                get {
                    return this.columnLoca;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Loca_DescripColumn {
                get {
                    return this.columnLoca_Descrip;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsDailyCollectionRow this[int index] {
                get {
                    return ((dsDailyCollectionRow)(this.Rows[index]));
                }
            }
            
            public event dsDailyCollectionRowChangeEventHandler dsDailyCollectionRowChanging;
            
            public event dsDailyCollectionRowChangeEventHandler dsDailyCollectionRowChanged;
            
            public event dsDailyCollectionRowChangeEventHandler dsDailyCollectionRowDeleting;
            
            public event dsDailyCollectionRowChangeEventHandler dsDailyCollectionRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddsDailyCollectionRow(dsDailyCollectionRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsDailyCollectionRow AdddsDailyCollectionRow(
                        string Sale_Date, 
                        System.DateTime Tr_Date, 
                        string Unit_No, 
                        decimal PosNet_Amt, 
                        decimal PosCash_Amt, 
                        decimal PosCredit_amt, 
                        string Card1_Descr, 
                        decimal Card1_Amount, 
                        string Card2_Descr, 
                        decimal Card2_Amount, 
                        string Card3_Descr, 
                        decimal Card3_Amount, 
                        string Card4_Descr, 
                        decimal Card4_Amount, 
                        string Card5_Descr, 
                        decimal Card5_Amount, 
                        short PosBill_Count, 
                        string DateFrom, 
                        string DateTo, 
                        string Loca, 
                        string Loca_Descrip) {
                dsDailyCollectionRow rowdsDailyCollectionRow = ((dsDailyCollectionRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Sale_Date,
                        Tr_Date,
                        Unit_No,
                        PosNet_Amt,
                        PosCash_Amt,
                        PosCredit_amt,
                        Card1_Descr,
                        Card1_Amount,
                        Card2_Descr,
                        Card2_Amount,
                        Card3_Descr,
                        Card3_Amount,
                        Card4_Descr,
                        Card4_Amount,
                        Card5_Descr,
                        Card5_Amount,
                        PosBill_Count,
                        DateFrom,
                        DateTo,
                        Loca,
                        Loca_Descrip};
                rowdsDailyCollectionRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdsDailyCollectionRow);
                return rowdsDailyCollectionRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dsDailyCollectionDataTable cln = ((dsDailyCollectionDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dsDailyCollectionDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSale_Date = base.Columns["Sale_Date"];
                this.columnTr_Date = base.Columns["Tr_Date"];
                this.columnUnit_No = base.Columns["Unit_No"];
                this.columnPosNet_Amt = base.Columns["PosNet_Amt"];
                this.columnPosCash_Amt = base.Columns["PosCash_Amt"];
                this.columnPosCredit_amt = base.Columns["PosCredit_amt"];
                this.columnCard1_Descr = base.Columns["Card1_Descr"];
                this.columnCard1_Amount = base.Columns["Card1_Amount"];
                this.columnCard2_Descr = base.Columns["Card2_Descr"];
                this.columnCard2_Amount = base.Columns["Card2_Amount"];
                this.columnCard3_Descr = base.Columns["Card3_Descr"];
                this.columnCard3_Amount = base.Columns["Card3_Amount"];
                this.columnCard4_Descr = base.Columns["Card4_Descr"];
                this.columnCard4_Amount = base.Columns["Card4_Amount"];
                this.columnCard5_Descr = base.Columns["Card5_Descr"];
                this.columnCard5_Amount = base.Columns["Card5_Amount"];
                this.columnPosBill_Count = base.Columns["PosBill_Count"];
                this.columnDateFrom = base.Columns["DateFrom"];
                this.columnDateTo = base.Columns["DateTo"];
                this.columnLoca = base.Columns["Loca"];
                this.columnLoca_Descrip = base.Columns["Loca_Descrip"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSale_Date = new global::System.Data.DataColumn("Sale_Date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSale_Date);
                this.columnTr_Date = new global::System.Data.DataColumn("Tr_Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTr_Date);
                this.columnUnit_No = new global::System.Data.DataColumn("Unit_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnit_No);
                this.columnPosNet_Amt = new global::System.Data.DataColumn("PosNet_Amt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPosNet_Amt);
                this.columnPosCash_Amt = new global::System.Data.DataColumn("PosCash_Amt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPosCash_Amt);
                this.columnPosCredit_amt = new global::System.Data.DataColumn("PosCredit_amt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPosCredit_amt);
                this.columnCard1_Descr = new global::System.Data.DataColumn("Card1_Descr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCard1_Descr);
                this.columnCard1_Amount = new global::System.Data.DataColumn("Card1_Amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCard1_Amount);
                this.columnCard2_Descr = new global::System.Data.DataColumn("Card2_Descr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCard2_Descr);
                this.columnCard2_Amount = new global::System.Data.DataColumn("Card2_Amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCard2_Amount);
                this.columnCard3_Descr = new global::System.Data.DataColumn("Card3_Descr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCard3_Descr);
                this.columnCard3_Amount = new global::System.Data.DataColumn("Card3_Amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCard3_Amount);
                this.columnCard4_Descr = new global::System.Data.DataColumn("Card4_Descr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCard4_Descr);
                this.columnCard4_Amount = new global::System.Data.DataColumn("Card4_Amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCard4_Amount);
                this.columnCard5_Descr = new global::System.Data.DataColumn("Card5_Descr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCard5_Descr);
                this.columnCard5_Amount = new global::System.Data.DataColumn("Card5_Amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCard5_Amount);
                this.columnPosBill_Count = new global::System.Data.DataColumn("PosBill_Count", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPosBill_Count);
                this.columnDateFrom = new global::System.Data.DataColumn("DateFrom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateFrom);
                this.columnDateTo = new global::System.Data.DataColumn("DateTo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateTo);
                this.columnLoca = new global::System.Data.DataColumn("Loca", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoca);
                this.columnLoca_Descrip = new global::System.Data.DataColumn("Loca_Descrip", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoca_Descrip);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsDailyCollectionRow NewdsDailyCollectionRow() {
                return ((dsDailyCollectionRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dsDailyCollectionRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dsDailyCollectionRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dsDailyCollectionRowChanged != null)) {
                    this.dsDailyCollectionRowChanged(this, new dsDailyCollectionRowChangeEvent(((dsDailyCollectionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dsDailyCollectionRowChanging != null)) {
                    this.dsDailyCollectionRowChanging(this, new dsDailyCollectionRowChangeEvent(((dsDailyCollectionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dsDailyCollectionRowDeleted != null)) {
                    this.dsDailyCollectionRowDeleted(this, new dsDailyCollectionRowChangeEvent(((dsDailyCollectionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dsDailyCollectionRowDeleting != null)) {
                    this.dsDailyCollectionRowDeleting(this, new dsDailyCollectionRowChangeEvent(((dsDailyCollectionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedsDailyCollectionRow(dsDailyCollectionRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dsDailyCollectionDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dsReceiptWiseSalesDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnLoca;
            
            private global::System.Data.DataColumn columnLoca_Descrip;
            
            private global::System.Data.DataColumn columnBillDate;
            
            private global::System.Data.DataColumn columnReceipt_No;
            
            private global::System.Data.DataColumn columnUnit;
            
            private global::System.Data.DataColumn columnAmount;
            
            private global::System.Data.DataColumn columnDateFrom;
            
            private global::System.Data.DataColumn columnDateTo;
            
            private global::System.Data.DataColumn columnDiscount;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsReceiptWiseSalesDataTable() {
                this.TableName = "dsReceiptWiseSales";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsReceiptWiseSalesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dsReceiptWiseSalesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LocaColumn {
                get {
                    return this.columnLoca;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Loca_DescripColumn {
                get {
                    return this.columnLoca_Descrip;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BillDateColumn {
                get {
                    return this.columnBillDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Receipt_NoColumn {
                get {
                    return this.columnReceipt_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UnitColumn {
                get {
                    return this.columnUnit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateFromColumn {
                get {
                    return this.columnDateFrom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateToColumn {
                get {
                    return this.columnDateTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DiscountColumn {
                get {
                    return this.columnDiscount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsReceiptWiseSalesRow this[int index] {
                get {
                    return ((dsReceiptWiseSalesRow)(this.Rows[index]));
                }
            }
            
            public event dsReceiptWiseSalesRowChangeEventHandler dsReceiptWiseSalesRowChanging;
            
            public event dsReceiptWiseSalesRowChangeEventHandler dsReceiptWiseSalesRowChanged;
            
            public event dsReceiptWiseSalesRowChangeEventHandler dsReceiptWiseSalesRowDeleting;
            
            public event dsReceiptWiseSalesRowChangeEventHandler dsReceiptWiseSalesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddsReceiptWiseSalesRow(dsReceiptWiseSalesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsReceiptWiseSalesRow AdddsReceiptWiseSalesRow(string Loca, string Loca_Descrip, System.DateTime BillDate, string Receipt_No, string Unit, decimal Amount, string DateFrom, string DateTo, decimal Discount) {
                dsReceiptWiseSalesRow rowdsReceiptWiseSalesRow = ((dsReceiptWiseSalesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Loca,
                        Loca_Descrip,
                        BillDate,
                        Receipt_No,
                        Unit,
                        Amount,
                        DateFrom,
                        DateTo,
                        Discount};
                rowdsReceiptWiseSalesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdsReceiptWiseSalesRow);
                return rowdsReceiptWiseSalesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dsReceiptWiseSalesDataTable cln = ((dsReceiptWiseSalesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dsReceiptWiseSalesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnLoca = base.Columns["Loca"];
                this.columnLoca_Descrip = base.Columns["Loca_Descrip"];
                this.columnBillDate = base.Columns["BillDate"];
                this.columnReceipt_No = base.Columns["Receipt_No"];
                this.columnUnit = base.Columns["Unit"];
                this.columnAmount = base.Columns["Amount"];
                this.columnDateFrom = base.Columns["DateFrom"];
                this.columnDateTo = base.Columns["DateTo"];
                this.columnDiscount = base.Columns["Discount"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnLoca = new global::System.Data.DataColumn("Loca", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoca);
                this.columnLoca_Descrip = new global::System.Data.DataColumn("Loca_Descrip", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoca_Descrip);
                this.columnBillDate = new global::System.Data.DataColumn("BillDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBillDate);
                this.columnReceipt_No = new global::System.Data.DataColumn("Receipt_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReceipt_No);
                this.columnUnit = new global::System.Data.DataColumn("Unit", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnit);
                this.columnAmount = new global::System.Data.DataColumn("Amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
                this.columnDateFrom = new global::System.Data.DataColumn("DateFrom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateFrom);
                this.columnDateTo = new global::System.Data.DataColumn("DateTo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateTo);
                this.columnDiscount = new global::System.Data.DataColumn("Discount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiscount);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsReceiptWiseSalesRow NewdsReceiptWiseSalesRow() {
                return ((dsReceiptWiseSalesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dsReceiptWiseSalesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dsReceiptWiseSalesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dsReceiptWiseSalesRowChanged != null)) {
                    this.dsReceiptWiseSalesRowChanged(this, new dsReceiptWiseSalesRowChangeEvent(((dsReceiptWiseSalesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dsReceiptWiseSalesRowChanging != null)) {
                    this.dsReceiptWiseSalesRowChanging(this, new dsReceiptWiseSalesRowChangeEvent(((dsReceiptWiseSalesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dsReceiptWiseSalesRowDeleted != null)) {
                    this.dsReceiptWiseSalesRowDeleted(this, new dsReceiptWiseSalesRowChangeEvent(((dsReceiptWiseSalesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dsReceiptWiseSalesRowDeleting != null)) {
                    this.dsReceiptWiseSalesRowDeleting(this, new dsReceiptWiseSalesRowChangeEvent(((dsReceiptWiseSalesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedsReceiptWiseSalesRow(dsReceiptWiseSalesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dsReceiptWiseSalesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dsSalesmanSalesDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnSale_Code;
            
            private global::System.Data.DataColumn columnSale_Name;
            
            private global::System.Data.DataColumn columnVehicle_No;
            
            private global::System.Data.DataColumn columnSales_Target;
            
            private global::System.Data.DataColumn columniid;
            
            private global::System.Data.DataColumn columnAmount;
            
            private global::System.Data.DataColumn columnDateFrom;
            
            private global::System.Data.DataColumn columnDateTo;
            
            private global::System.Data.DataColumn columnItem_Code;
            
            private global::System.Data.DataColumn columnItem_Descrip;
            
            private global::System.Data.DataColumn columnUnit_Price;
            
            private global::System.Data.DataColumn columnQty;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsSalesmanSalesDataTable() {
                this.TableName = "dsSalesmanSales";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsSalesmanSalesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dsSalesmanSalesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Sale_CodeColumn {
                get {
                    return this.columnSale_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Sale_NameColumn {
                get {
                    return this.columnSale_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Vehicle_NoColumn {
                get {
                    return this.columnVehicle_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Sales_TargetColumn {
                get {
                    return this.columnSales_Target;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn iidColumn {
                get {
                    return this.columniid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateFromColumn {
                get {
                    return this.columnDateFrom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateToColumn {
                get {
                    return this.columnDateTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Item_CodeColumn {
                get {
                    return this.columnItem_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Item_DescripColumn {
                get {
                    return this.columnItem_Descrip;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Unit_PriceColumn {
                get {
                    return this.columnUnit_Price;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QtyColumn {
                get {
                    return this.columnQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsSalesmanSalesRow this[int index] {
                get {
                    return ((dsSalesmanSalesRow)(this.Rows[index]));
                }
            }
            
            public event dsSalesmanSalesRowChangeEventHandler dsSalesmanSalesRowChanging;
            
            public event dsSalesmanSalesRowChangeEventHandler dsSalesmanSalesRowChanged;
            
            public event dsSalesmanSalesRowChangeEventHandler dsSalesmanSalesRowDeleting;
            
            public event dsSalesmanSalesRowChangeEventHandler dsSalesmanSalesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddsSalesmanSalesRow(dsSalesmanSalesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsSalesmanSalesRow AdddsSalesmanSalesRow(string Sale_Code, string Sale_Name, string Vehicle_No, string Sales_Target, string iid, decimal Amount, string DateFrom, string DateTo, string Item_Code, string Item_Descrip, string Unit_Price, string Qty) {
                dsSalesmanSalesRow rowdsSalesmanSalesRow = ((dsSalesmanSalesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Sale_Code,
                        Sale_Name,
                        Vehicle_No,
                        Sales_Target,
                        iid,
                        Amount,
                        DateFrom,
                        DateTo,
                        Item_Code,
                        Item_Descrip,
                        Unit_Price,
                        Qty};
                rowdsSalesmanSalesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdsSalesmanSalesRow);
                return rowdsSalesmanSalesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dsSalesmanSalesDataTable cln = ((dsSalesmanSalesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dsSalesmanSalesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSale_Code = base.Columns["Sale_Code"];
                this.columnSale_Name = base.Columns["Sale_Name"];
                this.columnVehicle_No = base.Columns["Vehicle_No"];
                this.columnSales_Target = base.Columns["Sales_Target"];
                this.columniid = base.Columns["iid"];
                this.columnAmount = base.Columns["Amount"];
                this.columnDateFrom = base.Columns["DateFrom"];
                this.columnDateTo = base.Columns["DateTo"];
                this.columnItem_Code = base.Columns["Item_Code"];
                this.columnItem_Descrip = base.Columns["Item_Descrip"];
                this.columnUnit_Price = base.Columns["Unit_Price"];
                this.columnQty = base.Columns["Qty"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSale_Code = new global::System.Data.DataColumn("Sale_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSale_Code);
                this.columnSale_Name = new global::System.Data.DataColumn("Sale_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSale_Name);
                this.columnVehicle_No = new global::System.Data.DataColumn("Vehicle_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVehicle_No);
                this.columnSales_Target = new global::System.Data.DataColumn("Sales_Target", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSales_Target);
                this.columniid = new global::System.Data.DataColumn("iid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columniid);
                this.columnAmount = new global::System.Data.DataColumn("Amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
                this.columnDateFrom = new global::System.Data.DataColumn("DateFrom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateFrom);
                this.columnDateTo = new global::System.Data.DataColumn("DateTo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateTo);
                this.columnItem_Code = new global::System.Data.DataColumn("Item_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItem_Code);
                this.columnItem_Descrip = new global::System.Data.DataColumn("Item_Descrip", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItem_Descrip);
                this.columnUnit_Price = new global::System.Data.DataColumn("Unit_Price", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnit_Price);
                this.columnQty = new global::System.Data.DataColumn("Qty", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQty);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsSalesmanSalesRow NewdsSalesmanSalesRow() {
                return ((dsSalesmanSalesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dsSalesmanSalesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dsSalesmanSalesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dsSalesmanSalesRowChanged != null)) {
                    this.dsSalesmanSalesRowChanged(this, new dsSalesmanSalesRowChangeEvent(((dsSalesmanSalesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dsSalesmanSalesRowChanging != null)) {
                    this.dsSalesmanSalesRowChanging(this, new dsSalesmanSalesRowChangeEvent(((dsSalesmanSalesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dsSalesmanSalesRowDeleted != null)) {
                    this.dsSalesmanSalesRowDeleted(this, new dsSalesmanSalesRowChangeEvent(((dsSalesmanSalesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dsSalesmanSalesRowDeleting != null)) {
                    this.dsSalesmanSalesRowDeleting(this, new dsSalesmanSalesRowChangeEvent(((dsSalesmanSalesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedsSalesmanSalesRow(dsSalesmanSalesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dsSalesmanSalesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dsPurSalesStockDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnProd_Code;
            
            private global::System.Data.DataColumn columnProd_Name;
            
            private global::System.Data.DataColumn columnPurchase_price;
            
            private global::System.Data.DataColumn columnSelling_Price;
            
            private global::System.Data.DataColumn columnSel_Qty;
            
            private global::System.Data.DataColumn columnPur_Qty;
            
            private global::System.Data.DataColumn columnSt_Qty;
            
            private global::System.Data.DataColumn columnCodeFrom;
            
            private global::System.Data.DataColumn columnCodeTo;
            
            private global::System.Data.DataColumn columnDept_Code;
            
            private global::System.Data.DataColumn columnDept_Name;
            
            private global::System.Data.DataColumn columnLoca;
            
            private global::System.Data.DataColumn columnLoca_Descrip;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsPurSalesStockDataTable() {
                this.TableName = "dsPurSalesStock";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsPurSalesStockDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dsPurSalesStockDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Prod_CodeColumn {
                get {
                    return this.columnProd_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Prod_NameColumn {
                get {
                    return this.columnProd_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Purchase_priceColumn {
                get {
                    return this.columnPurchase_price;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Selling_PriceColumn {
                get {
                    return this.columnSelling_Price;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Sel_QtyColumn {
                get {
                    return this.columnSel_Qty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Pur_QtyColumn {
                get {
                    return this.columnPur_Qty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn St_QtyColumn {
                get {
                    return this.columnSt_Qty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CodeFromColumn {
                get {
                    return this.columnCodeFrom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CodeToColumn {
                get {
                    return this.columnCodeTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Dept_CodeColumn {
                get {
                    return this.columnDept_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Dept_NameColumn {
                get {
                    return this.columnDept_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LocaColumn {
                get {
                    return this.columnLoca;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Loca_DescripColumn {
                get {
                    return this.columnLoca_Descrip;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsPurSalesStockRow this[int index] {
                get {
                    return ((dsPurSalesStockRow)(this.Rows[index]));
                }
            }
            
            public event dsPurSalesStockRowChangeEventHandler dsPurSalesStockRowChanging;
            
            public event dsPurSalesStockRowChangeEventHandler dsPurSalesStockRowChanged;
            
            public event dsPurSalesStockRowChangeEventHandler dsPurSalesStockRowDeleting;
            
            public event dsPurSalesStockRowChangeEventHandler dsPurSalesStockRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddsPurSalesStockRow(dsPurSalesStockRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsPurSalesStockRow AdddsPurSalesStockRow(string Prod_Code, string Prod_Name, decimal Purchase_price, decimal Selling_Price, double Sel_Qty, double Pur_Qty, double St_Qty, string CodeFrom, string CodeTo, string Dept_Code, string Dept_Name, string Loca, string Loca_Descrip) {
                dsPurSalesStockRow rowdsPurSalesStockRow = ((dsPurSalesStockRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Prod_Code,
                        Prod_Name,
                        Purchase_price,
                        Selling_Price,
                        Sel_Qty,
                        Pur_Qty,
                        St_Qty,
                        CodeFrom,
                        CodeTo,
                        Dept_Code,
                        Dept_Name,
                        Loca,
                        Loca_Descrip};
                rowdsPurSalesStockRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdsPurSalesStockRow);
                return rowdsPurSalesStockRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dsPurSalesStockDataTable cln = ((dsPurSalesStockDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dsPurSalesStockDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnProd_Code = base.Columns["Prod_Code"];
                this.columnProd_Name = base.Columns["Prod_Name"];
                this.columnPurchase_price = base.Columns["Purchase_price"];
                this.columnSelling_Price = base.Columns["Selling_Price"];
                this.columnSel_Qty = base.Columns["Sel_Qty"];
                this.columnPur_Qty = base.Columns["Pur_Qty"];
                this.columnSt_Qty = base.Columns["St_Qty"];
                this.columnCodeFrom = base.Columns["CodeFrom"];
                this.columnCodeTo = base.Columns["CodeTo"];
                this.columnDept_Code = base.Columns["Dept_Code"];
                this.columnDept_Name = base.Columns["Dept_Name"];
                this.columnLoca = base.Columns["Loca"];
                this.columnLoca_Descrip = base.Columns["Loca_Descrip"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnProd_Code = new global::System.Data.DataColumn("Prod_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Code);
                this.columnProd_Name = new global::System.Data.DataColumn("Prod_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Name);
                this.columnPurchase_price = new global::System.Data.DataColumn("Purchase_price", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPurchase_price);
                this.columnSelling_Price = new global::System.Data.DataColumn("Selling_Price", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelling_Price);
                this.columnSel_Qty = new global::System.Data.DataColumn("Sel_Qty", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSel_Qty);
                this.columnPur_Qty = new global::System.Data.DataColumn("Pur_Qty", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPur_Qty);
                this.columnSt_Qty = new global::System.Data.DataColumn("St_Qty", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSt_Qty);
                this.columnCodeFrom = new global::System.Data.DataColumn("CodeFrom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodeFrom);
                this.columnCodeTo = new global::System.Data.DataColumn("CodeTo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodeTo);
                this.columnDept_Code = new global::System.Data.DataColumn("Dept_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDept_Code);
                this.columnDept_Name = new global::System.Data.DataColumn("Dept_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDept_Name);
                this.columnLoca = new global::System.Data.DataColumn("Loca", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoca);
                this.columnLoca_Descrip = new global::System.Data.DataColumn("Loca_Descrip", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoca_Descrip);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsPurSalesStockRow NewdsPurSalesStockRow() {
                return ((dsPurSalesStockRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dsPurSalesStockRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dsPurSalesStockRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dsPurSalesStockRowChanged != null)) {
                    this.dsPurSalesStockRowChanged(this, new dsPurSalesStockRowChangeEvent(((dsPurSalesStockRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dsPurSalesStockRowChanging != null)) {
                    this.dsPurSalesStockRowChanging(this, new dsPurSalesStockRowChangeEvent(((dsPurSalesStockRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dsPurSalesStockRowDeleted != null)) {
                    this.dsPurSalesStockRowDeleted(this, new dsPurSalesStockRowChangeEvent(((dsPurSalesStockRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dsPurSalesStockRowDeleting != null)) {
                    this.dsPurSalesStockRowDeleting(this, new dsPurSalesStockRowChangeEvent(((dsPurSalesStockRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedsPurSalesStockRow(dsPurSalesStockRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dsPurSalesStockDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dsGivenDateStockDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnProd_Code;
            
            private global::System.Data.DataColumn columnProd_Name;
            
            private global::System.Data.DataColumn columnCurr_Qty;
            
            private global::System.Data.DataColumn columnPur_Qty;
            
            private global::System.Data.DataColumn columnSale_Qty;
            
            private global::System.Data.DataColumn columnSt_Adj;
            
            private global::System.Data.DataColumn columnOn_Date_Stock;
            
            private global::System.Data.DataColumn columnLoca;
            
            private global::System.Data.DataColumn columnLoca_Descrip;
            
            private global::System.Data.DataColumn columnDepartment_Id;
            
            private global::System.Data.DataColumn columnDept_Name;
            
            private global::System.Data.DataColumn columnDateTo;
            
            private global::System.Data.DataColumn columnPurchase_price;
            
            private global::System.Data.DataColumn columnSelling_Price;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsGivenDateStockDataTable() {
                this.TableName = "dsGivenDateStock";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsGivenDateStockDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dsGivenDateStockDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Prod_CodeColumn {
                get {
                    return this.columnProd_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Prod_NameColumn {
                get {
                    return this.columnProd_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Curr_QtyColumn {
                get {
                    return this.columnCurr_Qty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Pur_QtyColumn {
                get {
                    return this.columnPur_Qty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Sale_QtyColumn {
                get {
                    return this.columnSale_Qty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn St_AdjColumn {
                get {
                    return this.columnSt_Adj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn On_Date_StockColumn {
                get {
                    return this.columnOn_Date_Stock;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LocaColumn {
                get {
                    return this.columnLoca;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Loca_DescripColumn {
                get {
                    return this.columnLoca_Descrip;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Department_IdColumn {
                get {
                    return this.columnDepartment_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Dept_NameColumn {
                get {
                    return this.columnDept_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateToColumn {
                get {
                    return this.columnDateTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Purchase_priceColumn {
                get {
                    return this.columnPurchase_price;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Selling_PriceColumn {
                get {
                    return this.columnSelling_Price;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsGivenDateStockRow this[int index] {
                get {
                    return ((dsGivenDateStockRow)(this.Rows[index]));
                }
            }
            
            public event dsGivenDateStockRowChangeEventHandler dsGivenDateStockRowChanging;
            
            public event dsGivenDateStockRowChangeEventHandler dsGivenDateStockRowChanged;
            
            public event dsGivenDateStockRowChangeEventHandler dsGivenDateStockRowDeleting;
            
            public event dsGivenDateStockRowChangeEventHandler dsGivenDateStockRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddsGivenDateStockRow(dsGivenDateStockRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsGivenDateStockRow AdddsGivenDateStockRow(string Prod_Code, string Prod_Name, double Curr_Qty, double Pur_Qty, double Sale_Qty, double St_Adj, double On_Date_Stock, string Loca, string Loca_Descrip, string Department_Id, string Dept_Name, string DateTo, decimal Purchase_price, decimal Selling_Price) {
                dsGivenDateStockRow rowdsGivenDateStockRow = ((dsGivenDateStockRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Prod_Code,
                        Prod_Name,
                        Curr_Qty,
                        Pur_Qty,
                        Sale_Qty,
                        St_Adj,
                        On_Date_Stock,
                        Loca,
                        Loca_Descrip,
                        Department_Id,
                        Dept_Name,
                        DateTo,
                        Purchase_price,
                        Selling_Price};
                rowdsGivenDateStockRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdsGivenDateStockRow);
                return rowdsGivenDateStockRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dsGivenDateStockDataTable cln = ((dsGivenDateStockDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dsGivenDateStockDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnProd_Code = base.Columns["Prod_Code"];
                this.columnProd_Name = base.Columns["Prod_Name"];
                this.columnCurr_Qty = base.Columns["Curr_Qty"];
                this.columnPur_Qty = base.Columns["Pur_Qty"];
                this.columnSale_Qty = base.Columns["Sale_Qty"];
                this.columnSt_Adj = base.Columns["St_Adj"];
                this.columnOn_Date_Stock = base.Columns["On_Date_Stock"];
                this.columnLoca = base.Columns["Loca"];
                this.columnLoca_Descrip = base.Columns["Loca_Descrip"];
                this.columnDepartment_Id = base.Columns["Department_Id"];
                this.columnDept_Name = base.Columns["Dept_Name"];
                this.columnDateTo = base.Columns["DateTo"];
                this.columnPurchase_price = base.Columns["Purchase_price"];
                this.columnSelling_Price = base.Columns["Selling_Price"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnProd_Code = new global::System.Data.DataColumn("Prod_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Code);
                this.columnProd_Name = new global::System.Data.DataColumn("Prod_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Name);
                this.columnCurr_Qty = new global::System.Data.DataColumn("Curr_Qty", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurr_Qty);
                this.columnPur_Qty = new global::System.Data.DataColumn("Pur_Qty", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPur_Qty);
                this.columnSale_Qty = new global::System.Data.DataColumn("Sale_Qty", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSale_Qty);
                this.columnSt_Adj = new global::System.Data.DataColumn("St_Adj", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSt_Adj);
                this.columnOn_Date_Stock = new global::System.Data.DataColumn("On_Date_Stock", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOn_Date_Stock);
                this.columnLoca = new global::System.Data.DataColumn("Loca", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoca);
                this.columnLoca_Descrip = new global::System.Data.DataColumn("Loca_Descrip", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoca_Descrip);
                this.columnDepartment_Id = new global::System.Data.DataColumn("Department_Id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDepartment_Id);
                this.columnDept_Name = new global::System.Data.DataColumn("Dept_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDept_Name);
                this.columnDateTo = new global::System.Data.DataColumn("DateTo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateTo);
                this.columnPurchase_price = new global::System.Data.DataColumn("Purchase_price", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPurchase_price);
                this.columnSelling_Price = new global::System.Data.DataColumn("Selling_Price", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelling_Price);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsGivenDateStockRow NewdsGivenDateStockRow() {
                return ((dsGivenDateStockRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dsGivenDateStockRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dsGivenDateStockRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dsGivenDateStockRowChanged != null)) {
                    this.dsGivenDateStockRowChanged(this, new dsGivenDateStockRowChangeEvent(((dsGivenDateStockRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dsGivenDateStockRowChanging != null)) {
                    this.dsGivenDateStockRowChanging(this, new dsGivenDateStockRowChangeEvent(((dsGivenDateStockRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dsGivenDateStockRowDeleted != null)) {
                    this.dsGivenDateStockRowDeleted(this, new dsGivenDateStockRowChangeEvent(((dsGivenDateStockRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dsGivenDateStockRowDeleting != null)) {
                    this.dsGivenDateStockRowDeleting(this, new dsGivenDateStockRowChangeEvent(((dsGivenDateStockRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedsGivenDateStockRow(dsGivenDateStockRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dsGivenDateStockDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dsProductToBeReturnDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnDoc_No;
            
            private global::System.Data.DataColumn columnPost_Date;
            
            private global::System.Data.DataColumn columnProd_Code;
            
            private global::System.Data.DataColumn columnProd_Name;
            
            private global::System.Data.DataColumn columnQty;
            
            private global::System.Data.DataColumn columnPurchase_Price;
            
            private global::System.Data.DataColumn columnSupplier_Id;
            
            private global::System.Data.DataColumn columnSupp_Name;
            
            private global::System.Data.DataColumn columnDateFrom;
            
            private global::System.Data.DataColumn columnDateTo;
            
            private global::System.Data.DataColumn columnPurchased_Date;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsProductToBeReturnDataTable() {
                this.TableName = "dsProductToBeReturn";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsProductToBeReturnDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dsProductToBeReturnDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Doc_NoColumn {
                get {
                    return this.columnDoc_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Post_DateColumn {
                get {
                    return this.columnPost_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Prod_CodeColumn {
                get {
                    return this.columnProd_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Prod_NameColumn {
                get {
                    return this.columnProd_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QtyColumn {
                get {
                    return this.columnQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Purchase_PriceColumn {
                get {
                    return this.columnPurchase_Price;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Supplier_IdColumn {
                get {
                    return this.columnSupplier_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Supp_NameColumn {
                get {
                    return this.columnSupp_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateFromColumn {
                get {
                    return this.columnDateFrom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateToColumn {
                get {
                    return this.columnDateTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Purchased_DateColumn {
                get {
                    return this.columnPurchased_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsProductToBeReturnRow this[int index] {
                get {
                    return ((dsProductToBeReturnRow)(this.Rows[index]));
                }
            }
            
            public event dsProductToBeReturnRowChangeEventHandler dsProductToBeReturnRowChanging;
            
            public event dsProductToBeReturnRowChangeEventHandler dsProductToBeReturnRowChanged;
            
            public event dsProductToBeReturnRowChangeEventHandler dsProductToBeReturnRowDeleting;
            
            public event dsProductToBeReturnRowChangeEventHandler dsProductToBeReturnRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddsProductToBeReturnRow(dsProductToBeReturnRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsProductToBeReturnRow AdddsProductToBeReturnRow(string Doc_No, string Post_Date, string Prod_Code, string Prod_Name, decimal Qty, string Purchase_Price, string Supplier_Id, string Supp_Name, string DateFrom, string DateTo, System.DateTime Purchased_Date) {
                dsProductToBeReturnRow rowdsProductToBeReturnRow = ((dsProductToBeReturnRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Doc_No,
                        Post_Date,
                        Prod_Code,
                        Prod_Name,
                        Qty,
                        Purchase_Price,
                        Supplier_Id,
                        Supp_Name,
                        DateFrom,
                        DateTo,
                        Purchased_Date};
                rowdsProductToBeReturnRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdsProductToBeReturnRow);
                return rowdsProductToBeReturnRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dsProductToBeReturnDataTable cln = ((dsProductToBeReturnDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dsProductToBeReturnDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDoc_No = base.Columns["Doc_No"];
                this.columnPost_Date = base.Columns["Post_Date"];
                this.columnProd_Code = base.Columns["Prod_Code"];
                this.columnProd_Name = base.Columns["Prod_Name"];
                this.columnQty = base.Columns["Qty"];
                this.columnPurchase_Price = base.Columns["Purchase_Price"];
                this.columnSupplier_Id = base.Columns["Supplier_Id"];
                this.columnSupp_Name = base.Columns["Supp_Name"];
                this.columnDateFrom = base.Columns["DateFrom"];
                this.columnDateTo = base.Columns["DateTo"];
                this.columnPurchased_Date = base.Columns["Purchased_Date"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDoc_No = new global::System.Data.DataColumn("Doc_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDoc_No);
                this.columnPost_Date = new global::System.Data.DataColumn("Post_Date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPost_Date);
                this.columnProd_Code = new global::System.Data.DataColumn("Prod_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Code);
                this.columnProd_Name = new global::System.Data.DataColumn("Prod_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Name);
                this.columnQty = new global::System.Data.DataColumn("Qty", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQty);
                this.columnPurchase_Price = new global::System.Data.DataColumn("Purchase_Price", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPurchase_Price);
                this.columnSupplier_Id = new global::System.Data.DataColumn("Supplier_Id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplier_Id);
                this.columnSupp_Name = new global::System.Data.DataColumn("Supp_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupp_Name);
                this.columnDateFrom = new global::System.Data.DataColumn("DateFrom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateFrom);
                this.columnDateTo = new global::System.Data.DataColumn("DateTo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateTo);
                this.columnPurchased_Date = new global::System.Data.DataColumn("Purchased_Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPurchased_Date);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsProductToBeReturnRow NewdsProductToBeReturnRow() {
                return ((dsProductToBeReturnRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dsProductToBeReturnRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dsProductToBeReturnRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dsProductToBeReturnRowChanged != null)) {
                    this.dsProductToBeReturnRowChanged(this, new dsProductToBeReturnRowChangeEvent(((dsProductToBeReturnRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dsProductToBeReturnRowChanging != null)) {
                    this.dsProductToBeReturnRowChanging(this, new dsProductToBeReturnRowChangeEvent(((dsProductToBeReturnRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dsProductToBeReturnRowDeleted != null)) {
                    this.dsProductToBeReturnRowDeleted(this, new dsProductToBeReturnRowChangeEvent(((dsProductToBeReturnRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dsProductToBeReturnRowDeleting != null)) {
                    this.dsProductToBeReturnRowDeleting(this, new dsProductToBeReturnRowChangeEvent(((dsProductToBeReturnRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedsProductToBeReturnRow(dsProductToBeReturnRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dsProductToBeReturnDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dsProdROLDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnLoca;
            
            private global::System.Data.DataColumn columnROL;
            
            private global::System.Data.DataColumn columnRO_Qty;
            
            private global::System.Data.DataColumn columnLoca_Descrip;
            
            private global::System.Data.DataColumn columnQty;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsProdROLDataTable() {
                this.TableName = "dsProdROL";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsProdROLDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dsProdROLDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LocaColumn {
                get {
                    return this.columnLoca;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ROLColumn {
                get {
                    return this.columnROL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RO_QtyColumn {
                get {
                    return this.columnRO_Qty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Loca_DescripColumn {
                get {
                    return this.columnLoca_Descrip;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QtyColumn {
                get {
                    return this.columnQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsProdROLRow this[int index] {
                get {
                    return ((dsProdROLRow)(this.Rows[index]));
                }
            }
            
            public event dsProdROLRowChangeEventHandler dsProdROLRowChanging;
            
            public event dsProdROLRowChangeEventHandler dsProdROLRowChanged;
            
            public event dsProdROLRowChangeEventHandler dsProdROLRowDeleting;
            
            public event dsProdROLRowChangeEventHandler dsProdROLRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddsProdROLRow(dsProdROLRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsProdROLRow AdddsProdROLRow(string Loca, double ROL, double RO_Qty, string Loca_Descrip, double Qty) {
                dsProdROLRow rowdsProdROLRow = ((dsProdROLRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Loca,
                        ROL,
                        RO_Qty,
                        Loca_Descrip,
                        Qty};
                rowdsProdROLRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdsProdROLRow);
                return rowdsProdROLRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dsProdROLDataTable cln = ((dsProdROLDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dsProdROLDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnLoca = base.Columns["Loca"];
                this.columnROL = base.Columns["ROL"];
                this.columnRO_Qty = base.Columns["RO_Qty"];
                this.columnLoca_Descrip = base.Columns["Loca_Descrip"];
                this.columnQty = base.Columns["Qty"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnLoca = new global::System.Data.DataColumn("Loca", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoca);
                this.columnROL = new global::System.Data.DataColumn("ROL", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnROL);
                this.columnRO_Qty = new global::System.Data.DataColumn("RO_Qty", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRO_Qty);
                this.columnLoca_Descrip = new global::System.Data.DataColumn("Loca_Descrip", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoca_Descrip);
                this.columnQty = new global::System.Data.DataColumn("Qty", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQty);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsProdROLRow NewdsProdROLRow() {
                return ((dsProdROLRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dsProdROLRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dsProdROLRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dsProdROLRowChanged != null)) {
                    this.dsProdROLRowChanged(this, new dsProdROLRowChangeEvent(((dsProdROLRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dsProdROLRowChanging != null)) {
                    this.dsProdROLRowChanging(this, new dsProdROLRowChangeEvent(((dsProdROLRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dsProdROLRowDeleted != null)) {
                    this.dsProdROLRowDeleted(this, new dsProdROLRowChangeEvent(((dsProdROLRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dsProdROLRowDeleting != null)) {
                    this.dsProdROLRowDeleting(this, new dsProdROLRowChangeEvent(((dsProdROLRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedsProdROLRow(dsProdROLRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dsProdROLDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dsProductReqDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnProd_Code;
            
            private global::System.Data.DataColumn columnProd_Name;
            
            private global::System.Data.DataColumn columnDepartment_Id;
            
            private global::System.Data.DataColumn columnDept_Name;
            
            private global::System.Data.DataColumn columnSt_Qty;
            
            private global::System.Data.DataColumn columnSR_Qty;
            
            private global::System.Data.DataColumn columnROL;
            
            private global::System.Data.DataColumn columnRO_Qty;
            
            private global::System.Data.DataColumn columnCodeFrom;
            
            private global::System.Data.DataColumn columnCodeTo;
            
            private global::System.Data.DataColumn columnLoca;
            
            private global::System.Data.DataColumn columnLoca_Descrip;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsProductReqDataTable() {
                this.TableName = "dsProductReq";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsProductReqDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dsProductReqDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Prod_CodeColumn {
                get {
                    return this.columnProd_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Prod_NameColumn {
                get {
                    return this.columnProd_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Department_IdColumn {
                get {
                    return this.columnDepartment_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Dept_NameColumn {
                get {
                    return this.columnDept_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn St_QtyColumn {
                get {
                    return this.columnSt_Qty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SR_QtyColumn {
                get {
                    return this.columnSR_Qty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ROLColumn {
                get {
                    return this.columnROL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RO_QtyColumn {
                get {
                    return this.columnRO_Qty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CodeFromColumn {
                get {
                    return this.columnCodeFrom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CodeToColumn {
                get {
                    return this.columnCodeTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LocaColumn {
                get {
                    return this.columnLoca;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Loca_DescripColumn {
                get {
                    return this.columnLoca_Descrip;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsProductReqRow this[int index] {
                get {
                    return ((dsProductReqRow)(this.Rows[index]));
                }
            }
            
            public event dsProductReqRowChangeEventHandler dsProductReqRowChanging;
            
            public event dsProductReqRowChangeEventHandler dsProductReqRowChanged;
            
            public event dsProductReqRowChangeEventHandler dsProductReqRowDeleting;
            
            public event dsProductReqRowChangeEventHandler dsProductReqRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddsProductReqRow(dsProductReqRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsProductReqRow AdddsProductReqRow(string Prod_Code, string Prod_Name, string Department_Id, string Dept_Name, double St_Qty, double SR_Qty, double ROL, double RO_Qty, string CodeFrom, string CodeTo, string Loca, string Loca_Descrip) {
                dsProductReqRow rowdsProductReqRow = ((dsProductReqRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Prod_Code,
                        Prod_Name,
                        Department_Id,
                        Dept_Name,
                        St_Qty,
                        SR_Qty,
                        ROL,
                        RO_Qty,
                        CodeFrom,
                        CodeTo,
                        Loca,
                        Loca_Descrip};
                rowdsProductReqRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdsProductReqRow);
                return rowdsProductReqRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dsProductReqDataTable cln = ((dsProductReqDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dsProductReqDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnProd_Code = base.Columns["Prod_Code"];
                this.columnProd_Name = base.Columns["Prod_Name"];
                this.columnDepartment_Id = base.Columns["Department_Id"];
                this.columnDept_Name = base.Columns["Dept_Name"];
                this.columnSt_Qty = base.Columns["St_Qty"];
                this.columnSR_Qty = base.Columns["SR_Qty"];
                this.columnROL = base.Columns["ROL"];
                this.columnRO_Qty = base.Columns["RO_Qty"];
                this.columnCodeFrom = base.Columns["CodeFrom"];
                this.columnCodeTo = base.Columns["CodeTo"];
                this.columnLoca = base.Columns["Loca"];
                this.columnLoca_Descrip = base.Columns["Loca_Descrip"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnProd_Code = new global::System.Data.DataColumn("Prod_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Code);
                this.columnProd_Name = new global::System.Data.DataColumn("Prod_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Name);
                this.columnDepartment_Id = new global::System.Data.DataColumn("Department_Id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDepartment_Id);
                this.columnDept_Name = new global::System.Data.DataColumn("Dept_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDept_Name);
                this.columnSt_Qty = new global::System.Data.DataColumn("St_Qty", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSt_Qty);
                this.columnSR_Qty = new global::System.Data.DataColumn("SR_Qty", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSR_Qty);
                this.columnROL = new global::System.Data.DataColumn("ROL", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnROL);
                this.columnRO_Qty = new global::System.Data.DataColumn("RO_Qty", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRO_Qty);
                this.columnCodeFrom = new global::System.Data.DataColumn("CodeFrom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodeFrom);
                this.columnCodeTo = new global::System.Data.DataColumn("CodeTo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodeTo);
                this.columnLoca = new global::System.Data.DataColumn("Loca", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoca);
                this.columnLoca_Descrip = new global::System.Data.DataColumn("Loca_Descrip", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoca_Descrip);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsProductReqRow NewdsProductReqRow() {
                return ((dsProductReqRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dsProductReqRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dsProductReqRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dsProductReqRowChanged != null)) {
                    this.dsProductReqRowChanged(this, new dsProductReqRowChangeEvent(((dsProductReqRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dsProductReqRowChanging != null)) {
                    this.dsProductReqRowChanging(this, new dsProductReqRowChangeEvent(((dsProductReqRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dsProductReqRowDeleted != null)) {
                    this.dsProductReqRowDeleted(this, new dsProductReqRowChangeEvent(((dsProductReqRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dsProductReqRowDeleting != null)) {
                    this.dsProductReqRowDeleting(this, new dsProductReqRowChangeEvent(((dsProductReqRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedsProductReqRow(dsProductReqRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dsProductReqDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dsProductDiscountDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnItem_Code;
            
            private global::System.Data.DataColumn columnItem_Descrip;
            
            private global::System.Data.DataColumn columnUnit_Price;
            
            private global::System.Data.DataColumn columnAmount;
            
            private global::System.Data.DataColumn columnReceipt_No;
            
            private global::System.Data.DataColumn columnUserName;
            
            private global::System.Data.DataColumn columnBillDate;
            
            private global::System.Data.DataColumn columnUnit;
            
            private global::System.Data.DataColumn columnLoca;
            
            private global::System.Data.DataColumn columnLoca_Descrip;
            
            private global::System.Data.DataColumn columnCodeFrom;
            
            private global::System.Data.DataColumn columnCodeTo;
            
            private global::System.Data.DataColumn columnDateFrom;
            
            private global::System.Data.DataColumn columnDateTo;
            
            private global::System.Data.DataColumn columnTr_Date;
            
            private global::System.Data.DataColumn columnQty;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsProductDiscountDataTable() {
                this.TableName = "dsProductDiscount";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsProductDiscountDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dsProductDiscountDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Item_CodeColumn {
                get {
                    return this.columnItem_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Item_DescripColumn {
                get {
                    return this.columnItem_Descrip;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Unit_PriceColumn {
                get {
                    return this.columnUnit_Price;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Receipt_NoColumn {
                get {
                    return this.columnReceipt_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UserNameColumn {
                get {
                    return this.columnUserName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BillDateColumn {
                get {
                    return this.columnBillDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UnitColumn {
                get {
                    return this.columnUnit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LocaColumn {
                get {
                    return this.columnLoca;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Loca_DescripColumn {
                get {
                    return this.columnLoca_Descrip;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CodeFromColumn {
                get {
                    return this.columnCodeFrom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CodeToColumn {
                get {
                    return this.columnCodeTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateFromColumn {
                get {
                    return this.columnDateFrom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateToColumn {
                get {
                    return this.columnDateTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Tr_DateColumn {
                get {
                    return this.columnTr_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QtyColumn {
                get {
                    return this.columnQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsProductDiscountRow this[int index] {
                get {
                    return ((dsProductDiscountRow)(this.Rows[index]));
                }
            }
            
            public event dsProductDiscountRowChangeEventHandler dsProductDiscountRowChanging;
            
            public event dsProductDiscountRowChangeEventHandler dsProductDiscountRowChanged;
            
            public event dsProductDiscountRowChangeEventHandler dsProductDiscountRowDeleting;
            
            public event dsProductDiscountRowChangeEventHandler dsProductDiscountRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddsProductDiscountRow(dsProductDiscountRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsProductDiscountRow AdddsProductDiscountRow(
                        string Item_Code, 
                        string Item_Descrip, 
                        string Unit_Price, 
                        decimal Amount, 
                        string Receipt_No, 
                        string UserName, 
                        string BillDate, 
                        string Unit, 
                        string Loca, 
                        string Loca_Descrip, 
                        string CodeFrom, 
                        string CodeTo, 
                        string DateFrom, 
                        string DateTo, 
                        System.DateTime Tr_Date, 
                        double Qty) {
                dsProductDiscountRow rowdsProductDiscountRow = ((dsProductDiscountRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Item_Code,
                        Item_Descrip,
                        Unit_Price,
                        Amount,
                        Receipt_No,
                        UserName,
                        BillDate,
                        Unit,
                        Loca,
                        Loca_Descrip,
                        CodeFrom,
                        CodeTo,
                        DateFrom,
                        DateTo,
                        Tr_Date,
                        Qty};
                rowdsProductDiscountRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdsProductDiscountRow);
                return rowdsProductDiscountRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dsProductDiscountDataTable cln = ((dsProductDiscountDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dsProductDiscountDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnItem_Code = base.Columns["Item_Code"];
                this.columnItem_Descrip = base.Columns["Item_Descrip"];
                this.columnUnit_Price = base.Columns["Unit_Price"];
                this.columnAmount = base.Columns["Amount"];
                this.columnReceipt_No = base.Columns["Receipt_No"];
                this.columnUserName = base.Columns["UserName"];
                this.columnBillDate = base.Columns["BillDate"];
                this.columnUnit = base.Columns["Unit"];
                this.columnLoca = base.Columns["Loca"];
                this.columnLoca_Descrip = base.Columns["Loca_Descrip"];
                this.columnCodeFrom = base.Columns["CodeFrom"];
                this.columnCodeTo = base.Columns["CodeTo"];
                this.columnDateFrom = base.Columns["DateFrom"];
                this.columnDateTo = base.Columns["DateTo"];
                this.columnTr_Date = base.Columns["Tr_Date"];
                this.columnQty = base.Columns["Qty"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnItem_Code = new global::System.Data.DataColumn("Item_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItem_Code);
                this.columnItem_Descrip = new global::System.Data.DataColumn("Item_Descrip", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItem_Descrip);
                this.columnUnit_Price = new global::System.Data.DataColumn("Unit_Price", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnit_Price);
                this.columnAmount = new global::System.Data.DataColumn("Amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
                this.columnReceipt_No = new global::System.Data.DataColumn("Receipt_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReceipt_No);
                this.columnUserName = new global::System.Data.DataColumn("UserName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserName);
                this.columnBillDate = new global::System.Data.DataColumn("BillDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBillDate);
                this.columnUnit = new global::System.Data.DataColumn("Unit", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnit);
                this.columnLoca = new global::System.Data.DataColumn("Loca", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoca);
                this.columnLoca_Descrip = new global::System.Data.DataColumn("Loca_Descrip", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoca_Descrip);
                this.columnCodeFrom = new global::System.Data.DataColumn("CodeFrom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodeFrom);
                this.columnCodeTo = new global::System.Data.DataColumn("CodeTo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodeTo);
                this.columnDateFrom = new global::System.Data.DataColumn("DateFrom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateFrom);
                this.columnDateTo = new global::System.Data.DataColumn("DateTo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateTo);
                this.columnTr_Date = new global::System.Data.DataColumn("Tr_Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTr_Date);
                this.columnQty = new global::System.Data.DataColumn("Qty", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQty);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsProductDiscountRow NewdsProductDiscountRow() {
                return ((dsProductDiscountRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dsProductDiscountRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dsProductDiscountRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dsProductDiscountRowChanged != null)) {
                    this.dsProductDiscountRowChanged(this, new dsProductDiscountRowChangeEvent(((dsProductDiscountRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dsProductDiscountRowChanging != null)) {
                    this.dsProductDiscountRowChanging(this, new dsProductDiscountRowChangeEvent(((dsProductDiscountRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dsProductDiscountRowDeleted != null)) {
                    this.dsProductDiscountRowDeleted(this, new dsProductDiscountRowChangeEvent(((dsProductDiscountRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dsProductDiscountRowDeleting != null)) {
                    this.dsProductDiscountRowDeleting(this, new dsProductDiscountRowChangeEvent(((dsProductDiscountRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedsProductDiscountRow(dsProductDiscountRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dsProductDiscountDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PendingReturnsDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnDoc_No;
            
            private global::System.Data.DataColumn columnTransaction_Date;
            
            private global::System.Data.DataColumn columnTransaction_Amount;
            
            private global::System.Data.DataColumn columnBalance_Amount;
            
            private global::System.Data.DataColumn columnTemp_DocNo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PendingReturnsDataTable() {
                this.TableName = "PendingReturns";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PendingReturnsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected PendingReturnsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Doc_NoColumn {
                get {
                    return this.columnDoc_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Transaction_DateColumn {
                get {
                    return this.columnTransaction_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Transaction_AmountColumn {
                get {
                    return this.columnTransaction_Amount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Balance_AmountColumn {
                get {
                    return this.columnBalance_Amount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Temp_DocNoColumn {
                get {
                    return this.columnTemp_DocNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PendingReturnsRow this[int index] {
                get {
                    return ((PendingReturnsRow)(this.Rows[index]));
                }
            }
            
            public event PendingReturnsRowChangeEventHandler PendingReturnsRowChanging;
            
            public event PendingReturnsRowChangeEventHandler PendingReturnsRowChanged;
            
            public event PendingReturnsRowChangeEventHandler PendingReturnsRowDeleting;
            
            public event PendingReturnsRowChangeEventHandler PendingReturnsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPendingReturnsRow(PendingReturnsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PendingReturnsRow AddPendingReturnsRow(string Doc_No, string Transaction_Date, string Transaction_Amount, string Balance_Amount, string Temp_DocNo) {
                PendingReturnsRow rowPendingReturnsRow = ((PendingReturnsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Doc_No,
                        Transaction_Date,
                        Transaction_Amount,
                        Balance_Amount,
                        Temp_DocNo};
                rowPendingReturnsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPendingReturnsRow);
                return rowPendingReturnsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                PendingReturnsDataTable cln = ((PendingReturnsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PendingReturnsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDoc_No = base.Columns["Doc_No"];
                this.columnTransaction_Date = base.Columns["Transaction_Date"];
                this.columnTransaction_Amount = base.Columns["Transaction_Amount"];
                this.columnBalance_Amount = base.Columns["Balance_Amount"];
                this.columnTemp_DocNo = base.Columns["Temp_DocNo"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDoc_No = new global::System.Data.DataColumn("Doc_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDoc_No);
                this.columnTransaction_Date = new global::System.Data.DataColumn("Transaction_Date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTransaction_Date);
                this.columnTransaction_Amount = new global::System.Data.DataColumn("Transaction_Amount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTransaction_Amount);
                this.columnBalance_Amount = new global::System.Data.DataColumn("Balance_Amount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBalance_Amount);
                this.columnTemp_DocNo = new global::System.Data.DataColumn("Temp_DocNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTemp_DocNo);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PendingReturnsRow NewPendingReturnsRow() {
                return ((PendingReturnsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PendingReturnsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(PendingReturnsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PendingReturnsRowChanged != null)) {
                    this.PendingReturnsRowChanged(this, new PendingReturnsRowChangeEvent(((PendingReturnsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PendingReturnsRowChanging != null)) {
                    this.PendingReturnsRowChanging(this, new PendingReturnsRowChangeEvent(((PendingReturnsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PendingReturnsRowDeleted != null)) {
                    this.PendingReturnsRowDeleted(this, new PendingReturnsRowChangeEvent(((PendingReturnsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PendingReturnsRowDeleting != null)) {
                    this.PendingReturnsRowDeleting(this, new PendingReturnsRowChangeEvent(((PendingReturnsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePendingReturnsRow(PendingReturnsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PendingReturnsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SelectedSetoffDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnGrn_Doc;
            
            private global::System.Data.DataColumn columnGrn_Tr_Date;
            
            private global::System.Data.DataColumn columnGrn_Tr_Amount;
            
            private global::System.Data.DataColumn columnGrn_Balance_Amount;
            
            private global::System.Data.DataColumn columnSrn_Doc;
            
            private global::System.Data.DataColumn columnSrn_Tr_Date;
            
            private global::System.Data.DataColumn columnSrn_Tr_Amount;
            
            private global::System.Data.DataColumn columnSrn_Balance_Amount;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SelectedSetoffDataTable() {
                this.TableName = "SelectedSetoff";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SelectedSetoffDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected SelectedSetoffDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Grn_DocColumn {
                get {
                    return this.columnGrn_Doc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Grn_Tr_DateColumn {
                get {
                    return this.columnGrn_Tr_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Grn_Tr_AmountColumn {
                get {
                    return this.columnGrn_Tr_Amount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Grn_Balance_AmountColumn {
                get {
                    return this.columnGrn_Balance_Amount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Srn_DocColumn {
                get {
                    return this.columnSrn_Doc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Srn_Tr_DateColumn {
                get {
                    return this.columnSrn_Tr_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Srn_Tr_AmountColumn {
                get {
                    return this.columnSrn_Tr_Amount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Srn_Balance_AmountColumn {
                get {
                    return this.columnSrn_Balance_Amount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SelectedSetoffRow this[int index] {
                get {
                    return ((SelectedSetoffRow)(this.Rows[index]));
                }
            }
            
            public event SelectedSetoffRowChangeEventHandler SelectedSetoffRowChanging;
            
            public event SelectedSetoffRowChangeEventHandler SelectedSetoffRowChanged;
            
            public event SelectedSetoffRowChangeEventHandler SelectedSetoffRowDeleting;
            
            public event SelectedSetoffRowChangeEventHandler SelectedSetoffRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSelectedSetoffRow(SelectedSetoffRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SelectedSetoffRow AddSelectedSetoffRow(string Grn_Doc, string Grn_Tr_Date, string Grn_Tr_Amount, string Grn_Balance_Amount, string Srn_Doc, string Srn_Tr_Date, string Srn_Tr_Amount, string Srn_Balance_Amount) {
                SelectedSetoffRow rowSelectedSetoffRow = ((SelectedSetoffRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Grn_Doc,
                        Grn_Tr_Date,
                        Grn_Tr_Amount,
                        Grn_Balance_Amount,
                        Srn_Doc,
                        Srn_Tr_Date,
                        Srn_Tr_Amount,
                        Srn_Balance_Amount};
                rowSelectedSetoffRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSelectedSetoffRow);
                return rowSelectedSetoffRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                SelectedSetoffDataTable cln = ((SelectedSetoffDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SelectedSetoffDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnGrn_Doc = base.Columns["Grn_Doc"];
                this.columnGrn_Tr_Date = base.Columns["Grn_Tr_Date"];
                this.columnGrn_Tr_Amount = base.Columns["Grn_Tr_Amount"];
                this.columnGrn_Balance_Amount = base.Columns["Grn_Balance_Amount"];
                this.columnSrn_Doc = base.Columns["Srn_Doc"];
                this.columnSrn_Tr_Date = base.Columns["Srn_Tr_Date"];
                this.columnSrn_Tr_Amount = base.Columns["Srn_Tr_Amount"];
                this.columnSrn_Balance_Amount = base.Columns["Srn_Balance_Amount"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnGrn_Doc = new global::System.Data.DataColumn("Grn_Doc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrn_Doc);
                this.columnGrn_Tr_Date = new global::System.Data.DataColumn("Grn_Tr_Date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrn_Tr_Date);
                this.columnGrn_Tr_Amount = new global::System.Data.DataColumn("Grn_Tr_Amount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrn_Tr_Amount);
                this.columnGrn_Balance_Amount = new global::System.Data.DataColumn("Grn_Balance_Amount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrn_Balance_Amount);
                this.columnSrn_Doc = new global::System.Data.DataColumn("Srn_Doc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSrn_Doc);
                this.columnSrn_Tr_Date = new global::System.Data.DataColumn("Srn_Tr_Date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSrn_Tr_Date);
                this.columnSrn_Tr_Amount = new global::System.Data.DataColumn("Srn_Tr_Amount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSrn_Tr_Amount);
                this.columnSrn_Balance_Amount = new global::System.Data.DataColumn("Srn_Balance_Amount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSrn_Balance_Amount);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SelectedSetoffRow NewSelectedSetoffRow() {
                return ((SelectedSetoffRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SelectedSetoffRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(SelectedSetoffRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SelectedSetoffRowChanged != null)) {
                    this.SelectedSetoffRowChanged(this, new SelectedSetoffRowChangeEvent(((SelectedSetoffRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SelectedSetoffRowChanging != null)) {
                    this.SelectedSetoffRowChanging(this, new SelectedSetoffRowChangeEvent(((SelectedSetoffRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SelectedSetoffRowDeleted != null)) {
                    this.SelectedSetoffRowDeleted(this, new SelectedSetoffRowChangeEvent(((SelectedSetoffRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SelectedSetoffRowDeleting != null)) {
                    this.SelectedSetoffRowDeleting(this, new SelectedSetoffRowChangeEvent(((SelectedSetoffRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSelectedSetoffRow(SelectedSetoffRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SelectedSetoffDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dsPaymentsetOffDetailsDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnOrg_Doc_no;
            
            private global::System.Data.DataColumn columnDoc_No;
            
            private global::System.Data.DataColumn columnTransaction_Date;
            
            private global::System.Data.DataColumn columnTransaction_Amount;
            
            private global::System.Data.DataColumn columnPaid_Amount;
            
            private global::System.Data.DataColumn columnPost_Date;
            
            private global::System.Data.DataColumn columnSetOff_SR_Doc;
            
            private global::System.Data.DataColumn columnLoca;
            
            private global::System.Data.DataColumn columnLoca_Descrip;
            
            private global::System.Data.DataColumn columnAcc_Code;
            
            private global::System.Data.DataColumn columnSupp_Name;
            
            private global::System.Data.DataColumn columnStatus;
            
            private global::System.Data.DataColumn columnSetOff_Acc_Code;
            
            private global::System.Data.DataColumn columnTransaction_Date2;
            
            private global::System.Data.DataColumn columnCust_Name;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsPaymentsetOffDetailsDataTable() {
                this.TableName = "dsPaymentsetOffDetails";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsPaymentsetOffDetailsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dsPaymentsetOffDetailsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Org_Doc_noColumn {
                get {
                    return this.columnOrg_Doc_no;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Doc_NoColumn {
                get {
                    return this.columnDoc_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Transaction_DateColumn {
                get {
                    return this.columnTransaction_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Transaction_AmountColumn {
                get {
                    return this.columnTransaction_Amount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Paid_AmountColumn {
                get {
                    return this.columnPaid_Amount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Post_DateColumn {
                get {
                    return this.columnPost_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SetOff_SR_DocColumn {
                get {
                    return this.columnSetOff_SR_Doc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LocaColumn {
                get {
                    return this.columnLoca;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Loca_DescripColumn {
                get {
                    return this.columnLoca_Descrip;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Acc_CodeColumn {
                get {
                    return this.columnAcc_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Supp_NameColumn {
                get {
                    return this.columnSupp_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StatusColumn {
                get {
                    return this.columnStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SetOff_Acc_CodeColumn {
                get {
                    return this.columnSetOff_Acc_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Transaction_Date2Column {
                get {
                    return this.columnTransaction_Date2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cust_NameColumn {
                get {
                    return this.columnCust_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsPaymentsetOffDetailsRow this[int index] {
                get {
                    return ((dsPaymentsetOffDetailsRow)(this.Rows[index]));
                }
            }
            
            public event dsPaymentsetOffDetailsRowChangeEventHandler dsPaymentsetOffDetailsRowChanging;
            
            public event dsPaymentsetOffDetailsRowChangeEventHandler dsPaymentsetOffDetailsRowChanged;
            
            public event dsPaymentsetOffDetailsRowChangeEventHandler dsPaymentsetOffDetailsRowDeleting;
            
            public event dsPaymentsetOffDetailsRowChangeEventHandler dsPaymentsetOffDetailsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddsPaymentsetOffDetailsRow(dsPaymentsetOffDetailsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsPaymentsetOffDetailsRow AdddsPaymentsetOffDetailsRow(string Org_Doc_no, string Doc_No, string Transaction_Date, decimal Transaction_Amount, decimal Paid_Amount, string Post_Date, string SetOff_SR_Doc, string Loca, string Loca_Descrip, string Acc_Code, string Supp_Name, string Status, string SetOff_Acc_Code, string Transaction_Date2, string Cust_Name) {
                dsPaymentsetOffDetailsRow rowdsPaymentsetOffDetailsRow = ((dsPaymentsetOffDetailsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Org_Doc_no,
                        Doc_No,
                        Transaction_Date,
                        Transaction_Amount,
                        Paid_Amount,
                        Post_Date,
                        SetOff_SR_Doc,
                        Loca,
                        Loca_Descrip,
                        Acc_Code,
                        Supp_Name,
                        Status,
                        SetOff_Acc_Code,
                        Transaction_Date2,
                        Cust_Name};
                rowdsPaymentsetOffDetailsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdsPaymentsetOffDetailsRow);
                return rowdsPaymentsetOffDetailsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dsPaymentsetOffDetailsDataTable cln = ((dsPaymentsetOffDetailsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dsPaymentsetOffDetailsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnOrg_Doc_no = base.Columns["Org_Doc_no"];
                this.columnDoc_No = base.Columns["Doc_No"];
                this.columnTransaction_Date = base.Columns["Transaction_Date"];
                this.columnTransaction_Amount = base.Columns["Transaction_Amount"];
                this.columnPaid_Amount = base.Columns["Paid_Amount"];
                this.columnPost_Date = base.Columns["Post_Date"];
                this.columnSetOff_SR_Doc = base.Columns["SetOff_SR_Doc"];
                this.columnLoca = base.Columns["Loca"];
                this.columnLoca_Descrip = base.Columns["Loca_Descrip"];
                this.columnAcc_Code = base.Columns["Acc_Code"];
                this.columnSupp_Name = base.Columns["Supp_Name"];
                this.columnStatus = base.Columns["Status"];
                this.columnSetOff_Acc_Code = base.Columns["SetOff_Acc_Code"];
                this.columnTransaction_Date2 = base.Columns["Transaction_Date2"];
                this.columnCust_Name = base.Columns["Cust_Name"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnOrg_Doc_no = new global::System.Data.DataColumn("Org_Doc_no", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrg_Doc_no);
                this.columnDoc_No = new global::System.Data.DataColumn("Doc_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDoc_No);
                this.columnTransaction_Date = new global::System.Data.DataColumn("Transaction_Date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTransaction_Date);
                this.columnTransaction_Amount = new global::System.Data.DataColumn("Transaction_Amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTransaction_Amount);
                this.columnPaid_Amount = new global::System.Data.DataColumn("Paid_Amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaid_Amount);
                this.columnPost_Date = new global::System.Data.DataColumn("Post_Date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPost_Date);
                this.columnSetOff_SR_Doc = new global::System.Data.DataColumn("SetOff_SR_Doc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSetOff_SR_Doc);
                this.columnLoca = new global::System.Data.DataColumn("Loca", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoca);
                this.columnLoca_Descrip = new global::System.Data.DataColumn("Loca_Descrip", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoca_Descrip);
                this.columnAcc_Code = new global::System.Data.DataColumn("Acc_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAcc_Code);
                this.columnSupp_Name = new global::System.Data.DataColumn("Supp_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupp_Name);
                this.columnStatus = new global::System.Data.DataColumn("Status", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatus);
                this.columnSetOff_Acc_Code = new global::System.Data.DataColumn("SetOff_Acc_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSetOff_Acc_Code);
                this.columnTransaction_Date2 = new global::System.Data.DataColumn("Transaction_Date2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTransaction_Date2);
                this.columnCust_Name = new global::System.Data.DataColumn("Cust_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCust_Name);
                this.columnTransaction_Date2.Caption = "Transaction_Date";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsPaymentsetOffDetailsRow NewdsPaymentsetOffDetailsRow() {
                return ((dsPaymentsetOffDetailsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dsPaymentsetOffDetailsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dsPaymentsetOffDetailsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dsPaymentsetOffDetailsRowChanged != null)) {
                    this.dsPaymentsetOffDetailsRowChanged(this, new dsPaymentsetOffDetailsRowChangeEvent(((dsPaymentsetOffDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dsPaymentsetOffDetailsRowChanging != null)) {
                    this.dsPaymentsetOffDetailsRowChanging(this, new dsPaymentsetOffDetailsRowChangeEvent(((dsPaymentsetOffDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dsPaymentsetOffDetailsRowDeleted != null)) {
                    this.dsPaymentsetOffDetailsRowDeleted(this, new dsPaymentsetOffDetailsRowChangeEvent(((dsPaymentsetOffDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dsPaymentsetOffDetailsRowDeleting != null)) {
                    this.dsPaymentsetOffDetailsRowDeleting(this, new dsPaymentsetOffDetailsRowChangeEvent(((dsPaymentsetOffDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedsPaymentsetOffDetailsRow(dsPaymentsetOffDetailsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dsPaymentsetOffDetailsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dsPaymentSetOffSummaryDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnOrg_Doc_no;
            
            private global::System.Data.DataColumn columnDoc_No;
            
            private global::System.Data.DataColumn columnTransaction_Date;
            
            private global::System.Data.DataColumn columnTransaction_Amount;
            
            private global::System.Data.DataColumn columnPaid_Amount;
            
            private global::System.Data.DataColumn columnLoca;
            
            private global::System.Data.DataColumn columnAcc_Code;
            
            private global::System.Data.DataColumn columnPost_Date;
            
            private global::System.Data.DataColumn columnSetOff_SR_Doc;
            
            private global::System.Data.DataColumn columnIid;
            
            private global::System.Data.DataColumn columnLoca_Descrip;
            
            private global::System.Data.DataColumn columnSupp_Name;
            
            private global::System.Data.DataColumn columnTr_Date;
            
            private global::System.Data.DataColumn columnCodeFrom;
            
            private global::System.Data.DataColumn columnCodeTo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsPaymentSetOffSummaryDataTable() {
                this.TableName = "dsPaymentSetOffSummary";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsPaymentSetOffSummaryDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dsPaymentSetOffSummaryDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Org_Doc_noColumn {
                get {
                    return this.columnOrg_Doc_no;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Doc_NoColumn {
                get {
                    return this.columnDoc_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Transaction_DateColumn {
                get {
                    return this.columnTransaction_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Transaction_AmountColumn {
                get {
                    return this.columnTransaction_Amount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Paid_AmountColumn {
                get {
                    return this.columnPaid_Amount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LocaColumn {
                get {
                    return this.columnLoca;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Acc_CodeColumn {
                get {
                    return this.columnAcc_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Post_DateColumn {
                get {
                    return this.columnPost_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SetOff_SR_DocColumn {
                get {
                    return this.columnSetOff_SR_Doc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IidColumn {
                get {
                    return this.columnIid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Loca_DescripColumn {
                get {
                    return this.columnLoca_Descrip;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Supp_NameColumn {
                get {
                    return this.columnSupp_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Tr_DateColumn {
                get {
                    return this.columnTr_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CodeFromColumn {
                get {
                    return this.columnCodeFrom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CodeToColumn {
                get {
                    return this.columnCodeTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsPaymentSetOffSummaryRow this[int index] {
                get {
                    return ((dsPaymentSetOffSummaryRow)(this.Rows[index]));
                }
            }
            
            public event dsPaymentSetOffSummaryRowChangeEventHandler dsPaymentSetOffSummaryRowChanging;
            
            public event dsPaymentSetOffSummaryRowChangeEventHandler dsPaymentSetOffSummaryRowChanged;
            
            public event dsPaymentSetOffSummaryRowChangeEventHandler dsPaymentSetOffSummaryRowDeleting;
            
            public event dsPaymentSetOffSummaryRowChangeEventHandler dsPaymentSetOffSummaryRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddsPaymentSetOffSummaryRow(dsPaymentSetOffSummaryRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsPaymentSetOffSummaryRow AdddsPaymentSetOffSummaryRow(string Org_Doc_no, string Doc_No, string Transaction_Date, decimal Transaction_Amount, decimal Paid_Amount, string Loca, string Acc_Code, string Post_Date, string SetOff_SR_Doc, string Iid, string Loca_Descrip, string Supp_Name, System.DateTime Tr_Date, string CodeFrom, string CodeTo) {
                dsPaymentSetOffSummaryRow rowdsPaymentSetOffSummaryRow = ((dsPaymentSetOffSummaryRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Org_Doc_no,
                        Doc_No,
                        Transaction_Date,
                        Transaction_Amount,
                        Paid_Amount,
                        Loca,
                        Acc_Code,
                        Post_Date,
                        SetOff_SR_Doc,
                        Iid,
                        Loca_Descrip,
                        Supp_Name,
                        Tr_Date,
                        CodeFrom,
                        CodeTo};
                rowdsPaymentSetOffSummaryRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdsPaymentSetOffSummaryRow);
                return rowdsPaymentSetOffSummaryRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dsPaymentSetOffSummaryDataTable cln = ((dsPaymentSetOffSummaryDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dsPaymentSetOffSummaryDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnOrg_Doc_no = base.Columns["Org_Doc_no"];
                this.columnDoc_No = base.Columns["Doc_No"];
                this.columnTransaction_Date = base.Columns["Transaction_Date"];
                this.columnTransaction_Amount = base.Columns["Transaction_Amount"];
                this.columnPaid_Amount = base.Columns["Paid_Amount"];
                this.columnLoca = base.Columns["Loca"];
                this.columnAcc_Code = base.Columns["Acc_Code"];
                this.columnPost_Date = base.Columns["Post_Date"];
                this.columnSetOff_SR_Doc = base.Columns["SetOff_SR_Doc"];
                this.columnIid = base.Columns["Iid"];
                this.columnLoca_Descrip = base.Columns["Loca_Descrip"];
                this.columnSupp_Name = base.Columns["Supp_Name"];
                this.columnTr_Date = base.Columns["Tr_Date"];
                this.columnCodeFrom = base.Columns["CodeFrom"];
                this.columnCodeTo = base.Columns["CodeTo"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnOrg_Doc_no = new global::System.Data.DataColumn("Org_Doc_no", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrg_Doc_no);
                this.columnDoc_No = new global::System.Data.DataColumn("Doc_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDoc_No);
                this.columnTransaction_Date = new global::System.Data.DataColumn("Transaction_Date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTransaction_Date);
                this.columnTransaction_Amount = new global::System.Data.DataColumn("Transaction_Amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTransaction_Amount);
                this.columnPaid_Amount = new global::System.Data.DataColumn("Paid_Amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaid_Amount);
                this.columnLoca = new global::System.Data.DataColumn("Loca", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoca);
                this.columnAcc_Code = new global::System.Data.DataColumn("Acc_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAcc_Code);
                this.columnPost_Date = new global::System.Data.DataColumn("Post_Date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPost_Date);
                this.columnSetOff_SR_Doc = new global::System.Data.DataColumn("SetOff_SR_Doc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSetOff_SR_Doc);
                this.columnIid = new global::System.Data.DataColumn("Iid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIid);
                this.columnLoca_Descrip = new global::System.Data.DataColumn("Loca_Descrip", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoca_Descrip);
                this.columnSupp_Name = new global::System.Data.DataColumn("Supp_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupp_Name);
                this.columnTr_Date = new global::System.Data.DataColumn("Tr_Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTr_Date);
                this.columnCodeFrom = new global::System.Data.DataColumn("CodeFrom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodeFrom);
                this.columnCodeTo = new global::System.Data.DataColumn("CodeTo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodeTo);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsPaymentSetOffSummaryRow NewdsPaymentSetOffSummaryRow() {
                return ((dsPaymentSetOffSummaryRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dsPaymentSetOffSummaryRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dsPaymentSetOffSummaryRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dsPaymentSetOffSummaryRowChanged != null)) {
                    this.dsPaymentSetOffSummaryRowChanged(this, new dsPaymentSetOffSummaryRowChangeEvent(((dsPaymentSetOffSummaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dsPaymentSetOffSummaryRowChanging != null)) {
                    this.dsPaymentSetOffSummaryRowChanging(this, new dsPaymentSetOffSummaryRowChangeEvent(((dsPaymentSetOffSummaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dsPaymentSetOffSummaryRowDeleted != null)) {
                    this.dsPaymentSetOffSummaryRowDeleted(this, new dsPaymentSetOffSummaryRowChangeEvent(((dsPaymentSetOffSummaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dsPaymentSetOffSummaryRowDeleting != null)) {
                    this.dsPaymentSetOffSummaryRowDeleting(this, new dsPaymentSetOffSummaryRowChangeEvent(((dsPaymentSetOffSummaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedsPaymentSetOffSummaryRow(dsPaymentSetOffSummaryRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dsPaymentSetOffSummaryDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dsPriceMasterDetailsDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnProd_Code;
            
            private global::System.Data.DataColumn columnProd_Name;
            
            private global::System.Data.DataColumn columnSelling_Price;
            
            private global::System.Data.DataColumn columnQty_Credit;
            
            private global::System.Data.DataColumn columnQty;
            
            private global::System.Data.DataColumn columnPrice_Level_Credit;
            
            private global::System.Data.DataColumn columnPrice_Level;
            
            private global::System.Data.DataColumn columnMarked_Price;
            
            private global::System.Data.DataColumn columnWhole_Price;
            
            private global::System.Data.DataColumn columnWholeQty_Credit;
            
            private global::System.Data.DataColumn columnWholeQty;
            
            private global::System.Data.DataColumn columnWholeQtyPrice_Credit;
            
            private global::System.Data.DataColumn columnWholeQtyPrice;
            
            private global::System.Data.DataColumn columnPurchase_Price;
            
            private global::System.Data.DataColumn columnLn;
            
            private global::System.Data.DataColumn columnPriceBatch;
            
            private global::System.Data.DataColumn columnRPrice;
            
            private global::System.Data.DataColumn columnWPrice;
            
            private global::System.Data.DataColumn columnDPrice;
            
            private global::System.Data.DataColumn columnMMPrice;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsPriceMasterDetailsDataTable() {
                this.TableName = "dsPriceMasterDetails";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsPriceMasterDetailsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dsPriceMasterDetailsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Prod_CodeColumn {
                get {
                    return this.columnProd_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Prod_NameColumn {
                get {
                    return this.columnProd_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Selling_PriceColumn {
                get {
                    return this.columnSelling_Price;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Qty_CreditColumn {
                get {
                    return this.columnQty_Credit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QtyColumn {
                get {
                    return this.columnQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Price_Level_CreditColumn {
                get {
                    return this.columnPrice_Level_Credit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Price_LevelColumn {
                get {
                    return this.columnPrice_Level;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Marked_PriceColumn {
                get {
                    return this.columnMarked_Price;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Whole_PriceColumn {
                get {
                    return this.columnWhole_Price;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WholeQty_CreditColumn {
                get {
                    return this.columnWholeQty_Credit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WholeQtyColumn {
                get {
                    return this.columnWholeQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WholeQtyPrice_CreditColumn {
                get {
                    return this.columnWholeQtyPrice_Credit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WholeQtyPriceColumn {
                get {
                    return this.columnWholeQtyPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Purchase_PriceColumn {
                get {
                    return this.columnPurchase_Price;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LnColumn {
                get {
                    return this.columnLn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PriceBatchColumn {
                get {
                    return this.columnPriceBatch;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RPriceColumn {
                get {
                    return this.columnRPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WPriceColumn {
                get {
                    return this.columnWPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DPriceColumn {
                get {
                    return this.columnDPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MMPriceColumn {
                get {
                    return this.columnMMPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsPriceMasterDetailsRow this[int index] {
                get {
                    return ((dsPriceMasterDetailsRow)(this.Rows[index]));
                }
            }
            
            public event dsPriceMasterDetailsRowChangeEventHandler dsPriceMasterDetailsRowChanging;
            
            public event dsPriceMasterDetailsRowChangeEventHandler dsPriceMasterDetailsRowChanged;
            
            public event dsPriceMasterDetailsRowChangeEventHandler dsPriceMasterDetailsRowDeleting;
            
            public event dsPriceMasterDetailsRowChangeEventHandler dsPriceMasterDetailsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddsPriceMasterDetailsRow(dsPriceMasterDetailsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsPriceMasterDetailsRow AdddsPriceMasterDetailsRow(
                        string Prod_Code, 
                        string Prod_Name, 
                        decimal Selling_Price, 
                        double Qty_Credit, 
                        double Qty, 
                        decimal Price_Level_Credit, 
                        decimal Price_Level, 
                        decimal Marked_Price, 
                        decimal Whole_Price, 
                        double WholeQty_Credit, 
                        double WholeQty, 
                        decimal WholeQtyPrice_Credit, 
                        decimal WholeQtyPrice, 
                        decimal Purchase_Price, 
                        int Ln, 
                        short PriceBatch, 
                        decimal RPrice, 
                        decimal WPrice, 
                        decimal DPrice, 
                        decimal MMPrice) {
                dsPriceMasterDetailsRow rowdsPriceMasterDetailsRow = ((dsPriceMasterDetailsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Prod_Code,
                        Prod_Name,
                        Selling_Price,
                        Qty_Credit,
                        Qty,
                        Price_Level_Credit,
                        Price_Level,
                        Marked_Price,
                        Whole_Price,
                        WholeQty_Credit,
                        WholeQty,
                        WholeQtyPrice_Credit,
                        WholeQtyPrice,
                        Purchase_Price,
                        Ln,
                        PriceBatch,
                        RPrice,
                        WPrice,
                        DPrice,
                        MMPrice};
                rowdsPriceMasterDetailsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdsPriceMasterDetailsRow);
                return rowdsPriceMasterDetailsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dsPriceMasterDetailsDataTable cln = ((dsPriceMasterDetailsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dsPriceMasterDetailsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnProd_Code = base.Columns["Prod_Code"];
                this.columnProd_Name = base.Columns["Prod_Name"];
                this.columnSelling_Price = base.Columns["Selling_Price"];
                this.columnQty_Credit = base.Columns["Qty_Credit"];
                this.columnQty = base.Columns["Qty"];
                this.columnPrice_Level_Credit = base.Columns["Price_Level_Credit"];
                this.columnPrice_Level = base.Columns["Price_Level"];
                this.columnMarked_Price = base.Columns["Marked_Price"];
                this.columnWhole_Price = base.Columns["Whole_Price"];
                this.columnWholeQty_Credit = base.Columns["WholeQty_Credit"];
                this.columnWholeQty = base.Columns["WholeQty"];
                this.columnWholeQtyPrice_Credit = base.Columns["WholeQtyPrice_Credit"];
                this.columnWholeQtyPrice = base.Columns["WholeQtyPrice"];
                this.columnPurchase_Price = base.Columns["Purchase_Price"];
                this.columnLn = base.Columns["Ln"];
                this.columnPriceBatch = base.Columns["PriceBatch"];
                this.columnRPrice = base.Columns["RPrice"];
                this.columnWPrice = base.Columns["WPrice"];
                this.columnDPrice = base.Columns["DPrice"];
                this.columnMMPrice = base.Columns["MMPrice"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnProd_Code = new global::System.Data.DataColumn("Prod_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Code);
                this.columnProd_Name = new global::System.Data.DataColumn("Prod_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Name);
                this.columnSelling_Price = new global::System.Data.DataColumn("Selling_Price", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelling_Price);
                this.columnQty_Credit = new global::System.Data.DataColumn("Qty_Credit", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQty_Credit);
                this.columnQty = new global::System.Data.DataColumn("Qty", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQty);
                this.columnPrice_Level_Credit = new global::System.Data.DataColumn("Price_Level_Credit", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrice_Level_Credit);
                this.columnPrice_Level = new global::System.Data.DataColumn("Price_Level", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrice_Level);
                this.columnMarked_Price = new global::System.Data.DataColumn("Marked_Price", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMarked_Price);
                this.columnWhole_Price = new global::System.Data.DataColumn("Whole_Price", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWhole_Price);
                this.columnWholeQty_Credit = new global::System.Data.DataColumn("WholeQty_Credit", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWholeQty_Credit);
                this.columnWholeQty = new global::System.Data.DataColumn("WholeQty", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWholeQty);
                this.columnWholeQtyPrice_Credit = new global::System.Data.DataColumn("WholeQtyPrice_Credit", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWholeQtyPrice_Credit);
                this.columnWholeQtyPrice = new global::System.Data.DataColumn("WholeQtyPrice", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWholeQtyPrice);
                this.columnPurchase_Price = new global::System.Data.DataColumn("Purchase_Price", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPurchase_Price);
                this.columnLn = new global::System.Data.DataColumn("Ln", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLn);
                this.columnPriceBatch = new global::System.Data.DataColumn("PriceBatch", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPriceBatch);
                this.columnRPrice = new global::System.Data.DataColumn("RPrice", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRPrice);
                this.columnWPrice = new global::System.Data.DataColumn("WPrice", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWPrice);
                this.columnDPrice = new global::System.Data.DataColumn("DPrice", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDPrice);
                this.columnMMPrice = new global::System.Data.DataColumn("MMPrice", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMMPrice);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsPriceMasterDetailsRow NewdsPriceMasterDetailsRow() {
                return ((dsPriceMasterDetailsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dsPriceMasterDetailsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dsPriceMasterDetailsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dsPriceMasterDetailsRowChanged != null)) {
                    this.dsPriceMasterDetailsRowChanged(this, new dsPriceMasterDetailsRowChangeEvent(((dsPriceMasterDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dsPriceMasterDetailsRowChanging != null)) {
                    this.dsPriceMasterDetailsRowChanging(this, new dsPriceMasterDetailsRowChangeEvent(((dsPriceMasterDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dsPriceMasterDetailsRowDeleted != null)) {
                    this.dsPriceMasterDetailsRowDeleted(this, new dsPriceMasterDetailsRowChangeEvent(((dsPriceMasterDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dsPriceMasterDetailsRowDeleting != null)) {
                    this.dsPriceMasterDetailsRowDeleting(this, new dsPriceMasterDetailsRowChangeEvent(((dsPriceMasterDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedsPriceMasterDetailsRow(dsPriceMasterDetailsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dsPriceMasterDetailsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dsSystem_LogDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnUser_Name;
            
            private global::System.Data.DataColumn columnTr_Date;
            
            private global::System.Data.DataColumn columnLoca;
            
            private global::System.Data.DataColumn columnIid;
            
            private global::System.Data.DataColumn columnTr_Code;
            
            private global::System.Data.DataColumn columnTr_Description;
            
            private global::System.Data.DataColumn columnDateFrom;
            
            private global::System.Data.DataColumn columnDateTo;
            
            private global::System.Data.DataColumn columnLoca_Descrip;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsSystem_LogDataTable() {
                this.TableName = "dsSystem_Log";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsSystem_LogDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dsSystem_LogDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn User_NameColumn {
                get {
                    return this.columnUser_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Tr_DateColumn {
                get {
                    return this.columnTr_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LocaColumn {
                get {
                    return this.columnLoca;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IidColumn {
                get {
                    return this.columnIid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Tr_CodeColumn {
                get {
                    return this.columnTr_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Tr_DescriptionColumn {
                get {
                    return this.columnTr_Description;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateFromColumn {
                get {
                    return this.columnDateFrom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateToColumn {
                get {
                    return this.columnDateTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Loca_DescripColumn {
                get {
                    return this.columnLoca_Descrip;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsSystem_LogRow this[int index] {
                get {
                    return ((dsSystem_LogRow)(this.Rows[index]));
                }
            }
            
            public event dsSystem_LogRowChangeEventHandler dsSystem_LogRowChanging;
            
            public event dsSystem_LogRowChangeEventHandler dsSystem_LogRowChanged;
            
            public event dsSystem_LogRowChangeEventHandler dsSystem_LogRowDeleting;
            
            public event dsSystem_LogRowChangeEventHandler dsSystem_LogRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddsSystem_LogRow(dsSystem_LogRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsSystem_LogRow AdddsSystem_LogRow(string User_Name, string Tr_Date, string Loca, string Iid, string Tr_Code, string Tr_Description, string DateFrom, string DateTo, string Loca_Descrip) {
                dsSystem_LogRow rowdsSystem_LogRow = ((dsSystem_LogRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        User_Name,
                        Tr_Date,
                        Loca,
                        Iid,
                        Tr_Code,
                        Tr_Description,
                        DateFrom,
                        DateTo,
                        Loca_Descrip};
                rowdsSystem_LogRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdsSystem_LogRow);
                return rowdsSystem_LogRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dsSystem_LogDataTable cln = ((dsSystem_LogDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dsSystem_LogDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnUser_Name = base.Columns["User_Name"];
                this.columnTr_Date = base.Columns["Tr_Date"];
                this.columnLoca = base.Columns["Loca"];
                this.columnIid = base.Columns["Iid"];
                this.columnTr_Code = base.Columns["Tr_Code"];
                this.columnTr_Description = base.Columns["Tr_Description"];
                this.columnDateFrom = base.Columns["DateFrom"];
                this.columnDateTo = base.Columns["DateTo"];
                this.columnLoca_Descrip = base.Columns["Loca_Descrip"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnUser_Name = new global::System.Data.DataColumn("User_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUser_Name);
                this.columnTr_Date = new global::System.Data.DataColumn("Tr_Date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTr_Date);
                this.columnLoca = new global::System.Data.DataColumn("Loca", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoca);
                this.columnIid = new global::System.Data.DataColumn("Iid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIid);
                this.columnTr_Code = new global::System.Data.DataColumn("Tr_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTr_Code);
                this.columnTr_Description = new global::System.Data.DataColumn("Tr_Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTr_Description);
                this.columnDateFrom = new global::System.Data.DataColumn("DateFrom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateFrom);
                this.columnDateTo = new global::System.Data.DataColumn("DateTo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateTo);
                this.columnLoca_Descrip = new global::System.Data.DataColumn("Loca_Descrip", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoca_Descrip);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsSystem_LogRow NewdsSystem_LogRow() {
                return ((dsSystem_LogRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dsSystem_LogRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dsSystem_LogRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dsSystem_LogRowChanged != null)) {
                    this.dsSystem_LogRowChanged(this, new dsSystem_LogRowChangeEvent(((dsSystem_LogRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dsSystem_LogRowChanging != null)) {
                    this.dsSystem_LogRowChanging(this, new dsSystem_LogRowChangeEvent(((dsSystem_LogRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dsSystem_LogRowDeleted != null)) {
                    this.dsSystem_LogRowDeleted(this, new dsSystem_LogRowChangeEvent(((dsSystem_LogRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dsSystem_LogRowDeleting != null)) {
                    this.dsSystem_LogRowDeleting(this, new dsSystem_LogRowChangeEvent(((dsSystem_LogRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedsSystem_LogRow(dsSystem_LogRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dsSystem_LogDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dsPostDatedChequeDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnOrg_Doc_no;
            
            private global::System.Data.DataColumn columnBank_Name;
            
            private global::System.Data.DataColumn columnCheque_No;
            
            private global::System.Data.DataColumn columnCheque_Date;
            
            private global::System.Data.DataColumn columnBranch;
            
            private global::System.Data.DataColumn columnAmount;
            
            private global::System.Data.DataColumn columnLoca;
            
            private global::System.Data.DataColumn columnLoca_Descrip;
            
            private global::System.Data.DataColumn columnAcc_Code;
            
            private global::System.Data.DataColumn columnSupp_Name;
            
            private global::System.Data.DataColumn columnTr_Date;
            
            private global::System.Data.DataColumn columnDateFrom;
            
            private global::System.Data.DataColumn columnDateTo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsPostDatedChequeDataTable() {
                this.TableName = "dsPostDatedCheque";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsPostDatedChequeDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dsPostDatedChequeDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Org_Doc_noColumn {
                get {
                    return this.columnOrg_Doc_no;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Bank_NameColumn {
                get {
                    return this.columnBank_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cheque_NoColumn {
                get {
                    return this.columnCheque_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cheque_DateColumn {
                get {
                    return this.columnCheque_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BranchColumn {
                get {
                    return this.columnBranch;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LocaColumn {
                get {
                    return this.columnLoca;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Loca_DescripColumn {
                get {
                    return this.columnLoca_Descrip;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Acc_CodeColumn {
                get {
                    return this.columnAcc_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Supp_NameColumn {
                get {
                    return this.columnSupp_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Tr_DateColumn {
                get {
                    return this.columnTr_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateFromColumn {
                get {
                    return this.columnDateFrom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateToColumn {
                get {
                    return this.columnDateTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsPostDatedChequeRow this[int index] {
                get {
                    return ((dsPostDatedChequeRow)(this.Rows[index]));
                }
            }
            
            public event dsPostDatedChequeRowChangeEventHandler dsPostDatedChequeRowChanging;
            
            public event dsPostDatedChequeRowChangeEventHandler dsPostDatedChequeRowChanged;
            
            public event dsPostDatedChequeRowChangeEventHandler dsPostDatedChequeRowDeleting;
            
            public event dsPostDatedChequeRowChangeEventHandler dsPostDatedChequeRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddsPostDatedChequeRow(dsPostDatedChequeRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsPostDatedChequeRow AdddsPostDatedChequeRow(string Org_Doc_no, string Bank_Name, string Cheque_No, string Cheque_Date, string Branch, decimal Amount, string Loca, string Loca_Descrip, string Acc_Code, string Supp_Name, System.DateTime Tr_Date, string DateFrom, string DateTo) {
                dsPostDatedChequeRow rowdsPostDatedChequeRow = ((dsPostDatedChequeRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Org_Doc_no,
                        Bank_Name,
                        Cheque_No,
                        Cheque_Date,
                        Branch,
                        Amount,
                        Loca,
                        Loca_Descrip,
                        Acc_Code,
                        Supp_Name,
                        Tr_Date,
                        DateFrom,
                        DateTo};
                rowdsPostDatedChequeRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdsPostDatedChequeRow);
                return rowdsPostDatedChequeRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dsPostDatedChequeDataTable cln = ((dsPostDatedChequeDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dsPostDatedChequeDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnOrg_Doc_no = base.Columns["Org_Doc_no"];
                this.columnBank_Name = base.Columns["Bank_Name"];
                this.columnCheque_No = base.Columns["Cheque_No"];
                this.columnCheque_Date = base.Columns["Cheque_Date"];
                this.columnBranch = base.Columns["Branch"];
                this.columnAmount = base.Columns["Amount"];
                this.columnLoca = base.Columns["Loca"];
                this.columnLoca_Descrip = base.Columns["Loca_Descrip"];
                this.columnAcc_Code = base.Columns["Acc_Code"];
                this.columnSupp_Name = base.Columns["Supp_Name"];
                this.columnTr_Date = base.Columns["Tr_Date"];
                this.columnDateFrom = base.Columns["DateFrom"];
                this.columnDateTo = base.Columns["DateTo"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnOrg_Doc_no = new global::System.Data.DataColumn("Org_Doc_no", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrg_Doc_no);
                this.columnBank_Name = new global::System.Data.DataColumn("Bank_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBank_Name);
                this.columnCheque_No = new global::System.Data.DataColumn("Cheque_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCheque_No);
                this.columnCheque_Date = new global::System.Data.DataColumn("Cheque_Date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCheque_Date);
                this.columnBranch = new global::System.Data.DataColumn("Branch", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBranch);
                this.columnAmount = new global::System.Data.DataColumn("Amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
                this.columnLoca = new global::System.Data.DataColumn("Loca", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoca);
                this.columnLoca_Descrip = new global::System.Data.DataColumn("Loca_Descrip", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoca_Descrip);
                this.columnAcc_Code = new global::System.Data.DataColumn("Acc_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAcc_Code);
                this.columnSupp_Name = new global::System.Data.DataColumn("Supp_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupp_Name);
                this.columnTr_Date = new global::System.Data.DataColumn("Tr_Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTr_Date);
                this.columnDateFrom = new global::System.Data.DataColumn("DateFrom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateFrom);
                this.columnDateTo = new global::System.Data.DataColumn("DateTo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateTo);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsPostDatedChequeRow NewdsPostDatedChequeRow() {
                return ((dsPostDatedChequeRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dsPostDatedChequeRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dsPostDatedChequeRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dsPostDatedChequeRowChanged != null)) {
                    this.dsPostDatedChequeRowChanged(this, new dsPostDatedChequeRowChangeEvent(((dsPostDatedChequeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dsPostDatedChequeRowChanging != null)) {
                    this.dsPostDatedChequeRowChanging(this, new dsPostDatedChequeRowChangeEvent(((dsPostDatedChequeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dsPostDatedChequeRowDeleted != null)) {
                    this.dsPostDatedChequeRowDeleted(this, new dsPostDatedChequeRowChangeEvent(((dsPostDatedChequeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dsPostDatedChequeRowDeleting != null)) {
                    this.dsPostDatedChequeRowDeleting(this, new dsPostDatedChequeRowChangeEvent(((dsPostDatedChequeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedsPostDatedChequeRow(dsPostDatedChequeRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dsPostDatedChequeDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dsProductLinkTempDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnProd_Code;
            
            private global::System.Data.DataColumn columnBarcode;
            
            private global::System.Data.DataColumn columnProd_Name;
            
            private global::System.Data.DataColumn columnSelling_Price;
            
            private global::System.Data.DataColumn columnTr_Date;
            
            private global::System.Data.DataColumn columnUserName;
            
            private global::System.Data.DataColumn columnCodeFrom;
            
            private global::System.Data.DataColumn columnCodeTo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsProductLinkTempDataTable() {
                this.TableName = "dsProductLinkTemp";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsProductLinkTempDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dsProductLinkTempDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Prod_CodeColumn {
                get {
                    return this.columnProd_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BarcodeColumn {
                get {
                    return this.columnBarcode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Prod_NameColumn {
                get {
                    return this.columnProd_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Selling_PriceColumn {
                get {
                    return this.columnSelling_Price;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Tr_DateColumn {
                get {
                    return this.columnTr_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UserNameColumn {
                get {
                    return this.columnUserName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CodeFromColumn {
                get {
                    return this.columnCodeFrom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CodeToColumn {
                get {
                    return this.columnCodeTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsProductLinkTempRow this[int index] {
                get {
                    return ((dsProductLinkTempRow)(this.Rows[index]));
                }
            }
            
            public event dsProductLinkTempRowChangeEventHandler dsProductLinkTempRowChanging;
            
            public event dsProductLinkTempRowChangeEventHandler dsProductLinkTempRowChanged;
            
            public event dsProductLinkTempRowChangeEventHandler dsProductLinkTempRowDeleting;
            
            public event dsProductLinkTempRowChangeEventHandler dsProductLinkTempRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddsProductLinkTempRow(dsProductLinkTempRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsProductLinkTempRow AdddsProductLinkTempRow(string Prod_Code, string Barcode, string Prod_Name, string Selling_Price, string Tr_Date, string UserName, string CodeFrom, string CodeTo) {
                dsProductLinkTempRow rowdsProductLinkTempRow = ((dsProductLinkTempRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Prod_Code,
                        Barcode,
                        Prod_Name,
                        Selling_Price,
                        Tr_Date,
                        UserName,
                        CodeFrom,
                        CodeTo};
                rowdsProductLinkTempRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdsProductLinkTempRow);
                return rowdsProductLinkTempRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dsProductLinkTempDataTable cln = ((dsProductLinkTempDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dsProductLinkTempDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnProd_Code = base.Columns["Prod_Code"];
                this.columnBarcode = base.Columns["Barcode"];
                this.columnProd_Name = base.Columns["Prod_Name"];
                this.columnSelling_Price = base.Columns["Selling_Price"];
                this.columnTr_Date = base.Columns["Tr_Date"];
                this.columnUserName = base.Columns["UserName"];
                this.columnCodeFrom = base.Columns["CodeFrom"];
                this.columnCodeTo = base.Columns["CodeTo"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnProd_Code = new global::System.Data.DataColumn("Prod_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Code);
                this.columnBarcode = new global::System.Data.DataColumn("Barcode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBarcode);
                this.columnProd_Name = new global::System.Data.DataColumn("Prod_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Name);
                this.columnSelling_Price = new global::System.Data.DataColumn("Selling_Price", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelling_Price);
                this.columnTr_Date = new global::System.Data.DataColumn("Tr_Date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTr_Date);
                this.columnUserName = new global::System.Data.DataColumn("UserName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserName);
                this.columnCodeFrom = new global::System.Data.DataColumn("CodeFrom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodeFrom);
                this.columnCodeTo = new global::System.Data.DataColumn("CodeTo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodeTo);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsProductLinkTempRow NewdsProductLinkTempRow() {
                return ((dsProductLinkTempRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dsProductLinkTempRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dsProductLinkTempRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dsProductLinkTempRowChanged != null)) {
                    this.dsProductLinkTempRowChanged(this, new dsProductLinkTempRowChangeEvent(((dsProductLinkTempRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dsProductLinkTempRowChanging != null)) {
                    this.dsProductLinkTempRowChanging(this, new dsProductLinkTempRowChangeEvent(((dsProductLinkTempRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dsProductLinkTempRowDeleted != null)) {
                    this.dsProductLinkTempRowDeleted(this, new dsProductLinkTempRowChangeEvent(((dsProductLinkTempRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dsProductLinkTempRowDeleting != null)) {
                    this.dsProductLinkTempRowDeleting(this, new dsProductLinkTempRowChangeEvent(((dsProductLinkTempRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedsProductLinkTempRow(dsProductLinkTempRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dsProductLinkTempDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PriceChangeDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnProd_Code;
            
            private global::System.Data.DataColumn columnProd_Name;
            
            private global::System.Data.DataColumn columnPre_Purchase_price;
            
            private global::System.Data.DataColumn columnNew_Purchase_price;
            
            private global::System.Data.DataColumn columnPre_Selling_Price;
            
            private global::System.Data.DataColumn columnNew_Selling_Price;
            
            private global::System.Data.DataColumn columnTr_Date;
            
            private global::System.Data.DataColumn columnModified_User;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PriceChangeDataTable() {
                this.TableName = "PriceChange";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PriceChangeDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected PriceChangeDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Prod_CodeColumn {
                get {
                    return this.columnProd_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Prod_NameColumn {
                get {
                    return this.columnProd_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Pre_Purchase_priceColumn {
                get {
                    return this.columnPre_Purchase_price;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn New_Purchase_priceColumn {
                get {
                    return this.columnNew_Purchase_price;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Pre_Selling_PriceColumn {
                get {
                    return this.columnPre_Selling_Price;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn New_Selling_PriceColumn {
                get {
                    return this.columnNew_Selling_Price;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Tr_DateColumn {
                get {
                    return this.columnTr_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Modified_UserColumn {
                get {
                    return this.columnModified_User;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PriceChangeRow this[int index] {
                get {
                    return ((PriceChangeRow)(this.Rows[index]));
                }
            }
            
            public event PriceChangeRowChangeEventHandler PriceChangeRowChanging;
            
            public event PriceChangeRowChangeEventHandler PriceChangeRowChanged;
            
            public event PriceChangeRowChangeEventHandler PriceChangeRowDeleting;
            
            public event PriceChangeRowChangeEventHandler PriceChangeRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPriceChangeRow(PriceChangeRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PriceChangeRow AddPriceChangeRow(string Prod_Code, string Prod_Name, string Pre_Purchase_price, string New_Purchase_price, string Pre_Selling_Price, string New_Selling_Price, decimal Tr_Date, string Modified_User) {
                PriceChangeRow rowPriceChangeRow = ((PriceChangeRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Prod_Code,
                        Prod_Name,
                        Pre_Purchase_price,
                        New_Purchase_price,
                        Pre_Selling_Price,
                        New_Selling_Price,
                        Tr_Date,
                        Modified_User};
                rowPriceChangeRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPriceChangeRow);
                return rowPriceChangeRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                PriceChangeDataTable cln = ((PriceChangeDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PriceChangeDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnProd_Code = base.Columns["Prod_Code"];
                this.columnProd_Name = base.Columns["Prod_Name"];
                this.columnPre_Purchase_price = base.Columns["Pre_Purchase_price"];
                this.columnNew_Purchase_price = base.Columns["New_Purchase_price"];
                this.columnPre_Selling_Price = base.Columns["Pre_Selling_Price"];
                this.columnNew_Selling_Price = base.Columns["New_Selling_Price"];
                this.columnTr_Date = base.Columns["Tr_Date"];
                this.columnModified_User = base.Columns["Modified_User"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnProd_Code = new global::System.Data.DataColumn("Prod_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Code);
                this.columnProd_Name = new global::System.Data.DataColumn("Prod_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Name);
                this.columnPre_Purchase_price = new global::System.Data.DataColumn("Pre_Purchase_price", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPre_Purchase_price);
                this.columnNew_Purchase_price = new global::System.Data.DataColumn("New_Purchase_price", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNew_Purchase_price);
                this.columnPre_Selling_Price = new global::System.Data.DataColumn("Pre_Selling_Price", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPre_Selling_Price);
                this.columnNew_Selling_Price = new global::System.Data.DataColumn("New_Selling_Price", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNew_Selling_Price);
                this.columnTr_Date = new global::System.Data.DataColumn("Tr_Date", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTr_Date);
                this.columnModified_User = new global::System.Data.DataColumn("Modified_User", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModified_User);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PriceChangeRow NewPriceChangeRow() {
                return ((PriceChangeRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PriceChangeRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(PriceChangeRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PriceChangeRowChanged != null)) {
                    this.PriceChangeRowChanged(this, new PriceChangeRowChangeEvent(((PriceChangeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PriceChangeRowChanging != null)) {
                    this.PriceChangeRowChanging(this, new PriceChangeRowChangeEvent(((PriceChangeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PriceChangeRowDeleted != null)) {
                    this.PriceChangeRowDeleted(this, new PriceChangeRowChangeEvent(((PriceChangeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PriceChangeRowDeleting != null)) {
                    this.PriceChangeRowDeleting(this, new PriceChangeRowChangeEvent(((PriceChangeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePriceChangeRow(PriceChangeRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PriceChangeDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dsPosSalesSummaryDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnUnit_No;
            
            private global::System.Data.DataColumn columnPosGross_Sales;
            
            private global::System.Data.DataColumn columnPosRefund_Tot;
            
            private global::System.Data.DataColumn columnPosRefund_No;
            
            private global::System.Data.DataColumn columnPosVoid_Tot;
            
            private global::System.Data.DataColumn columnPosVoid_No;
            
            private global::System.Data.DataColumn columnPosError_Tot;
            
            private global::System.Data.DataColumn columnPosError_No;
            
            private global::System.Data.DataColumn columnPosCancel_Tot;
            
            private global::System.Data.DataColumn columnPosCancel_No;
            
            private global::System.Data.DataColumn columnPosNet_Amt;
            
            private global::System.Data.DataColumn columnPosCash_Amt;
            
            private global::System.Data.DataColumn columnPosCredit_amt;
            
            private global::System.Data.DataColumn columnPosBill_Count;
            
            private global::System.Data.DataColumn columnPosExchange_Tot;
            
            private global::System.Data.DataColumn columnPosExchange_No;
            
            private global::System.Data.DataColumn columnPosDiscount_Tot;
            
            private global::System.Data.DataColumn columnPosDiscount_No;
            
            private global::System.Data.DataColumn columnDeclare_Amount;
            
            private global::System.Data.DataColumn columnPos_CashOut;
            
            private global::System.Data.DataColumn columnCard1_Descr;
            
            private global::System.Data.DataColumn columnCard1_Amount;
            
            private global::System.Data.DataColumn columnCard2_Descr;
            
            private global::System.Data.DataColumn columnCard2_Amount;
            
            private global::System.Data.DataColumn columnCard3_Descr;
            
            private global::System.Data.DataColumn columnCard3_Amount;
            
            private global::System.Data.DataColumn columnCard4_Descr;
            
            private global::System.Data.DataColumn columnCard4_Amount;
            
            private global::System.Data.DataColumn columnCard5_Descr;
            
            private global::System.Data.DataColumn columnCard5_Amount;
            
            private global::System.Data.DataColumn columnDept1_Descr;
            
            private global::System.Data.DataColumn columnDept1_Amount;
            
            private global::System.Data.DataColumn columnDept2_Descr;
            
            private global::System.Data.DataColumn columnDept2_Amount;
            
            private global::System.Data.DataColumn columnDept3_Descr;
            
            private global::System.Data.DataColumn columnDept3_Amount;
            
            private global::System.Data.DataColumn columnDept4_Descr;
            
            private global::System.Data.DataColumn columnDept4_Amount;
            
            private global::System.Data.DataColumn columnDept5_Descr;
            
            private global::System.Data.DataColumn columnDept5_Amount;
            
            private global::System.Data.DataColumn columnLoca;
            
            private global::System.Data.DataColumn columnLoca_Descrip;
            
            private global::System.Data.DataColumn columnDateFrom;
            
            private global::System.Data.DataColumn columnDateTo;
            
            private global::System.Data.DataColumn columnWholeSale_Inv;
            
            private global::System.Data.DataColumn columnWholeSale_Return;
            
            private global::System.Data.DataColumn columnWholesale_Payment;
            
            private global::System.Data.DataColumn columnCash_Out;
            
            private global::System.Data.DataColumn columnBank;
            
            private global::System.Data.DataColumn columnPayment;
            
            private global::System.Data.DataColumn columnSupplier_Payment;
            
            private global::System.Data.DataColumn columnPetty_Cash;
            
            private global::System.Data.DataColumn columnGVCash;
            
            private global::System.Data.DataColumn columnGVCredit;
            
            private global::System.Data.DataColumn columnInvice;
            
            private global::System.Data.DataColumn columnReturn;
            
            private global::System.Data.DataColumn columnCheque;
            
            private global::System.Data.DataColumn columnRtnChq;
            
            private global::System.Data.DataColumn columnWholesale_Cash;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsPosSalesSummaryDataTable() {
                this.TableName = "dsPosSalesSummary";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsPosSalesSummaryDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dsPosSalesSummaryDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Unit_NoColumn {
                get {
                    return this.columnUnit_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PosGross_SalesColumn {
                get {
                    return this.columnPosGross_Sales;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PosRefund_TotColumn {
                get {
                    return this.columnPosRefund_Tot;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PosRefund_NoColumn {
                get {
                    return this.columnPosRefund_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PosVoid_TotColumn {
                get {
                    return this.columnPosVoid_Tot;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PosVoid_NoColumn {
                get {
                    return this.columnPosVoid_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PosError_TotColumn {
                get {
                    return this.columnPosError_Tot;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PosError_NoColumn {
                get {
                    return this.columnPosError_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PosCancel_TotColumn {
                get {
                    return this.columnPosCancel_Tot;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PosCancel_NoColumn {
                get {
                    return this.columnPosCancel_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PosNet_AmtColumn {
                get {
                    return this.columnPosNet_Amt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PosCash_AmtColumn {
                get {
                    return this.columnPosCash_Amt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PosCredit_amtColumn {
                get {
                    return this.columnPosCredit_amt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PosBill_CountColumn {
                get {
                    return this.columnPosBill_Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PosExchange_TotColumn {
                get {
                    return this.columnPosExchange_Tot;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PosExchange_NoColumn {
                get {
                    return this.columnPosExchange_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PosDiscount_TotColumn {
                get {
                    return this.columnPosDiscount_Tot;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PosDiscount_NoColumn {
                get {
                    return this.columnPosDiscount_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Declare_AmountColumn {
                get {
                    return this.columnDeclare_Amount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Pos_CashOutColumn {
                get {
                    return this.columnPos_CashOut;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Card1_DescrColumn {
                get {
                    return this.columnCard1_Descr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Card1_AmountColumn {
                get {
                    return this.columnCard1_Amount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Card2_DescrColumn {
                get {
                    return this.columnCard2_Descr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Card2_AmountColumn {
                get {
                    return this.columnCard2_Amount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Card3_DescrColumn {
                get {
                    return this.columnCard3_Descr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Card3_AmountColumn {
                get {
                    return this.columnCard3_Amount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Card4_DescrColumn {
                get {
                    return this.columnCard4_Descr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Card4_AmountColumn {
                get {
                    return this.columnCard4_Amount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Card5_DescrColumn {
                get {
                    return this.columnCard5_Descr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Card5_AmountColumn {
                get {
                    return this.columnCard5_Amount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Dept1_DescrColumn {
                get {
                    return this.columnDept1_Descr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Dept1_AmountColumn {
                get {
                    return this.columnDept1_Amount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Dept2_DescrColumn {
                get {
                    return this.columnDept2_Descr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Dept2_AmountColumn {
                get {
                    return this.columnDept2_Amount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Dept3_DescrColumn {
                get {
                    return this.columnDept3_Descr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Dept3_AmountColumn {
                get {
                    return this.columnDept3_Amount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Dept4_DescrColumn {
                get {
                    return this.columnDept4_Descr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Dept4_AmountColumn {
                get {
                    return this.columnDept4_Amount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Dept5_DescrColumn {
                get {
                    return this.columnDept5_Descr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Dept5_AmountColumn {
                get {
                    return this.columnDept5_Amount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LocaColumn {
                get {
                    return this.columnLoca;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Loca_DescripColumn {
                get {
                    return this.columnLoca_Descrip;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateFromColumn {
                get {
                    return this.columnDateFrom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateToColumn {
                get {
                    return this.columnDateTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WholeSale_InvColumn {
                get {
                    return this.columnWholeSale_Inv;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WholeSale_ReturnColumn {
                get {
                    return this.columnWholeSale_Return;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Wholesale_PaymentColumn {
                get {
                    return this.columnWholesale_Payment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cash_OutColumn {
                get {
                    return this.columnCash_Out;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BankColumn {
                get {
                    return this.columnBank;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PaymentColumn {
                get {
                    return this.columnPayment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Supplier_PaymentColumn {
                get {
                    return this.columnSupplier_Payment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Petty_CashColumn {
                get {
                    return this.columnPetty_Cash;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GVCashColumn {
                get {
                    return this.columnGVCash;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GVCreditColumn {
                get {
                    return this.columnGVCredit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InviceColumn {
                get {
                    return this.columnInvice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReturnColumn {
                get {
                    return this.columnReturn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ChequeColumn {
                get {
                    return this.columnCheque;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RtnChqColumn {
                get {
                    return this.columnRtnChq;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Wholesale_CashColumn {
                get {
                    return this.columnWholesale_Cash;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsPosSalesSummaryRow this[int index] {
                get {
                    return ((dsPosSalesSummaryRow)(this.Rows[index]));
                }
            }
            
            public event dsPosSalesSummaryRowChangeEventHandler dsPosSalesSummaryRowChanging;
            
            public event dsPosSalesSummaryRowChangeEventHandler dsPosSalesSummaryRowChanged;
            
            public event dsPosSalesSummaryRowChangeEventHandler dsPosSalesSummaryRowDeleting;
            
            public event dsPosSalesSummaryRowChangeEventHandler dsPosSalesSummaryRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddsPosSalesSummaryRow(dsPosSalesSummaryRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsPosSalesSummaryRow AdddsPosSalesSummaryRow(
                        string Unit_No, 
                        double PosGross_Sales, 
                        double PosRefund_Tot, 
                        double PosRefund_No, 
                        double PosVoid_Tot, 
                        double PosVoid_No, 
                        double PosError_Tot, 
                        double PosError_No, 
                        double PosCancel_Tot, 
                        double PosCancel_No, 
                        double PosNet_Amt, 
                        double PosCash_Amt, 
                        double PosCredit_amt, 
                        double PosBill_Count, 
                        double PosExchange_Tot, 
                        double PosExchange_No, 
                        double PosDiscount_Tot, 
                        double PosDiscount_No, 
                        double Declare_Amount, 
                        double Pos_CashOut, 
                        string Card1_Descr, 
                        double Card1_Amount, 
                        string Card2_Descr, 
                        double Card2_Amount, 
                        string Card3_Descr, 
                        double Card3_Amount, 
                        string Card4_Descr, 
                        double Card4_Amount, 
                        string Card5_Descr, 
                        double Card5_Amount, 
                        string Dept1_Descr, 
                        double Dept1_Amount, 
                        string Dept2_Descr, 
                        double Dept2_Amount, 
                        string Dept3_Descr, 
                        double Dept3_Amount, 
                        string Dept4_Descr, 
                        double Dept4_Amount, 
                        string Dept5_Descr, 
                        double Dept5_Amount, 
                        string Loca, 
                        string Loca_Descrip, 
                        string DateFrom, 
                        string DateTo, 
                        double WholeSale_Inv, 
                        double WholeSale_Return, 
                        double Wholesale_Payment, 
                        decimal Cash_Out, 
                        decimal Bank, 
                        decimal Payment, 
                        decimal Supplier_Payment, 
                        decimal Petty_Cash, 
                        decimal GVCash, 
                        decimal GVCredit, 
                        decimal Invice, 
                        decimal Return, 
                        decimal Cheque, 
                        decimal RtnChq, 
                        decimal Wholesale_Cash) {
                dsPosSalesSummaryRow rowdsPosSalesSummaryRow = ((dsPosSalesSummaryRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Unit_No,
                        PosGross_Sales,
                        PosRefund_Tot,
                        PosRefund_No,
                        PosVoid_Tot,
                        PosVoid_No,
                        PosError_Tot,
                        PosError_No,
                        PosCancel_Tot,
                        PosCancel_No,
                        PosNet_Amt,
                        PosCash_Amt,
                        PosCredit_amt,
                        PosBill_Count,
                        PosExchange_Tot,
                        PosExchange_No,
                        PosDiscount_Tot,
                        PosDiscount_No,
                        Declare_Amount,
                        Pos_CashOut,
                        Card1_Descr,
                        Card1_Amount,
                        Card2_Descr,
                        Card2_Amount,
                        Card3_Descr,
                        Card3_Amount,
                        Card4_Descr,
                        Card4_Amount,
                        Card5_Descr,
                        Card5_Amount,
                        Dept1_Descr,
                        Dept1_Amount,
                        Dept2_Descr,
                        Dept2_Amount,
                        Dept3_Descr,
                        Dept3_Amount,
                        Dept4_Descr,
                        Dept4_Amount,
                        Dept5_Descr,
                        Dept5_Amount,
                        Loca,
                        Loca_Descrip,
                        DateFrom,
                        DateTo,
                        WholeSale_Inv,
                        WholeSale_Return,
                        Wholesale_Payment,
                        Cash_Out,
                        Bank,
                        Payment,
                        Supplier_Payment,
                        Petty_Cash,
                        GVCash,
                        GVCredit,
                        Invice,
                        Return,
                        Cheque,
                        RtnChq,
                        Wholesale_Cash};
                rowdsPosSalesSummaryRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdsPosSalesSummaryRow);
                return rowdsPosSalesSummaryRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dsPosSalesSummaryDataTable cln = ((dsPosSalesSummaryDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dsPosSalesSummaryDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnUnit_No = base.Columns["Unit_No"];
                this.columnPosGross_Sales = base.Columns["PosGross_Sales"];
                this.columnPosRefund_Tot = base.Columns["PosRefund_Tot"];
                this.columnPosRefund_No = base.Columns["PosRefund_No"];
                this.columnPosVoid_Tot = base.Columns["PosVoid_Tot"];
                this.columnPosVoid_No = base.Columns["PosVoid_No"];
                this.columnPosError_Tot = base.Columns["PosError_Tot"];
                this.columnPosError_No = base.Columns["PosError_No"];
                this.columnPosCancel_Tot = base.Columns["PosCancel_Tot"];
                this.columnPosCancel_No = base.Columns["PosCancel_No"];
                this.columnPosNet_Amt = base.Columns["PosNet_Amt"];
                this.columnPosCash_Amt = base.Columns["PosCash_Amt"];
                this.columnPosCredit_amt = base.Columns["PosCredit_amt"];
                this.columnPosBill_Count = base.Columns["PosBill_Count"];
                this.columnPosExchange_Tot = base.Columns["PosExchange_Tot"];
                this.columnPosExchange_No = base.Columns["PosExchange_No"];
                this.columnPosDiscount_Tot = base.Columns["PosDiscount_Tot"];
                this.columnPosDiscount_No = base.Columns["PosDiscount_No"];
                this.columnDeclare_Amount = base.Columns["Declare_Amount"];
                this.columnPos_CashOut = base.Columns["Pos_CashOut"];
                this.columnCard1_Descr = base.Columns["Card1_Descr"];
                this.columnCard1_Amount = base.Columns["Card1_Amount"];
                this.columnCard2_Descr = base.Columns["Card2_Descr"];
                this.columnCard2_Amount = base.Columns["Card2_Amount"];
                this.columnCard3_Descr = base.Columns["Card3_Descr"];
                this.columnCard3_Amount = base.Columns["Card3_Amount"];
                this.columnCard4_Descr = base.Columns["Card4_Descr"];
                this.columnCard4_Amount = base.Columns["Card4_Amount"];
                this.columnCard5_Descr = base.Columns["Card5_Descr"];
                this.columnCard5_Amount = base.Columns["Card5_Amount"];
                this.columnDept1_Descr = base.Columns["Dept1_Descr"];
                this.columnDept1_Amount = base.Columns["Dept1_Amount"];
                this.columnDept2_Descr = base.Columns["Dept2_Descr"];
                this.columnDept2_Amount = base.Columns["Dept2_Amount"];
                this.columnDept3_Descr = base.Columns["Dept3_Descr"];
                this.columnDept3_Amount = base.Columns["Dept3_Amount"];
                this.columnDept4_Descr = base.Columns["Dept4_Descr"];
                this.columnDept4_Amount = base.Columns["Dept4_Amount"];
                this.columnDept5_Descr = base.Columns["Dept5_Descr"];
                this.columnDept5_Amount = base.Columns["Dept5_Amount"];
                this.columnLoca = base.Columns["Loca"];
                this.columnLoca_Descrip = base.Columns["Loca_Descrip"];
                this.columnDateFrom = base.Columns["DateFrom"];
                this.columnDateTo = base.Columns["DateTo"];
                this.columnWholeSale_Inv = base.Columns["WholeSale_Inv"];
                this.columnWholeSale_Return = base.Columns["WholeSale_Return"];
                this.columnWholesale_Payment = base.Columns["Wholesale_Payment"];
                this.columnCash_Out = base.Columns["Cash_Out"];
                this.columnBank = base.Columns["Bank"];
                this.columnPayment = base.Columns["Payment"];
                this.columnSupplier_Payment = base.Columns["Supplier_Payment"];
                this.columnPetty_Cash = base.Columns["Petty_Cash"];
                this.columnGVCash = base.Columns["GVCash"];
                this.columnGVCredit = base.Columns["GVCredit"];
                this.columnInvice = base.Columns["Invice"];
                this.columnReturn = base.Columns["Return"];
                this.columnCheque = base.Columns["Cheque"];
                this.columnRtnChq = base.Columns["RtnChq"];
                this.columnWholesale_Cash = base.Columns["Wholesale_Cash"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnUnit_No = new global::System.Data.DataColumn("Unit_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnit_No);
                this.columnPosGross_Sales = new global::System.Data.DataColumn("PosGross_Sales", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPosGross_Sales);
                this.columnPosRefund_Tot = new global::System.Data.DataColumn("PosRefund_Tot", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPosRefund_Tot);
                this.columnPosRefund_No = new global::System.Data.DataColumn("PosRefund_No", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPosRefund_No);
                this.columnPosVoid_Tot = new global::System.Data.DataColumn("PosVoid_Tot", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPosVoid_Tot);
                this.columnPosVoid_No = new global::System.Data.DataColumn("PosVoid_No", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPosVoid_No);
                this.columnPosError_Tot = new global::System.Data.DataColumn("PosError_Tot", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPosError_Tot);
                this.columnPosError_No = new global::System.Data.DataColumn("PosError_No", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPosError_No);
                this.columnPosCancel_Tot = new global::System.Data.DataColumn("PosCancel_Tot", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPosCancel_Tot);
                this.columnPosCancel_No = new global::System.Data.DataColumn("PosCancel_No", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPosCancel_No);
                this.columnPosNet_Amt = new global::System.Data.DataColumn("PosNet_Amt", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPosNet_Amt);
                this.columnPosCash_Amt = new global::System.Data.DataColumn("PosCash_Amt", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPosCash_Amt);
                this.columnPosCredit_amt = new global::System.Data.DataColumn("PosCredit_amt", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPosCredit_amt);
                this.columnPosBill_Count = new global::System.Data.DataColumn("PosBill_Count", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPosBill_Count);
                this.columnPosExchange_Tot = new global::System.Data.DataColumn("PosExchange_Tot", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPosExchange_Tot);
                this.columnPosExchange_No = new global::System.Data.DataColumn("PosExchange_No", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPosExchange_No);
                this.columnPosDiscount_Tot = new global::System.Data.DataColumn("PosDiscount_Tot", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPosDiscount_Tot);
                this.columnPosDiscount_No = new global::System.Data.DataColumn("PosDiscount_No", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPosDiscount_No);
                this.columnDeclare_Amount = new global::System.Data.DataColumn("Declare_Amount", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeclare_Amount);
                this.columnPos_CashOut = new global::System.Data.DataColumn("Pos_CashOut", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPos_CashOut);
                this.columnCard1_Descr = new global::System.Data.DataColumn("Card1_Descr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCard1_Descr);
                this.columnCard1_Amount = new global::System.Data.DataColumn("Card1_Amount", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCard1_Amount);
                this.columnCard2_Descr = new global::System.Data.DataColumn("Card2_Descr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCard2_Descr);
                this.columnCard2_Amount = new global::System.Data.DataColumn("Card2_Amount", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCard2_Amount);
                this.columnCard3_Descr = new global::System.Data.DataColumn("Card3_Descr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCard3_Descr);
                this.columnCard3_Amount = new global::System.Data.DataColumn("Card3_Amount", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCard3_Amount);
                this.columnCard4_Descr = new global::System.Data.DataColumn("Card4_Descr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCard4_Descr);
                this.columnCard4_Amount = new global::System.Data.DataColumn("Card4_Amount", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCard4_Amount);
                this.columnCard5_Descr = new global::System.Data.DataColumn("Card5_Descr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCard5_Descr);
                this.columnCard5_Amount = new global::System.Data.DataColumn("Card5_Amount", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCard5_Amount);
                this.columnDept1_Descr = new global::System.Data.DataColumn("Dept1_Descr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDept1_Descr);
                this.columnDept1_Amount = new global::System.Data.DataColumn("Dept1_Amount", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDept1_Amount);
                this.columnDept2_Descr = new global::System.Data.DataColumn("Dept2_Descr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDept2_Descr);
                this.columnDept2_Amount = new global::System.Data.DataColumn("Dept2_Amount", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDept2_Amount);
                this.columnDept3_Descr = new global::System.Data.DataColumn("Dept3_Descr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDept3_Descr);
                this.columnDept3_Amount = new global::System.Data.DataColumn("Dept3_Amount", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDept3_Amount);
                this.columnDept4_Descr = new global::System.Data.DataColumn("Dept4_Descr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDept4_Descr);
                this.columnDept4_Amount = new global::System.Data.DataColumn("Dept4_Amount", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDept4_Amount);
                this.columnDept5_Descr = new global::System.Data.DataColumn("Dept5_Descr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDept5_Descr);
                this.columnDept5_Amount = new global::System.Data.DataColumn("Dept5_Amount", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDept5_Amount);
                this.columnLoca = new global::System.Data.DataColumn("Loca", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoca);
                this.columnLoca_Descrip = new global::System.Data.DataColumn("Loca_Descrip", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoca_Descrip);
                this.columnDateFrom = new global::System.Data.DataColumn("DateFrom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateFrom);
                this.columnDateTo = new global::System.Data.DataColumn("DateTo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateTo);
                this.columnWholeSale_Inv = new global::System.Data.DataColumn("WholeSale_Inv", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWholeSale_Inv);
                this.columnWholeSale_Return = new global::System.Data.DataColumn("WholeSale_Return", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWholeSale_Return);
                this.columnWholesale_Payment = new global::System.Data.DataColumn("Wholesale_Payment", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWholesale_Payment);
                this.columnCash_Out = new global::System.Data.DataColumn("Cash_Out", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCash_Out);
                this.columnBank = new global::System.Data.DataColumn("Bank", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBank);
                this.columnPayment = new global::System.Data.DataColumn("Payment", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPayment);
                this.columnSupplier_Payment = new global::System.Data.DataColumn("Supplier_Payment", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplier_Payment);
                this.columnPetty_Cash = new global::System.Data.DataColumn("Petty_Cash", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPetty_Cash);
                this.columnGVCash = new global::System.Data.DataColumn("GVCash", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGVCash);
                this.columnGVCredit = new global::System.Data.DataColumn("GVCredit", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGVCredit);
                this.columnInvice = new global::System.Data.DataColumn("Invice", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvice);
                this.columnReturn = new global::System.Data.DataColumn("Return", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReturn);
                this.columnCheque = new global::System.Data.DataColumn("Cheque", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCheque);
                this.columnRtnChq = new global::System.Data.DataColumn("RtnChq", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRtnChq);
                this.columnWholesale_Cash = new global::System.Data.DataColumn("Wholesale_Cash", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWholesale_Cash);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsPosSalesSummaryRow NewdsPosSalesSummaryRow() {
                return ((dsPosSalesSummaryRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dsPosSalesSummaryRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dsPosSalesSummaryRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dsPosSalesSummaryRowChanged != null)) {
                    this.dsPosSalesSummaryRowChanged(this, new dsPosSalesSummaryRowChangeEvent(((dsPosSalesSummaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dsPosSalesSummaryRowChanging != null)) {
                    this.dsPosSalesSummaryRowChanging(this, new dsPosSalesSummaryRowChangeEvent(((dsPosSalesSummaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dsPosSalesSummaryRowDeleted != null)) {
                    this.dsPosSalesSummaryRowDeleted(this, new dsPosSalesSummaryRowChangeEvent(((dsPosSalesSummaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dsPosSalesSummaryRowDeleting != null)) {
                    this.dsPosSalesSummaryRowDeleting(this, new dsPosSalesSummaryRowChangeEvent(((dsPosSalesSummaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedsPosSalesSummaryRow(dsPosSalesSummaryRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dsPosSalesSummaryDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DataTable1DataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnUnit_No;
            
            private global::System.Data.DataColumn columnPosGross_Sales;
            
            private global::System.Data.DataColumn columnPosRefund_Tot;
            
            private global::System.Data.DataColumn columnPosRefund_No;
            
            private global::System.Data.DataColumn columnPosVoid_Tot;
            
            private global::System.Data.DataColumn columnPosVoid_No;
            
            private global::System.Data.DataColumn columnPosError_Tot;
            
            private global::System.Data.DataColumn columnPosError_No;
            
            private global::System.Data.DataColumn columnPosCancel_Tot;
            
            private global::System.Data.DataColumn columnPosCancel_No;
            
            private global::System.Data.DataColumn columnPosNet_Amt;
            
            private global::System.Data.DataColumn columnPosCash_Amt;
            
            private global::System.Data.DataColumn columnPosCredit_amt;
            
            private global::System.Data.DataColumn columnPosBill_Count;
            
            private global::System.Data.DataColumn columnPosExchange_Tot;
            
            private global::System.Data.DataColumn columnPosExchange_No;
            
            private global::System.Data.DataColumn columnPosDiscount_Tot;
            
            private global::System.Data.DataColumn columnPosDiscount_No;
            
            private global::System.Data.DataColumn columnDeclare_Amount;
            
            private global::System.Data.DataColumn columnPos_CashOut;
            
            private global::System.Data.DataColumn columnCard1_Descr;
            
            private global::System.Data.DataColumn columnCard1_Amount;
            
            private global::System.Data.DataColumn columnCard2_Descr;
            
            private global::System.Data.DataColumn columnCard2_Amount;
            
            private global::System.Data.DataColumn columnCard3_Descr;
            
            private global::System.Data.DataColumn columnCard3_Amount;
            
            private global::System.Data.DataColumn columnCard4_Descr;
            
            private global::System.Data.DataColumn columnCard4_Amount;
            
            private global::System.Data.DataColumn columnCard5_Descr;
            
            private global::System.Data.DataColumn columnCard5_Amount;
            
            private global::System.Data.DataColumn columnDept1_Descr;
            
            private global::System.Data.DataColumn columnDept1_Amount;
            
            private global::System.Data.DataColumn columnDept2_Descr;
            
            private global::System.Data.DataColumn columnDept2_Amount;
            
            private global::System.Data.DataColumn columnDept3_Descr;
            
            private global::System.Data.DataColumn columnDept3_Amount;
            
            private global::System.Data.DataColumn columnDept4_Descr;
            
            private global::System.Data.DataColumn columnDept4_Amount;
            
            private global::System.Data.DataColumn columnDept5_Descr;
            
            private global::System.Data.DataColumn columnDept5_Amount;
            
            private global::System.Data.DataColumn columnLoca;
            
            private global::System.Data.DataColumn columnLoca_Descrip;
            
            private global::System.Data.DataColumn columnDateFrom;
            
            private global::System.Data.DataColumn columnDateTo;
            
            private global::System.Data.DataColumn columnWholeSale_Inv;
            
            private global::System.Data.DataColumn columnWholeSale_Return;
            
            private global::System.Data.DataColumn columnWholesale_Payment;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataTable1DataTable() {
                this.TableName = "DataTable1";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DataTable1DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DataTable1DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Unit_NoColumn {
                get {
                    return this.columnUnit_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PosGross_SalesColumn {
                get {
                    return this.columnPosGross_Sales;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PosRefund_TotColumn {
                get {
                    return this.columnPosRefund_Tot;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PosRefund_NoColumn {
                get {
                    return this.columnPosRefund_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PosVoid_TotColumn {
                get {
                    return this.columnPosVoid_Tot;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PosVoid_NoColumn {
                get {
                    return this.columnPosVoid_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PosError_TotColumn {
                get {
                    return this.columnPosError_Tot;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PosError_NoColumn {
                get {
                    return this.columnPosError_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PosCancel_TotColumn {
                get {
                    return this.columnPosCancel_Tot;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PosCancel_NoColumn {
                get {
                    return this.columnPosCancel_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PosNet_AmtColumn {
                get {
                    return this.columnPosNet_Amt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PosCash_AmtColumn {
                get {
                    return this.columnPosCash_Amt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PosCredit_amtColumn {
                get {
                    return this.columnPosCredit_amt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PosBill_CountColumn {
                get {
                    return this.columnPosBill_Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PosExchange_TotColumn {
                get {
                    return this.columnPosExchange_Tot;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PosExchange_NoColumn {
                get {
                    return this.columnPosExchange_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PosDiscount_TotColumn {
                get {
                    return this.columnPosDiscount_Tot;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PosDiscount_NoColumn {
                get {
                    return this.columnPosDiscount_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Declare_AmountColumn {
                get {
                    return this.columnDeclare_Amount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Pos_CashOutColumn {
                get {
                    return this.columnPos_CashOut;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Card1_DescrColumn {
                get {
                    return this.columnCard1_Descr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Card1_AmountColumn {
                get {
                    return this.columnCard1_Amount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Card2_DescrColumn {
                get {
                    return this.columnCard2_Descr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Card2_AmountColumn {
                get {
                    return this.columnCard2_Amount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Card3_DescrColumn {
                get {
                    return this.columnCard3_Descr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Card3_AmountColumn {
                get {
                    return this.columnCard3_Amount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Card4_DescrColumn {
                get {
                    return this.columnCard4_Descr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Card4_AmountColumn {
                get {
                    return this.columnCard4_Amount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Card5_DescrColumn {
                get {
                    return this.columnCard5_Descr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Card5_AmountColumn {
                get {
                    return this.columnCard5_Amount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Dept1_DescrColumn {
                get {
                    return this.columnDept1_Descr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Dept1_AmountColumn {
                get {
                    return this.columnDept1_Amount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Dept2_DescrColumn {
                get {
                    return this.columnDept2_Descr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Dept2_AmountColumn {
                get {
                    return this.columnDept2_Amount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Dept3_DescrColumn {
                get {
                    return this.columnDept3_Descr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Dept3_AmountColumn {
                get {
                    return this.columnDept3_Amount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Dept4_DescrColumn {
                get {
                    return this.columnDept4_Descr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Dept4_AmountColumn {
                get {
                    return this.columnDept4_Amount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Dept5_DescrColumn {
                get {
                    return this.columnDept5_Descr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Dept5_AmountColumn {
                get {
                    return this.columnDept5_Amount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LocaColumn {
                get {
                    return this.columnLoca;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Loca_DescripColumn {
                get {
                    return this.columnLoca_Descrip;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateFromColumn {
                get {
                    return this.columnDateFrom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateToColumn {
                get {
                    return this.columnDateTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WholeSale_InvColumn {
                get {
                    return this.columnWholeSale_Inv;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WholeSale_ReturnColumn {
                get {
                    return this.columnWholeSale_Return;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Wholesale_PaymentColumn {
                get {
                    return this.columnWholesale_Payment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataTable1Row this[int index] {
                get {
                    return ((DataTable1Row)(this.Rows[index]));
                }
            }
            
            public event DataTable1RowChangeEventHandler DataTable1RowChanging;
            
            public event DataTable1RowChangeEventHandler DataTable1RowChanged;
            
            public event DataTable1RowChangeEventHandler DataTable1RowDeleting;
            
            public event DataTable1RowChangeEventHandler DataTable1RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDataTable1Row(DataTable1Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataTable1Row AddDataTable1Row(
                        string Unit_No, 
                        string PosGross_Sales, 
                        string PosRefund_Tot, 
                        string PosRefund_No, 
                        string PosVoid_Tot, 
                        string PosVoid_No, 
                        string PosError_Tot, 
                        string PosError_No, 
                        string PosCancel_Tot, 
                        string PosCancel_No, 
                        string PosNet_Amt, 
                        string PosCash_Amt, 
                        string PosCredit_amt, 
                        string PosBill_Count, 
                        string PosExchange_Tot, 
                        string PosExchange_No, 
                        string PosDiscount_Tot, 
                        string PosDiscount_No, 
                        string Declare_Amount, 
                        string Pos_CashOut, 
                        string Card1_Descr, 
                        string Card1_Amount, 
                        string Card2_Descr, 
                        string Card2_Amount, 
                        string Card3_Descr, 
                        string Card3_Amount, 
                        string Card4_Descr, 
                        string Card4_Amount, 
                        string Card5_Descr, 
                        string Card5_Amount, 
                        string Dept1_Descr, 
                        string Dept1_Amount, 
                        string Dept2_Descr, 
                        string Dept2_Amount, 
                        string Dept3_Descr, 
                        string Dept3_Amount, 
                        string Dept4_Descr, 
                        string Dept4_Amount, 
                        string Dept5_Descr, 
                        string Dept5_Amount, 
                        string Loca, 
                        string Loca_Descrip, 
                        string DateFrom, 
                        string DateTo, 
                        string WholeSale_Inv, 
                        string WholeSale_Return, 
                        string Wholesale_Payment) {
                DataTable1Row rowDataTable1Row = ((DataTable1Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Unit_No,
                        PosGross_Sales,
                        PosRefund_Tot,
                        PosRefund_No,
                        PosVoid_Tot,
                        PosVoid_No,
                        PosError_Tot,
                        PosError_No,
                        PosCancel_Tot,
                        PosCancel_No,
                        PosNet_Amt,
                        PosCash_Amt,
                        PosCredit_amt,
                        PosBill_Count,
                        PosExchange_Tot,
                        PosExchange_No,
                        PosDiscount_Tot,
                        PosDiscount_No,
                        Declare_Amount,
                        Pos_CashOut,
                        Card1_Descr,
                        Card1_Amount,
                        Card2_Descr,
                        Card2_Amount,
                        Card3_Descr,
                        Card3_Amount,
                        Card4_Descr,
                        Card4_Amount,
                        Card5_Descr,
                        Card5_Amount,
                        Dept1_Descr,
                        Dept1_Amount,
                        Dept2_Descr,
                        Dept2_Amount,
                        Dept3_Descr,
                        Dept3_Amount,
                        Dept4_Descr,
                        Dept4_Amount,
                        Dept5_Descr,
                        Dept5_Amount,
                        Loca,
                        Loca_Descrip,
                        DateFrom,
                        DateTo,
                        WholeSale_Inv,
                        WholeSale_Return,
                        Wholesale_Payment};
                rowDataTable1Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowDataTable1Row);
                return rowDataTable1Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                DataTable1DataTable cln = ((DataTable1DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DataTable1DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnUnit_No = base.Columns["Unit_No"];
                this.columnPosGross_Sales = base.Columns["PosGross_Sales"];
                this.columnPosRefund_Tot = base.Columns["PosRefund_Tot"];
                this.columnPosRefund_No = base.Columns["PosRefund_No"];
                this.columnPosVoid_Tot = base.Columns["PosVoid_Tot"];
                this.columnPosVoid_No = base.Columns["PosVoid_No"];
                this.columnPosError_Tot = base.Columns["PosError_Tot"];
                this.columnPosError_No = base.Columns["PosError_No"];
                this.columnPosCancel_Tot = base.Columns["PosCancel_Tot"];
                this.columnPosCancel_No = base.Columns["PosCancel_No"];
                this.columnPosNet_Amt = base.Columns["PosNet_Amt"];
                this.columnPosCash_Amt = base.Columns["PosCash_Amt"];
                this.columnPosCredit_amt = base.Columns["PosCredit_amt"];
                this.columnPosBill_Count = base.Columns["PosBill_Count"];
                this.columnPosExchange_Tot = base.Columns["PosExchange_Tot"];
                this.columnPosExchange_No = base.Columns["PosExchange_No"];
                this.columnPosDiscount_Tot = base.Columns["PosDiscount_Tot"];
                this.columnPosDiscount_No = base.Columns["PosDiscount_No"];
                this.columnDeclare_Amount = base.Columns["Declare_Amount"];
                this.columnPos_CashOut = base.Columns["Pos_CashOut"];
                this.columnCard1_Descr = base.Columns["Card1_Descr"];
                this.columnCard1_Amount = base.Columns["Card1_Amount"];
                this.columnCard2_Descr = base.Columns["Card2_Descr"];
                this.columnCard2_Amount = base.Columns["Card2_Amount"];
                this.columnCard3_Descr = base.Columns["Card3_Descr"];
                this.columnCard3_Amount = base.Columns["Card3_Amount"];
                this.columnCard4_Descr = base.Columns["Card4_Descr"];
                this.columnCard4_Amount = base.Columns["Card4_Amount"];
                this.columnCard5_Descr = base.Columns["Card5_Descr"];
                this.columnCard5_Amount = base.Columns["Card5_Amount"];
                this.columnDept1_Descr = base.Columns["Dept1_Descr"];
                this.columnDept1_Amount = base.Columns["Dept1_Amount"];
                this.columnDept2_Descr = base.Columns["Dept2_Descr"];
                this.columnDept2_Amount = base.Columns["Dept2_Amount"];
                this.columnDept3_Descr = base.Columns["Dept3_Descr"];
                this.columnDept3_Amount = base.Columns["Dept3_Amount"];
                this.columnDept4_Descr = base.Columns["Dept4_Descr"];
                this.columnDept4_Amount = base.Columns["Dept4_Amount"];
                this.columnDept5_Descr = base.Columns["Dept5_Descr"];
                this.columnDept5_Amount = base.Columns["Dept5_Amount"];
                this.columnLoca = base.Columns["Loca"];
                this.columnLoca_Descrip = base.Columns["Loca_Descrip"];
                this.columnDateFrom = base.Columns["DateFrom"];
                this.columnDateTo = base.Columns["DateTo"];
                this.columnWholeSale_Inv = base.Columns["WholeSale_Inv"];
                this.columnWholeSale_Return = base.Columns["WholeSale_Return"];
                this.columnWholesale_Payment = base.Columns["Wholesale_Payment"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnUnit_No = new global::System.Data.DataColumn("Unit_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnit_No);
                this.columnPosGross_Sales = new global::System.Data.DataColumn("PosGross_Sales", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPosGross_Sales);
                this.columnPosRefund_Tot = new global::System.Data.DataColumn("PosRefund_Tot", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPosRefund_Tot);
                this.columnPosRefund_No = new global::System.Data.DataColumn("PosRefund_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPosRefund_No);
                this.columnPosVoid_Tot = new global::System.Data.DataColumn("PosVoid_Tot", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPosVoid_Tot);
                this.columnPosVoid_No = new global::System.Data.DataColumn("PosVoid_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPosVoid_No);
                this.columnPosError_Tot = new global::System.Data.DataColumn("PosError_Tot", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPosError_Tot);
                this.columnPosError_No = new global::System.Data.DataColumn("PosError_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPosError_No);
                this.columnPosCancel_Tot = new global::System.Data.DataColumn("PosCancel_Tot", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPosCancel_Tot);
                this.columnPosCancel_No = new global::System.Data.DataColumn("PosCancel_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPosCancel_No);
                this.columnPosNet_Amt = new global::System.Data.DataColumn("PosNet_Amt", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPosNet_Amt);
                this.columnPosCash_Amt = new global::System.Data.DataColumn("PosCash_Amt", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPosCash_Amt);
                this.columnPosCredit_amt = new global::System.Data.DataColumn("PosCredit_amt", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPosCredit_amt);
                this.columnPosBill_Count = new global::System.Data.DataColumn("PosBill_Count", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPosBill_Count);
                this.columnPosExchange_Tot = new global::System.Data.DataColumn("PosExchange_Tot", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPosExchange_Tot);
                this.columnPosExchange_No = new global::System.Data.DataColumn("PosExchange_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPosExchange_No);
                this.columnPosDiscount_Tot = new global::System.Data.DataColumn("PosDiscount_Tot", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPosDiscount_Tot);
                this.columnPosDiscount_No = new global::System.Data.DataColumn("PosDiscount_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPosDiscount_No);
                this.columnDeclare_Amount = new global::System.Data.DataColumn("Declare_Amount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeclare_Amount);
                this.columnPos_CashOut = new global::System.Data.DataColumn("Pos_CashOut", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPos_CashOut);
                this.columnCard1_Descr = new global::System.Data.DataColumn("Card1_Descr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCard1_Descr);
                this.columnCard1_Amount = new global::System.Data.DataColumn("Card1_Amount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCard1_Amount);
                this.columnCard2_Descr = new global::System.Data.DataColumn("Card2_Descr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCard2_Descr);
                this.columnCard2_Amount = new global::System.Data.DataColumn("Card2_Amount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCard2_Amount);
                this.columnCard3_Descr = new global::System.Data.DataColumn("Card3_Descr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCard3_Descr);
                this.columnCard3_Amount = new global::System.Data.DataColumn("Card3_Amount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCard3_Amount);
                this.columnCard4_Descr = new global::System.Data.DataColumn("Card4_Descr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCard4_Descr);
                this.columnCard4_Amount = new global::System.Data.DataColumn("Card4_Amount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCard4_Amount);
                this.columnCard5_Descr = new global::System.Data.DataColumn("Card5_Descr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCard5_Descr);
                this.columnCard5_Amount = new global::System.Data.DataColumn("Card5_Amount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCard5_Amount);
                this.columnDept1_Descr = new global::System.Data.DataColumn("Dept1_Descr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDept1_Descr);
                this.columnDept1_Amount = new global::System.Data.DataColumn("Dept1_Amount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDept1_Amount);
                this.columnDept2_Descr = new global::System.Data.DataColumn("Dept2_Descr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDept2_Descr);
                this.columnDept2_Amount = new global::System.Data.DataColumn("Dept2_Amount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDept2_Amount);
                this.columnDept3_Descr = new global::System.Data.DataColumn("Dept3_Descr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDept3_Descr);
                this.columnDept3_Amount = new global::System.Data.DataColumn("Dept3_Amount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDept3_Amount);
                this.columnDept4_Descr = new global::System.Data.DataColumn("Dept4_Descr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDept4_Descr);
                this.columnDept4_Amount = new global::System.Data.DataColumn("Dept4_Amount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDept4_Amount);
                this.columnDept5_Descr = new global::System.Data.DataColumn("Dept5_Descr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDept5_Descr);
                this.columnDept5_Amount = new global::System.Data.DataColumn("Dept5_Amount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDept5_Amount);
                this.columnLoca = new global::System.Data.DataColumn("Loca", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoca);
                this.columnLoca_Descrip = new global::System.Data.DataColumn("Loca_Descrip", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoca_Descrip);
                this.columnDateFrom = new global::System.Data.DataColumn("DateFrom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateFrom);
                this.columnDateTo = new global::System.Data.DataColumn("DateTo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateTo);
                this.columnWholeSale_Inv = new global::System.Data.DataColumn("WholeSale_Inv", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWholeSale_Inv);
                this.columnWholeSale_Return = new global::System.Data.DataColumn("WholeSale_Return", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWholeSale_Return);
                this.columnWholesale_Payment = new global::System.Data.DataColumn("Wholesale_Payment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWholesale_Payment);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataTable1Row NewDataTable1Row() {
                return ((DataTable1Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DataTable1Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(DataTable1Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DataTable1RowChanged != null)) {
                    this.DataTable1RowChanged(this, new DataTable1RowChangeEvent(((DataTable1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DataTable1RowChanging != null)) {
                    this.DataTable1RowChanging(this, new DataTable1RowChangeEvent(((DataTable1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DataTable1RowDeleted != null)) {
                    this.DataTable1RowDeleted(this, new DataTable1RowChangeEvent(((DataTable1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DataTable1RowDeleting != null)) {
                    this.DataTable1RowDeleting(this, new DataTable1RowChangeEvent(((DataTable1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDataTable1Row(DataTable1Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DataTable1DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tb_Customer_DetailDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnRefName;
            
            private global::System.Data.DataColumn columnRefBirthday;
            
            private global::System.Data.DataColumn columnRefNIC;
            
            private global::System.Data.DataColumn columnRefOccupation;
            
            private global::System.Data.DataColumn columnClass;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tb_Customer_DetailDataTable() {
                this.TableName = "tb_Customer_Detail";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tb_Customer_DetailDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tb_Customer_DetailDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RefNameColumn {
                get {
                    return this.columnRefName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RefBirthdayColumn {
                get {
                    return this.columnRefBirthday;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RefNICColumn {
                get {
                    return this.columnRefNIC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RefOccupationColumn {
                get {
                    return this.columnRefOccupation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClassColumn {
                get {
                    return this.columnClass;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tb_Customer_DetailRow this[int index] {
                get {
                    return ((tb_Customer_DetailRow)(this.Rows[index]));
                }
            }
            
            public event tb_Customer_DetailRowChangeEventHandler tb_Customer_DetailRowChanging;
            
            public event tb_Customer_DetailRowChangeEventHandler tb_Customer_DetailRowChanged;
            
            public event tb_Customer_DetailRowChangeEventHandler tb_Customer_DetailRowDeleting;
            
            public event tb_Customer_DetailRowChangeEventHandler tb_Customer_DetailRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addtb_Customer_DetailRow(tb_Customer_DetailRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tb_Customer_DetailRow Addtb_Customer_DetailRow(string RefName, System.DateTime RefBirthday, string RefNIC, string RefOccupation, string Class) {
                tb_Customer_DetailRow rowtb_Customer_DetailRow = ((tb_Customer_DetailRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        RefName,
                        RefBirthday,
                        RefNIC,
                        RefOccupation,
                        Class};
                rowtb_Customer_DetailRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtb_Customer_DetailRow);
                return rowtb_Customer_DetailRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tb_Customer_DetailDataTable cln = ((tb_Customer_DetailDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tb_Customer_DetailDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnRefName = base.Columns["RefName"];
                this.columnRefBirthday = base.Columns["RefBirthday"];
                this.columnRefNIC = base.Columns["RefNIC"];
                this.columnRefOccupation = base.Columns["RefOccupation"];
                this.columnClass = base.Columns["Class"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnRefName = new global::System.Data.DataColumn("RefName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRefName);
                this.columnRefBirthday = new global::System.Data.DataColumn("RefBirthday", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRefBirthday);
                this.columnRefNIC = new global::System.Data.DataColumn("RefNIC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRefNIC);
                this.columnRefOccupation = new global::System.Data.DataColumn("RefOccupation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRefOccupation);
                this.columnClass = new global::System.Data.DataColumn("Class", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClass);
                this.columnRefName.AllowDBNull = false;
                this.columnRefName.MaxLength = 50;
                this.columnRefBirthday.AllowDBNull = false;
                this.columnRefNIC.AllowDBNull = false;
                this.columnRefNIC.MaxLength = 50;
                this.columnRefOccupation.AllowDBNull = false;
                this.columnRefOccupation.MaxLength = 50;
                this.columnClass.AllowDBNull = false;
                this.columnClass.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tb_Customer_DetailRow Newtb_Customer_DetailRow() {
                return ((tb_Customer_DetailRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tb_Customer_DetailRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tb_Customer_DetailRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tb_Customer_DetailRowChanged != null)) {
                    this.tb_Customer_DetailRowChanged(this, new tb_Customer_DetailRowChangeEvent(((tb_Customer_DetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tb_Customer_DetailRowChanging != null)) {
                    this.tb_Customer_DetailRowChanging(this, new tb_Customer_DetailRowChangeEvent(((tb_Customer_DetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tb_Customer_DetailRowDeleted != null)) {
                    this.tb_Customer_DetailRowDeleted(this, new tb_Customer_DetailRowChangeEvent(((tb_Customer_DetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tb_Customer_DetailRowDeleting != null)) {
                    this.tb_Customer_DetailRowDeleting(this, new tb_Customer_DetailRowChangeEvent(((tb_Customer_DetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removetb_Customer_DetailRow(tb_Customer_DetailRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tb_Customer_DetailDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dsCustomerSalesDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnCust_Code;
            
            private global::System.Data.DataColumn columnCust_Name;
            
            private global::System.Data.DataColumn columnNIC;
            
            private global::System.Data.DataColumn columnAmount;
            
            private global::System.Data.DataColumn columnReceipt_No;
            
            private global::System.Data.DataColumn columnUnit;
            
            private global::System.Data.DataColumn columnBillDate;
            
            private global::System.Data.DataColumn columnLocation;
            
            private global::System.Data.DataColumn columnCodeFrom;
            
            private global::System.Data.DataColumn columnCodeTo;
            
            private global::System.Data.DataColumn columnHeder;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsCustomerSalesDataTable() {
                this.TableName = "dsCustomerSales";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsCustomerSalesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dsCustomerSalesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cust_CodeColumn {
                get {
                    return this.columnCust_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cust_NameColumn {
                get {
                    return this.columnCust_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NICColumn {
                get {
                    return this.columnNIC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Receipt_NoColumn {
                get {
                    return this.columnReceipt_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UnitColumn {
                get {
                    return this.columnUnit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BillDateColumn {
                get {
                    return this.columnBillDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LocationColumn {
                get {
                    return this.columnLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CodeFromColumn {
                get {
                    return this.columnCodeFrom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CodeToColumn {
                get {
                    return this.columnCodeTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HederColumn {
                get {
                    return this.columnHeder;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsCustomerSalesRow this[int index] {
                get {
                    return ((dsCustomerSalesRow)(this.Rows[index]));
                }
            }
            
            public event dsCustomerSalesRowChangeEventHandler dsCustomerSalesRowChanging;
            
            public event dsCustomerSalesRowChangeEventHandler dsCustomerSalesRowChanged;
            
            public event dsCustomerSalesRowChangeEventHandler dsCustomerSalesRowDeleting;
            
            public event dsCustomerSalesRowChangeEventHandler dsCustomerSalesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddsCustomerSalesRow(dsCustomerSalesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsCustomerSalesRow AdddsCustomerSalesRow(string Cust_Code, string Cust_Name, string NIC, decimal Amount, string Receipt_No, string Unit, System.DateTime BillDate, string Location, string CodeFrom, string CodeTo, string Heder) {
                dsCustomerSalesRow rowdsCustomerSalesRow = ((dsCustomerSalesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Cust_Code,
                        Cust_Name,
                        NIC,
                        Amount,
                        Receipt_No,
                        Unit,
                        BillDate,
                        Location,
                        CodeFrom,
                        CodeTo,
                        Heder};
                rowdsCustomerSalesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdsCustomerSalesRow);
                return rowdsCustomerSalesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dsCustomerSalesDataTable cln = ((dsCustomerSalesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dsCustomerSalesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCust_Code = base.Columns["Cust_Code"];
                this.columnCust_Name = base.Columns["Cust_Name"];
                this.columnNIC = base.Columns["NIC"];
                this.columnAmount = base.Columns["Amount"];
                this.columnReceipt_No = base.Columns["Receipt_No"];
                this.columnUnit = base.Columns["Unit"];
                this.columnBillDate = base.Columns["BillDate"];
                this.columnLocation = base.Columns["Location"];
                this.columnCodeFrom = base.Columns["CodeFrom"];
                this.columnCodeTo = base.Columns["CodeTo"];
                this.columnHeder = base.Columns["Heder"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCust_Code = new global::System.Data.DataColumn("Cust_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCust_Code);
                this.columnCust_Name = new global::System.Data.DataColumn("Cust_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCust_Name);
                this.columnNIC = new global::System.Data.DataColumn("NIC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNIC);
                this.columnAmount = new global::System.Data.DataColumn("Amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
                this.columnReceipt_No = new global::System.Data.DataColumn("Receipt_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReceipt_No);
                this.columnUnit = new global::System.Data.DataColumn("Unit", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnit);
                this.columnBillDate = new global::System.Data.DataColumn("BillDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBillDate);
                this.columnLocation = new global::System.Data.DataColumn("Location", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocation);
                this.columnCodeFrom = new global::System.Data.DataColumn("CodeFrom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodeFrom);
                this.columnCodeTo = new global::System.Data.DataColumn("CodeTo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodeTo);
                this.columnHeder = new global::System.Data.DataColumn("Heder", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHeder);
                this.columnCust_Code.AllowDBNull = false;
                this.columnCust_Code.MaxLength = 15;
                this.columnCust_Name.AllowDBNull = false;
                this.columnCust_Name.MaxLength = 100;
                this.columnNIC.MaxLength = 20;
                this.columnReceipt_No.MaxLength = 10;
                this.columnUnit.MaxLength = 10;
                this.columnBillDate.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsCustomerSalesRow NewdsCustomerSalesRow() {
                return ((dsCustomerSalesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dsCustomerSalesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dsCustomerSalesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dsCustomerSalesRowChanged != null)) {
                    this.dsCustomerSalesRowChanged(this, new dsCustomerSalesRowChangeEvent(((dsCustomerSalesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dsCustomerSalesRowChanging != null)) {
                    this.dsCustomerSalesRowChanging(this, new dsCustomerSalesRowChangeEvent(((dsCustomerSalesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dsCustomerSalesRowDeleted != null)) {
                    this.dsCustomerSalesRowDeleted(this, new dsCustomerSalesRowChangeEvent(((dsCustomerSalesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dsCustomerSalesRowDeleting != null)) {
                    this.dsCustomerSalesRowDeleting(this, new dsCustomerSalesRowChangeEvent(((dsCustomerSalesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedsCustomerSalesRow(dsCustomerSalesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dsCustomerSalesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dsPurchScheduleDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnLocation;
            
            private global::System.Data.DataColumn columnSupplier;
            
            private global::System.Data.DataColumn columnProdCode;
            
            private global::System.Data.DataColumn columnProdName;
            
            private global::System.Data.DataColumn columnLastPurchDate;
            
            private global::System.Data.DataColumn columnLastPurchQty;
            
            private global::System.Data.DataColumn columnPrevPurchDate;
            
            private global::System.Data.DataColumn columnPrevPurchQty;
            
            private global::System.Data.DataColumn columnAvlStock;
            
            private global::System.Data.DataColumn columnPhyQty;
            
            private global::System.Data.DataColumn columnNewPurchQty;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsPurchScheduleDataTable() {
                this.TableName = "dsPurchSchedule";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsPurchScheduleDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dsPurchScheduleDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LocationColumn {
                get {
                    return this.columnLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SupplierColumn {
                get {
                    return this.columnSupplier;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProdCodeColumn {
                get {
                    return this.columnProdCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProdNameColumn {
                get {
                    return this.columnProdName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LastPurchDateColumn {
                get {
                    return this.columnLastPurchDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LastPurchQtyColumn {
                get {
                    return this.columnLastPurchQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PrevPurchDateColumn {
                get {
                    return this.columnPrevPurchDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PrevPurchQtyColumn {
                get {
                    return this.columnPrevPurchQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AvlStockColumn {
                get {
                    return this.columnAvlStock;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PhyQtyColumn {
                get {
                    return this.columnPhyQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NewPurchQtyColumn {
                get {
                    return this.columnNewPurchQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsPurchScheduleRow this[int index] {
                get {
                    return ((dsPurchScheduleRow)(this.Rows[index]));
                }
            }
            
            public event dsPurchScheduleRowChangeEventHandler dsPurchScheduleRowChanging;
            
            public event dsPurchScheduleRowChangeEventHandler dsPurchScheduleRowChanged;
            
            public event dsPurchScheduleRowChangeEventHandler dsPurchScheduleRowDeleting;
            
            public event dsPurchScheduleRowChangeEventHandler dsPurchScheduleRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddsPurchScheduleRow(dsPurchScheduleRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsPurchScheduleRow AdddsPurchScheduleRow(string Location, string Supplier, string ProdCode, string ProdName, System.DateTime LastPurchDate, double LastPurchQty, System.DateTime PrevPurchDate, double PrevPurchQty, double AvlStock, double PhyQty, double NewPurchQty) {
                dsPurchScheduleRow rowdsPurchScheduleRow = ((dsPurchScheduleRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Location,
                        Supplier,
                        ProdCode,
                        ProdName,
                        LastPurchDate,
                        LastPurchQty,
                        PrevPurchDate,
                        PrevPurchQty,
                        AvlStock,
                        PhyQty,
                        NewPurchQty};
                rowdsPurchScheduleRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdsPurchScheduleRow);
                return rowdsPurchScheduleRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dsPurchScheduleDataTable cln = ((dsPurchScheduleDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dsPurchScheduleDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnLocation = base.Columns["Location"];
                this.columnSupplier = base.Columns["Supplier"];
                this.columnProdCode = base.Columns["ProdCode"];
                this.columnProdName = base.Columns["ProdName"];
                this.columnLastPurchDate = base.Columns["LastPurchDate"];
                this.columnLastPurchQty = base.Columns["LastPurchQty"];
                this.columnPrevPurchDate = base.Columns["PrevPurchDate"];
                this.columnPrevPurchQty = base.Columns["PrevPurchQty"];
                this.columnAvlStock = base.Columns["AvlStock"];
                this.columnPhyQty = base.Columns["PhyQty"];
                this.columnNewPurchQty = base.Columns["NewPurchQty"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnLocation = new global::System.Data.DataColumn("Location", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocation);
                this.columnSupplier = new global::System.Data.DataColumn("Supplier", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplier);
                this.columnProdCode = new global::System.Data.DataColumn("ProdCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProdCode);
                this.columnProdName = new global::System.Data.DataColumn("ProdName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProdName);
                this.columnLastPurchDate = new global::System.Data.DataColumn("LastPurchDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastPurchDate);
                this.columnLastPurchQty = new global::System.Data.DataColumn("LastPurchQty", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastPurchQty);
                this.columnPrevPurchDate = new global::System.Data.DataColumn("PrevPurchDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrevPurchDate);
                this.columnPrevPurchQty = new global::System.Data.DataColumn("PrevPurchQty", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrevPurchQty);
                this.columnAvlStock = new global::System.Data.DataColumn("AvlStock", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAvlStock);
                this.columnPhyQty = new global::System.Data.DataColumn("PhyQty", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhyQty);
                this.columnNewPurchQty = new global::System.Data.DataColumn("NewPurchQty", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNewPurchQty);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsPurchScheduleRow NewdsPurchScheduleRow() {
                return ((dsPurchScheduleRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dsPurchScheduleRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dsPurchScheduleRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dsPurchScheduleRowChanged != null)) {
                    this.dsPurchScheduleRowChanged(this, new dsPurchScheduleRowChangeEvent(((dsPurchScheduleRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dsPurchScheduleRowChanging != null)) {
                    this.dsPurchScheduleRowChanging(this, new dsPurchScheduleRowChangeEvent(((dsPurchScheduleRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dsPurchScheduleRowDeleted != null)) {
                    this.dsPurchScheduleRowDeleted(this, new dsPurchScheduleRowChangeEvent(((dsPurchScheduleRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dsPurchScheduleRowDeleting != null)) {
                    this.dsPurchScheduleRowDeleting(this, new dsPurchScheduleRowChangeEvent(((dsPurchScheduleRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedsPurchScheduleRow(dsPurchScheduleRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dsPurchScheduleDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CompanyProfileDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnCompanyName;
            
            private global::System.Data.DataColumn columnCompanyAddress;
            
            private global::System.Data.DataColumn columnCompanyTelephone;
            
            private global::System.Data.DataColumn columnCompanyEmail;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CompanyProfileDataTable() {
                this.TableName = "CompanyProfile";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CompanyProfileDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CompanyProfileDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompanyNameColumn {
                get {
                    return this.columnCompanyName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompanyAddressColumn {
                get {
                    return this.columnCompanyAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompanyTelephoneColumn {
                get {
                    return this.columnCompanyTelephone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompanyEmailColumn {
                get {
                    return this.columnCompanyEmail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CompanyProfileRow this[int index] {
                get {
                    return ((CompanyProfileRow)(this.Rows[index]));
                }
            }
            
            public event CompanyProfileRowChangeEventHandler CompanyProfileRowChanging;
            
            public event CompanyProfileRowChangeEventHandler CompanyProfileRowChanged;
            
            public event CompanyProfileRowChangeEventHandler CompanyProfileRowDeleting;
            
            public event CompanyProfileRowChangeEventHandler CompanyProfileRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCompanyProfileRow(CompanyProfileRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CompanyProfileRow AddCompanyProfileRow(string CompanyName, string CompanyAddress, string CompanyTelephone, string CompanyEmail) {
                CompanyProfileRow rowCompanyProfileRow = ((CompanyProfileRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CompanyName,
                        CompanyAddress,
                        CompanyTelephone,
                        CompanyEmail};
                rowCompanyProfileRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCompanyProfileRow);
                return rowCompanyProfileRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                CompanyProfileDataTable cln = ((CompanyProfileDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CompanyProfileDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCompanyName = base.Columns["CompanyName"];
                this.columnCompanyAddress = base.Columns["CompanyAddress"];
                this.columnCompanyTelephone = base.Columns["CompanyTelephone"];
                this.columnCompanyEmail = base.Columns["CompanyEmail"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCompanyName = new global::System.Data.DataColumn("CompanyName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompanyName);
                this.columnCompanyAddress = new global::System.Data.DataColumn("CompanyAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompanyAddress);
                this.columnCompanyTelephone = new global::System.Data.DataColumn("CompanyTelephone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompanyTelephone);
                this.columnCompanyEmail = new global::System.Data.DataColumn("CompanyEmail", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompanyEmail);
                this.columnCompanyName.MaxLength = 50;
                this.columnCompanyAddress.MaxLength = 50;
                this.columnCompanyTelephone.MaxLength = 50;
                this.columnCompanyEmail.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CompanyProfileRow NewCompanyProfileRow() {
                return ((CompanyProfileRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CompanyProfileRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(CompanyProfileRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CompanyProfileRowChanged != null)) {
                    this.CompanyProfileRowChanged(this, new CompanyProfileRowChangeEvent(((CompanyProfileRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CompanyProfileRowChanging != null)) {
                    this.CompanyProfileRowChanging(this, new CompanyProfileRowChangeEvent(((CompanyProfileRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CompanyProfileRowDeleted != null)) {
                    this.CompanyProfileRowDeleted(this, new CompanyProfileRowChangeEvent(((CompanyProfileRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CompanyProfileRowDeleting != null)) {
                    this.CompanyProfileRowDeleting(this, new CompanyProfileRowChangeEvent(((CompanyProfileRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCompanyProfileRow(CompanyProfileRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CompanyProfileDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dsFreeIssuedProductDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnProd_Code;
            
            private global::System.Data.DataColumn columnProd_Name;
            
            private global::System.Data.DataColumn columnFreeQty;
            
            private global::System.Data.DataColumn columnPurchase_Price;
            
            private global::System.Data.DataColumn columnSelling_Price;
            
            private global::System.Data.DataColumn columnSales_Date;
            
            private global::System.Data.DataColumn columnDateFrom;
            
            private global::System.Data.DataColumn columnDateTo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsFreeIssuedProductDataTable() {
                this.TableName = "dsFreeIssuedProduct";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsFreeIssuedProductDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dsFreeIssuedProductDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Prod_CodeColumn {
                get {
                    return this.columnProd_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Prod_NameColumn {
                get {
                    return this.columnProd_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FreeQtyColumn {
                get {
                    return this.columnFreeQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Purchase_PriceColumn {
                get {
                    return this.columnPurchase_Price;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Selling_PriceColumn {
                get {
                    return this.columnSelling_Price;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Sales_DateColumn {
                get {
                    return this.columnSales_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateFromColumn {
                get {
                    return this.columnDateFrom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateToColumn {
                get {
                    return this.columnDateTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsFreeIssuedProductRow this[int index] {
                get {
                    return ((dsFreeIssuedProductRow)(this.Rows[index]));
                }
            }
            
            public event dsFreeIssuedProductRowChangeEventHandler dsFreeIssuedProductRowChanging;
            
            public event dsFreeIssuedProductRowChangeEventHandler dsFreeIssuedProductRowChanged;
            
            public event dsFreeIssuedProductRowChangeEventHandler dsFreeIssuedProductRowDeleting;
            
            public event dsFreeIssuedProductRowChangeEventHandler dsFreeIssuedProductRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddsFreeIssuedProductRow(dsFreeIssuedProductRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsFreeIssuedProductRow AdddsFreeIssuedProductRow(string Prod_Code, string Prod_Name, decimal FreeQty, decimal Purchase_Price, decimal Selling_Price, string Sales_Date, string DateFrom, string DateTo) {
                dsFreeIssuedProductRow rowdsFreeIssuedProductRow = ((dsFreeIssuedProductRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Prod_Code,
                        Prod_Name,
                        FreeQty,
                        Purchase_Price,
                        Selling_Price,
                        Sales_Date,
                        DateFrom,
                        DateTo};
                rowdsFreeIssuedProductRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdsFreeIssuedProductRow);
                return rowdsFreeIssuedProductRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dsFreeIssuedProductDataTable cln = ((dsFreeIssuedProductDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dsFreeIssuedProductDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnProd_Code = base.Columns["Prod_Code"];
                this.columnProd_Name = base.Columns["Prod_Name"];
                this.columnFreeQty = base.Columns["FreeQty"];
                this.columnPurchase_Price = base.Columns["Purchase_Price"];
                this.columnSelling_Price = base.Columns["Selling_Price"];
                this.columnSales_Date = base.Columns["Sales_Date"];
                this.columnDateFrom = base.Columns["DateFrom"];
                this.columnDateTo = base.Columns["DateTo"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnProd_Code = new global::System.Data.DataColumn("Prod_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Code);
                this.columnProd_Name = new global::System.Data.DataColumn("Prod_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Name);
                this.columnFreeQty = new global::System.Data.DataColumn("FreeQty", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFreeQty);
                this.columnPurchase_Price = new global::System.Data.DataColumn("Purchase_Price", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPurchase_Price);
                this.columnSelling_Price = new global::System.Data.DataColumn("Selling_Price", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelling_Price);
                this.columnSales_Date = new global::System.Data.DataColumn("Sales_Date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSales_Date);
                this.columnDateFrom = new global::System.Data.DataColumn("DateFrom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateFrom);
                this.columnDateTo = new global::System.Data.DataColumn("DateTo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateTo);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsFreeIssuedProductRow NewdsFreeIssuedProductRow() {
                return ((dsFreeIssuedProductRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dsFreeIssuedProductRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dsFreeIssuedProductRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dsFreeIssuedProductRowChanged != null)) {
                    this.dsFreeIssuedProductRowChanged(this, new dsFreeIssuedProductRowChangeEvent(((dsFreeIssuedProductRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dsFreeIssuedProductRowChanging != null)) {
                    this.dsFreeIssuedProductRowChanging(this, new dsFreeIssuedProductRowChangeEvent(((dsFreeIssuedProductRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dsFreeIssuedProductRowDeleted != null)) {
                    this.dsFreeIssuedProductRowDeleted(this, new dsFreeIssuedProductRowChangeEvent(((dsFreeIssuedProductRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dsFreeIssuedProductRowDeleting != null)) {
                    this.dsFreeIssuedProductRowDeleting(this, new dsFreeIssuedProductRowChangeEvent(((dsFreeIssuedProductRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedsFreeIssuedProductRow(dsFreeIssuedProductRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dsFreeIssuedProductDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dsLocaWiseTGNSummaryDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnTo_Loca;
            
            private global::System.Data.DataColumn columnTo_LocaDesc;
            
            private global::System.Data.DataColumn columnDoc_No;
            
            private global::System.Data.DataColumn columnPost_Date;
            
            private global::System.Data.DataColumn columnAmount;
            
            private global::System.Data.DataColumn columnCodeFrom;
            
            private global::System.Data.DataColumn columnCodeTo;
            
            private global::System.Data.DataColumn columnDateFrom;
            
            private global::System.Data.DataColumn columnDateTo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsLocaWiseTGNSummaryDataTable() {
                this.TableName = "dsLocaWiseTGNSummary";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsLocaWiseTGNSummaryDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dsLocaWiseTGNSummaryDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn To_LocaColumn {
                get {
                    return this.columnTo_Loca;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn To_LocaDescColumn {
                get {
                    return this.columnTo_LocaDesc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Doc_NoColumn {
                get {
                    return this.columnDoc_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Post_DateColumn {
                get {
                    return this.columnPost_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CodeFromColumn {
                get {
                    return this.columnCodeFrom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CodeToColumn {
                get {
                    return this.columnCodeTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateFromColumn {
                get {
                    return this.columnDateFrom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateToColumn {
                get {
                    return this.columnDateTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsLocaWiseTGNSummaryRow this[int index] {
                get {
                    return ((dsLocaWiseTGNSummaryRow)(this.Rows[index]));
                }
            }
            
            public event dsLocaWiseTGNSummaryRowChangeEventHandler dsLocaWiseTGNSummaryRowChanging;
            
            public event dsLocaWiseTGNSummaryRowChangeEventHandler dsLocaWiseTGNSummaryRowChanged;
            
            public event dsLocaWiseTGNSummaryRowChangeEventHandler dsLocaWiseTGNSummaryRowDeleting;
            
            public event dsLocaWiseTGNSummaryRowChangeEventHandler dsLocaWiseTGNSummaryRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddsLocaWiseTGNSummaryRow(dsLocaWiseTGNSummaryRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsLocaWiseTGNSummaryRow AdddsLocaWiseTGNSummaryRow(string To_Loca, string To_LocaDesc, string Doc_No, string Post_Date, decimal Amount, string CodeFrom, string CodeTo, string DateFrom, string DateTo) {
                dsLocaWiseTGNSummaryRow rowdsLocaWiseTGNSummaryRow = ((dsLocaWiseTGNSummaryRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        To_Loca,
                        To_LocaDesc,
                        Doc_No,
                        Post_Date,
                        Amount,
                        CodeFrom,
                        CodeTo,
                        DateFrom,
                        DateTo};
                rowdsLocaWiseTGNSummaryRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdsLocaWiseTGNSummaryRow);
                return rowdsLocaWiseTGNSummaryRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dsLocaWiseTGNSummaryDataTable cln = ((dsLocaWiseTGNSummaryDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dsLocaWiseTGNSummaryDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnTo_Loca = base.Columns["To_Loca"];
                this.columnTo_LocaDesc = base.Columns["To_LocaDesc"];
                this.columnDoc_No = base.Columns["Doc_No"];
                this.columnPost_Date = base.Columns["Post_Date"];
                this.columnAmount = base.Columns["Amount"];
                this.columnCodeFrom = base.Columns["CodeFrom"];
                this.columnCodeTo = base.Columns["CodeTo"];
                this.columnDateFrom = base.Columns["DateFrom"];
                this.columnDateTo = base.Columns["DateTo"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnTo_Loca = new global::System.Data.DataColumn("To_Loca", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTo_Loca);
                this.columnTo_LocaDesc = new global::System.Data.DataColumn("To_LocaDesc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTo_LocaDesc);
                this.columnDoc_No = new global::System.Data.DataColumn("Doc_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDoc_No);
                this.columnPost_Date = new global::System.Data.DataColumn("Post_Date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPost_Date);
                this.columnAmount = new global::System.Data.DataColumn("Amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
                this.columnCodeFrom = new global::System.Data.DataColumn("CodeFrom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodeFrom);
                this.columnCodeTo = new global::System.Data.DataColumn("CodeTo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodeTo);
                this.columnDateFrom = new global::System.Data.DataColumn("DateFrom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateFrom);
                this.columnDateTo = new global::System.Data.DataColumn("DateTo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateTo);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsLocaWiseTGNSummaryRow NewdsLocaWiseTGNSummaryRow() {
                return ((dsLocaWiseTGNSummaryRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dsLocaWiseTGNSummaryRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dsLocaWiseTGNSummaryRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dsLocaWiseTGNSummaryRowChanged != null)) {
                    this.dsLocaWiseTGNSummaryRowChanged(this, new dsLocaWiseTGNSummaryRowChangeEvent(((dsLocaWiseTGNSummaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dsLocaWiseTGNSummaryRowChanging != null)) {
                    this.dsLocaWiseTGNSummaryRowChanging(this, new dsLocaWiseTGNSummaryRowChangeEvent(((dsLocaWiseTGNSummaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dsLocaWiseTGNSummaryRowDeleted != null)) {
                    this.dsLocaWiseTGNSummaryRowDeleted(this, new dsLocaWiseTGNSummaryRowChangeEvent(((dsLocaWiseTGNSummaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dsLocaWiseTGNSummaryRowDeleting != null)) {
                    this.dsLocaWiseTGNSummaryRowDeleting(this, new dsLocaWiseTGNSummaryRowChangeEvent(((dsLocaWiseTGNSummaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedsLocaWiseTGNSummaryRow(dsLocaWiseTGNSummaryRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dsLocaWiseTGNSummaryDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dsReturnChequeDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnCheque_No;
            
            private global::System.Data.DataColumn columnCheque_Date;
            
            private global::System.Data.DataColumn columnBank;
            
            private global::System.Data.DataColumn columnAccNo;
            
            private global::System.Data.DataColumn columnAmount;
            
            private global::System.Data.DataColumn columnCodeFrom;
            
            private global::System.Data.DataColumn columnCodeTo;
            
            private global::System.Data.DataColumn columnDateFrom;
            
            private global::System.Data.DataColumn columnDateTo;
            
            private global::System.Data.DataColumn columnDoc_No;
            
            private global::System.Data.DataColumn columnPost_Date;
            
            private global::System.Data.DataColumn columnBranch;
            
            private global::System.Data.DataColumn columnSupplier;
            
            private global::System.Data.DataColumn columnCustomer;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsReturnChequeDataTable() {
                this.TableName = "dsReturnCheque";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsReturnChequeDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dsReturnChequeDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cheque_NoColumn {
                get {
                    return this.columnCheque_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cheque_DateColumn {
                get {
                    return this.columnCheque_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BankColumn {
                get {
                    return this.columnBank;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AccNoColumn {
                get {
                    return this.columnAccNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CodeFromColumn {
                get {
                    return this.columnCodeFrom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CodeToColumn {
                get {
                    return this.columnCodeTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateFromColumn {
                get {
                    return this.columnDateFrom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateToColumn {
                get {
                    return this.columnDateTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Doc_NoColumn {
                get {
                    return this.columnDoc_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Post_DateColumn {
                get {
                    return this.columnPost_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BranchColumn {
                get {
                    return this.columnBranch;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SupplierColumn {
                get {
                    return this.columnSupplier;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerColumn {
                get {
                    return this.columnCustomer;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsReturnChequeRow this[int index] {
                get {
                    return ((dsReturnChequeRow)(this.Rows[index]));
                }
            }
            
            public event dsReturnChequeRowChangeEventHandler dsReturnChequeRowChanging;
            
            public event dsReturnChequeRowChangeEventHandler dsReturnChequeRowChanged;
            
            public event dsReturnChequeRowChangeEventHandler dsReturnChequeRowDeleting;
            
            public event dsReturnChequeRowChangeEventHandler dsReturnChequeRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddsReturnChequeRow(dsReturnChequeRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsReturnChequeRow AdddsReturnChequeRow(string Cheque_No, string Cheque_Date, string Bank, string AccNo, decimal Amount, string CodeFrom, string CodeTo, string DateFrom, string DateTo, string Doc_No, string Post_Date, string Branch, string Supplier, string Customer) {
                dsReturnChequeRow rowdsReturnChequeRow = ((dsReturnChequeRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Cheque_No,
                        Cheque_Date,
                        Bank,
                        AccNo,
                        Amount,
                        CodeFrom,
                        CodeTo,
                        DateFrom,
                        DateTo,
                        Doc_No,
                        Post_Date,
                        Branch,
                        Supplier,
                        Customer};
                rowdsReturnChequeRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdsReturnChequeRow);
                return rowdsReturnChequeRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dsReturnChequeDataTable cln = ((dsReturnChequeDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dsReturnChequeDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCheque_No = base.Columns["Cheque_No"];
                this.columnCheque_Date = base.Columns["Cheque_Date"];
                this.columnBank = base.Columns["Bank"];
                this.columnAccNo = base.Columns["AccNo"];
                this.columnAmount = base.Columns["Amount"];
                this.columnCodeFrom = base.Columns["CodeFrom"];
                this.columnCodeTo = base.Columns["CodeTo"];
                this.columnDateFrom = base.Columns["DateFrom"];
                this.columnDateTo = base.Columns["DateTo"];
                this.columnDoc_No = base.Columns["Doc_No"];
                this.columnPost_Date = base.Columns["Post_Date"];
                this.columnBranch = base.Columns["Branch"];
                this.columnSupplier = base.Columns["Supplier"];
                this.columnCustomer = base.Columns["Customer"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCheque_No = new global::System.Data.DataColumn("Cheque_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCheque_No);
                this.columnCheque_Date = new global::System.Data.DataColumn("Cheque_Date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCheque_Date);
                this.columnBank = new global::System.Data.DataColumn("Bank", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBank);
                this.columnAccNo = new global::System.Data.DataColumn("AccNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccNo);
                this.columnAmount = new global::System.Data.DataColumn("Amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
                this.columnCodeFrom = new global::System.Data.DataColumn("CodeFrom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodeFrom);
                this.columnCodeTo = new global::System.Data.DataColumn("CodeTo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodeTo);
                this.columnDateFrom = new global::System.Data.DataColumn("DateFrom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateFrom);
                this.columnDateTo = new global::System.Data.DataColumn("DateTo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateTo);
                this.columnDoc_No = new global::System.Data.DataColumn("Doc_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDoc_No);
                this.columnPost_Date = new global::System.Data.DataColumn("Post_Date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPost_Date);
                this.columnBranch = new global::System.Data.DataColumn("Branch", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBranch);
                this.columnSupplier = new global::System.Data.DataColumn("Supplier", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplier);
                this.columnCustomer = new global::System.Data.DataColumn("Customer", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomer);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsReturnChequeRow NewdsReturnChequeRow() {
                return ((dsReturnChequeRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dsReturnChequeRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dsReturnChequeRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dsReturnChequeRowChanged != null)) {
                    this.dsReturnChequeRowChanged(this, new dsReturnChequeRowChangeEvent(((dsReturnChequeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dsReturnChequeRowChanging != null)) {
                    this.dsReturnChequeRowChanging(this, new dsReturnChequeRowChangeEvent(((dsReturnChequeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dsReturnChequeRowDeleted != null)) {
                    this.dsReturnChequeRowDeleted(this, new dsReturnChequeRowChangeEvent(((dsReturnChequeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dsReturnChequeRowDeleting != null)) {
                    this.dsReturnChequeRowDeleting(this, new dsReturnChequeRowChangeEvent(((dsReturnChequeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedsReturnChequeRow(dsReturnChequeRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dsReturnChequeDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dsProductDiscardDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnSupplier;
            
            private global::System.Data.DataColumn columnDoc_No;
            
            private global::System.Data.DataColumn columnPost_Date;
            
            private global::System.Data.DataColumn columnLoca;
            
            private global::System.Data.DataColumn columnLoca_Descrip;
            
            private global::System.Data.DataColumn columnProd_Code;
            
            private global::System.Data.DataColumn columnProd_Name;
            
            private global::System.Data.DataColumn columnPurchase_Price;
            
            private global::System.Data.DataColumn columnQty;
            
            private global::System.Data.DataColumn columnAmount;
            
            private global::System.Data.DataColumn columnNet_Amount;
            
            private global::System.Data.DataColumn columnRemarks;
            
            private global::System.Data.DataColumn columnGross_Amount;
            
            private global::System.Data.DataColumn columnCodeFrom;
            
            private global::System.Data.DataColumn columnCodeTo;
            
            private global::System.Data.DataColumn columnDateFrom;
            
            private global::System.Data.DataColumn columnDateTo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsProductDiscardDataTable() {
                this.TableName = "dsProductDiscard";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsProductDiscardDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dsProductDiscardDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SupplierColumn {
                get {
                    return this.columnSupplier;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Doc_NoColumn {
                get {
                    return this.columnDoc_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Post_DateColumn {
                get {
                    return this.columnPost_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LocaColumn {
                get {
                    return this.columnLoca;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Loca_DescripColumn {
                get {
                    return this.columnLoca_Descrip;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Prod_CodeColumn {
                get {
                    return this.columnProd_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Prod_NameColumn {
                get {
                    return this.columnProd_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Purchase_PriceColumn {
                get {
                    return this.columnPurchase_Price;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QtyColumn {
                get {
                    return this.columnQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Net_AmountColumn {
                get {
                    return this.columnNet_Amount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RemarksColumn {
                get {
                    return this.columnRemarks;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Gross_AmountColumn {
                get {
                    return this.columnGross_Amount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CodeFromColumn {
                get {
                    return this.columnCodeFrom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CodeToColumn {
                get {
                    return this.columnCodeTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateFromColumn {
                get {
                    return this.columnDateFrom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateToColumn {
                get {
                    return this.columnDateTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsProductDiscardRow this[int index] {
                get {
                    return ((dsProductDiscardRow)(this.Rows[index]));
                }
            }
            
            public event dsProductDiscardRowChangeEventHandler dsProductDiscardRowChanging;
            
            public event dsProductDiscardRowChangeEventHandler dsProductDiscardRowChanged;
            
            public event dsProductDiscardRowChangeEventHandler dsProductDiscardRowDeleting;
            
            public event dsProductDiscardRowChangeEventHandler dsProductDiscardRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddsProductDiscardRow(dsProductDiscardRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsProductDiscardRow AdddsProductDiscardRow(
                        string Supplier, 
                        string Doc_No, 
                        string Post_Date, 
                        string Loca, 
                        string Loca_Descrip, 
                        string Prod_Code, 
                        string Prod_Name, 
                        decimal Purchase_Price, 
                        decimal Qty, 
                        decimal Amount, 
                        decimal Net_Amount, 
                        string Remarks, 
                        decimal Gross_Amount, 
                        string CodeFrom, 
                        string CodeTo, 
                        string DateFrom, 
                        string DateTo) {
                dsProductDiscardRow rowdsProductDiscardRow = ((dsProductDiscardRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Supplier,
                        Doc_No,
                        Post_Date,
                        Loca,
                        Loca_Descrip,
                        Prod_Code,
                        Prod_Name,
                        Purchase_Price,
                        Qty,
                        Amount,
                        Net_Amount,
                        Remarks,
                        Gross_Amount,
                        CodeFrom,
                        CodeTo,
                        DateFrom,
                        DateTo};
                rowdsProductDiscardRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdsProductDiscardRow);
                return rowdsProductDiscardRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dsProductDiscardDataTable cln = ((dsProductDiscardDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dsProductDiscardDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSupplier = base.Columns["Supplier"];
                this.columnDoc_No = base.Columns["Doc_No"];
                this.columnPost_Date = base.Columns["Post_Date"];
                this.columnLoca = base.Columns["Loca"];
                this.columnLoca_Descrip = base.Columns["Loca_Descrip"];
                this.columnProd_Code = base.Columns["Prod_Code"];
                this.columnProd_Name = base.Columns["Prod_Name"];
                this.columnPurchase_Price = base.Columns["Purchase_Price"];
                this.columnQty = base.Columns["Qty"];
                this.columnAmount = base.Columns["Amount"];
                this.columnNet_Amount = base.Columns["Net_Amount"];
                this.columnRemarks = base.Columns["Remarks"];
                this.columnGross_Amount = base.Columns["Gross_Amount"];
                this.columnCodeFrom = base.Columns["CodeFrom"];
                this.columnCodeTo = base.Columns["CodeTo"];
                this.columnDateFrom = base.Columns["DateFrom"];
                this.columnDateTo = base.Columns["DateTo"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSupplier = new global::System.Data.DataColumn("Supplier", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplier);
                this.columnDoc_No = new global::System.Data.DataColumn("Doc_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDoc_No);
                this.columnPost_Date = new global::System.Data.DataColumn("Post_Date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPost_Date);
                this.columnLoca = new global::System.Data.DataColumn("Loca", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoca);
                this.columnLoca_Descrip = new global::System.Data.DataColumn("Loca_Descrip", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoca_Descrip);
                this.columnProd_Code = new global::System.Data.DataColumn("Prod_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Code);
                this.columnProd_Name = new global::System.Data.DataColumn("Prod_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Name);
                this.columnPurchase_Price = new global::System.Data.DataColumn("Purchase_Price", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPurchase_Price);
                this.columnQty = new global::System.Data.DataColumn("Qty", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQty);
                this.columnAmount = new global::System.Data.DataColumn("Amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
                this.columnNet_Amount = new global::System.Data.DataColumn("Net_Amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNet_Amount);
                this.columnRemarks = new global::System.Data.DataColumn("Remarks", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemarks);
                this.columnGross_Amount = new global::System.Data.DataColumn("Gross_Amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGross_Amount);
                this.columnCodeFrom = new global::System.Data.DataColumn("CodeFrom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodeFrom);
                this.columnCodeTo = new global::System.Data.DataColumn("CodeTo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodeTo);
                this.columnDateFrom = new global::System.Data.DataColumn("DateFrom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateFrom);
                this.columnDateTo = new global::System.Data.DataColumn("DateTo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateTo);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsProductDiscardRow NewdsProductDiscardRow() {
                return ((dsProductDiscardRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dsProductDiscardRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dsProductDiscardRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dsProductDiscardRowChanged != null)) {
                    this.dsProductDiscardRowChanged(this, new dsProductDiscardRowChangeEvent(((dsProductDiscardRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dsProductDiscardRowChanging != null)) {
                    this.dsProductDiscardRowChanging(this, new dsProductDiscardRowChangeEvent(((dsProductDiscardRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dsProductDiscardRowDeleted != null)) {
                    this.dsProductDiscardRowDeleted(this, new dsProductDiscardRowChangeEvent(((dsProductDiscardRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dsProductDiscardRowDeleting != null)) {
                    this.dsProductDiscardRowDeleting(this, new dsProductDiscardRowChangeEvent(((dsProductDiscardRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedsProductDiscardRow(dsProductDiscardRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dsProductDiscardDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dsChqReconnDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnDoc_No;
            
            private global::System.Data.DataColumn columnInv_No;
            
            private global::System.Data.DataColumn columnInv_Date;
            
            private global::System.Data.DataColumn columnAmount;
            
            private global::System.Data.DataColumn columnLoca;
            
            private global::System.Data.DataColumn columnCodeFrom;
            
            private global::System.Data.DataColumn columnCodeTo;
            
            private global::System.Data.DataColumn columnDateFrom;
            
            private global::System.Data.DataColumn columnDateTo;
            
            private global::System.Data.DataColumn columnCustomer;
            
            private global::System.Data.DataColumn columnSupplier;
            
            private global::System.Data.DataColumn columnTo_LocaDesc;
            
            private global::System.Data.DataColumn columnCode;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsChqReconnDataTable() {
                this.TableName = "dsChqReconn";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsChqReconnDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dsChqReconnDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Doc_NoColumn {
                get {
                    return this.columnDoc_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Inv_NoColumn {
                get {
                    return this.columnInv_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Inv_DateColumn {
                get {
                    return this.columnInv_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LocaColumn {
                get {
                    return this.columnLoca;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CodeFromColumn {
                get {
                    return this.columnCodeFrom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CodeToColumn {
                get {
                    return this.columnCodeTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateFromColumn {
                get {
                    return this.columnDateFrom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateToColumn {
                get {
                    return this.columnDateTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerColumn {
                get {
                    return this.columnCustomer;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SupplierColumn {
                get {
                    return this.columnSupplier;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn To_LocaDescColumn {
                get {
                    return this.columnTo_LocaDesc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CodeColumn {
                get {
                    return this.columnCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsChqReconnRow this[int index] {
                get {
                    return ((dsChqReconnRow)(this.Rows[index]));
                }
            }
            
            public event dsChqReconnRowChangeEventHandler dsChqReconnRowChanging;
            
            public event dsChqReconnRowChangeEventHandler dsChqReconnRowChanged;
            
            public event dsChqReconnRowChangeEventHandler dsChqReconnRowDeleting;
            
            public event dsChqReconnRowChangeEventHandler dsChqReconnRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddsChqReconnRow(dsChqReconnRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsChqReconnRow AdddsChqReconnRow(string Doc_No, string Inv_No, string Inv_Date, decimal Amount, string Loca, string CodeFrom, string CodeTo, string DateFrom, string DateTo, string Customer, string Supplier, string To_LocaDesc, string Code) {
                dsChqReconnRow rowdsChqReconnRow = ((dsChqReconnRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Doc_No,
                        Inv_No,
                        Inv_Date,
                        Amount,
                        Loca,
                        CodeFrom,
                        CodeTo,
                        DateFrom,
                        DateTo,
                        Customer,
                        Supplier,
                        To_LocaDesc,
                        Code};
                rowdsChqReconnRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdsChqReconnRow);
                return rowdsChqReconnRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dsChqReconnDataTable cln = ((dsChqReconnDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dsChqReconnDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDoc_No = base.Columns["Doc_No"];
                this.columnInv_No = base.Columns["Inv_No"];
                this.columnInv_Date = base.Columns["Inv_Date"];
                this.columnAmount = base.Columns["Amount"];
                this.columnLoca = base.Columns["Loca"];
                this.columnCodeFrom = base.Columns["CodeFrom"];
                this.columnCodeTo = base.Columns["CodeTo"];
                this.columnDateFrom = base.Columns["DateFrom"];
                this.columnDateTo = base.Columns["DateTo"];
                this.columnCustomer = base.Columns["Customer"];
                this.columnSupplier = base.Columns["Supplier"];
                this.columnTo_LocaDesc = base.Columns["To_LocaDesc"];
                this.columnCode = base.Columns["Code"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDoc_No = new global::System.Data.DataColumn("Doc_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDoc_No);
                this.columnInv_No = new global::System.Data.DataColumn("Inv_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInv_No);
                this.columnInv_Date = new global::System.Data.DataColumn("Inv_Date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInv_Date);
                this.columnAmount = new global::System.Data.DataColumn("Amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
                this.columnLoca = new global::System.Data.DataColumn("Loca", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoca);
                this.columnCodeFrom = new global::System.Data.DataColumn("CodeFrom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodeFrom);
                this.columnCodeTo = new global::System.Data.DataColumn("CodeTo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodeTo);
                this.columnDateFrom = new global::System.Data.DataColumn("DateFrom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateFrom);
                this.columnDateTo = new global::System.Data.DataColumn("DateTo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateTo);
                this.columnCustomer = new global::System.Data.DataColumn("Customer", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomer);
                this.columnSupplier = new global::System.Data.DataColumn("Supplier", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplier);
                this.columnTo_LocaDesc = new global::System.Data.DataColumn("To_LocaDesc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTo_LocaDesc);
                this.columnCode = new global::System.Data.DataColumn("Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCode);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsChqReconnRow NewdsChqReconnRow() {
                return ((dsChqReconnRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dsChqReconnRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dsChqReconnRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dsChqReconnRowChanged != null)) {
                    this.dsChqReconnRowChanged(this, new dsChqReconnRowChangeEvent(((dsChqReconnRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dsChqReconnRowChanging != null)) {
                    this.dsChqReconnRowChanging(this, new dsChqReconnRowChangeEvent(((dsChqReconnRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dsChqReconnRowDeleted != null)) {
                    this.dsChqReconnRowDeleted(this, new dsChqReconnRowChangeEvent(((dsChqReconnRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dsChqReconnRowDeleting != null)) {
                    this.dsChqReconnRowDeleting(this, new dsChqReconnRowChangeEvent(((dsChqReconnRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedsChqReconnRow(dsChqReconnRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dsChqReconnDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dsLocaWiseDeptSaleDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnProd_Code;
            
            private global::System.Data.DataColumn columnProd_Name;
            
            private global::System.Data.DataColumn columnQty;
            
            private global::System.Data.DataColumn columnAmount;
            
            private global::System.Data.DataColumn columnPurchase_Price;
            
            private global::System.Data.DataColumn columnSelling_Price;
            
            private global::System.Data.DataColumn columnLoca;
            
            private global::System.Data.DataColumn columnSales_Date;
            
            private global::System.Data.DataColumn columnCodeFrom;
            
            private global::System.Data.DataColumn columnCodeTo;
            
            private global::System.Data.DataColumn columnDateFrom;
            
            private global::System.Data.DataColumn columnDateTo;
            
            private global::System.Data.DataColumn columnDept_Code;
            
            private global::System.Data.DataColumn columnCat_Code;
            
            private global::System.Data.DataColumn columnSupp_Code;
            
            private global::System.Data.DataColumn columnColumn1;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsLocaWiseDeptSaleDataTable() {
                this.TableName = "dsLocaWiseDeptSale";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsLocaWiseDeptSaleDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dsLocaWiseDeptSaleDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Prod_CodeColumn {
                get {
                    return this.columnProd_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Prod_NameColumn {
                get {
                    return this.columnProd_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QtyColumn {
                get {
                    return this.columnQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Purchase_PriceColumn {
                get {
                    return this.columnPurchase_Price;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Selling_PriceColumn {
                get {
                    return this.columnSelling_Price;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LocaColumn {
                get {
                    return this.columnLoca;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Sales_DateColumn {
                get {
                    return this.columnSales_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CodeFromColumn {
                get {
                    return this.columnCodeFrom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CodeToColumn {
                get {
                    return this.columnCodeTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateFromColumn {
                get {
                    return this.columnDateFrom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateToColumn {
                get {
                    return this.columnDateTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Dept_CodeColumn {
                get {
                    return this.columnDept_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cat_CodeColumn {
                get {
                    return this.columnCat_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Supp_CodeColumn {
                get {
                    return this.columnSupp_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Column1Column {
                get {
                    return this.columnColumn1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsLocaWiseDeptSaleRow this[int index] {
                get {
                    return ((dsLocaWiseDeptSaleRow)(this.Rows[index]));
                }
            }
            
            public event dsLocaWiseDeptSaleRowChangeEventHandler dsLocaWiseDeptSaleRowChanging;
            
            public event dsLocaWiseDeptSaleRowChangeEventHandler dsLocaWiseDeptSaleRowChanged;
            
            public event dsLocaWiseDeptSaleRowChangeEventHandler dsLocaWiseDeptSaleRowDeleting;
            
            public event dsLocaWiseDeptSaleRowChangeEventHandler dsLocaWiseDeptSaleRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddsLocaWiseDeptSaleRow(dsLocaWiseDeptSaleRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsLocaWiseDeptSaleRow AdddsLocaWiseDeptSaleRow(
                        string Prod_Code, 
                        string Prod_Name, 
                        decimal Qty, 
                        decimal Amount, 
                        decimal Purchase_Price, 
                        decimal Selling_Price, 
                        string Loca, 
                        string Sales_Date, 
                        string CodeFrom, 
                        string CodeTo, 
                        string DateFrom, 
                        string DateTo, 
                        string Dept_Code, 
                        string Cat_Code, 
                        string Supp_Code, 
                        string Column1) {
                dsLocaWiseDeptSaleRow rowdsLocaWiseDeptSaleRow = ((dsLocaWiseDeptSaleRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Prod_Code,
                        Prod_Name,
                        Qty,
                        Amount,
                        Purchase_Price,
                        Selling_Price,
                        Loca,
                        Sales_Date,
                        CodeFrom,
                        CodeTo,
                        DateFrom,
                        DateTo,
                        Dept_Code,
                        Cat_Code,
                        Supp_Code,
                        Column1};
                rowdsLocaWiseDeptSaleRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdsLocaWiseDeptSaleRow);
                return rowdsLocaWiseDeptSaleRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dsLocaWiseDeptSaleDataTable cln = ((dsLocaWiseDeptSaleDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dsLocaWiseDeptSaleDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnProd_Code = base.Columns["Prod_Code"];
                this.columnProd_Name = base.Columns["Prod_Name"];
                this.columnQty = base.Columns["Qty"];
                this.columnAmount = base.Columns["Amount"];
                this.columnPurchase_Price = base.Columns["Purchase_Price"];
                this.columnSelling_Price = base.Columns["Selling_Price"];
                this.columnLoca = base.Columns["Loca"];
                this.columnSales_Date = base.Columns["Sales_Date"];
                this.columnCodeFrom = base.Columns["CodeFrom"];
                this.columnCodeTo = base.Columns["CodeTo"];
                this.columnDateFrom = base.Columns["DateFrom"];
                this.columnDateTo = base.Columns["DateTo"];
                this.columnDept_Code = base.Columns["Dept_Code"];
                this.columnCat_Code = base.Columns["Cat_Code"];
                this.columnSupp_Code = base.Columns["Supp_Code"];
                this.columnColumn1 = base.Columns["Column1"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnProd_Code = new global::System.Data.DataColumn("Prod_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Code);
                this.columnProd_Name = new global::System.Data.DataColumn("Prod_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Name);
                this.columnQty = new global::System.Data.DataColumn("Qty", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQty);
                this.columnAmount = new global::System.Data.DataColumn("Amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
                this.columnPurchase_Price = new global::System.Data.DataColumn("Purchase_Price", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPurchase_Price);
                this.columnSelling_Price = new global::System.Data.DataColumn("Selling_Price", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelling_Price);
                this.columnLoca = new global::System.Data.DataColumn("Loca", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoca);
                this.columnSales_Date = new global::System.Data.DataColumn("Sales_Date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSales_Date);
                this.columnCodeFrom = new global::System.Data.DataColumn("CodeFrom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodeFrom);
                this.columnCodeTo = new global::System.Data.DataColumn("CodeTo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodeTo);
                this.columnDateFrom = new global::System.Data.DataColumn("DateFrom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateFrom);
                this.columnDateTo = new global::System.Data.DataColumn("DateTo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateTo);
                this.columnDept_Code = new global::System.Data.DataColumn("Dept_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDept_Code);
                this.columnCat_Code = new global::System.Data.DataColumn("Cat_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCat_Code);
                this.columnSupp_Code = new global::System.Data.DataColumn("Supp_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupp_Code);
                this.columnColumn1 = new global::System.Data.DataColumn("Column1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnColumn1);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsLocaWiseDeptSaleRow NewdsLocaWiseDeptSaleRow() {
                return ((dsLocaWiseDeptSaleRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dsLocaWiseDeptSaleRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dsLocaWiseDeptSaleRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dsLocaWiseDeptSaleRowChanged != null)) {
                    this.dsLocaWiseDeptSaleRowChanged(this, new dsLocaWiseDeptSaleRowChangeEvent(((dsLocaWiseDeptSaleRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dsLocaWiseDeptSaleRowChanging != null)) {
                    this.dsLocaWiseDeptSaleRowChanging(this, new dsLocaWiseDeptSaleRowChangeEvent(((dsLocaWiseDeptSaleRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dsLocaWiseDeptSaleRowDeleted != null)) {
                    this.dsLocaWiseDeptSaleRowDeleted(this, new dsLocaWiseDeptSaleRowChangeEvent(((dsLocaWiseDeptSaleRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dsLocaWiseDeptSaleRowDeleting != null)) {
                    this.dsLocaWiseDeptSaleRowDeleting(this, new dsLocaWiseDeptSaleRowChangeEvent(((dsLocaWiseDeptSaleRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedsLocaWiseDeptSaleRow(dsLocaWiseDeptSaleRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dsLocaWiseDeptSaleDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dsProdWiseSpecialDiscDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnItem_Code;
            
            private global::System.Data.DataColumn columnItem_Descrip;
            
            private global::System.Data.DataColumn columnQty;
            
            private global::System.Data.DataColumn columnMarked_Price;
            
            private global::System.Data.DataColumn columnUnit_Price;
            
            private global::System.Data.DataColumn columnDiscount;
            
            private global::System.Data.DataColumn columnCodeFrom;
            
            private global::System.Data.DataColumn columnCodeTo;
            
            private global::System.Data.DataColumn columnDateFrom;
            
            private global::System.Data.DataColumn columnDateTo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsProdWiseSpecialDiscDataTable() {
                this.TableName = "dsProdWiseSpecialDisc";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsProdWiseSpecialDiscDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dsProdWiseSpecialDiscDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Item_CodeColumn {
                get {
                    return this.columnItem_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Item_DescripColumn {
                get {
                    return this.columnItem_Descrip;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QtyColumn {
                get {
                    return this.columnQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Marked_PriceColumn {
                get {
                    return this.columnMarked_Price;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Unit_PriceColumn {
                get {
                    return this.columnUnit_Price;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DiscountColumn {
                get {
                    return this.columnDiscount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CodeFromColumn {
                get {
                    return this.columnCodeFrom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CodeToColumn {
                get {
                    return this.columnCodeTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateFromColumn {
                get {
                    return this.columnDateFrom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateToColumn {
                get {
                    return this.columnDateTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsProdWiseSpecialDiscRow this[int index] {
                get {
                    return ((dsProdWiseSpecialDiscRow)(this.Rows[index]));
                }
            }
            
            public event dsProdWiseSpecialDiscRowChangeEventHandler dsProdWiseSpecialDiscRowChanging;
            
            public event dsProdWiseSpecialDiscRowChangeEventHandler dsProdWiseSpecialDiscRowChanged;
            
            public event dsProdWiseSpecialDiscRowChangeEventHandler dsProdWiseSpecialDiscRowDeleting;
            
            public event dsProdWiseSpecialDiscRowChangeEventHandler dsProdWiseSpecialDiscRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddsProdWiseSpecialDiscRow(dsProdWiseSpecialDiscRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsProdWiseSpecialDiscRow AdddsProdWiseSpecialDiscRow(string Item_Code, string Item_Descrip, decimal Qty, decimal Marked_Price, decimal Unit_Price, decimal Discount, string CodeFrom, string CodeTo, string DateFrom, string DateTo) {
                dsProdWiseSpecialDiscRow rowdsProdWiseSpecialDiscRow = ((dsProdWiseSpecialDiscRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Item_Code,
                        Item_Descrip,
                        Qty,
                        Marked_Price,
                        Unit_Price,
                        Discount,
                        CodeFrom,
                        CodeTo,
                        DateFrom,
                        DateTo};
                rowdsProdWiseSpecialDiscRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdsProdWiseSpecialDiscRow);
                return rowdsProdWiseSpecialDiscRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dsProdWiseSpecialDiscDataTable cln = ((dsProdWiseSpecialDiscDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dsProdWiseSpecialDiscDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnItem_Code = base.Columns["Item_Code"];
                this.columnItem_Descrip = base.Columns["Item_Descrip"];
                this.columnQty = base.Columns["Qty"];
                this.columnMarked_Price = base.Columns["Marked_Price"];
                this.columnUnit_Price = base.Columns["Unit_Price"];
                this.columnDiscount = base.Columns["Discount"];
                this.columnCodeFrom = base.Columns["CodeFrom"];
                this.columnCodeTo = base.Columns["CodeTo"];
                this.columnDateFrom = base.Columns["DateFrom"];
                this.columnDateTo = base.Columns["DateTo"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnItem_Code = new global::System.Data.DataColumn("Item_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItem_Code);
                this.columnItem_Descrip = new global::System.Data.DataColumn("Item_Descrip", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItem_Descrip);
                this.columnQty = new global::System.Data.DataColumn("Qty", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQty);
                this.columnMarked_Price = new global::System.Data.DataColumn("Marked_Price", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMarked_Price);
                this.columnUnit_Price = new global::System.Data.DataColumn("Unit_Price", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnit_Price);
                this.columnDiscount = new global::System.Data.DataColumn("Discount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiscount);
                this.columnCodeFrom = new global::System.Data.DataColumn("CodeFrom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodeFrom);
                this.columnCodeTo = new global::System.Data.DataColumn("CodeTo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodeTo);
                this.columnDateFrom = new global::System.Data.DataColumn("DateFrom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateFrom);
                this.columnDateTo = new global::System.Data.DataColumn("DateTo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateTo);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsProdWiseSpecialDiscRow NewdsProdWiseSpecialDiscRow() {
                return ((dsProdWiseSpecialDiscRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dsProdWiseSpecialDiscRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dsProdWiseSpecialDiscRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dsProdWiseSpecialDiscRowChanged != null)) {
                    this.dsProdWiseSpecialDiscRowChanged(this, new dsProdWiseSpecialDiscRowChangeEvent(((dsProdWiseSpecialDiscRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dsProdWiseSpecialDiscRowChanging != null)) {
                    this.dsProdWiseSpecialDiscRowChanging(this, new dsProdWiseSpecialDiscRowChangeEvent(((dsProdWiseSpecialDiscRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dsProdWiseSpecialDiscRowDeleted != null)) {
                    this.dsProdWiseSpecialDiscRowDeleted(this, new dsProdWiseSpecialDiscRowChangeEvent(((dsProdWiseSpecialDiscRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dsProdWiseSpecialDiscRowDeleting != null)) {
                    this.dsProdWiseSpecialDiscRowDeleting(this, new dsProdWiseSpecialDiscRowChangeEvent(((dsProdWiseSpecialDiscRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedsProdWiseSpecialDiscRow(dsProdWiseSpecialDiscRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dsProdWiseSpecialDiscDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dsProdCombinationDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnMainProdCode;
            
            private global::System.Data.DataColumn columnSubProd_Code;
            
            private global::System.Data.DataColumn columnPurchase_Price;
            
            private global::System.Data.DataColumn columnSelling_Price;
            
            private global::System.Data.DataColumn columnQty;
            
            private global::System.Data.DataColumn columnMainProdName;
            
            private global::System.Data.DataColumn columnSubProdName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsProdCombinationDataTable() {
                this.TableName = "dsProdCombination";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsProdCombinationDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dsProdCombinationDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MainProdCodeColumn {
                get {
                    return this.columnMainProdCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubProd_CodeColumn {
                get {
                    return this.columnSubProd_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Purchase_PriceColumn {
                get {
                    return this.columnPurchase_Price;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Selling_PriceColumn {
                get {
                    return this.columnSelling_Price;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QtyColumn {
                get {
                    return this.columnQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MainProdNameColumn {
                get {
                    return this.columnMainProdName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubProdNameColumn {
                get {
                    return this.columnSubProdName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsProdCombinationRow this[int index] {
                get {
                    return ((dsProdCombinationRow)(this.Rows[index]));
                }
            }
            
            public event dsProdCombinationRowChangeEventHandler dsProdCombinationRowChanging;
            
            public event dsProdCombinationRowChangeEventHandler dsProdCombinationRowChanged;
            
            public event dsProdCombinationRowChangeEventHandler dsProdCombinationRowDeleting;
            
            public event dsProdCombinationRowChangeEventHandler dsProdCombinationRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddsProdCombinationRow(dsProdCombinationRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsProdCombinationRow AdddsProdCombinationRow(string MainProdCode, string SubProd_Code, decimal Purchase_Price, decimal Selling_Price, decimal Qty, string MainProdName, string SubProdName) {
                dsProdCombinationRow rowdsProdCombinationRow = ((dsProdCombinationRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        MainProdCode,
                        SubProd_Code,
                        Purchase_Price,
                        Selling_Price,
                        Qty,
                        MainProdName,
                        SubProdName};
                rowdsProdCombinationRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdsProdCombinationRow);
                return rowdsProdCombinationRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dsProdCombinationDataTable cln = ((dsProdCombinationDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dsProdCombinationDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMainProdCode = base.Columns["MainProdCode"];
                this.columnSubProd_Code = base.Columns["SubProd_Code"];
                this.columnPurchase_Price = base.Columns["Purchase_Price"];
                this.columnSelling_Price = base.Columns["Selling_Price"];
                this.columnQty = base.Columns["Qty"];
                this.columnMainProdName = base.Columns["MainProdName"];
                this.columnSubProdName = base.Columns["SubProdName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMainProdCode = new global::System.Data.DataColumn("MainProdCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMainProdCode);
                this.columnSubProd_Code = new global::System.Data.DataColumn("SubProd_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubProd_Code);
                this.columnPurchase_Price = new global::System.Data.DataColumn("Purchase_Price", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPurchase_Price);
                this.columnSelling_Price = new global::System.Data.DataColumn("Selling_Price", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelling_Price);
                this.columnQty = new global::System.Data.DataColumn("Qty", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQty);
                this.columnMainProdName = new global::System.Data.DataColumn("MainProdName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMainProdName);
                this.columnSubProdName = new global::System.Data.DataColumn("SubProdName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubProdName);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsProdCombinationRow NewdsProdCombinationRow() {
                return ((dsProdCombinationRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dsProdCombinationRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dsProdCombinationRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dsProdCombinationRowChanged != null)) {
                    this.dsProdCombinationRowChanged(this, new dsProdCombinationRowChangeEvent(((dsProdCombinationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dsProdCombinationRowChanging != null)) {
                    this.dsProdCombinationRowChanging(this, new dsProdCombinationRowChangeEvent(((dsProdCombinationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dsProdCombinationRowDeleted != null)) {
                    this.dsProdCombinationRowDeleted(this, new dsProdCombinationRowChangeEvent(((dsProdCombinationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dsProdCombinationRowDeleting != null)) {
                    this.dsProdCombinationRowDeleting(this, new dsProdCombinationRowChangeEvent(((dsProdCombinationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedsProdCombinationRow(dsProdCombinationRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dsProdCombinationDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dsPurchaseScheduleDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnProd_Code;
            
            private global::System.Data.DataColumn columnProd_Name;
            
            private global::System.Data.DataColumn columnPurchase_Price;
            
            private global::System.Data.DataColumn columnSelling_Price;
            
            private global::System.Data.DataColumn columnReorder_Qty;
            
            private global::System.Data.DataColumn columnSold_Qty;
            
            private global::System.Data.DataColumn columnCurr_Qty;
            
            private global::System.Data.DataColumn columnOrder_Qty;
            
            private global::System.Data.DataColumn columnCodeFrom;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnDateFrom;
            
            private global::System.Data.DataColumn columnDateTo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsPurchaseScheduleDataTable() {
                this.TableName = "dsPurchaseSchedule";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsPurchaseScheduleDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dsPurchaseScheduleDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Prod_CodeColumn {
                get {
                    return this.columnProd_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Prod_NameColumn {
                get {
                    return this.columnProd_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Purchase_PriceColumn {
                get {
                    return this.columnPurchase_Price;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Selling_PriceColumn {
                get {
                    return this.columnSelling_Price;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Reorder_QtyColumn {
                get {
                    return this.columnReorder_Qty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Sold_QtyColumn {
                get {
                    return this.columnSold_Qty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Curr_QtyColumn {
                get {
                    return this.columnCurr_Qty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Order_QtyColumn {
                get {
                    return this.columnOrder_Qty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CodeFromColumn {
                get {
                    return this.columnCodeFrom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateFromColumn {
                get {
                    return this.columnDateFrom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateToColumn {
                get {
                    return this.columnDateTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsPurchaseScheduleRow this[int index] {
                get {
                    return ((dsPurchaseScheduleRow)(this.Rows[index]));
                }
            }
            
            public event dsPurchaseScheduleRowChangeEventHandler dsPurchaseScheduleRowChanging;
            
            public event dsPurchaseScheduleRowChangeEventHandler dsPurchaseScheduleRowChanged;
            
            public event dsPurchaseScheduleRowChangeEventHandler dsPurchaseScheduleRowDeleting;
            
            public event dsPurchaseScheduleRowChangeEventHandler dsPurchaseScheduleRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddsPurchaseScheduleRow(dsPurchaseScheduleRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsPurchaseScheduleRow AdddsPurchaseScheduleRow(string Prod_Code, string Prod_Name, decimal Purchase_Price, decimal Selling_Price, decimal Reorder_Qty, decimal Sold_Qty, decimal Curr_Qty, decimal Order_Qty, string CodeFrom, string Description, string DateFrom, string DateTo) {
                dsPurchaseScheduleRow rowdsPurchaseScheduleRow = ((dsPurchaseScheduleRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Prod_Code,
                        Prod_Name,
                        Purchase_Price,
                        Selling_Price,
                        Reorder_Qty,
                        Sold_Qty,
                        Curr_Qty,
                        Order_Qty,
                        CodeFrom,
                        Description,
                        DateFrom,
                        DateTo};
                rowdsPurchaseScheduleRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdsPurchaseScheduleRow);
                return rowdsPurchaseScheduleRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dsPurchaseScheduleDataTable cln = ((dsPurchaseScheduleDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dsPurchaseScheduleDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnProd_Code = base.Columns["Prod_Code"];
                this.columnProd_Name = base.Columns["Prod_Name"];
                this.columnPurchase_Price = base.Columns["Purchase_Price"];
                this.columnSelling_Price = base.Columns["Selling_Price"];
                this.columnReorder_Qty = base.Columns["Reorder_Qty"];
                this.columnSold_Qty = base.Columns["Sold_Qty"];
                this.columnCurr_Qty = base.Columns["Curr_Qty"];
                this.columnOrder_Qty = base.Columns["Order_Qty"];
                this.columnCodeFrom = base.Columns["CodeFrom"];
                this.columnDescription = base.Columns["Description"];
                this.columnDateFrom = base.Columns["DateFrom"];
                this.columnDateTo = base.Columns["DateTo"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnProd_Code = new global::System.Data.DataColumn("Prod_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Code);
                this.columnProd_Name = new global::System.Data.DataColumn("Prod_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Name);
                this.columnPurchase_Price = new global::System.Data.DataColumn("Purchase_Price", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPurchase_Price);
                this.columnSelling_Price = new global::System.Data.DataColumn("Selling_Price", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelling_Price);
                this.columnReorder_Qty = new global::System.Data.DataColumn("Reorder_Qty", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReorder_Qty);
                this.columnSold_Qty = new global::System.Data.DataColumn("Sold_Qty", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSold_Qty);
                this.columnCurr_Qty = new global::System.Data.DataColumn("Curr_Qty", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurr_Qty);
                this.columnOrder_Qty = new global::System.Data.DataColumn("Order_Qty", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrder_Qty);
                this.columnCodeFrom = new global::System.Data.DataColumn("CodeFrom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodeFrom);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnDateFrom = new global::System.Data.DataColumn("DateFrom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateFrom);
                this.columnDateTo = new global::System.Data.DataColumn("DateTo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateTo);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsPurchaseScheduleRow NewdsPurchaseScheduleRow() {
                return ((dsPurchaseScheduleRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dsPurchaseScheduleRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dsPurchaseScheduleRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dsPurchaseScheduleRowChanged != null)) {
                    this.dsPurchaseScheduleRowChanged(this, new dsPurchaseScheduleRowChangeEvent(((dsPurchaseScheduleRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dsPurchaseScheduleRowChanging != null)) {
                    this.dsPurchaseScheduleRowChanging(this, new dsPurchaseScheduleRowChangeEvent(((dsPurchaseScheduleRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dsPurchaseScheduleRowDeleted != null)) {
                    this.dsPurchaseScheduleRowDeleted(this, new dsPurchaseScheduleRowChangeEvent(((dsPurchaseScheduleRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dsPurchaseScheduleRowDeleting != null)) {
                    this.dsPurchaseScheduleRowDeleting(this, new dsPurchaseScheduleRowChangeEvent(((dsPurchaseScheduleRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedsPurchaseScheduleRow(dsPurchaseScheduleRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dsPurchaseScheduleDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dsLocaWiseProdOrderDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnProd_Code;
            
            private global::System.Data.DataColumn columnProd_Name;
            
            private global::System.Data.DataColumn columnReorder_Qty;
            
            private global::System.Data.DataColumn columnCurr_Qty;
            
            private global::System.Data.DataColumn columnOrder_Qty;
            
            private global::System.Data.DataColumn columnDateFrom;
            
            private global::System.Data.DataColumn columnDateTo;
            
            private global::System.Data.DataColumn columnSuppCode;
            
            private global::System.Data.DataColumn columnSuppName;
            
            private global::System.Data.DataColumn columnLoca;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsLocaWiseProdOrderDataTable() {
                this.TableName = "dsLocaWiseProdOrder";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsLocaWiseProdOrderDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dsLocaWiseProdOrderDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Prod_CodeColumn {
                get {
                    return this.columnProd_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Prod_NameColumn {
                get {
                    return this.columnProd_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Reorder_QtyColumn {
                get {
                    return this.columnReorder_Qty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Curr_QtyColumn {
                get {
                    return this.columnCurr_Qty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Order_QtyColumn {
                get {
                    return this.columnOrder_Qty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateFromColumn {
                get {
                    return this.columnDateFrom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateToColumn {
                get {
                    return this.columnDateTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SuppCodeColumn {
                get {
                    return this.columnSuppCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SuppNameColumn {
                get {
                    return this.columnSuppName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LocaColumn {
                get {
                    return this.columnLoca;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsLocaWiseProdOrderRow this[int index] {
                get {
                    return ((dsLocaWiseProdOrderRow)(this.Rows[index]));
                }
            }
            
            public event dsLocaWiseProdOrderRowChangeEventHandler dsLocaWiseProdOrderRowChanging;
            
            public event dsLocaWiseProdOrderRowChangeEventHandler dsLocaWiseProdOrderRowChanged;
            
            public event dsLocaWiseProdOrderRowChangeEventHandler dsLocaWiseProdOrderRowDeleting;
            
            public event dsLocaWiseProdOrderRowChangeEventHandler dsLocaWiseProdOrderRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddsLocaWiseProdOrderRow(dsLocaWiseProdOrderRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsLocaWiseProdOrderRow AdddsLocaWiseProdOrderRow(string Prod_Code, string Prod_Name, decimal Reorder_Qty, decimal Curr_Qty, decimal Order_Qty, string DateFrom, string DateTo, string SuppCode, string SuppName, string Loca) {
                dsLocaWiseProdOrderRow rowdsLocaWiseProdOrderRow = ((dsLocaWiseProdOrderRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Prod_Code,
                        Prod_Name,
                        Reorder_Qty,
                        Curr_Qty,
                        Order_Qty,
                        DateFrom,
                        DateTo,
                        SuppCode,
                        SuppName,
                        Loca};
                rowdsLocaWiseProdOrderRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdsLocaWiseProdOrderRow);
                return rowdsLocaWiseProdOrderRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dsLocaWiseProdOrderDataTable cln = ((dsLocaWiseProdOrderDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dsLocaWiseProdOrderDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnProd_Code = base.Columns["Prod_Code"];
                this.columnProd_Name = base.Columns["Prod_Name"];
                this.columnReorder_Qty = base.Columns["Reorder_Qty"];
                this.columnCurr_Qty = base.Columns["Curr_Qty"];
                this.columnOrder_Qty = base.Columns["Order_Qty"];
                this.columnDateFrom = base.Columns["DateFrom"];
                this.columnDateTo = base.Columns["DateTo"];
                this.columnSuppCode = base.Columns["SuppCode"];
                this.columnSuppName = base.Columns["SuppName"];
                this.columnLoca = base.Columns["Loca"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnProd_Code = new global::System.Data.DataColumn("Prod_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Code);
                this.columnProd_Name = new global::System.Data.DataColumn("Prod_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Name);
                this.columnReorder_Qty = new global::System.Data.DataColumn("Reorder_Qty", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReorder_Qty);
                this.columnCurr_Qty = new global::System.Data.DataColumn("Curr_Qty", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurr_Qty);
                this.columnOrder_Qty = new global::System.Data.DataColumn("Order_Qty", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrder_Qty);
                this.columnDateFrom = new global::System.Data.DataColumn("DateFrom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateFrom);
                this.columnDateTo = new global::System.Data.DataColumn("DateTo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateTo);
                this.columnSuppCode = new global::System.Data.DataColumn("SuppCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSuppCode);
                this.columnSuppName = new global::System.Data.DataColumn("SuppName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSuppName);
                this.columnLoca = new global::System.Data.DataColumn("Loca", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoca);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsLocaWiseProdOrderRow NewdsLocaWiseProdOrderRow() {
                return ((dsLocaWiseProdOrderRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dsLocaWiseProdOrderRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dsLocaWiseProdOrderRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dsLocaWiseProdOrderRowChanged != null)) {
                    this.dsLocaWiseProdOrderRowChanged(this, new dsLocaWiseProdOrderRowChangeEvent(((dsLocaWiseProdOrderRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dsLocaWiseProdOrderRowChanging != null)) {
                    this.dsLocaWiseProdOrderRowChanging(this, new dsLocaWiseProdOrderRowChangeEvent(((dsLocaWiseProdOrderRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dsLocaWiseProdOrderRowDeleted != null)) {
                    this.dsLocaWiseProdOrderRowDeleted(this, new dsLocaWiseProdOrderRowChangeEvent(((dsLocaWiseProdOrderRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dsLocaWiseProdOrderRowDeleting != null)) {
                    this.dsLocaWiseProdOrderRowDeleting(this, new dsLocaWiseProdOrderRowChangeEvent(((dsLocaWiseProdOrderRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedsLocaWiseProdOrderRow(dsLocaWiseProdOrderRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dsLocaWiseProdOrderDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dsPurchaseDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnPost_Date;
            
            private global::System.Data.DataColumn columnSupp_Code;
            
            private global::System.Data.DataColumn columnSupp_Name;
            
            private global::System.Data.DataColumn columnBill_No;
            
            private global::System.Data.DataColumn columnPurr_Date;
            
            private global::System.Data.DataColumn columnBill_Amount;
            
            private global::System.Data.DataColumn columnMemo;
            
            private global::System.Data.DataColumn columnDocument_No;
            
            private global::System.Data.DataColumn columnDateFrom;
            
            private global::System.Data.DataColumn columnDateTo;
            
            private global::System.Data.DataColumn columnCodeFrom;
            
            private global::System.Data.DataColumn columnCodeTo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsPurchaseDataTable() {
                this.TableName = "dsPurchase";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsPurchaseDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dsPurchaseDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Post_DateColumn {
                get {
                    return this.columnPost_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Supp_CodeColumn {
                get {
                    return this.columnSupp_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Supp_NameColumn {
                get {
                    return this.columnSupp_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Bill_NoColumn {
                get {
                    return this.columnBill_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Purr_DateColumn {
                get {
                    return this.columnPurr_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Bill_AmountColumn {
                get {
                    return this.columnBill_Amount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MemoColumn {
                get {
                    return this.columnMemo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Document_NoColumn {
                get {
                    return this.columnDocument_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateFromColumn {
                get {
                    return this.columnDateFrom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateToColumn {
                get {
                    return this.columnDateTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CodeFromColumn {
                get {
                    return this.columnCodeFrom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CodeToColumn {
                get {
                    return this.columnCodeTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsPurchaseRow this[int index] {
                get {
                    return ((dsPurchaseRow)(this.Rows[index]));
                }
            }
            
            public event dsPurchaseRowChangeEventHandler dsPurchaseRowChanging;
            
            public event dsPurchaseRowChangeEventHandler dsPurchaseRowChanged;
            
            public event dsPurchaseRowChangeEventHandler dsPurchaseRowDeleting;
            
            public event dsPurchaseRowChangeEventHandler dsPurchaseRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddsPurchaseRow(dsPurchaseRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsPurchaseRow AdddsPurchaseRow(string Post_Date, string Supp_Code, string Supp_Name, string Bill_No, string Purr_Date, decimal Bill_Amount, string Memo, string Document_No, string DateFrom, string DateTo, string CodeFrom, string CodeTo) {
                dsPurchaseRow rowdsPurchaseRow = ((dsPurchaseRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Post_Date,
                        Supp_Code,
                        Supp_Name,
                        Bill_No,
                        Purr_Date,
                        Bill_Amount,
                        Memo,
                        Document_No,
                        DateFrom,
                        DateTo,
                        CodeFrom,
                        CodeTo};
                rowdsPurchaseRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdsPurchaseRow);
                return rowdsPurchaseRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dsPurchaseDataTable cln = ((dsPurchaseDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dsPurchaseDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnPost_Date = base.Columns["Post_Date"];
                this.columnSupp_Code = base.Columns["Supp_Code"];
                this.columnSupp_Name = base.Columns["Supp_Name"];
                this.columnBill_No = base.Columns["Bill_No"];
                this.columnPurr_Date = base.Columns["Purr_Date"];
                this.columnBill_Amount = base.Columns["Bill_Amount"];
                this.columnMemo = base.Columns["Memo"];
                this.columnDocument_No = base.Columns["Document_No"];
                this.columnDateFrom = base.Columns["DateFrom"];
                this.columnDateTo = base.Columns["DateTo"];
                this.columnCodeFrom = base.Columns["CodeFrom"];
                this.columnCodeTo = base.Columns["CodeTo"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnPost_Date = new global::System.Data.DataColumn("Post_Date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPost_Date);
                this.columnSupp_Code = new global::System.Data.DataColumn("Supp_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupp_Code);
                this.columnSupp_Name = new global::System.Data.DataColumn("Supp_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupp_Name);
                this.columnBill_No = new global::System.Data.DataColumn("Bill_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBill_No);
                this.columnPurr_Date = new global::System.Data.DataColumn("Purr_Date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPurr_Date);
                this.columnBill_Amount = new global::System.Data.DataColumn("Bill_Amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBill_Amount);
                this.columnMemo = new global::System.Data.DataColumn("Memo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMemo);
                this.columnDocument_No = new global::System.Data.DataColumn("Document_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDocument_No);
                this.columnDateFrom = new global::System.Data.DataColumn("DateFrom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateFrom);
                this.columnDateTo = new global::System.Data.DataColumn("DateTo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateTo);
                this.columnCodeFrom = new global::System.Data.DataColumn("CodeFrom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodeFrom);
                this.columnCodeTo = new global::System.Data.DataColumn("CodeTo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodeTo);
                this.columnPost_Date.AllowDBNull = false;
                this.columnPost_Date.MaxLength = 50;
                this.columnSupp_Code.AllowDBNull = false;
                this.columnSupp_Code.MaxLength = 10;
                this.columnSupp_Name.AllowDBNull = false;
                this.columnSupp_Name.MaxLength = 50;
                this.columnBill_No.AllowDBNull = false;
                this.columnBill_No.MaxLength = 50;
                this.columnPurr_Date.AllowDBNull = false;
                this.columnPurr_Date.MaxLength = 50;
                this.columnBill_Amount.AllowDBNull = false;
                this.columnMemo.AllowDBNull = false;
                this.columnMemo.MaxLength = 50;
                this.columnDocument_No.AllowDBNull = false;
                this.columnDocument_No.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsPurchaseRow NewdsPurchaseRow() {
                return ((dsPurchaseRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dsPurchaseRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dsPurchaseRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dsPurchaseRowChanged != null)) {
                    this.dsPurchaseRowChanged(this, new dsPurchaseRowChangeEvent(((dsPurchaseRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dsPurchaseRowChanging != null)) {
                    this.dsPurchaseRowChanging(this, new dsPurchaseRowChangeEvent(((dsPurchaseRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dsPurchaseRowDeleted != null)) {
                    this.dsPurchaseRowDeleted(this, new dsPurchaseRowChangeEvent(((dsPurchaseRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dsPurchaseRowDeleting != null)) {
                    this.dsPurchaseRowDeleting(this, new dsPurchaseRowChangeEvent(((dsPurchaseRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedsPurchaseRow(dsPurchaseRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dsPurchaseDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dsProductSumDetailsDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnProd_Code;
            
            private global::System.Data.DataColumn columnProd_Name;
            
            private global::System.Data.DataColumn columnSelling_Price;
            
            private global::System.Data.DataColumn columnQty;
            
            private global::System.Data.DataColumn columnAmount;
            
            private global::System.Data.DataColumn columnCodeFrom;
            
            private global::System.Data.DataColumn columnCodeTo;
            
            private global::System.Data.DataColumn columnDateFrom;
            
            private global::System.Data.DataColumn columnDateTo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsProductSumDetailsDataTable() {
                this.TableName = "dsProductSumDetails";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsProductSumDetailsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dsProductSumDetailsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Prod_CodeColumn {
                get {
                    return this.columnProd_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Prod_NameColumn {
                get {
                    return this.columnProd_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Selling_PriceColumn {
                get {
                    return this.columnSelling_Price;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QtyColumn {
                get {
                    return this.columnQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CodeFromColumn {
                get {
                    return this.columnCodeFrom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CodeToColumn {
                get {
                    return this.columnCodeTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateFromColumn {
                get {
                    return this.columnDateFrom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateToColumn {
                get {
                    return this.columnDateTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsProductSumDetailsRow this[int index] {
                get {
                    return ((dsProductSumDetailsRow)(this.Rows[index]));
                }
            }
            
            public event dsProductSumDetailsRowChangeEventHandler dsProductSumDetailsRowChanging;
            
            public event dsProductSumDetailsRowChangeEventHandler dsProductSumDetailsRowChanged;
            
            public event dsProductSumDetailsRowChangeEventHandler dsProductSumDetailsRowDeleting;
            
            public event dsProductSumDetailsRowChangeEventHandler dsProductSumDetailsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddsProductSumDetailsRow(dsProductSumDetailsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsProductSumDetailsRow AdddsProductSumDetailsRow(string Prod_Code, string Prod_Name, decimal Selling_Price, decimal Qty, decimal Amount, string CodeFrom, string CodeTo, string DateFrom, string DateTo) {
                dsProductSumDetailsRow rowdsProductSumDetailsRow = ((dsProductSumDetailsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Prod_Code,
                        Prod_Name,
                        Selling_Price,
                        Qty,
                        Amount,
                        CodeFrom,
                        CodeTo,
                        DateFrom,
                        DateTo};
                rowdsProductSumDetailsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdsProductSumDetailsRow);
                return rowdsProductSumDetailsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dsProductSumDetailsDataTable cln = ((dsProductSumDetailsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dsProductSumDetailsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnProd_Code = base.Columns["Prod_Code"];
                this.columnProd_Name = base.Columns["Prod_Name"];
                this.columnSelling_Price = base.Columns["Selling_Price"];
                this.columnQty = base.Columns["Qty"];
                this.columnAmount = base.Columns["Amount"];
                this.columnCodeFrom = base.Columns["CodeFrom"];
                this.columnCodeTo = base.Columns["CodeTo"];
                this.columnDateFrom = base.Columns["DateFrom"];
                this.columnDateTo = base.Columns["DateTo"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnProd_Code = new global::System.Data.DataColumn("Prod_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Code);
                this.columnProd_Name = new global::System.Data.DataColumn("Prod_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Name);
                this.columnSelling_Price = new global::System.Data.DataColumn("Selling_Price", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelling_Price);
                this.columnQty = new global::System.Data.DataColumn("Qty", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQty);
                this.columnAmount = new global::System.Data.DataColumn("Amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
                this.columnCodeFrom = new global::System.Data.DataColumn("CodeFrom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodeFrom);
                this.columnCodeTo = new global::System.Data.DataColumn("CodeTo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodeTo);
                this.columnDateFrom = new global::System.Data.DataColumn("DateFrom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateFrom);
                this.columnDateTo = new global::System.Data.DataColumn("DateTo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateTo);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsProductSumDetailsRow NewdsProductSumDetailsRow() {
                return ((dsProductSumDetailsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dsProductSumDetailsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dsProductSumDetailsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dsProductSumDetailsRowChanged != null)) {
                    this.dsProductSumDetailsRowChanged(this, new dsProductSumDetailsRowChangeEvent(((dsProductSumDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dsProductSumDetailsRowChanging != null)) {
                    this.dsProductSumDetailsRowChanging(this, new dsProductSumDetailsRowChangeEvent(((dsProductSumDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dsProductSumDetailsRowDeleted != null)) {
                    this.dsProductSumDetailsRowDeleted(this, new dsProductSumDetailsRowChangeEvent(((dsProductSumDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dsProductSumDetailsRowDeleting != null)) {
                    this.dsProductSumDetailsRowDeleting(this, new dsProductSumDetailsRowChangeEvent(((dsProductSumDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedsProductSumDetailsRow(dsProductSumDetailsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dsProductSumDetailsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dsDailySalesSummaryDetailWiseDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnLoca;
            
            private global::System.Data.DataColumn columnDateFrom;
            
            private global::System.Data.DataColumn columnDateTo;
            
            private global::System.Data.DataColumn columnTotSale;
            
            private global::System.Data.DataColumn columnTotDiscount;
            
            private global::System.Data.DataColumn columnDiscountCredit;
            
            private global::System.Data.DataColumn columnDiscountCash;
            
            private global::System.Data.DataColumn columnCustReturn;
            
            private global::System.Data.DataColumn columnCreditSale;
            
            private global::System.Data.DataColumn columnCashSale;
            
            private global::System.Data.DataColumn columnReciept;
            
            private global::System.Data.DataColumn columnCashRefund;
            
            private global::System.Data.DataColumn columnRecieptCheque;
            
            private global::System.Data.DataColumn columnExpense;
            
            private global::System.Data.DataColumn columnGiftSale;
            
            private global::System.Data.DataColumn columnTopUpSale;
            
            private global::System.Data.DataColumn columnAdvance;
            
            private global::System.Data.DataColumn columnAdvanceRedeem;
            
            private global::System.Data.DataColumn columnCreditReceipt;
            
            private global::System.Data.DataColumn columnReceiptRedeem;
            
            private global::System.Data.DataColumn columnCDNM;
            
            private global::System.Data.DataColumn columnROA;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsDailySalesSummaryDetailWiseDataTable() {
                this.TableName = "dsDailySalesSummaryDetailWise";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsDailySalesSummaryDetailWiseDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dsDailySalesSummaryDetailWiseDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LocaColumn {
                get {
                    return this.columnLoca;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateFromColumn {
                get {
                    return this.columnDateFrom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateToColumn {
                get {
                    return this.columnDateTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotSaleColumn {
                get {
                    return this.columnTotSale;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotDiscountColumn {
                get {
                    return this.columnTotDiscount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DiscountCreditColumn {
                get {
                    return this.columnDiscountCredit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DiscountCashColumn {
                get {
                    return this.columnDiscountCash;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustReturnColumn {
                get {
                    return this.columnCustReturn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreditSaleColumn {
                get {
                    return this.columnCreditSale;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CashSaleColumn {
                get {
                    return this.columnCashSale;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RecieptColumn {
                get {
                    return this.columnReciept;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CashRefundColumn {
                get {
                    return this.columnCashRefund;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RecieptChequeColumn {
                get {
                    return this.columnRecieptCheque;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExpenseColumn {
                get {
                    return this.columnExpense;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GiftSaleColumn {
                get {
                    return this.columnGiftSale;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TopUpSaleColumn {
                get {
                    return this.columnTopUpSale;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AdvanceColumn {
                get {
                    return this.columnAdvance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AdvanceRedeemColumn {
                get {
                    return this.columnAdvanceRedeem;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreditReceiptColumn {
                get {
                    return this.columnCreditReceipt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReceiptRedeemColumn {
                get {
                    return this.columnReceiptRedeem;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CDNMColumn {
                get {
                    return this.columnCDNM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ROAColumn {
                get {
                    return this.columnROA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsDailySalesSummaryDetailWiseRow this[int index] {
                get {
                    return ((dsDailySalesSummaryDetailWiseRow)(this.Rows[index]));
                }
            }
            
            public event dsDailySalesSummaryDetailWiseRowChangeEventHandler dsDailySalesSummaryDetailWiseRowChanging;
            
            public event dsDailySalesSummaryDetailWiseRowChangeEventHandler dsDailySalesSummaryDetailWiseRowChanged;
            
            public event dsDailySalesSummaryDetailWiseRowChangeEventHandler dsDailySalesSummaryDetailWiseRowDeleting;
            
            public event dsDailySalesSummaryDetailWiseRowChangeEventHandler dsDailySalesSummaryDetailWiseRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddsDailySalesSummaryDetailWiseRow(dsDailySalesSummaryDetailWiseRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsDailySalesSummaryDetailWiseRow AdddsDailySalesSummaryDetailWiseRow(
                        string Loca, 
                        string DateFrom, 
                        string DateTo, 
                        decimal TotSale, 
                        decimal TotDiscount, 
                        decimal DiscountCredit, 
                        decimal DiscountCash, 
                        decimal CustReturn, 
                        decimal CreditSale, 
                        decimal CashSale, 
                        decimal Reciept, 
                        decimal CashRefund, 
                        decimal RecieptCheque, 
                        decimal Expense, 
                        decimal GiftSale, 
                        decimal TopUpSale, 
                        decimal Advance, 
                        decimal AdvanceRedeem, 
                        decimal CreditReceipt, 
                        decimal ReceiptRedeem, 
                        decimal CDNM, 
                        decimal ROA) {
                dsDailySalesSummaryDetailWiseRow rowdsDailySalesSummaryDetailWiseRow = ((dsDailySalesSummaryDetailWiseRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Loca,
                        DateFrom,
                        DateTo,
                        TotSale,
                        TotDiscount,
                        DiscountCredit,
                        DiscountCash,
                        CustReturn,
                        CreditSale,
                        CashSale,
                        Reciept,
                        CashRefund,
                        RecieptCheque,
                        Expense,
                        GiftSale,
                        TopUpSale,
                        Advance,
                        AdvanceRedeem,
                        CreditReceipt,
                        ReceiptRedeem,
                        CDNM,
                        ROA};
                rowdsDailySalesSummaryDetailWiseRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdsDailySalesSummaryDetailWiseRow);
                return rowdsDailySalesSummaryDetailWiseRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dsDailySalesSummaryDetailWiseDataTable cln = ((dsDailySalesSummaryDetailWiseDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dsDailySalesSummaryDetailWiseDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnLoca = base.Columns["Loca"];
                this.columnDateFrom = base.Columns["DateFrom"];
                this.columnDateTo = base.Columns["DateTo"];
                this.columnTotSale = base.Columns["TotSale"];
                this.columnTotDiscount = base.Columns["TotDiscount"];
                this.columnDiscountCredit = base.Columns["DiscountCredit"];
                this.columnDiscountCash = base.Columns["DiscountCash"];
                this.columnCustReturn = base.Columns["CustReturn"];
                this.columnCreditSale = base.Columns["CreditSale"];
                this.columnCashSale = base.Columns["CashSale"];
                this.columnReciept = base.Columns["Reciept"];
                this.columnCashRefund = base.Columns["CashRefund"];
                this.columnRecieptCheque = base.Columns["RecieptCheque"];
                this.columnExpense = base.Columns["Expense"];
                this.columnGiftSale = base.Columns["GiftSale"];
                this.columnTopUpSale = base.Columns["TopUpSale"];
                this.columnAdvance = base.Columns["Advance"];
                this.columnAdvanceRedeem = base.Columns["AdvanceRedeem"];
                this.columnCreditReceipt = base.Columns["CreditReceipt"];
                this.columnReceiptRedeem = base.Columns["ReceiptRedeem"];
                this.columnCDNM = base.Columns["CDNM"];
                this.columnROA = base.Columns["ROA"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnLoca = new global::System.Data.DataColumn("Loca", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoca);
                this.columnDateFrom = new global::System.Data.DataColumn("DateFrom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateFrom);
                this.columnDateTo = new global::System.Data.DataColumn("DateTo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateTo);
                this.columnTotSale = new global::System.Data.DataColumn("TotSale", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotSale);
                this.columnTotDiscount = new global::System.Data.DataColumn("TotDiscount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotDiscount);
                this.columnDiscountCredit = new global::System.Data.DataColumn("DiscountCredit", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiscountCredit);
                this.columnDiscountCash = new global::System.Data.DataColumn("DiscountCash", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiscountCash);
                this.columnCustReturn = new global::System.Data.DataColumn("CustReturn", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustReturn);
                this.columnCreditSale = new global::System.Data.DataColumn("CreditSale", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreditSale);
                this.columnCashSale = new global::System.Data.DataColumn("CashSale", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCashSale);
                this.columnReciept = new global::System.Data.DataColumn("Reciept", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReciept);
                this.columnCashRefund = new global::System.Data.DataColumn("CashRefund", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCashRefund);
                this.columnRecieptCheque = new global::System.Data.DataColumn("RecieptCheque", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecieptCheque);
                this.columnExpense = new global::System.Data.DataColumn("Expense", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExpense);
                this.columnGiftSale = new global::System.Data.DataColumn("GiftSale", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGiftSale);
                this.columnTopUpSale = new global::System.Data.DataColumn("TopUpSale", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTopUpSale);
                this.columnAdvance = new global::System.Data.DataColumn("Advance", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdvance);
                this.columnAdvanceRedeem = new global::System.Data.DataColumn("AdvanceRedeem", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdvanceRedeem);
                this.columnCreditReceipt = new global::System.Data.DataColumn("CreditReceipt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreditReceipt);
                this.columnReceiptRedeem = new global::System.Data.DataColumn("ReceiptRedeem", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReceiptRedeem);
                this.columnCDNM = new global::System.Data.DataColumn("CDNM", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCDNM);
                this.columnROA = new global::System.Data.DataColumn("ROA", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnROA);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsDailySalesSummaryDetailWiseRow NewdsDailySalesSummaryDetailWiseRow() {
                return ((dsDailySalesSummaryDetailWiseRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dsDailySalesSummaryDetailWiseRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dsDailySalesSummaryDetailWiseRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dsDailySalesSummaryDetailWiseRowChanged != null)) {
                    this.dsDailySalesSummaryDetailWiseRowChanged(this, new dsDailySalesSummaryDetailWiseRowChangeEvent(((dsDailySalesSummaryDetailWiseRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dsDailySalesSummaryDetailWiseRowChanging != null)) {
                    this.dsDailySalesSummaryDetailWiseRowChanging(this, new dsDailySalesSummaryDetailWiseRowChangeEvent(((dsDailySalesSummaryDetailWiseRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dsDailySalesSummaryDetailWiseRowDeleted != null)) {
                    this.dsDailySalesSummaryDetailWiseRowDeleted(this, new dsDailySalesSummaryDetailWiseRowChangeEvent(((dsDailySalesSummaryDetailWiseRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dsDailySalesSummaryDetailWiseRowDeleting != null)) {
                    this.dsDailySalesSummaryDetailWiseRowDeleting(this, new dsDailySalesSummaryDetailWiseRowChangeEvent(((dsDailySalesSummaryDetailWiseRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedsDailySalesSummaryDetailWiseRow(dsDailySalesSummaryDetailWiseRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dsDailySalesSummaryDetailWiseDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dsCompanyLogoDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnLogo;
            
            private global::System.Data.DataColumn columnTele;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsCompanyLogoDataTable() {
                this.TableName = "dsCompanyLogo";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsCompanyLogoDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dsCompanyLogoDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LogoColumn {
                get {
                    return this.columnLogo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TeleColumn {
                get {
                    return this.columnTele;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsCompanyLogoRow this[int index] {
                get {
                    return ((dsCompanyLogoRow)(this.Rows[index]));
                }
            }
            
            public event dsCompanyLogoRowChangeEventHandler dsCompanyLogoRowChanging;
            
            public event dsCompanyLogoRowChangeEventHandler dsCompanyLogoRowChanged;
            
            public event dsCompanyLogoRowChangeEventHandler dsCompanyLogoRowDeleting;
            
            public event dsCompanyLogoRowChangeEventHandler dsCompanyLogoRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddsCompanyLogoRow(dsCompanyLogoRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsCompanyLogoRow AdddsCompanyLogoRow(byte[] Logo, string Tele) {
                dsCompanyLogoRow rowdsCompanyLogoRow = ((dsCompanyLogoRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Logo,
                        Tele};
                rowdsCompanyLogoRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdsCompanyLogoRow);
                return rowdsCompanyLogoRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dsCompanyLogoDataTable cln = ((dsCompanyLogoDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dsCompanyLogoDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnLogo = base.Columns["Logo"];
                this.columnTele = base.Columns["Tele"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnLogo = new global::System.Data.DataColumn("Logo", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLogo);
                this.columnTele = new global::System.Data.DataColumn("Tele", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTele);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsCompanyLogoRow NewdsCompanyLogoRow() {
                return ((dsCompanyLogoRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dsCompanyLogoRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dsCompanyLogoRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dsCompanyLogoRowChanged != null)) {
                    this.dsCompanyLogoRowChanged(this, new dsCompanyLogoRowChangeEvent(((dsCompanyLogoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dsCompanyLogoRowChanging != null)) {
                    this.dsCompanyLogoRowChanging(this, new dsCompanyLogoRowChangeEvent(((dsCompanyLogoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dsCompanyLogoRowDeleted != null)) {
                    this.dsCompanyLogoRowDeleted(this, new dsCompanyLogoRowChangeEvent(((dsCompanyLogoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dsCompanyLogoRowDeleting != null)) {
                    this.dsCompanyLogoRowDeleting(this, new dsCompanyLogoRowChangeEvent(((dsCompanyLogoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedsCompanyLogoRow(dsCompanyLogoRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dsCompanyLogoDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dsCashINOUTDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnDoc_No;
            
            private global::System.Data.DataColumn columnPostDate;
            
            private global::System.Data.DataColumn columnCash_IN;
            
            private global::System.Data.DataColumn columnCash_OUT;
            
            private global::System.Data.DataColumn columnReason;
            
            private global::System.Data.DataColumn columnDateFrom;
            
            private global::System.Data.DataColumn columnDateTo;
            
            private global::System.Data.DataColumn columnGrp;
            
            private global::System.Data.DataColumn columnAmount;
            
            private global::System.Data.DataColumn columnCodeFrom;
            
            private global::System.Data.DataColumn columnCodeTo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsCashINOUTDataTable() {
                this.TableName = "dsCashINOUT";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsCashINOUTDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dsCashINOUTDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Doc_NoColumn {
                get {
                    return this.columnDoc_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PostDateColumn {
                get {
                    return this.columnPostDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cash_INColumn {
                get {
                    return this.columnCash_IN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cash_OUTColumn {
                get {
                    return this.columnCash_OUT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReasonColumn {
                get {
                    return this.columnReason;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateFromColumn {
                get {
                    return this.columnDateFrom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateToColumn {
                get {
                    return this.columnDateTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GrpColumn {
                get {
                    return this.columnGrp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CodeFromColumn {
                get {
                    return this.columnCodeFrom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CodeToColumn {
                get {
                    return this.columnCodeTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsCashINOUTRow this[int index] {
                get {
                    return ((dsCashINOUTRow)(this.Rows[index]));
                }
            }
            
            public event dsCashINOUTRowChangeEventHandler dsCashINOUTRowChanging;
            
            public event dsCashINOUTRowChangeEventHandler dsCashINOUTRowChanged;
            
            public event dsCashINOUTRowChangeEventHandler dsCashINOUTRowDeleting;
            
            public event dsCashINOUTRowChangeEventHandler dsCashINOUTRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddsCashINOUTRow(dsCashINOUTRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsCashINOUTRow AdddsCashINOUTRow(string Doc_No, string PostDate, decimal Cash_IN, decimal Cash_OUT, string Reason, string DateFrom, string DateTo, string Grp, string Amount, string CodeFrom, string CodeTo) {
                dsCashINOUTRow rowdsCashINOUTRow = ((dsCashINOUTRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Doc_No,
                        PostDate,
                        Cash_IN,
                        Cash_OUT,
                        Reason,
                        DateFrom,
                        DateTo,
                        Grp,
                        Amount,
                        CodeFrom,
                        CodeTo};
                rowdsCashINOUTRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdsCashINOUTRow);
                return rowdsCashINOUTRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dsCashINOUTDataTable cln = ((dsCashINOUTDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dsCashINOUTDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDoc_No = base.Columns["Doc_No"];
                this.columnPostDate = base.Columns["PostDate"];
                this.columnCash_IN = base.Columns["Cash_IN"];
                this.columnCash_OUT = base.Columns["Cash_OUT"];
                this.columnReason = base.Columns["Reason"];
                this.columnDateFrom = base.Columns["DateFrom"];
                this.columnDateTo = base.Columns["DateTo"];
                this.columnGrp = base.Columns["Grp"];
                this.columnAmount = base.Columns["Amount"];
                this.columnCodeFrom = base.Columns["CodeFrom"];
                this.columnCodeTo = base.Columns["CodeTo"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDoc_No = new global::System.Data.DataColumn("Doc_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDoc_No);
                this.columnPostDate = new global::System.Data.DataColumn("PostDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPostDate);
                this.columnCash_IN = new global::System.Data.DataColumn("Cash_IN", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCash_IN);
                this.columnCash_OUT = new global::System.Data.DataColumn("Cash_OUT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCash_OUT);
                this.columnReason = new global::System.Data.DataColumn("Reason", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReason);
                this.columnDateFrom = new global::System.Data.DataColumn("DateFrom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateFrom);
                this.columnDateTo = new global::System.Data.DataColumn("DateTo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateTo);
                this.columnGrp = new global::System.Data.DataColumn("Grp", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrp);
                this.columnAmount = new global::System.Data.DataColumn("Amount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
                this.columnCodeFrom = new global::System.Data.DataColumn("CodeFrom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodeFrom);
                this.columnCodeTo = new global::System.Data.DataColumn("CodeTo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodeTo);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsCashINOUTRow NewdsCashINOUTRow() {
                return ((dsCashINOUTRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dsCashINOUTRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dsCashINOUTRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dsCashINOUTRowChanged != null)) {
                    this.dsCashINOUTRowChanged(this, new dsCashINOUTRowChangeEvent(((dsCashINOUTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dsCashINOUTRowChanging != null)) {
                    this.dsCashINOUTRowChanging(this, new dsCashINOUTRowChangeEvent(((dsCashINOUTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dsCashINOUTRowDeleted != null)) {
                    this.dsCashINOUTRowDeleted(this, new dsCashINOUTRowChangeEvent(((dsCashINOUTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dsCashINOUTRowDeleting != null)) {
                    this.dsCashINOUTRowDeleting(this, new dsCashINOUTRowChangeEvent(((dsCashINOUTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedsCashINOUTRow(dsCashINOUTRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dsCashINOUTDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dsDailyCollectionSummaryDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnDateFrom;
            
            private global::System.Data.DataColumn columnLoca;
            
            private global::System.Data.DataColumn columnLoca_Descrip;
            
            private global::System.Data.DataColumn columnDateTo;
            
            private global::System.Data.DataColumn columnPost_Date;
            
            private global::System.Data.DataColumn columnAmount;
            
            private global::System.Data.DataColumn columnDESCRIPTION;
            
            private global::System.Data.DataColumn columnINV_CREDIT;
            
            private global::System.Data.DataColumn columnINV_CASH;
            
            private global::System.Data.DataColumn columnPAY_CASH;
            
            private global::System.Data.DataColumn columnPAY_CHEQUE;
            
            private global::System.Data.DataColumn columnCASH_IN;
            
            private global::System.Data.DataColumn columnCASH_OUT;
            
            private global::System.Data.DataColumn columnEXPENSE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsDailyCollectionSummaryDataTable() {
                this.TableName = "dsDailyCollectionSummary";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsDailyCollectionSummaryDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dsDailyCollectionSummaryDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateFromColumn {
                get {
                    return this.columnDateFrom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LocaColumn {
                get {
                    return this.columnLoca;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Loca_DescripColumn {
                get {
                    return this.columnLoca_Descrip;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateToColumn {
                get {
                    return this.columnDateTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Post_DateColumn {
                get {
                    return this.columnPost_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DESCRIPTIONColumn {
                get {
                    return this.columnDESCRIPTION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn INV_CREDITColumn {
                get {
                    return this.columnINV_CREDIT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn INV_CASHColumn {
                get {
                    return this.columnINV_CASH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PAY_CASHColumn {
                get {
                    return this.columnPAY_CASH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PAY_CHEQUEColumn {
                get {
                    return this.columnPAY_CHEQUE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CASH_INColumn {
                get {
                    return this.columnCASH_IN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CASH_OUTColumn {
                get {
                    return this.columnCASH_OUT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EXPENSEColumn {
                get {
                    return this.columnEXPENSE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsDailyCollectionSummaryRow this[int index] {
                get {
                    return ((dsDailyCollectionSummaryRow)(this.Rows[index]));
                }
            }
            
            public event dsDailyCollectionSummaryRowChangeEventHandler dsDailyCollectionSummaryRowChanging;
            
            public event dsDailyCollectionSummaryRowChangeEventHandler dsDailyCollectionSummaryRowChanged;
            
            public event dsDailyCollectionSummaryRowChangeEventHandler dsDailyCollectionSummaryRowDeleting;
            
            public event dsDailyCollectionSummaryRowChangeEventHandler dsDailyCollectionSummaryRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddsDailyCollectionSummaryRow(dsDailyCollectionSummaryRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsDailyCollectionSummaryRow AdddsDailyCollectionSummaryRow(string DateFrom, string Loca, string Loca_Descrip, string DateTo, string Post_Date, decimal Amount, string DESCRIPTION, decimal INV_CREDIT, decimal INV_CASH, decimal PAY_CASH, decimal PAY_CHEQUE, decimal CASH_IN, decimal CASH_OUT, decimal EXPENSE) {
                dsDailyCollectionSummaryRow rowdsDailyCollectionSummaryRow = ((dsDailyCollectionSummaryRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        DateFrom,
                        Loca,
                        Loca_Descrip,
                        DateTo,
                        Post_Date,
                        Amount,
                        DESCRIPTION,
                        INV_CREDIT,
                        INV_CASH,
                        PAY_CASH,
                        PAY_CHEQUE,
                        CASH_IN,
                        CASH_OUT,
                        EXPENSE};
                rowdsDailyCollectionSummaryRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdsDailyCollectionSummaryRow);
                return rowdsDailyCollectionSummaryRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dsDailyCollectionSummaryDataTable cln = ((dsDailyCollectionSummaryDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dsDailyCollectionSummaryDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDateFrom = base.Columns["DateFrom"];
                this.columnLoca = base.Columns["Loca"];
                this.columnLoca_Descrip = base.Columns["Loca_Descrip"];
                this.columnDateTo = base.Columns["DateTo"];
                this.columnPost_Date = base.Columns["Post_Date"];
                this.columnAmount = base.Columns["Amount"];
                this.columnDESCRIPTION = base.Columns["DESCRIPTION"];
                this.columnINV_CREDIT = base.Columns["INV_CREDIT"];
                this.columnINV_CASH = base.Columns["INV_CASH"];
                this.columnPAY_CASH = base.Columns["PAY_CASH"];
                this.columnPAY_CHEQUE = base.Columns["PAY_CHEQUE"];
                this.columnCASH_IN = base.Columns["CASH_IN"];
                this.columnCASH_OUT = base.Columns["CASH_OUT"];
                this.columnEXPENSE = base.Columns["EXPENSE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDateFrom = new global::System.Data.DataColumn("DateFrom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateFrom);
                this.columnLoca = new global::System.Data.DataColumn("Loca", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoca);
                this.columnLoca_Descrip = new global::System.Data.DataColumn("Loca_Descrip", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoca_Descrip);
                this.columnDateTo = new global::System.Data.DataColumn("DateTo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateTo);
                this.columnPost_Date = new global::System.Data.DataColumn("Post_Date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPost_Date);
                this.columnAmount = new global::System.Data.DataColumn("Amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
                this.columnDESCRIPTION = new global::System.Data.DataColumn("DESCRIPTION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDESCRIPTION);
                this.columnINV_CREDIT = new global::System.Data.DataColumn("INV_CREDIT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINV_CREDIT);
                this.columnINV_CASH = new global::System.Data.DataColumn("INV_CASH", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINV_CASH);
                this.columnPAY_CASH = new global::System.Data.DataColumn("PAY_CASH", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPAY_CASH);
                this.columnPAY_CHEQUE = new global::System.Data.DataColumn("PAY_CHEQUE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPAY_CHEQUE);
                this.columnCASH_IN = new global::System.Data.DataColumn("CASH_IN", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCASH_IN);
                this.columnCASH_OUT = new global::System.Data.DataColumn("CASH_OUT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCASH_OUT);
                this.columnEXPENSE = new global::System.Data.DataColumn("EXPENSE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXPENSE);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsDailyCollectionSummaryRow NewdsDailyCollectionSummaryRow() {
                return ((dsDailyCollectionSummaryRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dsDailyCollectionSummaryRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dsDailyCollectionSummaryRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dsDailyCollectionSummaryRowChanged != null)) {
                    this.dsDailyCollectionSummaryRowChanged(this, new dsDailyCollectionSummaryRowChangeEvent(((dsDailyCollectionSummaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dsDailyCollectionSummaryRowChanging != null)) {
                    this.dsDailyCollectionSummaryRowChanging(this, new dsDailyCollectionSummaryRowChangeEvent(((dsDailyCollectionSummaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dsDailyCollectionSummaryRowDeleted != null)) {
                    this.dsDailyCollectionSummaryRowDeleted(this, new dsDailyCollectionSummaryRowChangeEvent(((dsDailyCollectionSummaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dsDailyCollectionSummaryRowDeleting != null)) {
                    this.dsDailyCollectionSummaryRowDeleting(this, new dsDailyCollectionSummaryRowChangeEvent(((dsDailyCollectionSummaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedsDailyCollectionSummaryRow(dsDailyCollectionSummaryRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dsDailyCollectionSummaryDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dsCusWiseDailySummDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnLoca;
            
            private global::System.Data.DataColumn columnDateFrom;
            
            private global::System.Data.DataColumn columnDateTo;
            
            private global::System.Data.DataColumn columnCodeFrom;
            
            private global::System.Data.DataColumn columnCodeTo;
            
            private global::System.Data.DataColumn columnCustomer;
            
            private global::System.Data.DataColumn columnDocNo;
            
            private global::System.Data.DataColumn columnAmount;
            
            private global::System.Data.DataColumn columnDiscount;
            
            private global::System.Data.DataColumn columnCredit;
            
            private global::System.Data.DataColumn columnNet_Amount;
            
            private global::System.Data.DataColumn columnCash;
            
            private global::System.Data.DataColumn columnCheque;
            
            private global::System.Data.DataColumn columnReturn;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsCusWiseDailySummDataTable() {
                this.TableName = "dsCusWiseDailySumm";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsCusWiseDailySummDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dsCusWiseDailySummDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LocaColumn {
                get {
                    return this.columnLoca;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateFromColumn {
                get {
                    return this.columnDateFrom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateToColumn {
                get {
                    return this.columnDateTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CodeFromColumn {
                get {
                    return this.columnCodeFrom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CodeToColumn {
                get {
                    return this.columnCodeTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerColumn {
                get {
                    return this.columnCustomer;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DocNoColumn {
                get {
                    return this.columnDocNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DiscountColumn {
                get {
                    return this.columnDiscount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreditColumn {
                get {
                    return this.columnCredit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Net_AmountColumn {
                get {
                    return this.columnNet_Amount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CashColumn {
                get {
                    return this.columnCash;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ChequeColumn {
                get {
                    return this.columnCheque;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReturnColumn {
                get {
                    return this.columnReturn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsCusWiseDailySummRow this[int index] {
                get {
                    return ((dsCusWiseDailySummRow)(this.Rows[index]));
                }
            }
            
            public event dsCusWiseDailySummRowChangeEventHandler dsCusWiseDailySummRowChanging;
            
            public event dsCusWiseDailySummRowChangeEventHandler dsCusWiseDailySummRowChanged;
            
            public event dsCusWiseDailySummRowChangeEventHandler dsCusWiseDailySummRowDeleting;
            
            public event dsCusWiseDailySummRowChangeEventHandler dsCusWiseDailySummRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddsCusWiseDailySummRow(dsCusWiseDailySummRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsCusWiseDailySummRow AdddsCusWiseDailySummRow(string Loca, string DateFrom, string DateTo, string CodeFrom, string CodeTo, string Customer, string DocNo, double Amount, double Discount, double Credit, double Net_Amount, double Cash, double Cheque, double Return) {
                dsCusWiseDailySummRow rowdsCusWiseDailySummRow = ((dsCusWiseDailySummRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Loca,
                        DateFrom,
                        DateTo,
                        CodeFrom,
                        CodeTo,
                        Customer,
                        DocNo,
                        Amount,
                        Discount,
                        Credit,
                        Net_Amount,
                        Cash,
                        Cheque,
                        Return};
                rowdsCusWiseDailySummRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdsCusWiseDailySummRow);
                return rowdsCusWiseDailySummRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dsCusWiseDailySummDataTable cln = ((dsCusWiseDailySummDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dsCusWiseDailySummDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnLoca = base.Columns["Loca"];
                this.columnDateFrom = base.Columns["DateFrom"];
                this.columnDateTo = base.Columns["DateTo"];
                this.columnCodeFrom = base.Columns["CodeFrom"];
                this.columnCodeTo = base.Columns["CodeTo"];
                this.columnCustomer = base.Columns["Customer"];
                this.columnDocNo = base.Columns["DocNo"];
                this.columnAmount = base.Columns["Amount"];
                this.columnDiscount = base.Columns["Discount"];
                this.columnCredit = base.Columns["Credit"];
                this.columnNet_Amount = base.Columns["Net_Amount"];
                this.columnCash = base.Columns["Cash"];
                this.columnCheque = base.Columns["Cheque"];
                this.columnReturn = base.Columns["Return"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnLoca = new global::System.Data.DataColumn("Loca", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoca);
                this.columnDateFrom = new global::System.Data.DataColumn("DateFrom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateFrom);
                this.columnDateTo = new global::System.Data.DataColumn("DateTo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateTo);
                this.columnCodeFrom = new global::System.Data.DataColumn("CodeFrom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodeFrom);
                this.columnCodeTo = new global::System.Data.DataColumn("CodeTo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodeTo);
                this.columnCustomer = new global::System.Data.DataColumn("Customer", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomer);
                this.columnDocNo = new global::System.Data.DataColumn("DocNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDocNo);
                this.columnAmount = new global::System.Data.DataColumn("Amount", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
                this.columnDiscount = new global::System.Data.DataColumn("Discount", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiscount);
                this.columnCredit = new global::System.Data.DataColumn("Credit", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCredit);
                this.columnNet_Amount = new global::System.Data.DataColumn("Net_Amount", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNet_Amount);
                this.columnCash = new global::System.Data.DataColumn("Cash", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCash);
                this.columnCheque = new global::System.Data.DataColumn("Cheque", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCheque);
                this.columnReturn = new global::System.Data.DataColumn("Return", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReturn);
                this.columnCredit.Caption = "Cash";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsCusWiseDailySummRow NewdsCusWiseDailySummRow() {
                return ((dsCusWiseDailySummRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dsCusWiseDailySummRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dsCusWiseDailySummRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dsCusWiseDailySummRowChanged != null)) {
                    this.dsCusWiseDailySummRowChanged(this, new dsCusWiseDailySummRowChangeEvent(((dsCusWiseDailySummRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dsCusWiseDailySummRowChanging != null)) {
                    this.dsCusWiseDailySummRowChanging(this, new dsCusWiseDailySummRowChangeEvent(((dsCusWiseDailySummRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dsCusWiseDailySummRowDeleted != null)) {
                    this.dsCusWiseDailySummRowDeleted(this, new dsCusWiseDailySummRowChangeEvent(((dsCusWiseDailySummRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dsCusWiseDailySummRowDeleting != null)) {
                    this.dsCusWiseDailySummRowDeleting(this, new dsCusWiseDailySummRowChangeEvent(((dsCusWiseDailySummRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedsCusWiseDailySummRow(dsCusWiseDailySummRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dsCusWiseDailySummDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dsExpenceTransactionDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnDoc_No;
            
            private global::System.Data.DataColumn columnLoca;
            
            private global::System.Data.DataColumn columnIid;
            
            private global::System.Data.DataColumn columnVenderCode;
            
            private global::System.Data.DataColumn columnExpenseCode;
            
            private global::System.Data.DataColumn columnExpense_Name;
            
            private global::System.Data.DataColumn columnBill_No;
            
            private global::System.Data.DataColumn columnTransaction_Amount;
            
            private global::System.Data.DataColumn columnBalance_Amount;
            
            private global::System.Data.DataColumn columnTransaction_Date;
            
            private global::System.Data.DataColumn columnRemarks;
            
            private global::System.Data.DataColumn columnUserName;
            
            private global::System.Data.DataColumn columnDate_From;
            
            private global::System.Data.DataColumn columnDate_To;
            
            private global::System.Data.DataColumn columnCode_From;
            
            private global::System.Data.DataColumn columnCode_To;
            
            private global::System.Data.DataColumn columnDate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsExpenceTransactionDataTable() {
                this.TableName = "dsExpenceTransaction";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsExpenceTransactionDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dsExpenceTransactionDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Doc_NoColumn {
                get {
                    return this.columnDoc_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LocaColumn {
                get {
                    return this.columnLoca;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IidColumn {
                get {
                    return this.columnIid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VenderCodeColumn {
                get {
                    return this.columnVenderCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExpenseCodeColumn {
                get {
                    return this.columnExpenseCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Expense_NameColumn {
                get {
                    return this.columnExpense_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Bill_NoColumn {
                get {
                    return this.columnBill_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Transaction_AmountColumn {
                get {
                    return this.columnTransaction_Amount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Balance_AmountColumn {
                get {
                    return this.columnBalance_Amount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Transaction_DateColumn {
                get {
                    return this.columnTransaction_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RemarksColumn {
                get {
                    return this.columnRemarks;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UserNameColumn {
                get {
                    return this.columnUserName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Date_FromColumn {
                get {
                    return this.columnDate_From;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Date_ToColumn {
                get {
                    return this.columnDate_To;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Code_FromColumn {
                get {
                    return this.columnCode_From;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Code_ToColumn {
                get {
                    return this.columnCode_To;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateColumn {
                get {
                    return this.columnDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsExpenceTransactionRow this[int index] {
                get {
                    return ((dsExpenceTransactionRow)(this.Rows[index]));
                }
            }
            
            public event dsExpenceTransactionRowChangeEventHandler dsExpenceTransactionRowChanging;
            
            public event dsExpenceTransactionRowChangeEventHandler dsExpenceTransactionRowChanged;
            
            public event dsExpenceTransactionRowChangeEventHandler dsExpenceTransactionRowDeleting;
            
            public event dsExpenceTransactionRowChangeEventHandler dsExpenceTransactionRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddsExpenceTransactionRow(dsExpenceTransactionRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsExpenceTransactionRow AdddsExpenceTransactionRow(
                        string Doc_No, 
                        string Loca, 
                        string Iid, 
                        string VenderCode, 
                        string ExpenseCode, 
                        string Expense_Name, 
                        string Bill_No, 
                        decimal Transaction_Amount, 
                        decimal Balance_Amount, 
                        System.DateTime Transaction_Date, 
                        string Remarks, 
                        string UserName, 
                        string Date_From, 
                        string Date_To, 
                        string Code_From, 
                        string Code_To, 
                        System.DateTime Date) {
                dsExpenceTransactionRow rowdsExpenceTransactionRow = ((dsExpenceTransactionRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Doc_No,
                        Loca,
                        Iid,
                        VenderCode,
                        ExpenseCode,
                        Expense_Name,
                        Bill_No,
                        Transaction_Amount,
                        Balance_Amount,
                        Transaction_Date,
                        Remarks,
                        UserName,
                        Date_From,
                        Date_To,
                        Code_From,
                        Code_To,
                        Date};
                rowdsExpenceTransactionRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdsExpenceTransactionRow);
                return rowdsExpenceTransactionRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dsExpenceTransactionDataTable cln = ((dsExpenceTransactionDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dsExpenceTransactionDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDoc_No = base.Columns["Doc_No"];
                this.columnLoca = base.Columns["Loca"];
                this.columnIid = base.Columns["Iid"];
                this.columnVenderCode = base.Columns["VenderCode"];
                this.columnExpenseCode = base.Columns["ExpenseCode"];
                this.columnExpense_Name = base.Columns["Expense_Name"];
                this.columnBill_No = base.Columns["Bill_No"];
                this.columnTransaction_Amount = base.Columns["Transaction_Amount"];
                this.columnBalance_Amount = base.Columns["Balance_Amount"];
                this.columnTransaction_Date = base.Columns["Transaction_Date"];
                this.columnRemarks = base.Columns["Remarks"];
                this.columnUserName = base.Columns["UserName"];
                this.columnDate_From = base.Columns["Date_From"];
                this.columnDate_To = base.Columns["Date_To"];
                this.columnCode_From = base.Columns["Code_From"];
                this.columnCode_To = base.Columns["Code_To"];
                this.columnDate = base.Columns["Date"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDoc_No = new global::System.Data.DataColumn("Doc_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDoc_No);
                this.columnLoca = new global::System.Data.DataColumn("Loca", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoca);
                this.columnIid = new global::System.Data.DataColumn("Iid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIid);
                this.columnVenderCode = new global::System.Data.DataColumn("VenderCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVenderCode);
                this.columnExpenseCode = new global::System.Data.DataColumn("ExpenseCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExpenseCode);
                this.columnExpense_Name = new global::System.Data.DataColumn("Expense_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExpense_Name);
                this.columnBill_No = new global::System.Data.DataColumn("Bill_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBill_No);
                this.columnTransaction_Amount = new global::System.Data.DataColumn("Transaction_Amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTransaction_Amount);
                this.columnBalance_Amount = new global::System.Data.DataColumn("Balance_Amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBalance_Amount);
                this.columnTransaction_Date = new global::System.Data.DataColumn("Transaction_Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTransaction_Date);
                this.columnRemarks = new global::System.Data.DataColumn("Remarks", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemarks);
                this.columnUserName = new global::System.Data.DataColumn("UserName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserName);
                this.columnDate_From = new global::System.Data.DataColumn("Date_From", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDate_From);
                this.columnDate_To = new global::System.Data.DataColumn("Date_To", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDate_To);
                this.columnCode_From = new global::System.Data.DataColumn("Code_From", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCode_From);
                this.columnCode_To = new global::System.Data.DataColumn("Code_To", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCode_To);
                this.columnDate = new global::System.Data.DataColumn("Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDate);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsExpenceTransactionRow NewdsExpenceTransactionRow() {
                return ((dsExpenceTransactionRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dsExpenceTransactionRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dsExpenceTransactionRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dsExpenceTransactionRowChanged != null)) {
                    this.dsExpenceTransactionRowChanged(this, new dsExpenceTransactionRowChangeEvent(((dsExpenceTransactionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dsExpenceTransactionRowChanging != null)) {
                    this.dsExpenceTransactionRowChanging(this, new dsExpenceTransactionRowChangeEvent(((dsExpenceTransactionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dsExpenceTransactionRowDeleted != null)) {
                    this.dsExpenceTransactionRowDeleted(this, new dsExpenceTransactionRowChangeEvent(((dsExpenceTransactionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dsExpenceTransactionRowDeleting != null)) {
                    this.dsExpenceTransactionRowDeleting(this, new dsExpenceTransactionRowChangeEvent(((dsExpenceTransactionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedsExpenceTransactionRow(dsExpenceTransactionRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dsExpenceTransactionDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dsDayBookRepDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnLoca;
            
            private global::System.Data.DataColumn columnPost_Day;
            
            private global::System.Data.DataColumn columnSale;
            
            private global::System.Data.DataColumn columnSale_Cash;
            
            private global::System.Data.DataColumn columnSale_Credit;
            
            private global::System.Data.DataColumn columnCollection;
            
            private global::System.Data.DataColumn columnCollection_Cash;
            
            private global::System.Data.DataColumn columnCollection_Cheque;
            
            private global::System.Data.DataColumn columnPmt;
            
            private global::System.Data.DataColumn columnPmt_Cash;
            
            private global::System.Data.DataColumn columnPmt_cheque;
            
            private global::System.Data.DataColumn columnDeposit_Cash;
            
            private global::System.Data.DataColumn columnDeposit_Cheque;
            
            private global::System.Data.DataColumn columnExpense_Name;
            
            private global::System.Data.DataColumn columnExpn_Amount;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsDayBookRepDataTable() {
                this.TableName = "dsDayBookRep";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsDayBookRepDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dsDayBookRepDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LocaColumn {
                get {
                    return this.columnLoca;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Post_DayColumn {
                get {
                    return this.columnPost_Day;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SaleColumn {
                get {
                    return this.columnSale;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Sale_CashColumn {
                get {
                    return this.columnSale_Cash;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Sale_CreditColumn {
                get {
                    return this.columnSale_Credit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CollectionColumn {
                get {
                    return this.columnCollection;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Collection_CashColumn {
                get {
                    return this.columnCollection_Cash;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Collection_ChequeColumn {
                get {
                    return this.columnCollection_Cheque;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PmtColumn {
                get {
                    return this.columnPmt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Pmt_CashColumn {
                get {
                    return this.columnPmt_Cash;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Pmt_chequeColumn {
                get {
                    return this.columnPmt_cheque;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Deposit_CashColumn {
                get {
                    return this.columnDeposit_Cash;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Deposit_ChequeColumn {
                get {
                    return this.columnDeposit_Cheque;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Expense_NameColumn {
                get {
                    return this.columnExpense_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Expn_AmountColumn {
                get {
                    return this.columnExpn_Amount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsDayBookRepRow this[int index] {
                get {
                    return ((dsDayBookRepRow)(this.Rows[index]));
                }
            }
            
            public event dsDayBookRepRowChangeEventHandler dsDayBookRepRowChanging;
            
            public event dsDayBookRepRowChangeEventHandler dsDayBookRepRowChanged;
            
            public event dsDayBookRepRowChangeEventHandler dsDayBookRepRowDeleting;
            
            public event dsDayBookRepRowChangeEventHandler dsDayBookRepRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddsDayBookRepRow(dsDayBookRepRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsDayBookRepRow AdddsDayBookRepRow(string Loca, string Post_Day, decimal Sale, decimal Sale_Cash, decimal Sale_Credit, decimal Collection, decimal Collection_Cash, decimal Collection_Cheque, decimal Pmt, decimal Pmt_Cash, decimal Pmt_cheque, decimal Deposit_Cash, decimal Deposit_Cheque, string Expense_Name, decimal Expn_Amount) {
                dsDayBookRepRow rowdsDayBookRepRow = ((dsDayBookRepRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Loca,
                        Post_Day,
                        Sale,
                        Sale_Cash,
                        Sale_Credit,
                        Collection,
                        Collection_Cash,
                        Collection_Cheque,
                        Pmt,
                        Pmt_Cash,
                        Pmt_cheque,
                        Deposit_Cash,
                        Deposit_Cheque,
                        Expense_Name,
                        Expn_Amount};
                rowdsDayBookRepRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdsDayBookRepRow);
                return rowdsDayBookRepRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dsDayBookRepDataTable cln = ((dsDayBookRepDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dsDayBookRepDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnLoca = base.Columns["Loca"];
                this.columnPost_Day = base.Columns["Post_Day"];
                this.columnSale = base.Columns["Sale"];
                this.columnSale_Cash = base.Columns["Sale_Cash"];
                this.columnSale_Credit = base.Columns["Sale_Credit"];
                this.columnCollection = base.Columns["Collection"];
                this.columnCollection_Cash = base.Columns["Collection_Cash"];
                this.columnCollection_Cheque = base.Columns["Collection_Cheque"];
                this.columnPmt = base.Columns["Pmt"];
                this.columnPmt_Cash = base.Columns["Pmt_Cash"];
                this.columnPmt_cheque = base.Columns["Pmt_cheque"];
                this.columnDeposit_Cash = base.Columns["Deposit_Cash"];
                this.columnDeposit_Cheque = base.Columns["Deposit_Cheque"];
                this.columnExpense_Name = base.Columns["Expense_Name"];
                this.columnExpn_Amount = base.Columns["Expn_Amount"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnLoca = new global::System.Data.DataColumn("Loca", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoca);
                this.columnPost_Day = new global::System.Data.DataColumn("Post_Day", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPost_Day);
                this.columnSale = new global::System.Data.DataColumn("Sale", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSale);
                this.columnSale_Cash = new global::System.Data.DataColumn("Sale_Cash", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSale_Cash);
                this.columnSale_Credit = new global::System.Data.DataColumn("Sale_Credit", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSale_Credit);
                this.columnCollection = new global::System.Data.DataColumn("Collection", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCollection);
                this.columnCollection_Cash = new global::System.Data.DataColumn("Collection_Cash", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCollection_Cash);
                this.columnCollection_Cheque = new global::System.Data.DataColumn("Collection_Cheque", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCollection_Cheque);
                this.columnPmt = new global::System.Data.DataColumn("Pmt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPmt);
                this.columnPmt_Cash = new global::System.Data.DataColumn("Pmt_Cash", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPmt_Cash);
                this.columnPmt_cheque = new global::System.Data.DataColumn("Pmt_cheque", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPmt_cheque);
                this.columnDeposit_Cash = new global::System.Data.DataColumn("Deposit_Cash", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeposit_Cash);
                this.columnDeposit_Cheque = new global::System.Data.DataColumn("Deposit_Cheque", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeposit_Cheque);
                this.columnExpense_Name = new global::System.Data.DataColumn("Expense_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExpense_Name);
                this.columnExpn_Amount = new global::System.Data.DataColumn("Expn_Amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExpn_Amount);
                this.columnLoca.AllowDBNull = false;
                this.columnLoca.MaxLength = 10;
                this.columnPost_Day.AllowDBNull = false;
                this.columnPost_Day.MaxLength = 10;
                this.columnExpense_Name.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsDayBookRepRow NewdsDayBookRepRow() {
                return ((dsDayBookRepRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dsDayBookRepRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dsDayBookRepRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dsDayBookRepRowChanged != null)) {
                    this.dsDayBookRepRowChanged(this, new dsDayBookRepRowChangeEvent(((dsDayBookRepRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dsDayBookRepRowChanging != null)) {
                    this.dsDayBookRepRowChanging(this, new dsDayBookRepRowChangeEvent(((dsDayBookRepRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dsDayBookRepRowDeleted != null)) {
                    this.dsDayBookRepRowDeleted(this, new dsDayBookRepRowChangeEvent(((dsDayBookRepRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dsDayBookRepRowDeleting != null)) {
                    this.dsDayBookRepRowDeleting(this, new dsDayBookRepRowChangeEvent(((dsDayBookRepRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedsDayBookRepRow(dsDayBookRepRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dsDayBookRepDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dtBatchWisePriceDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnProd_Code;
            
            private global::System.Data.DataColumn columnBatchNo;
            
            private global::System.Data.DataColumn columnExp_Date;
            
            private global::System.Data.DataColumn columnShipment;
            
            private global::System.Data.DataColumn columnPurchase_Price;
            
            private global::System.Data.DataColumn columnWs_Price;
            
            private global::System.Data.DataColumn columnRet_Price;
            
            private global::System.Data.DataColumn columnDistr_Price;
            
            private global::System.Data.DataColumn columnModMkt_Price;
            
            private global::System.Data.DataColumn columnLoca;
            
            private global::System.Data.DataColumn columnStock;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtBatchWisePriceDataTable() {
                this.TableName = "dtBatchWisePrice";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtBatchWisePriceDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dtBatchWisePriceDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Prod_CodeColumn {
                get {
                    return this.columnProd_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BatchNoColumn {
                get {
                    return this.columnBatchNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Exp_DateColumn {
                get {
                    return this.columnExp_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShipmentColumn {
                get {
                    return this.columnShipment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Purchase_PriceColumn {
                get {
                    return this.columnPurchase_Price;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Ws_PriceColumn {
                get {
                    return this.columnWs_Price;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Ret_PriceColumn {
                get {
                    return this.columnRet_Price;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Distr_PriceColumn {
                get {
                    return this.columnDistr_Price;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModMkt_PriceColumn {
                get {
                    return this.columnModMkt_Price;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LocaColumn {
                get {
                    return this.columnLoca;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StockColumn {
                get {
                    return this.columnStock;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtBatchWisePriceRow this[int index] {
                get {
                    return ((dtBatchWisePriceRow)(this.Rows[index]));
                }
            }
            
            public event dtBatchWisePriceRowChangeEventHandler dtBatchWisePriceRowChanging;
            
            public event dtBatchWisePriceRowChangeEventHandler dtBatchWisePriceRowChanged;
            
            public event dtBatchWisePriceRowChangeEventHandler dtBatchWisePriceRowDeleting;
            
            public event dtBatchWisePriceRowChangeEventHandler dtBatchWisePriceRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddtBatchWisePriceRow(dtBatchWisePriceRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtBatchWisePriceRow AdddtBatchWisePriceRow(string Prod_Code, string BatchNo, string Exp_Date, string Shipment, string Purchase_Price, string Ws_Price, string Ret_Price, string Distr_Price, string ModMkt_Price, string Loca, decimal Stock) {
                dtBatchWisePriceRow rowdtBatchWisePriceRow = ((dtBatchWisePriceRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Prod_Code,
                        BatchNo,
                        Exp_Date,
                        Shipment,
                        Purchase_Price,
                        Ws_Price,
                        Ret_Price,
                        Distr_Price,
                        ModMkt_Price,
                        Loca,
                        Stock};
                rowdtBatchWisePriceRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdtBatchWisePriceRow);
                return rowdtBatchWisePriceRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dtBatchWisePriceDataTable cln = ((dtBatchWisePriceDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dtBatchWisePriceDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnProd_Code = base.Columns["Prod_Code"];
                this.columnBatchNo = base.Columns["BatchNo"];
                this.columnExp_Date = base.Columns["Exp_Date"];
                this.columnShipment = base.Columns["Shipment"];
                this.columnPurchase_Price = base.Columns["Purchase_Price"];
                this.columnWs_Price = base.Columns["Ws_Price"];
                this.columnRet_Price = base.Columns["Ret_Price"];
                this.columnDistr_Price = base.Columns["Distr_Price"];
                this.columnModMkt_Price = base.Columns["ModMkt_Price"];
                this.columnLoca = base.Columns["Loca"];
                this.columnStock = base.Columns["Stock"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnProd_Code = new global::System.Data.DataColumn("Prod_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Code);
                this.columnBatchNo = new global::System.Data.DataColumn("BatchNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBatchNo);
                this.columnExp_Date = new global::System.Data.DataColumn("Exp_Date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExp_Date);
                this.columnShipment = new global::System.Data.DataColumn("Shipment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShipment);
                this.columnPurchase_Price = new global::System.Data.DataColumn("Purchase_Price", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPurchase_Price);
                this.columnWs_Price = new global::System.Data.DataColumn("Ws_Price", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWs_Price);
                this.columnRet_Price = new global::System.Data.DataColumn("Ret_Price", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRet_Price);
                this.columnDistr_Price = new global::System.Data.DataColumn("Distr_Price", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistr_Price);
                this.columnModMkt_Price = new global::System.Data.DataColumn("ModMkt_Price", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModMkt_Price);
                this.columnLoca = new global::System.Data.DataColumn("Loca", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoca);
                this.columnStock = new global::System.Data.DataColumn("Stock", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStock);
                this.columnRet_Price.Caption = "Purchase_Price";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtBatchWisePriceRow NewdtBatchWisePriceRow() {
                return ((dtBatchWisePriceRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dtBatchWisePriceRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dtBatchWisePriceRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dtBatchWisePriceRowChanged != null)) {
                    this.dtBatchWisePriceRowChanged(this, new dtBatchWisePriceRowChangeEvent(((dtBatchWisePriceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dtBatchWisePriceRowChanging != null)) {
                    this.dtBatchWisePriceRowChanging(this, new dtBatchWisePriceRowChangeEvent(((dtBatchWisePriceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dtBatchWisePriceRowDeleted != null)) {
                    this.dtBatchWisePriceRowDeleted(this, new dtBatchWisePriceRowChangeEvent(((dtBatchWisePriceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dtBatchWisePriceRowDeleting != null)) {
                    this.dtBatchWisePriceRowDeleting(this, new dtBatchWisePriceRowChangeEvent(((dtBatchWisePriceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedtBatchWisePriceRow(dtBatchWisePriceRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dtBatchWisePriceDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dsCusAddressDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnCust_Code;
            
            private global::System.Data.DataColumn columnCust_Name;
            
            private global::System.Data.DataColumn columnAddress1;
            
            private global::System.Data.DataColumn columnAddress2;
            
            private global::System.Data.DataColumn columnAddress3;
            
            private global::System.Data.DataColumn columnAmount;
            
            private global::System.Data.DataColumn columnRef_Person;
            
            private global::System.Data.DataColumn columnRef_ContactNo;
            
            private global::System.Data.DataColumn columnDays;
            
            private global::System.Data.DataColumn columnMonths;
            
            private global::System.Data.DataColumn columnDate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsCusAddressDataTable() {
                this.TableName = "dsCusAddress";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsCusAddressDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dsCusAddressDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cust_CodeColumn {
                get {
                    return this.columnCust_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cust_NameColumn {
                get {
                    return this.columnCust_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Address1Column {
                get {
                    return this.columnAddress1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Address2Column {
                get {
                    return this.columnAddress2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Address3Column {
                get {
                    return this.columnAddress3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Ref_PersonColumn {
                get {
                    return this.columnRef_Person;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Ref_ContactNoColumn {
                get {
                    return this.columnRef_ContactNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DaysColumn {
                get {
                    return this.columnDays;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MonthsColumn {
                get {
                    return this.columnMonths;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateColumn {
                get {
                    return this.columnDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsCusAddressRow this[int index] {
                get {
                    return ((dsCusAddressRow)(this.Rows[index]));
                }
            }
            
            public event dsCusAddressRowChangeEventHandler dsCusAddressRowChanging;
            
            public event dsCusAddressRowChangeEventHandler dsCusAddressRowChanged;
            
            public event dsCusAddressRowChangeEventHandler dsCusAddressRowDeleting;
            
            public event dsCusAddressRowChangeEventHandler dsCusAddressRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddsCusAddressRow(dsCusAddressRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsCusAddressRow AdddsCusAddressRow(string Cust_Code, string Cust_Name, string Address1, string Address2, string Address3, decimal Amount, string Ref_Person, string Ref_ContactNo, decimal Days, decimal Months, string Date) {
                dsCusAddressRow rowdsCusAddressRow = ((dsCusAddressRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Cust_Code,
                        Cust_Name,
                        Address1,
                        Address2,
                        Address3,
                        Amount,
                        Ref_Person,
                        Ref_ContactNo,
                        Days,
                        Months,
                        Date};
                rowdsCusAddressRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdsCusAddressRow);
                return rowdsCusAddressRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dsCusAddressDataTable cln = ((dsCusAddressDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dsCusAddressDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCust_Code = base.Columns["Cust_Code"];
                this.columnCust_Name = base.Columns["Cust_Name"];
                this.columnAddress1 = base.Columns["Address1"];
                this.columnAddress2 = base.Columns["Address2"];
                this.columnAddress3 = base.Columns["Address3"];
                this.columnAmount = base.Columns["Amount"];
                this.columnRef_Person = base.Columns["Ref_Person"];
                this.columnRef_ContactNo = base.Columns["Ref_ContactNo"];
                this.columnDays = base.Columns["Days"];
                this.columnMonths = base.Columns["Months"];
                this.columnDate = base.Columns["Date"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCust_Code = new global::System.Data.DataColumn("Cust_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCust_Code);
                this.columnCust_Name = new global::System.Data.DataColumn("Cust_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCust_Name);
                this.columnAddress1 = new global::System.Data.DataColumn("Address1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress1);
                this.columnAddress2 = new global::System.Data.DataColumn("Address2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress2);
                this.columnAddress3 = new global::System.Data.DataColumn("Address3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress3);
                this.columnAmount = new global::System.Data.DataColumn("Amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
                this.columnRef_Person = new global::System.Data.DataColumn("Ref_Person", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRef_Person);
                this.columnRef_ContactNo = new global::System.Data.DataColumn("Ref_ContactNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRef_ContactNo);
                this.columnDays = new global::System.Data.DataColumn("Days", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDays);
                this.columnMonths = new global::System.Data.DataColumn("Months", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMonths);
                this.columnDate = new global::System.Data.DataColumn("Date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDate);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsCusAddressRow NewdsCusAddressRow() {
                return ((dsCusAddressRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dsCusAddressRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dsCusAddressRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dsCusAddressRowChanged != null)) {
                    this.dsCusAddressRowChanged(this, new dsCusAddressRowChangeEvent(((dsCusAddressRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dsCusAddressRowChanging != null)) {
                    this.dsCusAddressRowChanging(this, new dsCusAddressRowChangeEvent(((dsCusAddressRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dsCusAddressRowDeleted != null)) {
                    this.dsCusAddressRowDeleted(this, new dsCusAddressRowChangeEvent(((dsCusAddressRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dsCusAddressRowDeleting != null)) {
                    this.dsCusAddressRowDeleting(this, new dsCusAddressRowChangeEvent(((dsCusAddressRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedsCusAddressRow(dsCusAddressRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dsCusAddressDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dsTempPacketProduct1DataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnProd_Code;
            
            private global::System.Data.DataColumn columnProd_Name;
            
            private global::System.Data.DataColumn columnPacket_Qty;
            
            private global::System.Data.DataColumn columnPurchase_price;
            
            private global::System.Data.DataColumn columnMain_Prod_Code;
            
            private global::System.Data.DataColumn columnMain_Prod_Name;
            
            private global::System.Data.DataColumn columnNo_Of_Packets;
            
            private global::System.Data.DataColumn columnBatchNo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsTempPacketProduct1DataTable() {
                this.TableName = "dsTempPacketProduct1";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsTempPacketProduct1DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dsTempPacketProduct1DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Prod_CodeColumn {
                get {
                    return this.columnProd_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Prod_NameColumn {
                get {
                    return this.columnProd_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Packet_QtyColumn {
                get {
                    return this.columnPacket_Qty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Purchase_priceColumn {
                get {
                    return this.columnPurchase_price;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Main_Prod_CodeColumn {
                get {
                    return this.columnMain_Prod_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Main_Prod_NameColumn {
                get {
                    return this.columnMain_Prod_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn No_Of_PacketsColumn {
                get {
                    return this.columnNo_Of_Packets;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BatchNoColumn {
                get {
                    return this.columnBatchNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsTempPacketProduct1Row this[int index] {
                get {
                    return ((dsTempPacketProduct1Row)(this.Rows[index]));
                }
            }
            
            public event dsTempPacketProduct1RowChangeEventHandler dsTempPacketProduct1RowChanging;
            
            public event dsTempPacketProduct1RowChangeEventHandler dsTempPacketProduct1RowChanged;
            
            public event dsTempPacketProduct1RowChangeEventHandler dsTempPacketProduct1RowDeleting;
            
            public event dsTempPacketProduct1RowChangeEventHandler dsTempPacketProduct1RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddsTempPacketProduct1Row(dsTempPacketProduct1Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsTempPacketProduct1Row AdddsTempPacketProduct1Row(string Prod_Code, string Prod_Name, string Packet_Qty, string Purchase_price, string Main_Prod_Code, string Main_Prod_Name, string No_Of_Packets, string BatchNo) {
                dsTempPacketProduct1Row rowdsTempPacketProduct1Row = ((dsTempPacketProduct1Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Prod_Code,
                        Prod_Name,
                        Packet_Qty,
                        Purchase_price,
                        Main_Prod_Code,
                        Main_Prod_Name,
                        No_Of_Packets,
                        BatchNo};
                rowdsTempPacketProduct1Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowdsTempPacketProduct1Row);
                return rowdsTempPacketProduct1Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dsTempPacketProduct1DataTable cln = ((dsTempPacketProduct1DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dsTempPacketProduct1DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnProd_Code = base.Columns["Prod_Code"];
                this.columnProd_Name = base.Columns["Prod_Name"];
                this.columnPacket_Qty = base.Columns["Packet_Qty"];
                this.columnPurchase_price = base.Columns["Purchase_price"];
                this.columnMain_Prod_Code = base.Columns["Main_Prod_Code"];
                this.columnMain_Prod_Name = base.Columns["Main_Prod_Name"];
                this.columnNo_Of_Packets = base.Columns["No_Of_Packets"];
                this.columnBatchNo = base.Columns["BatchNo"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnProd_Code = new global::System.Data.DataColumn("Prod_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Code);
                this.columnProd_Name = new global::System.Data.DataColumn("Prod_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Name);
                this.columnPacket_Qty = new global::System.Data.DataColumn("Packet_Qty", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPacket_Qty);
                this.columnPurchase_price = new global::System.Data.DataColumn("Purchase_price", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPurchase_price);
                this.columnMain_Prod_Code = new global::System.Data.DataColumn("Main_Prod_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMain_Prod_Code);
                this.columnMain_Prod_Name = new global::System.Data.DataColumn("Main_Prod_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMain_Prod_Name);
                this.columnNo_Of_Packets = new global::System.Data.DataColumn("No_Of_Packets", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNo_Of_Packets);
                this.columnBatchNo = new global::System.Data.DataColumn("BatchNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBatchNo);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsTempPacketProduct1Row NewdsTempPacketProduct1Row() {
                return ((dsTempPacketProduct1Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dsTempPacketProduct1Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dsTempPacketProduct1Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dsTempPacketProduct1RowChanged != null)) {
                    this.dsTempPacketProduct1RowChanged(this, new dsTempPacketProduct1RowChangeEvent(((dsTempPacketProduct1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dsTempPacketProduct1RowChanging != null)) {
                    this.dsTempPacketProduct1RowChanging(this, new dsTempPacketProduct1RowChangeEvent(((dsTempPacketProduct1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dsTempPacketProduct1RowDeleted != null)) {
                    this.dsTempPacketProduct1RowDeleted(this, new dsTempPacketProduct1RowChangeEvent(((dsTempPacketProduct1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dsTempPacketProduct1RowDeleting != null)) {
                    this.dsTempPacketProduct1RowDeleting(this, new dsTempPacketProduct1RowChangeEvent(((dsTempPacketProduct1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedsTempPacketProduct1Row(dsTempPacketProduct1Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dsTempPacketProduct1DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dsProdBundleDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnPacket_Prod_Code;
            
            private global::System.Data.DataColumn columnPacket_Prod_Name;
            
            private global::System.Data.DataColumn columnPacket_Qty;
            
            private global::System.Data.DataColumn columnPacket_Purchase_price;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsProdBundleDataTable() {
                this.TableName = "dsProdBundle";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsProdBundleDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dsProdBundleDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Packet_Prod_CodeColumn {
                get {
                    return this.columnPacket_Prod_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Packet_Prod_NameColumn {
                get {
                    return this.columnPacket_Prod_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Packet_QtyColumn {
                get {
                    return this.columnPacket_Qty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Packet_Purchase_priceColumn {
                get {
                    return this.columnPacket_Purchase_price;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsProdBundleRow this[int index] {
                get {
                    return ((dsProdBundleRow)(this.Rows[index]));
                }
            }
            
            public event dsProdBundleRowChangeEventHandler dsProdBundleRowChanging;
            
            public event dsProdBundleRowChangeEventHandler dsProdBundleRowChanged;
            
            public event dsProdBundleRowChangeEventHandler dsProdBundleRowDeleting;
            
            public event dsProdBundleRowChangeEventHandler dsProdBundleRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddsProdBundleRow(dsProdBundleRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsProdBundleRow AdddsProdBundleRow(string Packet_Prod_Code, string Packet_Prod_Name, decimal Packet_Qty, decimal Packet_Purchase_price) {
                dsProdBundleRow rowdsProdBundleRow = ((dsProdBundleRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Packet_Prod_Code,
                        Packet_Prod_Name,
                        Packet_Qty,
                        Packet_Purchase_price};
                rowdsProdBundleRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdsProdBundleRow);
                return rowdsProdBundleRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dsProdBundleDataTable cln = ((dsProdBundleDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dsProdBundleDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnPacket_Prod_Code = base.Columns["Packet_Prod_Code"];
                this.columnPacket_Prod_Name = base.Columns["Packet_Prod_Name"];
                this.columnPacket_Qty = base.Columns["Packet_Qty"];
                this.columnPacket_Purchase_price = base.Columns["Packet_Purchase_price"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnPacket_Prod_Code = new global::System.Data.DataColumn("Packet_Prod_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPacket_Prod_Code);
                this.columnPacket_Prod_Name = new global::System.Data.DataColumn("Packet_Prod_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPacket_Prod_Name);
                this.columnPacket_Qty = new global::System.Data.DataColumn("Packet_Qty", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPacket_Qty);
                this.columnPacket_Purchase_price = new global::System.Data.DataColumn("Packet_Purchase_price", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPacket_Purchase_price);
                this.columnPacket_Prod_Code.AllowDBNull = false;
                this.columnPacket_Prod_Code.MaxLength = 50;
                this.columnPacket_Prod_Name.AllowDBNull = false;
                this.columnPacket_Prod_Name.MaxLength = 100;
                this.columnPacket_Qty.AllowDBNull = false;
                this.columnPacket_Purchase_price.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsProdBundleRow NewdsProdBundleRow() {
                return ((dsProdBundleRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dsProdBundleRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dsProdBundleRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dsProdBundleRowChanged != null)) {
                    this.dsProdBundleRowChanged(this, new dsProdBundleRowChangeEvent(((dsProdBundleRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dsProdBundleRowChanging != null)) {
                    this.dsProdBundleRowChanging(this, new dsProdBundleRowChangeEvent(((dsProdBundleRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dsProdBundleRowDeleted != null)) {
                    this.dsProdBundleRowDeleted(this, new dsProdBundleRowChangeEvent(((dsProdBundleRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dsProdBundleRowDeleting != null)) {
                    this.dsProdBundleRowDeleting(this, new dsProdBundleRowChangeEvent(((dsProdBundleRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedsProdBundleRow(dsProdBundleRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dsProdBundleDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class StatementDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnCust_Code;
            
            private global::System.Data.DataColumn columnReceipt;
            
            private global::System.Data.DataColumn columnBillDate;
            
            private global::System.Data.DataColumn columnBillAmount;
            
            private global::System.Data.DataColumn columnEarn;
            
            private global::System.Data.DataColumn columnRedeem;
            
            private global::System.Data.DataColumn columnER;
            
            private global::System.Data.DataColumn columnUnit;
            
            private global::System.Data.DataColumn columnLoca;
            
            private global::System.Data.DataColumn columnLocaName;
            
            private global::System.Data.DataColumn columnCus_Name;
            
            private global::System.Data.DataColumn columnLocation;
            
            private global::System.Data.DataColumn columnDateFrom;
            
            private global::System.Data.DataColumn columnDateTo;
            
            private global::System.Data.DataColumn columnProd_Code;
            
            private global::System.Data.DataColumn columnProd_Name;
            
            private global::System.Data.DataColumn columnQty;
            
            private global::System.Data.DataColumn columnReceipt_No;
            
            private global::System.Data.DataColumn columnReportDate;
            
            private global::System.Data.DataColumn columnAmount;
            
            private global::System.Data.DataColumn columnSelling;
            
            private global::System.Data.DataColumn columnBFBalance;
            
            private global::System.Data.DataColumn columnBalPoints;
            
            private global::System.Data.DataColumn columnCard_No;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StatementDataTable() {
                this.TableName = "Statement";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal StatementDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected StatementDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cust_CodeColumn {
                get {
                    return this.columnCust_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReceiptColumn {
                get {
                    return this.columnReceipt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BillDateColumn {
                get {
                    return this.columnBillDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BillAmountColumn {
                get {
                    return this.columnBillAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EarnColumn {
                get {
                    return this.columnEarn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RedeemColumn {
                get {
                    return this.columnRedeem;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ERColumn {
                get {
                    return this.columnER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UnitColumn {
                get {
                    return this.columnUnit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LocaColumn {
                get {
                    return this.columnLoca;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LocaNameColumn {
                get {
                    return this.columnLocaName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cus_NameColumn {
                get {
                    return this.columnCus_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LocationColumn {
                get {
                    return this.columnLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateFromColumn {
                get {
                    return this.columnDateFrom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateToColumn {
                get {
                    return this.columnDateTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Prod_CodeColumn {
                get {
                    return this.columnProd_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Prod_NameColumn {
                get {
                    return this.columnProd_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QtyColumn {
                get {
                    return this.columnQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Receipt_NoColumn {
                get {
                    return this.columnReceipt_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReportDateColumn {
                get {
                    return this.columnReportDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SellingColumn {
                get {
                    return this.columnSelling;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BFBalanceColumn {
                get {
                    return this.columnBFBalance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BalPointsColumn {
                get {
                    return this.columnBalPoints;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Card_NoColumn {
                get {
                    return this.columnCard_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StatementRow this[int index] {
                get {
                    return ((StatementRow)(this.Rows[index]));
                }
            }
            
            public event StatementRowChangeEventHandler StatementRowChanging;
            
            public event StatementRowChangeEventHandler StatementRowChanged;
            
            public event StatementRowChangeEventHandler StatementRowDeleting;
            
            public event StatementRowChangeEventHandler StatementRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddStatementRow(StatementRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StatementRow AddStatementRow(
                        string Cust_Code, 
                        string Receipt, 
                        System.DateTime BillDate, 
                        decimal BillAmount, 
                        decimal Earn, 
                        decimal Redeem, 
                        string ER, 
                        string Unit, 
                        string Loca, 
                        string LocaName, 
                        string Cus_Name, 
                        string Location, 
                        System.DateTime DateFrom, 
                        System.DateTime DateTo, 
                        string Prod_Code, 
                        string Prod_Name, 
                        decimal Qty, 
                        string Receipt_No, 
                        string ReportDate, 
                        decimal Amount, 
                        decimal Selling, 
                        decimal BFBalance, 
                        decimal BalPoints, 
                        string Card_No) {
                StatementRow rowStatementRow = ((StatementRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Cust_Code,
                        Receipt,
                        BillDate,
                        BillAmount,
                        Earn,
                        Redeem,
                        ER,
                        Unit,
                        Loca,
                        LocaName,
                        Cus_Name,
                        Location,
                        DateFrom,
                        DateTo,
                        Prod_Code,
                        Prod_Name,
                        Qty,
                        Receipt_No,
                        ReportDate,
                        Amount,
                        Selling,
                        BFBalance,
                        BalPoints,
                        Card_No};
                rowStatementRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowStatementRow);
                return rowStatementRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                StatementDataTable cln = ((StatementDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new StatementDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCust_Code = base.Columns["Cust_Code"];
                this.columnReceipt = base.Columns["Receipt"];
                this.columnBillDate = base.Columns["BillDate"];
                this.columnBillAmount = base.Columns["BillAmount"];
                this.columnEarn = base.Columns["Earn"];
                this.columnRedeem = base.Columns["Redeem"];
                this.columnER = base.Columns["ER"];
                this.columnUnit = base.Columns["Unit"];
                this.columnLoca = base.Columns["Loca"];
                this.columnLocaName = base.Columns["LocaName"];
                this.columnCus_Name = base.Columns["Cus_Name"];
                this.columnLocation = base.Columns["Location"];
                this.columnDateFrom = base.Columns["DateFrom"];
                this.columnDateTo = base.Columns["DateTo"];
                this.columnProd_Code = base.Columns["Prod_Code"];
                this.columnProd_Name = base.Columns["Prod_Name"];
                this.columnQty = base.Columns["Qty"];
                this.columnReceipt_No = base.Columns["Receipt_No"];
                this.columnReportDate = base.Columns["ReportDate"];
                this.columnAmount = base.Columns["Amount"];
                this.columnSelling = base.Columns["Selling"];
                this.columnBFBalance = base.Columns["BFBalance"];
                this.columnBalPoints = base.Columns["BalPoints"];
                this.columnCard_No = base.Columns["Card_No"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCust_Code = new global::System.Data.DataColumn("Cust_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCust_Code);
                this.columnReceipt = new global::System.Data.DataColumn("Receipt", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReceipt);
                this.columnBillDate = new global::System.Data.DataColumn("BillDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBillDate);
                this.columnBillAmount = new global::System.Data.DataColumn("BillAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBillAmount);
                this.columnEarn = new global::System.Data.DataColumn("Earn", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEarn);
                this.columnRedeem = new global::System.Data.DataColumn("Redeem", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRedeem);
                this.columnER = new global::System.Data.DataColumn("ER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnER);
                this.columnUnit = new global::System.Data.DataColumn("Unit", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnit);
                this.columnLoca = new global::System.Data.DataColumn("Loca", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoca);
                this.columnLocaName = new global::System.Data.DataColumn("LocaName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocaName);
                this.columnCus_Name = new global::System.Data.DataColumn("Cus_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCus_Name);
                this.columnLocation = new global::System.Data.DataColumn("Location", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocation);
                this.columnDateFrom = new global::System.Data.DataColumn("DateFrom", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateFrom);
                this.columnDateTo = new global::System.Data.DataColumn("DateTo", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateTo);
                this.columnProd_Code = new global::System.Data.DataColumn("Prod_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Code);
                this.columnProd_Name = new global::System.Data.DataColumn("Prod_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Name);
                this.columnQty = new global::System.Data.DataColumn("Qty", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQty);
                this.columnReceipt_No = new global::System.Data.DataColumn("Receipt_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReceipt_No);
                this.columnReportDate = new global::System.Data.DataColumn("ReportDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReportDate);
                this.columnAmount = new global::System.Data.DataColumn("Amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
                this.columnSelling = new global::System.Data.DataColumn("Selling", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelling);
                this.columnBFBalance = new global::System.Data.DataColumn("BFBalance", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBFBalance);
                this.columnBalPoints = new global::System.Data.DataColumn("BalPoints", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBalPoints);
                this.columnCard_No = new global::System.Data.DataColumn("Card_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCard_No);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StatementRow NewStatementRow() {
                return ((StatementRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new StatementRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(StatementRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.StatementRowChanged != null)) {
                    this.StatementRowChanged(this, new StatementRowChangeEvent(((StatementRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.StatementRowChanging != null)) {
                    this.StatementRowChanging(this, new StatementRowChangeEvent(((StatementRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.StatementRowDeleted != null)) {
                    this.StatementRowDeleted(this, new StatementRowChangeEvent(((StatementRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.StatementRowDeleting != null)) {
                    this.StatementRowDeleting(this, new StatementRowChangeEvent(((StatementRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveStatementRow(StatementRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "StatementDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CompanyDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnLoca;
            
            private global::System.Data.DataColumn columnCompanyCode;
            
            private global::System.Data.DataColumn columnCompanyName;
            
            private global::System.Data.DataColumn columnAddress1;
            
            private global::System.Data.DataColumn columnAddress2;
            
            private global::System.Data.DataColumn columnTelFax;
            
            private global::System.Data.DataColumn columnemail;
            
            private global::System.Data.DataColumn columnCard_No;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CompanyDataTable() {
                this.TableName = "Company";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CompanyDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CompanyDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LocaColumn {
                get {
                    return this.columnLoca;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompanyCodeColumn {
                get {
                    return this.columnCompanyCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompanyNameColumn {
                get {
                    return this.columnCompanyName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Address1Column {
                get {
                    return this.columnAddress1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Address2Column {
                get {
                    return this.columnAddress2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TelFaxColumn {
                get {
                    return this.columnTelFax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn emailColumn {
                get {
                    return this.columnemail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Card_NoColumn {
                get {
                    return this.columnCard_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CompanyRow this[int index] {
                get {
                    return ((CompanyRow)(this.Rows[index]));
                }
            }
            
            public event CompanyRowChangeEventHandler CompanyRowChanging;
            
            public event CompanyRowChangeEventHandler CompanyRowChanged;
            
            public event CompanyRowChangeEventHandler CompanyRowDeleting;
            
            public event CompanyRowChangeEventHandler CompanyRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCompanyRow(CompanyRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CompanyRow AddCompanyRow(string Loca, string CompanyCode, string CompanyName, string Address1, string Address2, string TelFax, string email, string Card_No) {
                CompanyRow rowCompanyRow = ((CompanyRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Loca,
                        CompanyCode,
                        CompanyName,
                        Address1,
                        Address2,
                        TelFax,
                        email,
                        Card_No};
                rowCompanyRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCompanyRow);
                return rowCompanyRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                CompanyDataTable cln = ((CompanyDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CompanyDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnLoca = base.Columns["Loca"];
                this.columnCompanyCode = base.Columns["CompanyCode"];
                this.columnCompanyName = base.Columns["CompanyName"];
                this.columnAddress1 = base.Columns["Address1"];
                this.columnAddress2 = base.Columns["Address2"];
                this.columnTelFax = base.Columns["TelFax"];
                this.columnemail = base.Columns["email"];
                this.columnCard_No = base.Columns["Card_No"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnLoca = new global::System.Data.DataColumn("Loca", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoca);
                this.columnCompanyCode = new global::System.Data.DataColumn("CompanyCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompanyCode);
                this.columnCompanyName = new global::System.Data.DataColumn("CompanyName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompanyName);
                this.columnAddress1 = new global::System.Data.DataColumn("Address1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress1);
                this.columnAddress2 = new global::System.Data.DataColumn("Address2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress2);
                this.columnTelFax = new global::System.Data.DataColumn("TelFax", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTelFax);
                this.columnemail = new global::System.Data.DataColumn("email", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnemail);
                this.columnCard_No = new global::System.Data.DataColumn("Card_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCard_No);
                this.columnLoca.AllowDBNull = false;
                this.columnLoca.MaxLength = 10;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CompanyRow NewCompanyRow() {
                return ((CompanyRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CompanyRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(CompanyRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CompanyRowChanged != null)) {
                    this.CompanyRowChanged(this, new CompanyRowChangeEvent(((CompanyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CompanyRowChanging != null)) {
                    this.CompanyRowChanging(this, new CompanyRowChangeEvent(((CompanyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CompanyRowDeleted != null)) {
                    this.CompanyRowDeleted(this, new CompanyRowChangeEvent(((CompanyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CompanyRowDeleting != null)) {
                    this.CompanyRowDeleting(this, new CompanyRowChangeEvent(((CompanyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCompanyRow(CompanyRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CompanyDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dsInvoiceColSummeryDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnDate;
            
            private global::System.Data.DataColumn columnCash;
            
            private global::System.Data.DataColumn columnCredit;
            
            private global::System.Data.DataColumn columnBalance;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsInvoiceColSummeryDataTable() {
                this.TableName = "dsInvoiceColSummery";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsInvoiceColSummeryDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dsInvoiceColSummeryDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateColumn {
                get {
                    return this.columnDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CashColumn {
                get {
                    return this.columnCash;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreditColumn {
                get {
                    return this.columnCredit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BalanceColumn {
                get {
                    return this.columnBalance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsInvoiceColSummeryRow this[int index] {
                get {
                    return ((dsInvoiceColSummeryRow)(this.Rows[index]));
                }
            }
            
            public event dsInvoiceColSummeryRowChangeEventHandler dsInvoiceColSummeryRowChanging;
            
            public event dsInvoiceColSummeryRowChangeEventHandler dsInvoiceColSummeryRowChanged;
            
            public event dsInvoiceColSummeryRowChangeEventHandler dsInvoiceColSummeryRowDeleting;
            
            public event dsInvoiceColSummeryRowChangeEventHandler dsInvoiceColSummeryRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddsInvoiceColSummeryRow(dsInvoiceColSummeryRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsInvoiceColSummeryRow AdddsInvoiceColSummeryRow(string Date, decimal Cash, decimal Credit, decimal Balance) {
                dsInvoiceColSummeryRow rowdsInvoiceColSummeryRow = ((dsInvoiceColSummeryRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Date,
                        Cash,
                        Credit,
                        Balance};
                rowdsInvoiceColSummeryRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdsInvoiceColSummeryRow);
                return rowdsInvoiceColSummeryRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dsInvoiceColSummeryDataTable cln = ((dsInvoiceColSummeryDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dsInvoiceColSummeryDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDate = base.Columns["Date"];
                this.columnCash = base.Columns["Cash"];
                this.columnCredit = base.Columns["Credit"];
                this.columnBalance = base.Columns["Balance"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDate = new global::System.Data.DataColumn("Date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDate);
                this.columnCash = new global::System.Data.DataColumn("Cash", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCash);
                this.columnCredit = new global::System.Data.DataColumn("Credit", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCredit);
                this.columnBalance = new global::System.Data.DataColumn("Balance", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBalance);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsInvoiceColSummeryRow NewdsInvoiceColSummeryRow() {
                return ((dsInvoiceColSummeryRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dsInvoiceColSummeryRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dsInvoiceColSummeryRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dsInvoiceColSummeryRowChanged != null)) {
                    this.dsInvoiceColSummeryRowChanged(this, new dsInvoiceColSummeryRowChangeEvent(((dsInvoiceColSummeryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dsInvoiceColSummeryRowChanging != null)) {
                    this.dsInvoiceColSummeryRowChanging(this, new dsInvoiceColSummeryRowChangeEvent(((dsInvoiceColSummeryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dsInvoiceColSummeryRowDeleted != null)) {
                    this.dsInvoiceColSummeryRowDeleted(this, new dsInvoiceColSummeryRowChangeEvent(((dsInvoiceColSummeryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dsInvoiceColSummeryRowDeleting != null)) {
                    this.dsInvoiceColSummeryRowDeleting(this, new dsInvoiceColSummeryRowChangeEvent(((dsInvoiceColSummeryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedsInvoiceColSummeryRow(dsInvoiceColSummeryRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dsInvoiceColSummeryDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dsCashDenoDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnPostDate;
            
            private global::System.Data.DataColumn columnCashier;
            
            private global::System.Data.DataColumn columnN5000;
            
            private global::System.Data.DataColumn columnN2000;
            
            private global::System.Data.DataColumn columnN1000;
            
            private global::System.Data.DataColumn columnN500;
            
            private global::System.Data.DataColumn columnN100;
            
            private global::System.Data.DataColumn columnN50;
            
            private global::System.Data.DataColumn columnN20;
            
            private global::System.Data.DataColumn columnN10;
            
            private global::System.Data.DataColumn columnN5;
            
            private global::System.Data.DataColumn columnN2;
            
            private global::System.Data.DataColumn columnN1;
            
            private global::System.Data.DataColumn columnLocaDesc;
            
            private global::System.Data.DataColumn columnLoca;
            
            private global::System.Data.DataColumn columnRepName;
            
            private global::System.Data.DataColumn columnState;
            
            private global::System.Data.DataColumn columnAmount;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsCashDenoDataTable() {
                this.TableName = "dsCashDeno";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsCashDenoDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dsCashDenoDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PostDateColumn {
                get {
                    return this.columnPostDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CashierColumn {
                get {
                    return this.columnCashier;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn N5000Column {
                get {
                    return this.columnN5000;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn N2000Column {
                get {
                    return this.columnN2000;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn N1000Column {
                get {
                    return this.columnN1000;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn N500Column {
                get {
                    return this.columnN500;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn N100Column {
                get {
                    return this.columnN100;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn N50Column {
                get {
                    return this.columnN50;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn N20Column {
                get {
                    return this.columnN20;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn N10Column {
                get {
                    return this.columnN10;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn N5Column {
                get {
                    return this.columnN5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn N2Column {
                get {
                    return this.columnN2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn N1Column {
                get {
                    return this.columnN1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LocaDescColumn {
                get {
                    return this.columnLocaDesc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LocaColumn {
                get {
                    return this.columnLoca;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RepNameColumn {
                get {
                    return this.columnRepName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StateColumn {
                get {
                    return this.columnState;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsCashDenoRow this[int index] {
                get {
                    return ((dsCashDenoRow)(this.Rows[index]));
                }
            }
            
            public event dsCashDenoRowChangeEventHandler dsCashDenoRowChanging;
            
            public event dsCashDenoRowChangeEventHandler dsCashDenoRowChanged;
            
            public event dsCashDenoRowChangeEventHandler dsCashDenoRowDeleting;
            
            public event dsCashDenoRowChangeEventHandler dsCashDenoRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddsCashDenoRow(dsCashDenoRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsCashDenoRow AdddsCashDenoRow(
                        string PostDate, 
                        string Cashier, 
                        decimal N5000, 
                        decimal N2000, 
                        decimal N1000, 
                        decimal N500, 
                        decimal N100, 
                        decimal N50, 
                        decimal N20, 
                        decimal N10, 
                        decimal N5, 
                        decimal N2, 
                        decimal N1, 
                        string LocaDesc, 
                        string Loca, 
                        string RepName, 
                        string State, 
                        decimal Amount) {
                dsCashDenoRow rowdsCashDenoRow = ((dsCashDenoRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        PostDate,
                        Cashier,
                        N5000,
                        N2000,
                        N1000,
                        N500,
                        N100,
                        N50,
                        N20,
                        N10,
                        N5,
                        N2,
                        N1,
                        LocaDesc,
                        Loca,
                        RepName,
                        State,
                        Amount};
                rowdsCashDenoRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdsCashDenoRow);
                return rowdsCashDenoRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dsCashDenoDataTable cln = ((dsCashDenoDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dsCashDenoDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnPostDate = base.Columns["PostDate"];
                this.columnCashier = base.Columns["Cashier"];
                this.columnN5000 = base.Columns["N5000"];
                this.columnN2000 = base.Columns["N2000"];
                this.columnN1000 = base.Columns["N1000"];
                this.columnN500 = base.Columns["N500"];
                this.columnN100 = base.Columns["N100"];
                this.columnN50 = base.Columns["N50"];
                this.columnN20 = base.Columns["N20"];
                this.columnN10 = base.Columns["N10"];
                this.columnN5 = base.Columns["N5"];
                this.columnN2 = base.Columns["N2"];
                this.columnN1 = base.Columns["N1"];
                this.columnLocaDesc = base.Columns["LocaDesc"];
                this.columnLoca = base.Columns["Loca"];
                this.columnRepName = base.Columns["RepName"];
                this.columnState = base.Columns["State"];
                this.columnAmount = base.Columns["Amount"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnPostDate = new global::System.Data.DataColumn("PostDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPostDate);
                this.columnCashier = new global::System.Data.DataColumn("Cashier", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCashier);
                this.columnN5000 = new global::System.Data.DataColumn("N5000", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnN5000);
                this.columnN2000 = new global::System.Data.DataColumn("N2000", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnN2000);
                this.columnN1000 = new global::System.Data.DataColumn("N1000", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnN1000);
                this.columnN500 = new global::System.Data.DataColumn("N500", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnN500);
                this.columnN100 = new global::System.Data.DataColumn("N100", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnN100);
                this.columnN50 = new global::System.Data.DataColumn("N50", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnN50);
                this.columnN20 = new global::System.Data.DataColumn("N20", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnN20);
                this.columnN10 = new global::System.Data.DataColumn("N10", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnN10);
                this.columnN5 = new global::System.Data.DataColumn("N5", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnN5);
                this.columnN2 = new global::System.Data.DataColumn("N2", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnN2);
                this.columnN1 = new global::System.Data.DataColumn("N1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnN1);
                this.columnLocaDesc = new global::System.Data.DataColumn("LocaDesc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocaDesc);
                this.columnLoca = new global::System.Data.DataColumn("Loca", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoca);
                this.columnRepName = new global::System.Data.DataColumn("RepName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRepName);
                this.columnState = new global::System.Data.DataColumn("State", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnState);
                this.columnAmount = new global::System.Data.DataColumn("Amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsCashDenoRow NewdsCashDenoRow() {
                return ((dsCashDenoRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dsCashDenoRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dsCashDenoRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dsCashDenoRowChanged != null)) {
                    this.dsCashDenoRowChanged(this, new dsCashDenoRowChangeEvent(((dsCashDenoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dsCashDenoRowChanging != null)) {
                    this.dsCashDenoRowChanging(this, new dsCashDenoRowChangeEvent(((dsCashDenoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dsCashDenoRowDeleted != null)) {
                    this.dsCashDenoRowDeleted(this, new dsCashDenoRowChangeEvent(((dsCashDenoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dsCashDenoRowDeleting != null)) {
                    this.dsCashDenoRowDeleting(this, new dsCashDenoRowChangeEvent(((dsCashDenoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedsCashDenoRow(dsCashDenoRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dsCashDenoDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CRM_CustomerDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnCus_Code;
            
            private global::System.Data.DataColumn columnStatus;
            
            private global::System.Data.DataColumn columnCus_Name;
            
            private global::System.Data.DataColumn columnFirstName;
            
            private global::System.Data.DataColumn columnSecondName;
            
            private global::System.Data.DataColumn columnAddress1;
            
            private global::System.Data.DataColumn columnAddress2;
            
            private global::System.Data.DataColumn columnAddress3;
            
            private global::System.Data.DataColumn columnAddress4;
            
            private global::System.Data.DataColumn columnAddress5;
            
            private global::System.Data.DataColumn columnPhoneNo;
            
            private global::System.Data.DataColumn columnFax;
            
            private global::System.Data.DataColumn columnOfficePhone;
            
            private global::System.Data.DataColumn columnOther;
            
            private global::System.Data.DataColumn columnMobile;
            
            private global::System.Data.DataColumn columnContactPersion;
            
            private global::System.Data.DataColumn columnE_mail;
            
            private global::System.Data.DataColumn columnWeb;
            
            private global::System.Data.DataColumn columnNICNumber;
            
            private global::System.Data.DataColumn columnBirthday;
            
            private global::System.Data.DataColumn columnCus_Type;
            
            private global::System.Data.DataColumn columnReferance;
            
            private global::System.Data.DataColumn columnInsertDate;
            
            private global::System.Data.DataColumn columnModDate;
            
            private global::System.Data.DataColumn columnInsertUser;
            
            private global::System.Data.DataColumn columnModUser;
            
            private global::System.Data.DataColumn columnInactive;
            
            private global::System.Data.DataColumn columnInactiveDate;
            
            private global::System.Data.DataColumn columnWorkshop;
            
            private global::System.Data.DataColumn columnAge;
            
            private global::System.Data.DataColumn columnWesak;
            
            private global::System.Data.DataColumn columnNewYear;
            
            private global::System.Data.DataColumn columnDontBCard;
            
            private global::System.Data.DataColumn columnAbrod;
            
            private global::System.Data.DataColumn columnNextVisitDate;
            
            private global::System.Data.DataColumn columnBalance;
            
            private global::System.Data.DataColumn columnFestival;
            
            private global::System.Data.DataColumn columnNameOfSpouse;
            
            private global::System.Data.DataColumn columnCard_No;
            
            private global::System.Data.DataColumn columnMonthly_Balance;
            
            private global::System.Data.DataColumn columnCardIssuedDate;
            
            private global::System.Data.DataColumn columnOccupation;
            
            private global::System.Data.DataColumn columnMaritalStatus;
            
            private global::System.Data.DataColumn columnSpouseBirthDay;
            
            private global::System.Data.DataColumn columnDiscount;
            
            private global::System.Data.DataColumn columnGroup_Code;
            
            private global::System.Data.DataColumn columnGroup_Name;
            
            private global::System.Data.DataColumn columnSubGroup_Code;
            
            private global::System.Data.DataColumn columnSubGroup_Name;
            
            private global::System.Data.DataColumn columnAnniversary;
            
            private global::System.Data.DataColumn columnLoca;
            
            private global::System.Data.DataColumn columnLocaName;
            
            private global::System.Data.DataColumn columnCust_Category;
            
            private global::System.Data.DataColumn columnPoint_Rate;
            
            private global::System.Data.DataColumn columnCode_From;
            
            private global::System.Data.DataColumn columnCode_To;
            
            private global::System.Data.DataColumn columnGender;
            
            private global::System.Data.DataColumn columnReligion;
            
            private global::System.Data.DataColumn columnNN;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CRM_CustomerDataTable() {
                this.TableName = "CRM_Customer";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CRM_CustomerDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CRM_CustomerDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cus_CodeColumn {
                get {
                    return this.columnCus_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StatusColumn {
                get {
                    return this.columnStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cus_NameColumn {
                get {
                    return this.columnCus_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FirstNameColumn {
                get {
                    return this.columnFirstName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SecondNameColumn {
                get {
                    return this.columnSecondName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Address1Column {
                get {
                    return this.columnAddress1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Address2Column {
                get {
                    return this.columnAddress2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Address3Column {
                get {
                    return this.columnAddress3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Address4Column {
                get {
                    return this.columnAddress4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Address5Column {
                get {
                    return this.columnAddress5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PhoneNoColumn {
                get {
                    return this.columnPhoneNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FaxColumn {
                get {
                    return this.columnFax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OfficePhoneColumn {
                get {
                    return this.columnOfficePhone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OtherColumn {
                get {
                    return this.columnOther;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MobileColumn {
                get {
                    return this.columnMobile;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ContactPersionColumn {
                get {
                    return this.columnContactPersion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn E_mailColumn {
                get {
                    return this.columnE_mail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WebColumn {
                get {
                    return this.columnWeb;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NICNumberColumn {
                get {
                    return this.columnNICNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BirthdayColumn {
                get {
                    return this.columnBirthday;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cus_TypeColumn {
                get {
                    return this.columnCus_Type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReferanceColumn {
                get {
                    return this.columnReferance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertDateColumn {
                get {
                    return this.columnInsertDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModDateColumn {
                get {
                    return this.columnModDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertUserColumn {
                get {
                    return this.columnInsertUser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModUserColumn {
                get {
                    return this.columnModUser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InactiveColumn {
                get {
                    return this.columnInactive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InactiveDateColumn {
                get {
                    return this.columnInactiveDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WorkshopColumn {
                get {
                    return this.columnWorkshop;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AgeColumn {
                get {
                    return this.columnAge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WesakColumn {
                get {
                    return this.columnWesak;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NewYearColumn {
                get {
                    return this.columnNewYear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DontBCardColumn {
                get {
                    return this.columnDontBCard;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AbrodColumn {
                get {
                    return this.columnAbrod;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NextVisitDateColumn {
                get {
                    return this.columnNextVisitDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BalanceColumn {
                get {
                    return this.columnBalance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FestivalColumn {
                get {
                    return this.columnFestival;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NameOfSpouseColumn {
                get {
                    return this.columnNameOfSpouse;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Card_NoColumn {
                get {
                    return this.columnCard_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Monthly_BalanceColumn {
                get {
                    return this.columnMonthly_Balance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CardIssuedDateColumn {
                get {
                    return this.columnCardIssuedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OccupationColumn {
                get {
                    return this.columnOccupation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MaritalStatusColumn {
                get {
                    return this.columnMaritalStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SpouseBirthDayColumn {
                get {
                    return this.columnSpouseBirthDay;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DiscountColumn {
                get {
                    return this.columnDiscount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Group_CodeColumn {
                get {
                    return this.columnGroup_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Group_NameColumn {
                get {
                    return this.columnGroup_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubGroup_CodeColumn {
                get {
                    return this.columnSubGroup_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubGroup_NameColumn {
                get {
                    return this.columnSubGroup_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AnniversaryColumn {
                get {
                    return this.columnAnniversary;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LocaColumn {
                get {
                    return this.columnLoca;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LocaNameColumn {
                get {
                    return this.columnLocaName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cust_CategoryColumn {
                get {
                    return this.columnCust_Category;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Point_RateColumn {
                get {
                    return this.columnPoint_Rate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Code_FromColumn {
                get {
                    return this.columnCode_From;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Code_ToColumn {
                get {
                    return this.columnCode_To;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GenderColumn {
                get {
                    return this.columnGender;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReligionColumn {
                get {
                    return this.columnReligion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NNColumn {
                get {
                    return this.columnNN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CRM_CustomerRow this[int index] {
                get {
                    return ((CRM_CustomerRow)(this.Rows[index]));
                }
            }
            
            public event CRM_CustomerRowChangeEventHandler CRM_CustomerRowChanging;
            
            public event CRM_CustomerRowChangeEventHandler CRM_CustomerRowChanged;
            
            public event CRM_CustomerRowChangeEventHandler CRM_CustomerRowDeleting;
            
            public event CRM_CustomerRowChangeEventHandler CRM_CustomerRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCRM_CustomerRow(CRM_CustomerRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CRM_CustomerRow AddCRM_CustomerRow(
                        string Cus_Code, 
                        string Status, 
                        string Cus_Name, 
                        string FirstName, 
                        string SecondName, 
                        string Address1, 
                        string Address2, 
                        string Address3, 
                        string Address4, 
                        string Address5, 
                        string PhoneNo, 
                        string Fax, 
                        string OfficePhone, 
                        string Other, 
                        string Mobile, 
                        string ContactPersion, 
                        string E_mail, 
                        string Web, 
                        string NICNumber, 
                        string Birthday, 
                        string Cus_Type, 
                        string Referance, 
                        System.DateTime InsertDate, 
                        System.DateTime ModDate, 
                        string InsertUser, 
                        string ModUser, 
                        bool Inactive, 
                        string InactiveDate, 
                        bool Workshop, 
                        string Age, 
                        bool Wesak, 
                        bool NewYear, 
                        bool DontBCard, 
                        bool Abrod, 
                        System.DateTime NextVisitDate, 
                        decimal Balance, 
                        string Festival, 
                        string NameOfSpouse, 
                        string Card_No, 
                        decimal Monthly_Balance, 
                        string CardIssuedDate, 
                        string Occupation, 
                        string MaritalStatus, 
                        string SpouseBirthDay, 
                        decimal Discount, 
                        string Group_Code, 
                        string Group_Name, 
                        string SubGroup_Code, 
                        string SubGroup_Name, 
                        string Anniversary, 
                        string Loca, 
                        string LocaName, 
                        string Cust_Category, 
                        string Point_Rate, 
                        string Code_From, 
                        string Code_To, 
                        string Gender, 
                        string Religion, 
                        string NN) {
                CRM_CustomerRow rowCRM_CustomerRow = ((CRM_CustomerRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Cus_Code,
                        Status,
                        Cus_Name,
                        FirstName,
                        SecondName,
                        Address1,
                        Address2,
                        Address3,
                        Address4,
                        Address5,
                        PhoneNo,
                        Fax,
                        OfficePhone,
                        Other,
                        Mobile,
                        ContactPersion,
                        E_mail,
                        Web,
                        NICNumber,
                        Birthday,
                        Cus_Type,
                        Referance,
                        InsertDate,
                        ModDate,
                        InsertUser,
                        ModUser,
                        Inactive,
                        InactiveDate,
                        Workshop,
                        Age,
                        Wesak,
                        NewYear,
                        DontBCard,
                        Abrod,
                        NextVisitDate,
                        Balance,
                        Festival,
                        NameOfSpouse,
                        Card_No,
                        Monthly_Balance,
                        CardIssuedDate,
                        Occupation,
                        MaritalStatus,
                        SpouseBirthDay,
                        Discount,
                        Group_Code,
                        Group_Name,
                        SubGroup_Code,
                        SubGroup_Name,
                        Anniversary,
                        Loca,
                        LocaName,
                        Cust_Category,
                        Point_Rate,
                        Code_From,
                        Code_To,
                        Gender,
                        Religion,
                        NN};
                rowCRM_CustomerRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCRM_CustomerRow);
                return rowCRM_CustomerRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CRM_CustomerRow FindByCus_Code(string Cus_Code) {
                return ((CRM_CustomerRow)(this.Rows.Find(new object[] {
                            Cus_Code})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                CRM_CustomerDataTable cln = ((CRM_CustomerDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CRM_CustomerDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCus_Code = base.Columns["Cus_Code"];
                this.columnStatus = base.Columns["Status"];
                this.columnCus_Name = base.Columns["Cus_Name"];
                this.columnFirstName = base.Columns["FirstName"];
                this.columnSecondName = base.Columns["SecondName"];
                this.columnAddress1 = base.Columns["Address1"];
                this.columnAddress2 = base.Columns["Address2"];
                this.columnAddress3 = base.Columns["Address3"];
                this.columnAddress4 = base.Columns["Address4"];
                this.columnAddress5 = base.Columns["Address5"];
                this.columnPhoneNo = base.Columns["PhoneNo"];
                this.columnFax = base.Columns["Fax"];
                this.columnOfficePhone = base.Columns["OfficePhone"];
                this.columnOther = base.Columns["Other"];
                this.columnMobile = base.Columns["Mobile"];
                this.columnContactPersion = base.Columns["ContactPersion"];
                this.columnE_mail = base.Columns["E_mail"];
                this.columnWeb = base.Columns["Web"];
                this.columnNICNumber = base.Columns["NICNumber"];
                this.columnBirthday = base.Columns["Birthday"];
                this.columnCus_Type = base.Columns["Cus_Type"];
                this.columnReferance = base.Columns["Referance"];
                this.columnInsertDate = base.Columns["InsertDate"];
                this.columnModDate = base.Columns["ModDate"];
                this.columnInsertUser = base.Columns["InsertUser"];
                this.columnModUser = base.Columns["ModUser"];
                this.columnInactive = base.Columns["Inactive"];
                this.columnInactiveDate = base.Columns["InactiveDate"];
                this.columnWorkshop = base.Columns["Workshop"];
                this.columnAge = base.Columns["Age"];
                this.columnWesak = base.Columns["Wesak"];
                this.columnNewYear = base.Columns["NewYear"];
                this.columnDontBCard = base.Columns["DontBCard"];
                this.columnAbrod = base.Columns["Abrod"];
                this.columnNextVisitDate = base.Columns["NextVisitDate"];
                this.columnBalance = base.Columns["Balance"];
                this.columnFestival = base.Columns["Festival"];
                this.columnNameOfSpouse = base.Columns["NameOfSpouse"];
                this.columnCard_No = base.Columns["Card_No"];
                this.columnMonthly_Balance = base.Columns["Monthly_Balance"];
                this.columnCardIssuedDate = base.Columns["CardIssuedDate"];
                this.columnOccupation = base.Columns["Occupation"];
                this.columnMaritalStatus = base.Columns["MaritalStatus"];
                this.columnSpouseBirthDay = base.Columns["SpouseBirthDay"];
                this.columnDiscount = base.Columns["Discount"];
                this.columnGroup_Code = base.Columns["Group_Code"];
                this.columnGroup_Name = base.Columns["Group_Name"];
                this.columnSubGroup_Code = base.Columns["SubGroup_Code"];
                this.columnSubGroup_Name = base.Columns["SubGroup_Name"];
                this.columnAnniversary = base.Columns["Anniversary"];
                this.columnLoca = base.Columns["Loca"];
                this.columnLocaName = base.Columns["LocaName"];
                this.columnCust_Category = base.Columns["Cust_Category"];
                this.columnPoint_Rate = base.Columns["Point_Rate"];
                this.columnCode_From = base.Columns["Code_From"];
                this.columnCode_To = base.Columns["Code_To"];
                this.columnGender = base.Columns["Gender"];
                this.columnReligion = base.Columns["Religion"];
                this.columnNN = base.Columns["NN"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCus_Code = new global::System.Data.DataColumn("Cus_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCus_Code);
                this.columnStatus = new global::System.Data.DataColumn("Status", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatus);
                this.columnCus_Name = new global::System.Data.DataColumn("Cus_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCus_Name);
                this.columnFirstName = new global::System.Data.DataColumn("FirstName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFirstName);
                this.columnSecondName = new global::System.Data.DataColumn("SecondName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSecondName);
                this.columnAddress1 = new global::System.Data.DataColumn("Address1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress1);
                this.columnAddress2 = new global::System.Data.DataColumn("Address2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress2);
                this.columnAddress3 = new global::System.Data.DataColumn("Address3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress3);
                this.columnAddress4 = new global::System.Data.DataColumn("Address4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress4);
                this.columnAddress5 = new global::System.Data.DataColumn("Address5", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress5);
                this.columnPhoneNo = new global::System.Data.DataColumn("PhoneNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhoneNo);
                this.columnFax = new global::System.Data.DataColumn("Fax", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFax);
                this.columnOfficePhone = new global::System.Data.DataColumn("OfficePhone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOfficePhone);
                this.columnOther = new global::System.Data.DataColumn("Other", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOther);
                this.columnMobile = new global::System.Data.DataColumn("Mobile", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMobile);
                this.columnContactPersion = new global::System.Data.DataColumn("ContactPersion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContactPersion);
                this.columnE_mail = new global::System.Data.DataColumn("E_mail", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnE_mail);
                this.columnWeb = new global::System.Data.DataColumn("Web", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWeb);
                this.columnNICNumber = new global::System.Data.DataColumn("NICNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNICNumber);
                this.columnBirthday = new global::System.Data.DataColumn("Birthday", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBirthday);
                this.columnCus_Type = new global::System.Data.DataColumn("Cus_Type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCus_Type);
                this.columnReferance = new global::System.Data.DataColumn("Referance", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReferance);
                this.columnInsertDate = new global::System.Data.DataColumn("InsertDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertDate);
                this.columnModDate = new global::System.Data.DataColumn("ModDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModDate);
                this.columnInsertUser = new global::System.Data.DataColumn("InsertUser", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertUser);
                this.columnModUser = new global::System.Data.DataColumn("ModUser", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModUser);
                this.columnInactive = new global::System.Data.DataColumn("Inactive", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInactive);
                this.columnInactiveDate = new global::System.Data.DataColumn("InactiveDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInactiveDate);
                this.columnWorkshop = new global::System.Data.DataColumn("Workshop", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWorkshop);
                this.columnAge = new global::System.Data.DataColumn("Age", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAge);
                this.columnWesak = new global::System.Data.DataColumn("Wesak", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWesak);
                this.columnNewYear = new global::System.Data.DataColumn("NewYear", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNewYear);
                this.columnDontBCard = new global::System.Data.DataColumn("DontBCard", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDontBCard);
                this.columnAbrod = new global::System.Data.DataColumn("Abrod", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAbrod);
                this.columnNextVisitDate = new global::System.Data.DataColumn("NextVisitDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNextVisitDate);
                this.columnBalance = new global::System.Data.DataColumn("Balance", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBalance);
                this.columnFestival = new global::System.Data.DataColumn("Festival", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFestival);
                this.columnNameOfSpouse = new global::System.Data.DataColumn("NameOfSpouse", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNameOfSpouse);
                this.columnCard_No = new global::System.Data.DataColumn("Card_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCard_No);
                this.columnMonthly_Balance = new global::System.Data.DataColumn("Monthly_Balance", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMonthly_Balance);
                this.columnCardIssuedDate = new global::System.Data.DataColumn("CardIssuedDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCardIssuedDate);
                this.columnOccupation = new global::System.Data.DataColumn("Occupation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOccupation);
                this.columnMaritalStatus = new global::System.Data.DataColumn("MaritalStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaritalStatus);
                this.columnSpouseBirthDay = new global::System.Data.DataColumn("SpouseBirthDay", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpouseBirthDay);
                this.columnDiscount = new global::System.Data.DataColumn("Discount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiscount);
                this.columnGroup_Code = new global::System.Data.DataColumn("Group_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGroup_Code);
                this.columnGroup_Name = new global::System.Data.DataColumn("Group_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGroup_Name);
                this.columnSubGroup_Code = new global::System.Data.DataColumn("SubGroup_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubGroup_Code);
                this.columnSubGroup_Name = new global::System.Data.DataColumn("SubGroup_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubGroup_Name);
                this.columnAnniversary = new global::System.Data.DataColumn("Anniversary", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAnniversary);
                this.columnLoca = new global::System.Data.DataColumn("Loca", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoca);
                this.columnLocaName = new global::System.Data.DataColumn("LocaName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocaName);
                this.columnCust_Category = new global::System.Data.DataColumn("Cust_Category", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCust_Category);
                this.columnPoint_Rate = new global::System.Data.DataColumn("Point_Rate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPoint_Rate);
                this.columnCode_From = new global::System.Data.DataColumn("Code_From", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCode_From);
                this.columnCode_To = new global::System.Data.DataColumn("Code_To", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCode_To);
                this.columnGender = new global::System.Data.DataColumn("Gender", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGender);
                this.columnReligion = new global::System.Data.DataColumn("Religion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReligion);
                this.columnNN = new global::System.Data.DataColumn("NN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNN);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCus_Code}, true));
                this.columnCus_Code.AllowDBNull = false;
                this.columnCus_Code.Unique = true;
                this.columnCus_Code.MaxLength = 20;
                this.columnStatus.AllowDBNull = false;
                this.columnStatus.MaxLength = 10;
                this.columnCus_Name.AllowDBNull = false;
                this.columnCus_Name.MaxLength = 70;
                this.columnFirstName.MaxLength = 50;
                this.columnSecondName.MaxLength = 50;
                this.columnAddress1.MaxLength = 200;
                this.columnAddress2.MaxLength = 200;
                this.columnAddress3.MaxLength = 200;
                this.columnAddress4.MaxLength = 200;
                this.columnAddress5.MaxLength = 200;
                this.columnPhoneNo.MaxLength = 30;
                this.columnFax.AllowDBNull = false;
                this.columnFax.MaxLength = 30;
                this.columnOfficePhone.MaxLength = 30;
                this.columnOther.AllowDBNull = false;
                this.columnOther.MaxLength = 100;
                this.columnMobile.MaxLength = 100;
                this.columnContactPersion.MaxLength = 200;
                this.columnE_mail.MaxLength = 200;
                this.columnWeb.AllowDBNull = false;
                this.columnWeb.MaxLength = 200;
                this.columnNICNumber.AllowDBNull = false;
                this.columnNICNumber.MaxLength = 30;
                this.columnBirthday.MaxLength = 15;
                this.columnCus_Type.AllowDBNull = false;
                this.columnCus_Type.MaxLength = 30;
                this.columnReferance.MaxLength = 200;
                this.columnModDate.AllowDBNull = false;
                this.columnInsertUser.AllowDBNull = false;
                this.columnInsertUser.MaxLength = 20;
                this.columnModUser.AllowDBNull = false;
                this.columnModUser.MaxLength = 20;
                this.columnInactive.AllowDBNull = false;
                this.columnInactiveDate.MaxLength = 50;
                this.columnAge.AllowDBNull = false;
                this.columnAge.MaxLength = 10;
                this.columnBalance.AllowDBNull = false;
                this.columnFestival.AllowDBNull = false;
                this.columnFestival.MaxLength = 50;
                this.columnNameOfSpouse.MaxLength = 100;
                this.columnCard_No.MaxLength = 50;
                this.columnCardIssuedDate.MaxLength = 20;
                this.columnOccupation.MaxLength = 50;
                this.columnMaritalStatus.MaxLength = 50;
                this.columnSpouseBirthDay.MaxLength = 20;
                this.columnDiscount.AllowDBNull = false;
                this.columnGroup_Code.AllowDBNull = false;
                this.columnGroup_Code.MaxLength = 20;
                this.columnGroup_Name.AllowDBNull = false;
                this.columnGroup_Name.MaxLength = 50;
                this.columnSubGroup_Code.MaxLength = 20;
                this.columnSubGroup_Name.MaxLength = 50;
                this.columnAnniversary.MaxLength = 20;
                this.columnLoca.MaxLength = 20;
                this.columnLocaName.MaxLength = 50;
                this.columnCust_Category.AllowDBNull = false;
                this.columnCust_Category.MaxLength = 50;
                this.columnPoint_Rate.AllowDBNull = false;
                this.columnPoint_Rate.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CRM_CustomerRow NewCRM_CustomerRow() {
                return ((CRM_CustomerRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CRM_CustomerRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(CRM_CustomerRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CRM_CustomerRowChanged != null)) {
                    this.CRM_CustomerRowChanged(this, new CRM_CustomerRowChangeEvent(((CRM_CustomerRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CRM_CustomerRowChanging != null)) {
                    this.CRM_CustomerRowChanging(this, new CRM_CustomerRowChangeEvent(((CRM_CustomerRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CRM_CustomerRowDeleted != null)) {
                    this.CRM_CustomerRowDeleted(this, new CRM_CustomerRowChangeEvent(((CRM_CustomerRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CRM_CustomerRowDeleting != null)) {
                    this.CRM_CustomerRowDeleting(this, new CRM_CustomerRowChangeEvent(((CRM_CustomerRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCRM_CustomerRow(CRM_CustomerRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CRM_CustomerDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dtOGFUploadDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnReceiptDate;
            
            private global::System.Data.DataColumn columnReceiptTime;
            
            private global::System.Data.DataColumn columnReceiptNo;
            
            private global::System.Data.DataColumn columnNoOfItems;
            
            private global::System.Data.DataColumn columnSalesCurrency;
            
            private global::System.Data.DataColumn columnTotalSalesAmtB4Tax;
            
            private global::System.Data.DataColumn columnTotalSalesAmtAfterTax;
            
            private global::System.Data.DataColumn columnSalesTaxRate;
            
            private global::System.Data.DataColumn columnServiceChargeAmt;
            
            private global::System.Data.DataColumn columnPaymentAmt;
            
            private global::System.Data.DataColumn columnPaymentCurrency;
            
            private global::System.Data.DataColumn columnPaymentMethod;
            
            private global::System.Data.DataColumn columnSalesType;
            
            private global::System.Data.DataColumn columnState;
            
            private global::System.Data.DataColumn columnDateFrom;
            
            private global::System.Data.DataColumn columnDateTo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtOGFUploadDataTable() {
                this.TableName = "dtOGFUpload";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtOGFUploadDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dtOGFUploadDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReceiptDateColumn {
                get {
                    return this.columnReceiptDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReceiptTimeColumn {
                get {
                    return this.columnReceiptTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReceiptNoColumn {
                get {
                    return this.columnReceiptNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NoOfItemsColumn {
                get {
                    return this.columnNoOfItems;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesCurrencyColumn {
                get {
                    return this.columnSalesCurrency;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalSalesAmtB4TaxColumn {
                get {
                    return this.columnTotalSalesAmtB4Tax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalSalesAmtAfterTaxColumn {
                get {
                    return this.columnTotalSalesAmtAfterTax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesTaxRateColumn {
                get {
                    return this.columnSalesTaxRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ServiceChargeAmtColumn {
                get {
                    return this.columnServiceChargeAmt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PaymentAmtColumn {
                get {
                    return this.columnPaymentAmt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PaymentCurrencyColumn {
                get {
                    return this.columnPaymentCurrency;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PaymentMethodColumn {
                get {
                    return this.columnPaymentMethod;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesTypeColumn {
                get {
                    return this.columnSalesType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StateColumn {
                get {
                    return this.columnState;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateFromColumn {
                get {
                    return this.columnDateFrom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateToColumn {
                get {
                    return this.columnDateTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtOGFUploadRow this[int index] {
                get {
                    return ((dtOGFUploadRow)(this.Rows[index]));
                }
            }
            
            public event dtOGFUploadRowChangeEventHandler dtOGFUploadRowChanging;
            
            public event dtOGFUploadRowChangeEventHandler dtOGFUploadRowChanged;
            
            public event dtOGFUploadRowChangeEventHandler dtOGFUploadRowDeleting;
            
            public event dtOGFUploadRowChangeEventHandler dtOGFUploadRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddtOGFUploadRow(dtOGFUploadRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtOGFUploadRow AdddtOGFUploadRow(
                        string ReceiptDate, 
                        string ReceiptTime, 
                        string ReceiptNo, 
                        int NoOfItems, 
                        string SalesCurrency, 
                        decimal TotalSalesAmtB4Tax, 
                        decimal TotalSalesAmtAfterTax, 
                        decimal SalesTaxRate, 
                        decimal ServiceChargeAmt, 
                        decimal PaymentAmt, 
                        string PaymentCurrency, 
                        string PaymentMethod, 
                        string SalesType, 
                        string State, 
                        string DateFrom, 
                        string DateTo) {
                dtOGFUploadRow rowdtOGFUploadRow = ((dtOGFUploadRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ReceiptDate,
                        ReceiptTime,
                        ReceiptNo,
                        NoOfItems,
                        SalesCurrency,
                        TotalSalesAmtB4Tax,
                        TotalSalesAmtAfterTax,
                        SalesTaxRate,
                        ServiceChargeAmt,
                        PaymentAmt,
                        PaymentCurrency,
                        PaymentMethod,
                        SalesType,
                        State,
                        DateFrom,
                        DateTo};
                rowdtOGFUploadRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdtOGFUploadRow);
                return rowdtOGFUploadRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dtOGFUploadDataTable cln = ((dtOGFUploadDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dtOGFUploadDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnReceiptDate = base.Columns["ReceiptDate"];
                this.columnReceiptTime = base.Columns["ReceiptTime"];
                this.columnReceiptNo = base.Columns["ReceiptNo"];
                this.columnNoOfItems = base.Columns["NoOfItems"];
                this.columnSalesCurrency = base.Columns["SalesCurrency"];
                this.columnTotalSalesAmtB4Tax = base.Columns["TotalSalesAmtB4Tax"];
                this.columnTotalSalesAmtAfterTax = base.Columns["TotalSalesAmtAfterTax"];
                this.columnSalesTaxRate = base.Columns["SalesTaxRate"];
                this.columnServiceChargeAmt = base.Columns["ServiceChargeAmt"];
                this.columnPaymentAmt = base.Columns["PaymentAmt"];
                this.columnPaymentCurrency = base.Columns["PaymentCurrency"];
                this.columnPaymentMethod = base.Columns["PaymentMethod"];
                this.columnSalesType = base.Columns["SalesType"];
                this.columnState = base.Columns["State"];
                this.columnDateFrom = base.Columns["DateFrom"];
                this.columnDateTo = base.Columns["DateTo"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnReceiptDate = new global::System.Data.DataColumn("ReceiptDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReceiptDate);
                this.columnReceiptTime = new global::System.Data.DataColumn("ReceiptTime", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReceiptTime);
                this.columnReceiptNo = new global::System.Data.DataColumn("ReceiptNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReceiptNo);
                this.columnNoOfItems = new global::System.Data.DataColumn("NoOfItems", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNoOfItems);
                this.columnSalesCurrency = new global::System.Data.DataColumn("SalesCurrency", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesCurrency);
                this.columnTotalSalesAmtB4Tax = new global::System.Data.DataColumn("TotalSalesAmtB4Tax", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalSalesAmtB4Tax);
                this.columnTotalSalesAmtAfterTax = new global::System.Data.DataColumn("TotalSalesAmtAfterTax", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalSalesAmtAfterTax);
                this.columnSalesTaxRate = new global::System.Data.DataColumn("SalesTaxRate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesTaxRate);
                this.columnServiceChargeAmt = new global::System.Data.DataColumn("ServiceChargeAmt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnServiceChargeAmt);
                this.columnPaymentAmt = new global::System.Data.DataColumn("PaymentAmt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaymentAmt);
                this.columnPaymentCurrency = new global::System.Data.DataColumn("PaymentCurrency", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaymentCurrency);
                this.columnPaymentMethod = new global::System.Data.DataColumn("PaymentMethod", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaymentMethod);
                this.columnSalesType = new global::System.Data.DataColumn("SalesType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesType);
                this.columnState = new global::System.Data.DataColumn("State", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnState);
                this.columnDateFrom = new global::System.Data.DataColumn("DateFrom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateFrom);
                this.columnDateTo = new global::System.Data.DataColumn("DateTo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateTo);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtOGFUploadRow NewdtOGFUploadRow() {
                return ((dtOGFUploadRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dtOGFUploadRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dtOGFUploadRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dtOGFUploadRowChanged != null)) {
                    this.dtOGFUploadRowChanged(this, new dtOGFUploadRowChangeEvent(((dtOGFUploadRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dtOGFUploadRowChanging != null)) {
                    this.dtOGFUploadRowChanging(this, new dtOGFUploadRowChangeEvent(((dtOGFUploadRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dtOGFUploadRowDeleted != null)) {
                    this.dtOGFUploadRowDeleted(this, new dtOGFUploadRowChangeEvent(((dtOGFUploadRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dtOGFUploadRowDeleting != null)) {
                    this.dtOGFUploadRowDeleting(this, new dtOGFUploadRowChangeEvent(((dtOGFUploadRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedtOGFUploadRow(dtOGFUploadRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dtOGFUploadDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CustomerDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnLoca;
            
            private global::System.Data.DataColumn columnSelect;
            
            private global::System.Data.DataColumn columnSuccess;
            
            private global::System.Data.DataColumn columnCus_Code;
            
            private global::System.Data.DataColumn columnCus_Name;
            
            private global::System.Data.DataColumn columnAddress;
            
            private global::System.Data.DataColumn columnMobile;
            
            private global::System.Data.DataColumn columnDateFrom;
            
            private global::System.Data.DataColumn columnDateTo;
            
            private global::System.Data.DataColumn columnBirthday;
            
            private global::System.Data.DataColumn columnAge;
            
            private global::System.Data.DataColumn columnDate;
            
            private global::System.Data.DataColumn columnNIC;
            
            private global::System.Data.DataColumn columnCard_No;
            
            private global::System.Data.DataColumn columnRegDate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerDataTable() {
                this.TableName = "Customer";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CustomerDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CustomerDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LocaColumn {
                get {
                    return this.columnLoca;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SelectColumn {
                get {
                    return this.columnSelect;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SuccessColumn {
                get {
                    return this.columnSuccess;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cus_CodeColumn {
                get {
                    return this.columnCus_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cus_NameColumn {
                get {
                    return this.columnCus_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AddressColumn {
                get {
                    return this.columnAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MobileColumn {
                get {
                    return this.columnMobile;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateFromColumn {
                get {
                    return this.columnDateFrom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateToColumn {
                get {
                    return this.columnDateTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BirthdayColumn {
                get {
                    return this.columnBirthday;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AgeColumn {
                get {
                    return this.columnAge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateColumn {
                get {
                    return this.columnDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NICColumn {
                get {
                    return this.columnNIC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Card_NoColumn {
                get {
                    return this.columnCard_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RegDateColumn {
                get {
                    return this.columnRegDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerRow this[int index] {
                get {
                    return ((CustomerRow)(this.Rows[index]));
                }
            }
            
            public event CustomerRowChangeEventHandler CustomerRowChanging;
            
            public event CustomerRowChangeEventHandler CustomerRowChanged;
            
            public event CustomerRowChangeEventHandler CustomerRowDeleting;
            
            public event CustomerRowChangeEventHandler CustomerRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCustomerRow(CustomerRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerRow AddCustomerRow(string Loca, bool Select, bool Success, string Cus_Code, string Cus_Name, string Address, string Mobile, string DateFrom, string DateTo, System.DateTime Birthday, int Age, string Date, string NIC, string Card_No, string RegDate) {
                CustomerRow rowCustomerRow = ((CustomerRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Loca,
                        Select,
                        Success,
                        Cus_Code,
                        Cus_Name,
                        Address,
                        Mobile,
                        DateFrom,
                        DateTo,
                        Birthday,
                        Age,
                        Date,
                        NIC,
                        Card_No,
                        RegDate};
                rowCustomerRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCustomerRow);
                return rowCustomerRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                CustomerDataTable cln = ((CustomerDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CustomerDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnLoca = base.Columns["Loca"];
                this.columnSelect = base.Columns["Select"];
                this.columnSuccess = base.Columns["Success"];
                this.columnCus_Code = base.Columns["Cus_Code"];
                this.columnCus_Name = base.Columns["Cus_Name"];
                this.columnAddress = base.Columns["Address"];
                this.columnMobile = base.Columns["Mobile"];
                this.columnDateFrom = base.Columns["DateFrom"];
                this.columnDateTo = base.Columns["DateTo"];
                this.columnBirthday = base.Columns["Birthday"];
                this.columnAge = base.Columns["Age"];
                this.columnDate = base.Columns["Date"];
                this.columnNIC = base.Columns["NIC"];
                this.columnCard_No = base.Columns["Card_No"];
                this.columnRegDate = base.Columns["RegDate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnLoca = new global::System.Data.DataColumn("Loca", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoca);
                this.columnSelect = new global::System.Data.DataColumn("Select", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelect);
                this.columnSuccess = new global::System.Data.DataColumn("Success", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSuccess);
                this.columnCus_Code = new global::System.Data.DataColumn("Cus_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCus_Code);
                this.columnCus_Name = new global::System.Data.DataColumn("Cus_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCus_Name);
                this.columnAddress = new global::System.Data.DataColumn("Address", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress);
                this.columnMobile = new global::System.Data.DataColumn("Mobile", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMobile);
                this.columnDateFrom = new global::System.Data.DataColumn("DateFrom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateFrom);
                this.columnDateTo = new global::System.Data.DataColumn("DateTo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateTo);
                this.columnBirthday = new global::System.Data.DataColumn("Birthday", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBirthday);
                this.columnAge = new global::System.Data.DataColumn("Age", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAge);
                this.columnDate = new global::System.Data.DataColumn("Date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDate);
                this.columnNIC = new global::System.Data.DataColumn("NIC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNIC);
                this.columnCard_No = new global::System.Data.DataColumn("Card_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCard_No);
                this.columnRegDate = new global::System.Data.DataColumn("RegDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRegDate);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerRow NewCustomerRow() {
                return ((CustomerRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CustomerRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(CustomerRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CustomerRowChanged != null)) {
                    this.CustomerRowChanged(this, new CustomerRowChangeEvent(((CustomerRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CustomerRowChanging != null)) {
                    this.CustomerRowChanging(this, new CustomerRowChangeEvent(((CustomerRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CustomerRowDeleted != null)) {
                    this.CustomerRowDeleted(this, new CustomerRowChangeEvent(((CustomerRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CustomerRowDeleting != null)) {
                    this.CustomerRowDeleting(this, new CustomerRowChangeEvent(((CustomerRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCustomerRow(CustomerRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CustomerDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DailyDetailsDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnDate;
            
            private global::System.Data.DataColumn columnCustomer;
            
            private global::System.Data.DataColumn columnDoc_No;
            
            private global::System.Data.DataColumn columnDoctor;
            
            private global::System.Data.DataColumn columnProduct;
            
            private global::System.Data.DataColumn columnWorkshopName;
            
            private global::System.Data.DataColumn columnFitting;
            
            private global::System.Data.DataColumn columnLoca;
            
            private global::System.Data.DataColumn columnCard_No;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DailyDetailsDataTable() {
                this.TableName = "DailyDetails";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DailyDetailsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DailyDetailsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateColumn {
                get {
                    return this.columnDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerColumn {
                get {
                    return this.columnCustomer;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Doc_NoColumn {
                get {
                    return this.columnDoc_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DoctorColumn {
                get {
                    return this.columnDoctor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProductColumn {
                get {
                    return this.columnProduct;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WorkshopNameColumn {
                get {
                    return this.columnWorkshopName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FittingColumn {
                get {
                    return this.columnFitting;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LocaColumn {
                get {
                    return this.columnLoca;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Card_NoColumn {
                get {
                    return this.columnCard_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DailyDetailsRow this[int index] {
                get {
                    return ((DailyDetailsRow)(this.Rows[index]));
                }
            }
            
            public event DailyDetailsRowChangeEventHandler DailyDetailsRowChanging;
            
            public event DailyDetailsRowChangeEventHandler DailyDetailsRowChanged;
            
            public event DailyDetailsRowChangeEventHandler DailyDetailsRowDeleting;
            
            public event DailyDetailsRowChangeEventHandler DailyDetailsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDailyDetailsRow(DailyDetailsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DailyDetailsRow AddDailyDetailsRow(string Date, string Customer, string Doc_No, string Doctor, string Product, string WorkshopName, bool Fitting, string Loca, string Card_No) {
                DailyDetailsRow rowDailyDetailsRow = ((DailyDetailsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Date,
                        Customer,
                        Doc_No,
                        Doctor,
                        Product,
                        WorkshopName,
                        Fitting,
                        Loca,
                        Card_No};
                rowDailyDetailsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDailyDetailsRow);
                return rowDailyDetailsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                DailyDetailsDataTable cln = ((DailyDetailsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DailyDetailsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDate = base.Columns["Date"];
                this.columnCustomer = base.Columns["Customer"];
                this.columnDoc_No = base.Columns["Doc_No"];
                this.columnDoctor = base.Columns["Doctor"];
                this.columnProduct = base.Columns["Product"];
                this.columnWorkshopName = base.Columns["WorkshopName"];
                this.columnFitting = base.Columns["Fitting"];
                this.columnLoca = base.Columns["Loca"];
                this.columnCard_No = base.Columns["Card_No"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDate = new global::System.Data.DataColumn("Date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDate);
                this.columnCustomer = new global::System.Data.DataColumn("Customer", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomer);
                this.columnDoc_No = new global::System.Data.DataColumn("Doc_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDoc_No);
                this.columnDoctor = new global::System.Data.DataColumn("Doctor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDoctor);
                this.columnProduct = new global::System.Data.DataColumn("Product", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProduct);
                this.columnWorkshopName = new global::System.Data.DataColumn("WorkshopName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWorkshopName);
                this.columnFitting = new global::System.Data.DataColumn("Fitting", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFitting);
                this.columnLoca = new global::System.Data.DataColumn("Loca", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoca);
                this.columnCard_No = new global::System.Data.DataColumn("Card_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCard_No);
                this.columnDate.ReadOnly = true;
                this.columnDate.MaxLength = 30;
                this.columnCustomer.ReadOnly = true;
                this.columnCustomer.MaxLength = 93;
                this.columnDoc_No.AllowDBNull = false;
                this.columnDoc_No.MaxLength = 15;
                this.columnDoctor.AllowDBNull = false;
                this.columnDoctor.MaxLength = 70;
                this.columnProduct.ReadOnly = true;
                this.columnProduct.MaxLength = 93;
                this.columnWorkshopName.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DailyDetailsRow NewDailyDetailsRow() {
                return ((DailyDetailsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DailyDetailsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(DailyDetailsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DailyDetailsRowChanged != null)) {
                    this.DailyDetailsRowChanged(this, new DailyDetailsRowChangeEvent(((DailyDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DailyDetailsRowChanging != null)) {
                    this.DailyDetailsRowChanging(this, new DailyDetailsRowChangeEvent(((DailyDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DailyDetailsRowDeleted != null)) {
                    this.DailyDetailsRowDeleted(this, new DailyDetailsRowChangeEvent(((DailyDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DailyDetailsRowDeleting != null)) {
                    this.DailyDetailsRowDeleting(this, new DailyDetailsRowChangeEvent(((DailyDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDailyDetailsRow(DailyDetailsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DailyDetailsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Statement1DataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnCust_Code;
            
            private global::System.Data.DataColumn columnReceipt;
            
            private global::System.Data.DataColumn columnBillDate;
            
            private global::System.Data.DataColumn columnBillAmount;
            
            private global::System.Data.DataColumn columnEarn;
            
            private global::System.Data.DataColumn columnRedeem;
            
            private global::System.Data.DataColumn columnER;
            
            private global::System.Data.DataColumn columnUnit;
            
            private global::System.Data.DataColumn columnLoca;
            
            private global::System.Data.DataColumn columnLocaName;
            
            private global::System.Data.DataColumn columnCus_Name;
            
            private global::System.Data.DataColumn columnLocation;
            
            private global::System.Data.DataColumn columnDateFrom;
            
            private global::System.Data.DataColumn columnDateTo;
            
            private global::System.Data.DataColumn columnProd_Code;
            
            private global::System.Data.DataColumn columnProd_Name;
            
            private global::System.Data.DataColumn columnQty;
            
            private global::System.Data.DataColumn columnReceipt_No;
            
            private global::System.Data.DataColumn columnReportDate;
            
            private global::System.Data.DataColumn columnAmount;
            
            private global::System.Data.DataColumn columnSelling;
            
            private global::System.Data.DataColumn columnBFBalance;
            
            private global::System.Data.DataColumn columnBalPoints;
            
            private global::System.Data.DataColumn columnCard_No;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Statement1DataTable() {
                this.TableName = "Statement1";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Statement1DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected Statement1DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cust_CodeColumn {
                get {
                    return this.columnCust_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReceiptColumn {
                get {
                    return this.columnReceipt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BillDateColumn {
                get {
                    return this.columnBillDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BillAmountColumn {
                get {
                    return this.columnBillAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EarnColumn {
                get {
                    return this.columnEarn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RedeemColumn {
                get {
                    return this.columnRedeem;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ERColumn {
                get {
                    return this.columnER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UnitColumn {
                get {
                    return this.columnUnit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LocaColumn {
                get {
                    return this.columnLoca;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LocaNameColumn {
                get {
                    return this.columnLocaName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cus_NameColumn {
                get {
                    return this.columnCus_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LocationColumn {
                get {
                    return this.columnLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateFromColumn {
                get {
                    return this.columnDateFrom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateToColumn {
                get {
                    return this.columnDateTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Prod_CodeColumn {
                get {
                    return this.columnProd_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Prod_NameColumn {
                get {
                    return this.columnProd_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QtyColumn {
                get {
                    return this.columnQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Receipt_NoColumn {
                get {
                    return this.columnReceipt_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReportDateColumn {
                get {
                    return this.columnReportDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SellingColumn {
                get {
                    return this.columnSelling;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BFBalanceColumn {
                get {
                    return this.columnBFBalance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BalPointsColumn {
                get {
                    return this.columnBalPoints;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Card_NoColumn {
                get {
                    return this.columnCard_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Statement1Row this[int index] {
                get {
                    return ((Statement1Row)(this.Rows[index]));
                }
            }
            
            public event Statement1RowChangeEventHandler Statement1RowChanging;
            
            public event Statement1RowChangeEventHandler Statement1RowChanged;
            
            public event Statement1RowChangeEventHandler Statement1RowDeleting;
            
            public event Statement1RowChangeEventHandler Statement1RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddStatement1Row(Statement1Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Statement1Row AddStatement1Row(
                        string Cust_Code, 
                        string Receipt, 
                        System.DateTime BillDate, 
                        decimal BillAmount, 
                        decimal Earn, 
                        decimal Redeem, 
                        string ER, 
                        string Unit, 
                        string Loca, 
                        string LocaName, 
                        string Cus_Name, 
                        string Location, 
                        System.DateTime DateFrom, 
                        System.DateTime DateTo, 
                        string Prod_Code, 
                        string Prod_Name, 
                        decimal Qty, 
                        string Receipt_No, 
                        string ReportDate, 
                        decimal Amount, 
                        decimal Selling, 
                        decimal BFBalance, 
                        decimal BalPoints, 
                        string Card_No) {
                Statement1Row rowStatement1Row = ((Statement1Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Cust_Code,
                        Receipt,
                        BillDate,
                        BillAmount,
                        Earn,
                        Redeem,
                        ER,
                        Unit,
                        Loca,
                        LocaName,
                        Cus_Name,
                        Location,
                        DateFrom,
                        DateTo,
                        Prod_Code,
                        Prod_Name,
                        Qty,
                        Receipt_No,
                        ReportDate,
                        Amount,
                        Selling,
                        BFBalance,
                        BalPoints,
                        Card_No};
                rowStatement1Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowStatement1Row);
                return rowStatement1Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                Statement1DataTable cln = ((Statement1DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Statement1DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCust_Code = base.Columns["Cust_Code"];
                this.columnReceipt = base.Columns["Receipt"];
                this.columnBillDate = base.Columns["BillDate"];
                this.columnBillAmount = base.Columns["BillAmount"];
                this.columnEarn = base.Columns["Earn"];
                this.columnRedeem = base.Columns["Redeem"];
                this.columnER = base.Columns["ER"];
                this.columnUnit = base.Columns["Unit"];
                this.columnLoca = base.Columns["Loca"];
                this.columnLocaName = base.Columns["LocaName"];
                this.columnCus_Name = base.Columns["Cus_Name"];
                this.columnLocation = base.Columns["Location"];
                this.columnDateFrom = base.Columns["DateFrom"];
                this.columnDateTo = base.Columns["DateTo"];
                this.columnProd_Code = base.Columns["Prod_Code"];
                this.columnProd_Name = base.Columns["Prod_Name"];
                this.columnQty = base.Columns["Qty"];
                this.columnReceipt_No = base.Columns["Receipt_No"];
                this.columnReportDate = base.Columns["ReportDate"];
                this.columnAmount = base.Columns["Amount"];
                this.columnSelling = base.Columns["Selling"];
                this.columnBFBalance = base.Columns["BFBalance"];
                this.columnBalPoints = base.Columns["BalPoints"];
                this.columnCard_No = base.Columns["Card_No"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCust_Code = new global::System.Data.DataColumn("Cust_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCust_Code);
                this.columnReceipt = new global::System.Data.DataColumn("Receipt", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReceipt);
                this.columnBillDate = new global::System.Data.DataColumn("BillDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBillDate);
                this.columnBillAmount = new global::System.Data.DataColumn("BillAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBillAmount);
                this.columnEarn = new global::System.Data.DataColumn("Earn", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEarn);
                this.columnRedeem = new global::System.Data.DataColumn("Redeem", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRedeem);
                this.columnER = new global::System.Data.DataColumn("ER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnER);
                this.columnUnit = new global::System.Data.DataColumn("Unit", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnit);
                this.columnLoca = new global::System.Data.DataColumn("Loca", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoca);
                this.columnLocaName = new global::System.Data.DataColumn("LocaName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocaName);
                this.columnCus_Name = new global::System.Data.DataColumn("Cus_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCus_Name);
                this.columnLocation = new global::System.Data.DataColumn("Location", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocation);
                this.columnDateFrom = new global::System.Data.DataColumn("DateFrom", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateFrom);
                this.columnDateTo = new global::System.Data.DataColumn("DateTo", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateTo);
                this.columnProd_Code = new global::System.Data.DataColumn("Prod_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Code);
                this.columnProd_Name = new global::System.Data.DataColumn("Prod_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Name);
                this.columnQty = new global::System.Data.DataColumn("Qty", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQty);
                this.columnReceipt_No = new global::System.Data.DataColumn("Receipt_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReceipt_No);
                this.columnReportDate = new global::System.Data.DataColumn("ReportDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReportDate);
                this.columnAmount = new global::System.Data.DataColumn("Amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
                this.columnSelling = new global::System.Data.DataColumn("Selling", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelling);
                this.columnBFBalance = new global::System.Data.DataColumn("BFBalance", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBFBalance);
                this.columnBalPoints = new global::System.Data.DataColumn("BalPoints", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBalPoints);
                this.columnCard_No = new global::System.Data.DataColumn("Card_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCard_No);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Statement1Row NewStatement1Row() {
                return ((Statement1Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Statement1Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(Statement1Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Statement1RowChanged != null)) {
                    this.Statement1RowChanged(this, new Statement1RowChangeEvent(((Statement1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Statement1RowChanging != null)) {
                    this.Statement1RowChanging(this, new Statement1RowChangeEvent(((Statement1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Statement1RowDeleted != null)) {
                    this.Statement1RowDeleted(this, new Statement1RowChangeEvent(((Statement1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Statement1RowDeleting != null)) {
                    this.Statement1RowDeleting(this, new Statement1RowChangeEvent(((Statement1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveStatement1Row(Statement1Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Statement1DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dsIssuedVoucherDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnVoucher_Code;
            
            private global::System.Data.DataColumn columnReceipt_No;
            
            private global::System.Data.DataColumn columnIssued_Date;
            
            private global::System.Data.DataColumn columnAmount;
            
            private global::System.Data.DataColumn columnDateFrom;
            
            private global::System.Data.DataColumn columnDateTo;
            
            private global::System.Data.DataColumn columnLoca;
            
            private global::System.Data.DataColumn columnLoca_Descrip;
            
            private global::System.Data.DataColumn columnGi_Code;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsIssuedVoucherDataTable() {
                this.TableName = "dsIssuedVoucher";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsIssuedVoucherDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dsIssuedVoucherDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Voucher_CodeColumn {
                get {
                    return this.columnVoucher_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Receipt_NoColumn {
                get {
                    return this.columnReceipt_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Issued_DateColumn {
                get {
                    return this.columnIssued_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateFromColumn {
                get {
                    return this.columnDateFrom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateToColumn {
                get {
                    return this.columnDateTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LocaColumn {
                get {
                    return this.columnLoca;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Loca_DescripColumn {
                get {
                    return this.columnLoca_Descrip;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Gi_CodeColumn {
                get {
                    return this.columnGi_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsIssuedVoucherRow this[int index] {
                get {
                    return ((dsIssuedVoucherRow)(this.Rows[index]));
                }
            }
            
            public event dsIssuedVoucherRowChangeEventHandler dsIssuedVoucherRowChanging;
            
            public event dsIssuedVoucherRowChangeEventHandler dsIssuedVoucherRowChanged;
            
            public event dsIssuedVoucherRowChangeEventHandler dsIssuedVoucherRowDeleting;
            
            public event dsIssuedVoucherRowChangeEventHandler dsIssuedVoucherRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddsIssuedVoucherRow(dsIssuedVoucherRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsIssuedVoucherRow AdddsIssuedVoucherRow(string Voucher_Code, string Receipt_No, string Issued_Date, decimal Amount, string DateFrom, string DateTo, string Loca, string Loca_Descrip, decimal Gi_Code) {
                dsIssuedVoucherRow rowdsIssuedVoucherRow = ((dsIssuedVoucherRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Voucher_Code,
                        Receipt_No,
                        Issued_Date,
                        Amount,
                        DateFrom,
                        DateTo,
                        Loca,
                        Loca_Descrip,
                        Gi_Code};
                rowdsIssuedVoucherRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdsIssuedVoucherRow);
                return rowdsIssuedVoucherRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dsIssuedVoucherDataTable cln = ((dsIssuedVoucherDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dsIssuedVoucherDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnVoucher_Code = base.Columns["Voucher_Code"];
                this.columnReceipt_No = base.Columns["Receipt_No"];
                this.columnIssued_Date = base.Columns["Issued_Date"];
                this.columnAmount = base.Columns["Amount"];
                this.columnDateFrom = base.Columns["DateFrom"];
                this.columnDateTo = base.Columns["DateTo"];
                this.columnLoca = base.Columns["Loca"];
                this.columnLoca_Descrip = base.Columns["Loca_Descrip"];
                this.columnGi_Code = base.Columns["Gi_Code"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnVoucher_Code = new global::System.Data.DataColumn("Voucher_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVoucher_Code);
                this.columnReceipt_No = new global::System.Data.DataColumn("Receipt_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReceipt_No);
                this.columnIssued_Date = new global::System.Data.DataColumn("Issued_Date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssued_Date);
                this.columnAmount = new global::System.Data.DataColumn("Amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
                this.columnDateFrom = new global::System.Data.DataColumn("DateFrom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateFrom);
                this.columnDateTo = new global::System.Data.DataColumn("DateTo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateTo);
                this.columnLoca = new global::System.Data.DataColumn("Loca", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoca);
                this.columnLoca_Descrip = new global::System.Data.DataColumn("Loca_Descrip", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoca_Descrip);
                this.columnGi_Code = new global::System.Data.DataColumn("Gi_Code", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGi_Code);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsIssuedVoucherRow NewdsIssuedVoucherRow() {
                return ((dsIssuedVoucherRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dsIssuedVoucherRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dsIssuedVoucherRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dsIssuedVoucherRowChanged != null)) {
                    this.dsIssuedVoucherRowChanged(this, new dsIssuedVoucherRowChangeEvent(((dsIssuedVoucherRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dsIssuedVoucherRowChanging != null)) {
                    this.dsIssuedVoucherRowChanging(this, new dsIssuedVoucherRowChangeEvent(((dsIssuedVoucherRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dsIssuedVoucherRowDeleted != null)) {
                    this.dsIssuedVoucherRowDeleted(this, new dsIssuedVoucherRowChangeEvent(((dsIssuedVoucherRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dsIssuedVoucherRowDeleting != null)) {
                    this.dsIssuedVoucherRowDeleting(this, new dsIssuedVoucherRowChangeEvent(((dsIssuedVoucherRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedsIssuedVoucherRow(dsIssuedVoucherRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dsIssuedVoucherDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dsReceivedVoucherDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnVoucher_Code;
            
            private global::System.Data.DataColumn columnReceipt_No;
            
            private global::System.Data.DataColumn columnReceived_Date;
            
            private global::System.Data.DataColumn columnAmount;
            
            private global::System.Data.DataColumn columnDateFrom;
            
            private global::System.Data.DataColumn columnDateTo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsReceivedVoucherDataTable() {
                this.TableName = "dsReceivedVoucher";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsReceivedVoucherDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dsReceivedVoucherDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Voucher_CodeColumn {
                get {
                    return this.columnVoucher_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Receipt_NoColumn {
                get {
                    return this.columnReceipt_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Received_DateColumn {
                get {
                    return this.columnReceived_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateFromColumn {
                get {
                    return this.columnDateFrom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateToColumn {
                get {
                    return this.columnDateTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsReceivedVoucherRow this[int index] {
                get {
                    return ((dsReceivedVoucherRow)(this.Rows[index]));
                }
            }
            
            public event dsReceivedVoucherRowChangeEventHandler dsReceivedVoucherRowChanging;
            
            public event dsReceivedVoucherRowChangeEventHandler dsReceivedVoucherRowChanged;
            
            public event dsReceivedVoucherRowChangeEventHandler dsReceivedVoucherRowDeleting;
            
            public event dsReceivedVoucherRowChangeEventHandler dsReceivedVoucherRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddsReceivedVoucherRow(dsReceivedVoucherRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsReceivedVoucherRow AdddsReceivedVoucherRow(string Voucher_Code, string Receipt_No, string Received_Date, decimal Amount, string DateFrom, string DateTo) {
                dsReceivedVoucherRow rowdsReceivedVoucherRow = ((dsReceivedVoucherRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Voucher_Code,
                        Receipt_No,
                        Received_Date,
                        Amount,
                        DateFrom,
                        DateTo};
                rowdsReceivedVoucherRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdsReceivedVoucherRow);
                return rowdsReceivedVoucherRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dsReceivedVoucherDataTable cln = ((dsReceivedVoucherDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dsReceivedVoucherDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnVoucher_Code = base.Columns["Voucher_Code"];
                this.columnReceipt_No = base.Columns["Receipt_No"];
                this.columnReceived_Date = base.Columns["Received_Date"];
                this.columnAmount = base.Columns["Amount"];
                this.columnDateFrom = base.Columns["DateFrom"];
                this.columnDateTo = base.Columns["DateTo"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnVoucher_Code = new global::System.Data.DataColumn("Voucher_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVoucher_Code);
                this.columnReceipt_No = new global::System.Data.DataColumn("Receipt_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReceipt_No);
                this.columnReceived_Date = new global::System.Data.DataColumn("Received_Date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReceived_Date);
                this.columnAmount = new global::System.Data.DataColumn("Amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
                this.columnDateFrom = new global::System.Data.DataColumn("DateFrom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateFrom);
                this.columnDateTo = new global::System.Data.DataColumn("DateTo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateTo);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsReceivedVoucherRow NewdsReceivedVoucherRow() {
                return ((dsReceivedVoucherRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dsReceivedVoucherRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dsReceivedVoucherRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dsReceivedVoucherRowChanged != null)) {
                    this.dsReceivedVoucherRowChanged(this, new dsReceivedVoucherRowChangeEvent(((dsReceivedVoucherRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dsReceivedVoucherRowChanging != null)) {
                    this.dsReceivedVoucherRowChanging(this, new dsReceivedVoucherRowChangeEvent(((dsReceivedVoucherRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dsReceivedVoucherRowDeleted != null)) {
                    this.dsReceivedVoucherRowDeleted(this, new dsReceivedVoucherRowChangeEvent(((dsReceivedVoucherRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dsReceivedVoucherRowDeleting != null)) {
                    this.dsReceivedVoucherRowDeleting(this, new dsReceivedVoucherRowChangeEvent(((dsReceivedVoucherRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedsReceivedVoucherRow(dsReceivedVoucherRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dsReceivedVoucherDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dtExpDetailsDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnDoc_No;
            
            private global::System.Data.DataColumn columnLoca;
            
            private global::System.Data.DataColumn columnLoca_Desc;
            
            private global::System.Data.DataColumn columnExp_Code;
            
            private global::System.Data.DataColumn columnExp_Name;
            
            private global::System.Data.DataColumn columnAmount;
            
            private global::System.Data.DataColumn columnMemo;
            
            private global::System.Data.DataColumn columnCreateUser;
            
            private global::System.Data.DataColumn columnDate;
            
            private global::System.Data.DataColumn columnState;
            
            private global::System.Data.DataColumn columnBill_No;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtExpDetailsDataTable() {
                this.TableName = "dtExpDetails";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtExpDetailsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dtExpDetailsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Doc_NoColumn {
                get {
                    return this.columnDoc_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LocaColumn {
                get {
                    return this.columnLoca;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Loca_DescColumn {
                get {
                    return this.columnLoca_Desc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Exp_CodeColumn {
                get {
                    return this.columnExp_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Exp_NameColumn {
                get {
                    return this.columnExp_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MemoColumn {
                get {
                    return this.columnMemo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreateUserColumn {
                get {
                    return this.columnCreateUser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateColumn {
                get {
                    return this.columnDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StateColumn {
                get {
                    return this.columnState;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Bill_NoColumn {
                get {
                    return this.columnBill_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtExpDetailsRow this[int index] {
                get {
                    return ((dtExpDetailsRow)(this.Rows[index]));
                }
            }
            
            public event dtExpDetailsRowChangeEventHandler dtExpDetailsRowChanging;
            
            public event dtExpDetailsRowChangeEventHandler dtExpDetailsRowChanged;
            
            public event dtExpDetailsRowChangeEventHandler dtExpDetailsRowDeleting;
            
            public event dtExpDetailsRowChangeEventHandler dtExpDetailsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddtExpDetailsRow(dtExpDetailsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtExpDetailsRow AdddtExpDetailsRow(string Doc_No, string Loca, string Loca_Desc, string Exp_Code, string Exp_Name, decimal Amount, string Memo, string CreateUser, string Date, string State, string Bill_No) {
                dtExpDetailsRow rowdtExpDetailsRow = ((dtExpDetailsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Doc_No,
                        Loca,
                        Loca_Desc,
                        Exp_Code,
                        Exp_Name,
                        Amount,
                        Memo,
                        CreateUser,
                        Date,
                        State,
                        Bill_No};
                rowdtExpDetailsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdtExpDetailsRow);
                return rowdtExpDetailsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dtExpDetailsDataTable cln = ((dtExpDetailsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dtExpDetailsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDoc_No = base.Columns["Doc_No"];
                this.columnLoca = base.Columns["Loca"];
                this.columnLoca_Desc = base.Columns["Loca_Desc"];
                this.columnExp_Code = base.Columns["Exp_Code"];
                this.columnExp_Name = base.Columns["Exp_Name"];
                this.columnAmount = base.Columns["Amount"];
                this.columnMemo = base.Columns["Memo"];
                this.columnCreateUser = base.Columns["CreateUser"];
                this.columnDate = base.Columns["Date"];
                this.columnState = base.Columns["State"];
                this.columnBill_No = base.Columns["Bill_No"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDoc_No = new global::System.Data.DataColumn("Doc_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDoc_No);
                this.columnLoca = new global::System.Data.DataColumn("Loca", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoca);
                this.columnLoca_Desc = new global::System.Data.DataColumn("Loca_Desc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoca_Desc);
                this.columnExp_Code = new global::System.Data.DataColumn("Exp_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExp_Code);
                this.columnExp_Name = new global::System.Data.DataColumn("Exp_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExp_Name);
                this.columnAmount = new global::System.Data.DataColumn("Amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
                this.columnMemo = new global::System.Data.DataColumn("Memo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMemo);
                this.columnCreateUser = new global::System.Data.DataColumn("CreateUser", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreateUser);
                this.columnDate = new global::System.Data.DataColumn("Date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDate);
                this.columnState = new global::System.Data.DataColumn("State", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnState);
                this.columnBill_No = new global::System.Data.DataColumn("Bill_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBill_No);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtExpDetailsRow NewdtExpDetailsRow() {
                return ((dtExpDetailsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dtExpDetailsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dtExpDetailsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dtExpDetailsRowChanged != null)) {
                    this.dtExpDetailsRowChanged(this, new dtExpDetailsRowChangeEvent(((dtExpDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dtExpDetailsRowChanging != null)) {
                    this.dtExpDetailsRowChanging(this, new dtExpDetailsRowChangeEvent(((dtExpDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dtExpDetailsRowDeleted != null)) {
                    this.dtExpDetailsRowDeleted(this, new dtExpDetailsRowChangeEvent(((dtExpDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dtExpDetailsRowDeleting != null)) {
                    this.dtExpDetailsRowDeleting(this, new dtExpDetailsRowChangeEvent(((dtExpDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedtExpDetailsRow(dtExpDetailsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dtExpDetailsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DayEnd_Pos_TransactionDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnItem_Code;
            
            private global::System.Data.DataColumn columnItem_Descrip;
            
            private global::System.Data.DataColumn columnTr_Type;
            
            private global::System.Data.DataColumn columnIid;
            
            private global::System.Data.DataColumn columnAmount;
            
            private global::System.Data.DataColumn columnReceipt_No;
            
            private global::System.Data.DataColumn columnUnit;
            
            private global::System.Data.DataColumn columnCashier;
            
            private global::System.Data.DataColumn columnDis;
            
            private global::System.Data.DataColumn columnReportDate;
            
            private global::System.Data.DataColumn columnDateFrom;
            
            private global::System.Data.DataColumn columnDateTo;
            
            private global::System.Data.DataColumn columnBillValue;
            
            private global::System.Data.DataColumn columnLoca;
            
            private global::System.Data.DataColumn columnLoca_Descrip;
            
            private global::System.Data.DataColumn columnTr_Date;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DayEnd_Pos_TransactionDataTable() {
                this.TableName = "DayEnd_Pos_Transaction";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DayEnd_Pos_TransactionDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DayEnd_Pos_TransactionDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Item_CodeColumn {
                get {
                    return this.columnItem_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Item_DescripColumn {
                get {
                    return this.columnItem_Descrip;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Tr_TypeColumn {
                get {
                    return this.columnTr_Type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IidColumn {
                get {
                    return this.columnIid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Receipt_NoColumn {
                get {
                    return this.columnReceipt_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UnitColumn {
                get {
                    return this.columnUnit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CashierColumn {
                get {
                    return this.columnCashier;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DisColumn {
                get {
                    return this.columnDis;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReportDateColumn {
                get {
                    return this.columnReportDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateFromColumn {
                get {
                    return this.columnDateFrom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateToColumn {
                get {
                    return this.columnDateTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BillValueColumn {
                get {
                    return this.columnBillValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LocaColumn {
                get {
                    return this.columnLoca;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Loca_DescripColumn {
                get {
                    return this.columnLoca_Descrip;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Tr_DateColumn {
                get {
                    return this.columnTr_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DayEnd_Pos_TransactionRow this[int index] {
                get {
                    return ((DayEnd_Pos_TransactionRow)(this.Rows[index]));
                }
            }
            
            public event DayEnd_Pos_TransactionRowChangeEventHandler DayEnd_Pos_TransactionRowChanging;
            
            public event DayEnd_Pos_TransactionRowChangeEventHandler DayEnd_Pos_TransactionRowChanged;
            
            public event DayEnd_Pos_TransactionRowChangeEventHandler DayEnd_Pos_TransactionRowDeleting;
            
            public event DayEnd_Pos_TransactionRowChangeEventHandler DayEnd_Pos_TransactionRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDayEnd_Pos_TransactionRow(DayEnd_Pos_TransactionRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DayEnd_Pos_TransactionRow AddDayEnd_Pos_TransactionRow(
                        string Item_Code, 
                        string Item_Descrip, 
                        string Tr_Type, 
                        string Iid, 
                        decimal Amount, 
                        string Receipt_No, 
                        string Unit, 
                        string Cashier, 
                        string Dis, 
                        string ReportDate, 
                        string DateFrom, 
                        string DateTo, 
                        decimal BillValue, 
                        string Loca, 
                        string Loca_Descrip, 
                        string Tr_Date) {
                DayEnd_Pos_TransactionRow rowDayEnd_Pos_TransactionRow = ((DayEnd_Pos_TransactionRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Item_Code,
                        Item_Descrip,
                        Tr_Type,
                        Iid,
                        Amount,
                        Receipt_No,
                        Unit,
                        Cashier,
                        Dis,
                        ReportDate,
                        DateFrom,
                        DateTo,
                        BillValue,
                        Loca,
                        Loca_Descrip,
                        Tr_Date};
                rowDayEnd_Pos_TransactionRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDayEnd_Pos_TransactionRow);
                return rowDayEnd_Pos_TransactionRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                DayEnd_Pos_TransactionDataTable cln = ((DayEnd_Pos_TransactionDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DayEnd_Pos_TransactionDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnItem_Code = base.Columns["Item_Code"];
                this.columnItem_Descrip = base.Columns["Item_Descrip"];
                this.columnTr_Type = base.Columns["Tr_Type"];
                this.columnIid = base.Columns["Iid"];
                this.columnAmount = base.Columns["Amount"];
                this.columnReceipt_No = base.Columns["Receipt_No"];
                this.columnUnit = base.Columns["Unit"];
                this.columnCashier = base.Columns["Cashier"];
                this.columnDis = base.Columns["Dis"];
                this.columnReportDate = base.Columns["ReportDate"];
                this.columnDateFrom = base.Columns["DateFrom"];
                this.columnDateTo = base.Columns["DateTo"];
                this.columnBillValue = base.Columns["BillValue"];
                this.columnLoca = base.Columns["Loca"];
                this.columnLoca_Descrip = base.Columns["Loca_Descrip"];
                this.columnTr_Date = base.Columns["Tr_Date"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnItem_Code = new global::System.Data.DataColumn("Item_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItem_Code);
                this.columnItem_Descrip = new global::System.Data.DataColumn("Item_Descrip", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItem_Descrip);
                this.columnTr_Type = new global::System.Data.DataColumn("Tr_Type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTr_Type);
                this.columnIid = new global::System.Data.DataColumn("Iid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIid);
                this.columnAmount = new global::System.Data.DataColumn("Amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
                this.columnReceipt_No = new global::System.Data.DataColumn("Receipt_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReceipt_No);
                this.columnUnit = new global::System.Data.DataColumn("Unit", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnit);
                this.columnCashier = new global::System.Data.DataColumn("Cashier", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCashier);
                this.columnDis = new global::System.Data.DataColumn("Dis", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDis);
                this.columnReportDate = new global::System.Data.DataColumn("ReportDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReportDate);
                this.columnDateFrom = new global::System.Data.DataColumn("DateFrom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateFrom);
                this.columnDateTo = new global::System.Data.DataColumn("DateTo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateTo);
                this.columnBillValue = new global::System.Data.DataColumn("BillValue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBillValue);
                this.columnLoca = new global::System.Data.DataColumn("Loca", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoca);
                this.columnLoca_Descrip = new global::System.Data.DataColumn("Loca_Descrip", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoca_Descrip);
                this.columnTr_Date = new global::System.Data.DataColumn("Tr_Date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTr_Date);
                this.columnItem_Code.MaxLength = 20;
                this.columnItem_Descrip.MaxLength = 30;
                this.columnTr_Type.MaxLength = 10;
                this.columnIid.MaxLength = 10;
                this.columnReceipt_No.MaxLength = 10;
                this.columnDis.MaxLength = 50;
                this.columnReportDate.AllowDBNull = false;
                this.columnReportDate.MaxLength = 10;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DayEnd_Pos_TransactionRow NewDayEnd_Pos_TransactionRow() {
                return ((DayEnd_Pos_TransactionRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DayEnd_Pos_TransactionRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(DayEnd_Pos_TransactionRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DayEnd_Pos_TransactionRowChanged != null)) {
                    this.DayEnd_Pos_TransactionRowChanged(this, new DayEnd_Pos_TransactionRowChangeEvent(((DayEnd_Pos_TransactionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DayEnd_Pos_TransactionRowChanging != null)) {
                    this.DayEnd_Pos_TransactionRowChanging(this, new DayEnd_Pos_TransactionRowChangeEvent(((DayEnd_Pos_TransactionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DayEnd_Pos_TransactionRowDeleted != null)) {
                    this.DayEnd_Pos_TransactionRowDeleted(this, new DayEnd_Pos_TransactionRowChangeEvent(((DayEnd_Pos_TransactionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DayEnd_Pos_TransactionRowDeleting != null)) {
                    this.DayEnd_Pos_TransactionRowDeleting(this, new DayEnd_Pos_TransactionRowChangeEvent(((DayEnd_Pos_TransactionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDayEnd_Pos_TransactionRow(DayEnd_Pos_TransactionRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsForReports ds = new dsForReports();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DayEnd_Pos_TransactionDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DepartmentRow : global::System.Data.DataRow {
            
            private DepartmentDataTable tableDepartment;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DepartmentRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDepartment = ((DepartmentDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Dept_Code {
                get {
                    try {
                        return ((string)(this[this.tableDepartment.Dept_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Dept_Code\' in table \'Department\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDepartment.Dept_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Dept_Name {
                get {
                    try {
                        return ((string)(this[this.tableDepartment.Dept_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Dept_Name\' in table \'Department\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDepartment.Dept_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prod_Code {
                get {
                    try {
                        return ((string)(this[this.tableDepartment.Prod_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Prod_Code\' in table \'Department\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDepartment.Prod_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prod_Name {
                get {
                    try {
                        return ((string)(this[this.tableDepartment.Prod_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Prod_Name\' in table \'Department\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDepartment.Prod_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Purchase_price {
                get {
                    try {
                        return ((decimal)(this[this.tableDepartment.Purchase_priceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Purchase_price\' in table \'Department\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDepartment.Purchase_priceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Selling_Price {
                get {
                    try {
                        return ((decimal)(this[this.tableDepartment.Selling_PriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Selling_Price\' in table \'Department\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDepartment.Selling_PriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDept_CodeNull() {
                return this.IsNull(this.tableDepartment.Dept_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDept_CodeNull() {
                this[this.tableDepartment.Dept_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDept_NameNull() {
                return this.IsNull(this.tableDepartment.Dept_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDept_NameNull() {
                this[this.tableDepartment.Dept_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_CodeNull() {
                return this.IsNull(this.tableDepartment.Prod_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_CodeNull() {
                this[this.tableDepartment.Prod_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_NameNull() {
                return this.IsNull(this.tableDepartment.Prod_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_NameNull() {
                this[this.tableDepartment.Prod_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPurchase_priceNull() {
                return this.IsNull(this.tableDepartment.Purchase_priceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPurchase_priceNull() {
                this[this.tableDepartment.Purchase_priceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelling_PriceNull() {
                return this.IsNull(this.tableDepartment.Selling_PriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelling_PriceNull() {
                this[this.tableDepartment.Selling_PriceColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CategoryRow : global::System.Data.DataRow {
            
            private CategoryDataTable tableCategory;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CategoryRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCategory = ((CategoryDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Dept_Code {
                get {
                    try {
                        return ((string)(this[this.tableCategory.Dept_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Dept_Code\' in table \'Category\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCategory.Dept_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Dept_Name {
                get {
                    try {
                        return ((string)(this[this.tableCategory.Dept_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Dept_Name\' in table \'Category\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCategory.Dept_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Cat_Code {
                get {
                    try {
                        return ((string)(this[this.tableCategory.Cat_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cat_Code\' in table \'Category\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCategory.Cat_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Cat_Name {
                get {
                    try {
                        return ((string)(this[this.tableCategory.Cat_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cat_Name\' in table \'Category\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCategory.Cat_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prod_Code {
                get {
                    try {
                        return ((string)(this[this.tableCategory.Prod_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Prod_Code\' in table \'Category\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCategory.Prod_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prod_Name {
                get {
                    try {
                        return ((string)(this[this.tableCategory.Prod_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Prod_Name\' in table \'Category\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCategory.Prod_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Purchase_price {
                get {
                    try {
                        return ((decimal)(this[this.tableCategory.Purchase_priceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Purchase_price\' in table \'Category\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCategory.Purchase_priceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Selling_Price {
                get {
                    try {
                        return ((decimal)(this[this.tableCategory.Selling_PriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Selling_Price\' in table \'Category\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCategory.Selling_PriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDept_CodeNull() {
                return this.IsNull(this.tableCategory.Dept_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDept_CodeNull() {
                this[this.tableCategory.Dept_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDept_NameNull() {
                return this.IsNull(this.tableCategory.Dept_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDept_NameNull() {
                this[this.tableCategory.Dept_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCat_CodeNull() {
                return this.IsNull(this.tableCategory.Cat_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCat_CodeNull() {
                this[this.tableCategory.Cat_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCat_NameNull() {
                return this.IsNull(this.tableCategory.Cat_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCat_NameNull() {
                this[this.tableCategory.Cat_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_CodeNull() {
                return this.IsNull(this.tableCategory.Prod_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_CodeNull() {
                this[this.tableCategory.Prod_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_NameNull() {
                return this.IsNull(this.tableCategory.Prod_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_NameNull() {
                this[this.tableCategory.Prod_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPurchase_priceNull() {
                return this.IsNull(this.tableCategory.Purchase_priceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPurchase_priceNull() {
                this[this.tableCategory.Purchase_priceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelling_PriceNull() {
                return this.IsNull(this.tableCategory.Selling_PriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelling_PriceNull() {
                this[this.tableCategory.Selling_PriceColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class StockAdjustRow : global::System.Data.DataRow {
            
            private StockAdjustDataTable tableStockAdjust;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal StockAdjustRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableStockAdjust = ((StockAdjustDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prod_Code {
                get {
                    try {
                        return ((string)(this[this.tableStockAdjust.Prod_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Prod_Code\' in table \'StockAdjust\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockAdjust.Prod_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prod_Name {
                get {
                    try {
                        return ((string)(this[this.tableStockAdjust.Prod_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Prod_Name\' in table \'StockAdjust\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockAdjust.Prod_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Selling_Price {
                get {
                    try {
                        return ((string)(this[this.tableStockAdjust.Selling_PriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Selling_Price\' in table \'StockAdjust\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockAdjust.Selling_PriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Purchase_price {
                get {
                    try {
                        return ((string)(this[this.tableStockAdjust.Purchase_priceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Purchase_price\' in table \'StockAdjust\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockAdjust.Purchase_priceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Curr_Qty {
                get {
                    try {
                        return ((string)(this[this.tableStockAdjust.Curr_QtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Curr_Qty\' in table \'StockAdjust\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockAdjust.Curr_QtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Phy_Qty {
                get {
                    try {
                        return ((string)(this[this.tableStockAdjust.Phy_QtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Phy_Qty\' in table \'StockAdjust\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockAdjust.Phy_QtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Var_Qty {
                get {
                    try {
                        return ((string)(this[this.tableStockAdjust.Var_QtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Var_Qty\' in table \'StockAdjust\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockAdjust.Var_QtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Doc_No {
                get {
                    try {
                        return ((string)(this[this.tableStockAdjust.Doc_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Doc_No\' in table \'StockAdjust\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockAdjust.Doc_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Loca {
                get {
                    try {
                        return ((string)(this[this.tableStockAdjust.LocaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Loca\' in table \'StockAdjust\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockAdjust.LocaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Pack_Size {
                get {
                    try {
                        return ((string)(this[this.tableStockAdjust.Pack_SizeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Pack_Size\' in table \'StockAdjust\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockAdjust.Pack_SizeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BatchNo {
                get {
                    try {
                        return ((string)(this[this.tableStockAdjust.BatchNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BatchNo\' in table \'StockAdjust\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockAdjust.BatchNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_CodeNull() {
                return this.IsNull(this.tableStockAdjust.Prod_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_CodeNull() {
                this[this.tableStockAdjust.Prod_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_NameNull() {
                return this.IsNull(this.tableStockAdjust.Prod_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_NameNull() {
                this[this.tableStockAdjust.Prod_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelling_PriceNull() {
                return this.IsNull(this.tableStockAdjust.Selling_PriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelling_PriceNull() {
                this[this.tableStockAdjust.Selling_PriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPurchase_priceNull() {
                return this.IsNull(this.tableStockAdjust.Purchase_priceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPurchase_priceNull() {
                this[this.tableStockAdjust.Purchase_priceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCurr_QtyNull() {
                return this.IsNull(this.tableStockAdjust.Curr_QtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCurr_QtyNull() {
                this[this.tableStockAdjust.Curr_QtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPhy_QtyNull() {
                return this.IsNull(this.tableStockAdjust.Phy_QtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPhy_QtyNull() {
                this[this.tableStockAdjust.Phy_QtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVar_QtyNull() {
                return this.IsNull(this.tableStockAdjust.Var_QtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVar_QtyNull() {
                this[this.tableStockAdjust.Var_QtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDoc_NoNull() {
                return this.IsNull(this.tableStockAdjust.Doc_NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDoc_NoNull() {
                this[this.tableStockAdjust.Doc_NoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocaNull() {
                return this.IsNull(this.tableStockAdjust.LocaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocaNull() {
                this[this.tableStockAdjust.LocaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPack_SizeNull() {
                return this.IsNull(this.tableStockAdjust.Pack_SizeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPack_SizeNull() {
                this[this.tableStockAdjust.Pack_SizeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBatchNoNull() {
                return this.IsNull(this.tableStockAdjust.BatchNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBatchNoNull() {
                this[this.tableStockAdjust.BatchNoColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class TransferNoteRow : global::System.Data.DataRow {
            
            private TransferNoteDataTable tableTransferNote;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TransferNoteRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTransferNote = ((TransferNoteDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prod_Code {
                get {
                    try {
                        return ((string)(this[this.tableTransferNote.Prod_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Prod_Code\' in table \'TransferNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTransferNote.Prod_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prod_Name {
                get {
                    try {
                        return ((string)(this[this.tableTransferNote.Prod_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Prod_Name\' in table \'TransferNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTransferNote.Prod_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Selling_Price {
                get {
                    try {
                        return ((string)(this[this.tableTransferNote.Selling_PriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Selling_Price\' in table \'TransferNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTransferNote.Selling_PriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Purchase_price {
                get {
                    try {
                        return ((string)(this[this.tableTransferNote.Purchase_priceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Purchase_price\' in table \'TransferNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTransferNote.Purchase_priceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Pack_Size {
                get {
                    try {
                        return ((string)(this[this.tableTransferNote.Pack_SizeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Pack_Size\' in table \'TransferNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTransferNote.Pack_SizeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Qty {
                get {
                    try {
                        return ((string)(this[this.tableTransferNote.QtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Qty\' in table \'TransferNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTransferNote.QtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Amount {
                get {
                    try {
                        return ((string)(this[this.tableTransferNote.AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Amount\' in table \'TransferNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTransferNote.AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_CodeNull() {
                return this.IsNull(this.tableTransferNote.Prod_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_CodeNull() {
                this[this.tableTransferNote.Prod_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_NameNull() {
                return this.IsNull(this.tableTransferNote.Prod_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_NameNull() {
                this[this.tableTransferNote.Prod_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelling_PriceNull() {
                return this.IsNull(this.tableTransferNote.Selling_PriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelling_PriceNull() {
                this[this.tableTransferNote.Selling_PriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPurchase_priceNull() {
                return this.IsNull(this.tableTransferNote.Purchase_priceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPurchase_priceNull() {
                this[this.tableTransferNote.Purchase_priceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPack_SizeNull() {
                return this.IsNull(this.tableTransferNote.Pack_SizeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPack_SizeNull() {
                this[this.tableTransferNote.Pack_SizeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQtyNull() {
                return this.IsNull(this.tableTransferNote.QtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQtyNull() {
                this[this.tableTransferNote.QtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountNull() {
                return this.IsNull(this.tableTransferNote.AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountNull() {
                this[this.tableTransferNote.AmountColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dsTogDetailsRow : global::System.Data.DataRow {
            
            private dsTogDetailsDataTable tabledsTogDetails;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsTogDetailsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledsTogDetails = ((dsTogDetailsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Doc_No {
                get {
                    try {
                        return ((string)(this[this.tabledsTogDetails.Doc_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Doc_No\' in table \'dsTogDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsTogDetails.Doc_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Loca {
                get {
                    try {
                        return ((string)(this[this.tabledsTogDetails.LocaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Loca\' in table \'dsTogDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsTogDetails.LocaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LocaDesc {
                get {
                    try {
                        return ((string)(this[this.tabledsTogDetails.LocaDescColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LocaDesc\' in table \'dsTogDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsTogDetails.LocaDescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string To_Loca {
                get {
                    try {
                        return ((string)(this[this.tabledsTogDetails.To_LocaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'To_Loca\' in table \'dsTogDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsTogDetails.To_LocaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string To_LocaDesc {
                get {
                    try {
                        return ((string)(this[this.tabledsTogDetails.To_LocaDescColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'To_LocaDesc\' in table \'dsTogDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsTogDetails.To_LocaDescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Post_Date {
                get {
                    try {
                        return ((string)(this[this.tabledsTogDetails.Post_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Post_Date\' in table \'dsTogDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsTogDetails.Post_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Amount {
                get {
                    try {
                        return ((decimal)(this[this.tabledsTogDetails.AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Amount\' in table \'dsTogDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsTogDetails.AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Remarks {
                get {
                    try {
                        return ((string)(this[this.tabledsTogDetails.RemarksColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Remarks\' in table \'dsTogDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsTogDetails.RemarksColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prod_Code {
                get {
                    try {
                        return ((string)(this[this.tabledsTogDetails.Prod_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Prod_Code\' in table \'dsTogDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsTogDetails.Prod_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prod_Name {
                get {
                    try {
                        return ((string)(this[this.tabledsTogDetails.Prod_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Prod_Name\' in table \'dsTogDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsTogDetails.Prod_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Qty {
                get {
                    try {
                        return ((double)(this[this.tabledsTogDetails.QtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Qty\' in table \'dsTogDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsTogDetails.QtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Purchase_Price {
                get {
                    try {
                        return ((decimal)(this[this.tabledsTogDetails.Purchase_PriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Purchase_Price\' in table \'dsTogDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsTogDetails.Purchase_PriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Selling_Price {
                get {
                    try {
                        return ((decimal)(this[this.tabledsTogDetails.Selling_PriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Selling_Price\' in table \'dsTogDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsTogDetails.Selling_PriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short Pack_Size {
                get {
                    try {
                        return ((short)(this[this.tabledsTogDetails.Pack_SizeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Pack_Size\' in table \'dsTogDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsTogDetails.Pack_SizeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Status {
                get {
                    try {
                        return ((string)(this[this.tabledsTogDetails.StatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Status\' in table \'dsTogDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsTogDetails.StatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Unit {
                get {
                    try {
                        return ((string)(this[this.tabledsTogDetails.UnitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Unit\' in table \'dsTogDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsTogDetails.UnitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDoc_NoNull() {
                return this.IsNull(this.tabledsTogDetails.Doc_NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDoc_NoNull() {
                this[this.tabledsTogDetails.Doc_NoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocaNull() {
                return this.IsNull(this.tabledsTogDetails.LocaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocaNull() {
                this[this.tabledsTogDetails.LocaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocaDescNull() {
                return this.IsNull(this.tabledsTogDetails.LocaDescColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocaDescNull() {
                this[this.tabledsTogDetails.LocaDescColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTo_LocaNull() {
                return this.IsNull(this.tabledsTogDetails.To_LocaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTo_LocaNull() {
                this[this.tabledsTogDetails.To_LocaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTo_LocaDescNull() {
                return this.IsNull(this.tabledsTogDetails.To_LocaDescColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTo_LocaDescNull() {
                this[this.tabledsTogDetails.To_LocaDescColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPost_DateNull() {
                return this.IsNull(this.tabledsTogDetails.Post_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPost_DateNull() {
                this[this.tabledsTogDetails.Post_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountNull() {
                return this.IsNull(this.tabledsTogDetails.AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountNull() {
                this[this.tabledsTogDetails.AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRemarksNull() {
                return this.IsNull(this.tabledsTogDetails.RemarksColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRemarksNull() {
                this[this.tabledsTogDetails.RemarksColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_CodeNull() {
                return this.IsNull(this.tabledsTogDetails.Prod_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_CodeNull() {
                this[this.tabledsTogDetails.Prod_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_NameNull() {
                return this.IsNull(this.tabledsTogDetails.Prod_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_NameNull() {
                this[this.tabledsTogDetails.Prod_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQtyNull() {
                return this.IsNull(this.tabledsTogDetails.QtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQtyNull() {
                this[this.tabledsTogDetails.QtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPurchase_PriceNull() {
                return this.IsNull(this.tabledsTogDetails.Purchase_PriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPurchase_PriceNull() {
                this[this.tabledsTogDetails.Purchase_PriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelling_PriceNull() {
                return this.IsNull(this.tabledsTogDetails.Selling_PriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelling_PriceNull() {
                this[this.tabledsTogDetails.Selling_PriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPack_SizeNull() {
                return this.IsNull(this.tabledsTogDetails.Pack_SizeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPack_SizeNull() {
                this[this.tabledsTogDetails.Pack_SizeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStatusNull() {
                return this.IsNull(this.tabledsTogDetails.StatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStatusNull() {
                this[this.tabledsTogDetails.StatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnitNull() {
                return this.IsNull(this.tabledsTogDetails.UnitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnitNull() {
                this[this.tabledsTogDetails.UnitColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dsStockAdjustDetailsRow : global::System.Data.DataRow {
            
            private dsStockAdjustDetailsDataTable tabledsStockAdjustDetails;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsStockAdjustDetailsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledsStockAdjustDetails = ((dsStockAdjustDetailsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Loca {
                get {
                    try {
                        return ((string)(this[this.tabledsStockAdjustDetails.LocaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Loca\' in table \'dsStockAdjustDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsStockAdjustDetails.LocaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Loca_Descrip {
                get {
                    try {
                        return ((string)(this[this.tabledsStockAdjustDetails.Loca_DescripColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Loca_Descrip\' in table \'dsStockAdjustDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsStockAdjustDetails.Loca_DescripColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Doc_No {
                get {
                    try {
                        return ((string)(this[this.tabledsStockAdjustDetails.Doc_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Doc_No\' in table \'dsStockAdjustDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsStockAdjustDetails.Doc_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Post_Date {
                get {
                    try {
                        return ((string)(this[this.tabledsStockAdjustDetails.Post_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Post_Date\' in table \'dsStockAdjustDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsStockAdjustDetails.Post_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string User_Name {
                get {
                    try {
                        return ((string)(this[this.tabledsStockAdjustDetails.User_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'User_Name\' in table \'dsStockAdjustDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsStockAdjustDetails.User_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prod_Code {
                get {
                    try {
                        return ((string)(this[this.tabledsStockAdjustDetails.Prod_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Prod_Code\' in table \'dsStockAdjustDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsStockAdjustDetails.Prod_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prod_Name {
                get {
                    try {
                        return ((string)(this[this.tabledsStockAdjustDetails.Prod_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Prod_Name\' in table \'dsStockAdjustDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsStockAdjustDetails.Prod_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Qty {
                get {
                    try {
                        return ((double)(this[this.tabledsStockAdjustDetails.QtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Qty\' in table \'dsStockAdjustDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsStockAdjustDetails.QtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Phy_Qty {
                get {
                    try {
                        return ((double)(this[this.tabledsStockAdjustDetails.Phy_QtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Phy_Qty\' in table \'dsStockAdjustDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsStockAdjustDetails.Phy_QtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Purchase_Price {
                get {
                    try {
                        return ((string)(this[this.tabledsStockAdjustDetails.Purchase_PriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Purchase_Price\' in table \'dsStockAdjustDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsStockAdjustDetails.Purchase_PriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Selling_Price {
                get {
                    try {
                        return ((string)(this[this.tabledsStockAdjustDetails.Selling_PriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Selling_Price\' in table \'dsStockAdjustDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsStockAdjustDetails.Selling_PriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Pack_Size {
                get {
                    try {
                        return ((string)(this[this.tabledsStockAdjustDetails.Pack_SizeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Pack_Size\' in table \'dsStockAdjustDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsStockAdjustDetails.Pack_SizeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Ln {
                get {
                    try {
                        return ((string)(this[this.tabledsStockAdjustDetails.LnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Ln\' in table \'dsStockAdjustDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsStockAdjustDetails.LnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocaNull() {
                return this.IsNull(this.tabledsStockAdjustDetails.LocaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocaNull() {
                this[this.tabledsStockAdjustDetails.LocaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLoca_DescripNull() {
                return this.IsNull(this.tabledsStockAdjustDetails.Loca_DescripColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLoca_DescripNull() {
                this[this.tabledsStockAdjustDetails.Loca_DescripColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDoc_NoNull() {
                return this.IsNull(this.tabledsStockAdjustDetails.Doc_NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDoc_NoNull() {
                this[this.tabledsStockAdjustDetails.Doc_NoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPost_DateNull() {
                return this.IsNull(this.tabledsStockAdjustDetails.Post_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPost_DateNull() {
                this[this.tabledsStockAdjustDetails.Post_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUser_NameNull() {
                return this.IsNull(this.tabledsStockAdjustDetails.User_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUser_NameNull() {
                this[this.tabledsStockAdjustDetails.User_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_CodeNull() {
                return this.IsNull(this.tabledsStockAdjustDetails.Prod_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_CodeNull() {
                this[this.tabledsStockAdjustDetails.Prod_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_NameNull() {
                return this.IsNull(this.tabledsStockAdjustDetails.Prod_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_NameNull() {
                this[this.tabledsStockAdjustDetails.Prod_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQtyNull() {
                return this.IsNull(this.tabledsStockAdjustDetails.QtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQtyNull() {
                this[this.tabledsStockAdjustDetails.QtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPhy_QtyNull() {
                return this.IsNull(this.tabledsStockAdjustDetails.Phy_QtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPhy_QtyNull() {
                this[this.tabledsStockAdjustDetails.Phy_QtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPurchase_PriceNull() {
                return this.IsNull(this.tabledsStockAdjustDetails.Purchase_PriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPurchase_PriceNull() {
                this[this.tabledsStockAdjustDetails.Purchase_PriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelling_PriceNull() {
                return this.IsNull(this.tabledsStockAdjustDetails.Selling_PriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelling_PriceNull() {
                this[this.tabledsStockAdjustDetails.Selling_PriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPack_SizeNull() {
                return this.IsNull(this.tabledsStockAdjustDetails.Pack_SizeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPack_SizeNull() {
                this[this.tabledsStockAdjustDetails.Pack_SizeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLnNull() {
                return this.IsNull(this.tabledsStockAdjustDetails.LnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLnNull() {
                this[this.tabledsStockAdjustDetails.LnColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class GoodReceivedNoteRow : global::System.Data.DataRow {
            
            private GoodReceivedNoteDataTable tableGoodReceivedNote;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GoodReceivedNoteRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableGoodReceivedNote = ((GoodReceivedNoteDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prod_Code {
                get {
                    try {
                        return ((string)(this[this.tableGoodReceivedNote.Prod_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Prod_Code\' in table \'GoodReceivedNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGoodReceivedNote.Prod_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prod_Name {
                get {
                    try {
                        return ((string)(this[this.tableGoodReceivedNote.Prod_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Prod_Name\' in table \'GoodReceivedNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGoodReceivedNote.Prod_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Unit {
                get {
                    try {
                        return ((string)(this[this.tableGoodReceivedNote.UnitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Unit\' in table \'GoodReceivedNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGoodReceivedNote.UnitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Purchase_Price {
                get {
                    try {
                        return ((string)(this[this.tableGoodReceivedNote.Purchase_PriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Purchase_Price\' in table \'GoodReceivedNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGoodReceivedNote.Purchase_PriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Selling_Price {
                get {
                    try {
                        return ((string)(this[this.tableGoodReceivedNote.Selling_PriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Selling_Price\' in table \'GoodReceivedNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGoodReceivedNote.Selling_PriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Qty {
                get {
                    try {
                        return ((string)(this[this.tableGoodReceivedNote.QtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Qty\' in table \'GoodReceivedNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGoodReceivedNote.QtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FreeQty {
                get {
                    try {
                        return ((string)(this[this.tableGoodReceivedNote.FreeQtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FreeQty\' in table \'GoodReceivedNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGoodReceivedNote.FreeQtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Discount {
                get {
                    try {
                        return ((string)(this[this.tableGoodReceivedNote.DiscountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Discount\' in table \'GoodReceivedNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGoodReceivedNote.DiscountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Amount {
                get {
                    try {
                        return ((string)(this[this.tableGoodReceivedNote.AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Amount\' in table \'GoodReceivedNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGoodReceivedNote.AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Margin {
                get {
                    try {
                        return ((decimal)(this[this.tableGoodReceivedNote.MarginColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Margin\' in table \'GoodReceivedNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGoodReceivedNote.MarginColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Ln {
                get {
                    try {
                        return ((string)(this[this.tableGoodReceivedNote.LnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Ln\' in table \'GoodReceivedNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGoodReceivedNote.LnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ExpDate {
                get {
                    try {
                        return ((string)(this[this.tableGoodReceivedNote.ExpDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExpDate\' in table \'GoodReceivedNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGoodReceivedNote.ExpDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BatchNo {
                get {
                    try {
                        return ((string)(this[this.tableGoodReceivedNote.BatchNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BatchNo\' in table \'GoodReceivedNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGoodReceivedNote.BatchNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VAT {
                get {
                    try {
                        return ((string)(this[this.tableGoodReceivedNote.VATColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VAT\' in table \'GoodReceivedNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGoodReceivedNote.VATColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_CodeNull() {
                return this.IsNull(this.tableGoodReceivedNote.Prod_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_CodeNull() {
                this[this.tableGoodReceivedNote.Prod_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_NameNull() {
                return this.IsNull(this.tableGoodReceivedNote.Prod_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_NameNull() {
                this[this.tableGoodReceivedNote.Prod_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnitNull() {
                return this.IsNull(this.tableGoodReceivedNote.UnitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnitNull() {
                this[this.tableGoodReceivedNote.UnitColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPurchase_PriceNull() {
                return this.IsNull(this.tableGoodReceivedNote.Purchase_PriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPurchase_PriceNull() {
                this[this.tableGoodReceivedNote.Purchase_PriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelling_PriceNull() {
                return this.IsNull(this.tableGoodReceivedNote.Selling_PriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelling_PriceNull() {
                this[this.tableGoodReceivedNote.Selling_PriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQtyNull() {
                return this.IsNull(this.tableGoodReceivedNote.QtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQtyNull() {
                this[this.tableGoodReceivedNote.QtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFreeQtyNull() {
                return this.IsNull(this.tableGoodReceivedNote.FreeQtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFreeQtyNull() {
                this[this.tableGoodReceivedNote.FreeQtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDiscountNull() {
                return this.IsNull(this.tableGoodReceivedNote.DiscountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDiscountNull() {
                this[this.tableGoodReceivedNote.DiscountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountNull() {
                return this.IsNull(this.tableGoodReceivedNote.AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountNull() {
                this[this.tableGoodReceivedNote.AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMarginNull() {
                return this.IsNull(this.tableGoodReceivedNote.MarginColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMarginNull() {
                this[this.tableGoodReceivedNote.MarginColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLnNull() {
                return this.IsNull(this.tableGoodReceivedNote.LnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLnNull() {
                this[this.tableGoodReceivedNote.LnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExpDateNull() {
                return this.IsNull(this.tableGoodReceivedNote.ExpDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExpDateNull() {
                this[this.tableGoodReceivedNote.ExpDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBatchNoNull() {
                return this.IsNull(this.tableGoodReceivedNote.BatchNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBatchNoNull() {
                this[this.tableGoodReceivedNote.BatchNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVATNull() {
                return this.IsNull(this.tableGoodReceivedNote.VATColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVATNull() {
                this[this.tableGoodReceivedNote.VATColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dsGRNDetailsForRepRow : global::System.Data.DataRow {
            
            private dsGRNDetailsForRepDataTable tabledsGRNDetailsForRep;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsGRNDetailsForRepRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledsGRNDetailsForRep = ((dsGRNDetailsForRepDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Doc_no {
                get {
                    try {
                        return ((string)(this[this.tabledsGRNDetailsForRep.Doc_noColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Doc_no\' in table \'dsGRNDetailsForRep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsGRNDetailsForRep.Doc_noColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Loca {
                get {
                    try {
                        return ((string)(this[this.tabledsGRNDetailsForRep.LocaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Loca\' in table \'dsGRNDetailsForRep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsGRNDetailsForRep.LocaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Loca_Descrip {
                get {
                    try {
                        return ((string)(this[this.tabledsGRNDetailsForRep.Loca_DescripColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Loca_Descrip\' in table \'dsGRNDetailsForRep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsGRNDetailsForRep.Loca_DescripColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Post_Date {
                get {
                    try {
                        return ((string)(this[this.tabledsGRNDetailsForRep.Post_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Post_Date\' in table \'dsGRNDetailsForRep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsGRNDetailsForRep.Post_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string inv_no {
                get {
                    try {
                        return ((string)(this[this.tabledsGRNDetailsForRep.inv_noColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'inv_no\' in table \'dsGRNDetailsForRep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsGRNDetailsForRep.inv_noColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Inv_Amt {
                get {
                    try {
                        return ((decimal)(this[this.tabledsGRNDetailsForRep.Inv_AmtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Inv_Amt\' in table \'dsGRNDetailsForRep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsGRNDetailsForRep.Inv_AmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Porder_no {
                get {
                    try {
                        return ((string)(this[this.tabledsGRNDetailsForRep.Porder_noColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Porder_no\' in table \'dsGRNDetailsForRep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsGRNDetailsForRep.Porder_noColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Net_Amount {
                get {
                    try {
                        return ((decimal)(this[this.tabledsGRNDetailsForRep.Net_AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Net_Amount\' in table \'dsGRNDetailsForRep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsGRNDetailsForRep.Net_AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Gross_Amount {
                get {
                    try {
                        return ((decimal)(this[this.tabledsGRNDetailsForRep.Gross_AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Gross_Amount\' in table \'dsGRNDetailsForRep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsGRNDetailsForRep.Gross_AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Sub_Discount {
                get {
                    try {
                        return ((decimal)(this[this.tabledsGRNDetailsForRep.Sub_DiscountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Sub_Discount\' in table \'dsGRNDetailsForRep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsGRNDetailsForRep.Sub_DiscountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Disc {
                get {
                    try {
                        return ((string)(this[this.tabledsGRNDetailsForRep.DiscColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Disc\' in table \'dsGRNDetailsForRep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsGRNDetailsForRep.DiscColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Remarks {
                get {
                    try {
                        return ((string)(this[this.tabledsGRNDetailsForRep.RemarksColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Remarks\' in table \'dsGRNDetailsForRep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsGRNDetailsForRep.RemarksColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Reference {
                get {
                    try {
                        return ((string)(this[this.tabledsGRNDetailsForRep.ReferenceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Reference\' in table \'dsGRNDetailsForRep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsGRNDetailsForRep.ReferenceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Pay_Type {
                get {
                    try {
                        return ((string)(this[this.tabledsGRNDetailsForRep.Pay_TypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Pay_Type\' in table \'dsGRNDetailsForRep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsGRNDetailsForRep.Pay_TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Tax {
                get {
                    try {
                        return ((string)(this[this.tabledsGRNDetailsForRep.TaxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Tax\' in table \'dsGRNDetailsForRep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsGRNDetailsForRep.TaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prod_code {
                get {
                    try {
                        return ((string)(this[this.tabledsGRNDetailsForRep.Prod_codeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Prod_code\' in table \'dsGRNDetailsForRep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsGRNDetailsForRep.Prod_codeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prod_Name {
                get {
                    try {
                        return ((string)(this[this.tabledsGRNDetailsForRep.Prod_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Prod_Name\' in table \'dsGRNDetailsForRep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsGRNDetailsForRep.Prod_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Qty {
                get {
                    try {
                        return ((double)(this[this.tabledsGRNDetailsForRep.QtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Qty\' in table \'dsGRNDetailsForRep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsGRNDetailsForRep.QtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double FreeQty {
                get {
                    try {
                        return ((double)(this[this.tabledsGRNDetailsForRep.FreeQtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FreeQty\' in table \'dsGRNDetailsForRep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsGRNDetailsForRep.FreeQtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Purchase_Price {
                get {
                    try {
                        return ((decimal)(this[this.tabledsGRNDetailsForRep.Purchase_PriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Purchase_Price\' in table \'dsGRNDetailsForRep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsGRNDetailsForRep.Purchase_PriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Selling_Price {
                get {
                    try {
                        return ((decimal)(this[this.tabledsGRNDetailsForRep.Selling_PriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Selling_Price\' in table \'dsGRNDetailsForRep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsGRNDetailsForRep.Selling_PriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Whole_Price {
                get {
                    try {
                        return ((decimal)(this[this.tabledsGRNDetailsForRep.Whole_PriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Whole_Price\' in table \'dsGRNDetailsForRep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsGRNDetailsForRep.Whole_PriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Discount {
                get {
                    try {
                        return ((decimal)(this[this.tabledsGRNDetailsForRep.DiscountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Discount\' in table \'dsGRNDetailsForRep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsGRNDetailsForRep.DiscountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Amount {
                get {
                    try {
                        return ((decimal)(this[this.tabledsGRNDetailsForRep.AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Amount\' in table \'dsGRNDetailsForRep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsGRNDetailsForRep.AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Ln {
                get {
                    try {
                        return ((string)(this[this.tabledsGRNDetailsForRep.LnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Ln\' in table \'dsGRNDetailsForRep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsGRNDetailsForRep.LnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Status {
                get {
                    try {
                        return ((string)(this[this.tabledsGRNDetailsForRep.StatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Status\' in table \'dsGRNDetailsForRep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsGRNDetailsForRep.StatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Supp_Name {
                get {
                    try {
                        return ((string)(this[this.tabledsGRNDetailsForRep.Supp_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Supp_Name\' in table \'dsGRNDetailsForRep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsGRNDetailsForRep.Supp_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Supplier_Id {
                get {
                    try {
                        return ((string)(this[this.tabledsGRNDetailsForRep.Supplier_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Supplier_Id\' in table \'dsGRNDetailsForRep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsGRNDetailsForRep.Supplier_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AccessUser {
                get {
                    try {
                        return ((string)(this[this.tabledsGRNDetailsForRep.AccessUserColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AccessUser\' in table \'dsGRNDetailsForRep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsGRNDetailsForRep.AccessUserColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string User_Name {
                get {
                    try {
                        return ((string)(this[this.tabledsGRNDetailsForRep.User_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'User_Name\' in table \'dsGRNDetailsForRep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsGRNDetailsForRep.User_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Wh_Per {
                get {
                    try {
                        return ((decimal)(this[this.tabledsGRNDetailsForRep.Wh_PerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Wh_Per\' in table \'dsGRNDetailsForRep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsGRNDetailsForRep.Wh_PerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Shipment {
                get {
                    try {
                        return ((string)(this[this.tabledsGRNDetailsForRep.ShipmentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Shipment\' in table \'dsGRNDetailsForRep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsGRNDetailsForRep.ShipmentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ExpDate {
                get {
                    try {
                        return ((string)(this[this.tabledsGRNDetailsForRep.ExpDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExpDate\' in table \'dsGRNDetailsForRep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsGRNDetailsForRep.ExpDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BatchNo {
                get {
                    try {
                        return ((string)(this[this.tabledsGRNDetailsForRep.BatchNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BatchNo\' in table \'dsGRNDetailsForRep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsGRNDetailsForRep.BatchNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDoc_noNull() {
                return this.IsNull(this.tabledsGRNDetailsForRep.Doc_noColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDoc_noNull() {
                this[this.tabledsGRNDetailsForRep.Doc_noColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocaNull() {
                return this.IsNull(this.tabledsGRNDetailsForRep.LocaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocaNull() {
                this[this.tabledsGRNDetailsForRep.LocaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLoca_DescripNull() {
                return this.IsNull(this.tabledsGRNDetailsForRep.Loca_DescripColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLoca_DescripNull() {
                this[this.tabledsGRNDetailsForRep.Loca_DescripColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPost_DateNull() {
                return this.IsNull(this.tabledsGRNDetailsForRep.Post_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPost_DateNull() {
                this[this.tabledsGRNDetailsForRep.Post_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isinv_noNull() {
                return this.IsNull(this.tabledsGRNDetailsForRep.inv_noColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setinv_noNull() {
                this[this.tabledsGRNDetailsForRep.inv_noColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInv_AmtNull() {
                return this.IsNull(this.tabledsGRNDetailsForRep.Inv_AmtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInv_AmtNull() {
                this[this.tabledsGRNDetailsForRep.Inv_AmtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPorder_noNull() {
                return this.IsNull(this.tabledsGRNDetailsForRep.Porder_noColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPorder_noNull() {
                this[this.tabledsGRNDetailsForRep.Porder_noColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNet_AmountNull() {
                return this.IsNull(this.tabledsGRNDetailsForRep.Net_AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNet_AmountNull() {
                this[this.tabledsGRNDetailsForRep.Net_AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGross_AmountNull() {
                return this.IsNull(this.tabledsGRNDetailsForRep.Gross_AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGross_AmountNull() {
                this[this.tabledsGRNDetailsForRep.Gross_AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSub_DiscountNull() {
                return this.IsNull(this.tabledsGRNDetailsForRep.Sub_DiscountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSub_DiscountNull() {
                this[this.tabledsGRNDetailsForRep.Sub_DiscountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDiscNull() {
                return this.IsNull(this.tabledsGRNDetailsForRep.DiscColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDiscNull() {
                this[this.tabledsGRNDetailsForRep.DiscColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRemarksNull() {
                return this.IsNull(this.tabledsGRNDetailsForRep.RemarksColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRemarksNull() {
                this[this.tabledsGRNDetailsForRep.RemarksColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReferenceNull() {
                return this.IsNull(this.tabledsGRNDetailsForRep.ReferenceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReferenceNull() {
                this[this.tabledsGRNDetailsForRep.ReferenceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPay_TypeNull() {
                return this.IsNull(this.tabledsGRNDetailsForRep.Pay_TypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPay_TypeNull() {
                this[this.tabledsGRNDetailsForRep.Pay_TypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTaxNull() {
                return this.IsNull(this.tabledsGRNDetailsForRep.TaxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTaxNull() {
                this[this.tabledsGRNDetailsForRep.TaxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_codeNull() {
                return this.IsNull(this.tabledsGRNDetailsForRep.Prod_codeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_codeNull() {
                this[this.tabledsGRNDetailsForRep.Prod_codeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_NameNull() {
                return this.IsNull(this.tabledsGRNDetailsForRep.Prod_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_NameNull() {
                this[this.tabledsGRNDetailsForRep.Prod_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQtyNull() {
                return this.IsNull(this.tabledsGRNDetailsForRep.QtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQtyNull() {
                this[this.tabledsGRNDetailsForRep.QtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFreeQtyNull() {
                return this.IsNull(this.tabledsGRNDetailsForRep.FreeQtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFreeQtyNull() {
                this[this.tabledsGRNDetailsForRep.FreeQtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPurchase_PriceNull() {
                return this.IsNull(this.tabledsGRNDetailsForRep.Purchase_PriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPurchase_PriceNull() {
                this[this.tabledsGRNDetailsForRep.Purchase_PriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelling_PriceNull() {
                return this.IsNull(this.tabledsGRNDetailsForRep.Selling_PriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelling_PriceNull() {
                this[this.tabledsGRNDetailsForRep.Selling_PriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWhole_PriceNull() {
                return this.IsNull(this.tabledsGRNDetailsForRep.Whole_PriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWhole_PriceNull() {
                this[this.tabledsGRNDetailsForRep.Whole_PriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDiscountNull() {
                return this.IsNull(this.tabledsGRNDetailsForRep.DiscountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDiscountNull() {
                this[this.tabledsGRNDetailsForRep.DiscountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountNull() {
                return this.IsNull(this.tabledsGRNDetailsForRep.AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountNull() {
                this[this.tabledsGRNDetailsForRep.AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLnNull() {
                return this.IsNull(this.tabledsGRNDetailsForRep.LnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLnNull() {
                this[this.tabledsGRNDetailsForRep.LnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStatusNull() {
                return this.IsNull(this.tabledsGRNDetailsForRep.StatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStatusNull() {
                this[this.tabledsGRNDetailsForRep.StatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupp_NameNull() {
                return this.IsNull(this.tabledsGRNDetailsForRep.Supp_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupp_NameNull() {
                this[this.tabledsGRNDetailsForRep.Supp_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupplier_IdNull() {
                return this.IsNull(this.tabledsGRNDetailsForRep.Supplier_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupplier_IdNull() {
                this[this.tabledsGRNDetailsForRep.Supplier_IdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAccessUserNull() {
                return this.IsNull(this.tabledsGRNDetailsForRep.AccessUserColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAccessUserNull() {
                this[this.tabledsGRNDetailsForRep.AccessUserColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUser_NameNull() {
                return this.IsNull(this.tabledsGRNDetailsForRep.User_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUser_NameNull() {
                this[this.tabledsGRNDetailsForRep.User_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWh_PerNull() {
                return this.IsNull(this.tabledsGRNDetailsForRep.Wh_PerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWh_PerNull() {
                this[this.tabledsGRNDetailsForRep.Wh_PerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShipmentNull() {
                return this.IsNull(this.tabledsGRNDetailsForRep.ShipmentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShipmentNull() {
                this[this.tabledsGRNDetailsForRep.ShipmentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExpDateNull() {
                return this.IsNull(this.tabledsGRNDetailsForRep.ExpDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExpDateNull() {
                this[this.tabledsGRNDetailsForRep.ExpDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBatchNoNull() {
                return this.IsNull(this.tabledsGRNDetailsForRep.BatchNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBatchNoNull() {
                this[this.tabledsGRNDetailsForRep.BatchNoColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class PurchaseOrderRow : global::System.Data.DataRow {
            
            private PurchaseOrderDataTable tablePurchaseOrder;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PurchaseOrderRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePurchaseOrder = ((PurchaseOrderDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Doc_No {
                get {
                    try {
                        return ((string)(this[this.tablePurchaseOrder.Doc_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Doc_No\' in table \'PurchaseOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrder.Doc_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prod_Code {
                get {
                    try {
                        return ((string)(this[this.tablePurchaseOrder.Prod_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Prod_Code\' in table \'PurchaseOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrder.Prod_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prod_Name {
                get {
                    try {
                        return ((string)(this[this.tablePurchaseOrder.Prod_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Prod_Name\' in table \'PurchaseOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrder.Prod_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Unit {
                get {
                    try {
                        return ((string)(this[this.tablePurchaseOrder.UnitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Unit\' in table \'PurchaseOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrder.UnitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Purchase_Price {
                get {
                    try {
                        return ((string)(this[this.tablePurchaseOrder.Purchase_PriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Purchase_Price\' in table \'PurchaseOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrder.Purchase_PriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Selling_Price {
                get {
                    try {
                        return ((string)(this[this.tablePurchaseOrder.Selling_PriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Selling_Price\' in table \'PurchaseOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrder.Selling_PriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Qty {
                get {
                    try {
                        return ((string)(this[this.tablePurchaseOrder.QtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Qty\' in table \'PurchaseOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrder.QtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Amount {
                get {
                    try {
                        return ((string)(this[this.tablePurchaseOrder.AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Amount\' in table \'PurchaseOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrder.AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDoc_NoNull() {
                return this.IsNull(this.tablePurchaseOrder.Doc_NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDoc_NoNull() {
                this[this.tablePurchaseOrder.Doc_NoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_CodeNull() {
                return this.IsNull(this.tablePurchaseOrder.Prod_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_CodeNull() {
                this[this.tablePurchaseOrder.Prod_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_NameNull() {
                return this.IsNull(this.tablePurchaseOrder.Prod_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_NameNull() {
                this[this.tablePurchaseOrder.Prod_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnitNull() {
                return this.IsNull(this.tablePurchaseOrder.UnitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnitNull() {
                this[this.tablePurchaseOrder.UnitColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPurchase_PriceNull() {
                return this.IsNull(this.tablePurchaseOrder.Purchase_PriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPurchase_PriceNull() {
                this[this.tablePurchaseOrder.Purchase_PriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelling_PriceNull() {
                return this.IsNull(this.tablePurchaseOrder.Selling_PriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelling_PriceNull() {
                this[this.tablePurchaseOrder.Selling_PriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQtyNull() {
                return this.IsNull(this.tablePurchaseOrder.QtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQtyNull() {
                this[this.tablePurchaseOrder.QtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountNull() {
                return this.IsNull(this.tablePurchaseOrder.AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountNull() {
                this[this.tablePurchaseOrder.AmountColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dsPurchaseOrderDetailsRow : global::System.Data.DataRow {
            
            private dsPurchaseOrderDetailsDataTable tabledsPurchaseOrderDetails;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsPurchaseOrderDetailsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledsPurchaseOrderDetails = ((dsPurchaseOrderDetailsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Doc_No {
                get {
                    try {
                        return ((string)(this[this.tabledsPurchaseOrderDetails.Doc_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Doc_No\' in table \'dsPurchaseOrderDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurchaseOrderDetails.Doc_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Post_Date {
                get {
                    try {
                        return ((string)(this[this.tabledsPurchaseOrderDetails.Post_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Post_Date\' in table \'dsPurchaseOrderDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurchaseOrderDetails.Post_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Supplier_Id {
                get {
                    try {
                        return ((string)(this[this.tabledsPurchaseOrderDetails.Supplier_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Supplier_Id\' in table \'dsPurchaseOrderDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurchaseOrderDetails.Supplier_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Supp_Name {
                get {
                    try {
                        return ((string)(this[this.tabledsPurchaseOrderDetails.Supp_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Supp_Name\' in table \'dsPurchaseOrderDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurchaseOrderDetails.Supp_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Pay_Type {
                get {
                    try {
                        return ((string)(this[this.tabledsPurchaseOrderDetails.Pay_TypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Pay_Type\' in table \'dsPurchaseOrderDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurchaseOrderDetails.Pay_TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Remarks {
                get {
                    try {
                        return ((string)(this[this.tabledsPurchaseOrderDetails.RemarksColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Remarks\' in table \'dsPurchaseOrderDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurchaseOrderDetails.RemarksColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Expected_Date {
                get {
                    try {
                        return ((string)(this[this.tabledsPurchaseOrderDetails.Expected_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Expected_Date\' in table \'dsPurchaseOrderDetails\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tabledsPurchaseOrderDetails.Expected_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AddRemarks {
                get {
                    try {
                        return ((string)(this[this.tabledsPurchaseOrderDetails.AddRemarksColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AddRemarks\' in table \'dsPurchaseOrderDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurchaseOrderDetails.AddRemarksColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Reference {
                get {
                    try {
                        return ((string)(this[this.tabledsPurchaseOrderDetails.ReferenceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Reference\' in table \'dsPurchaseOrderDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurchaseOrderDetails.ReferenceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PayRemark1 {
                get {
                    try {
                        return ((string)(this[this.tabledsPurchaseOrderDetails.PayRemark1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PayRemark1\' in table \'dsPurchaseOrderDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurchaseOrderDetails.PayRemark1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PayRemark2 {
                get {
                    try {
                        return ((string)(this[this.tabledsPurchaseOrderDetails.PayRemark2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PayRemark2\' in table \'dsPurchaseOrderDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurchaseOrderDetails.PayRemark2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prod_Code {
                get {
                    try {
                        return ((string)(this[this.tabledsPurchaseOrderDetails.Prod_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Prod_Code\' in table \'dsPurchaseOrderDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurchaseOrderDetails.Prod_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prod_Name {
                get {
                    try {
                        return ((string)(this[this.tabledsPurchaseOrderDetails.Prod_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Prod_Name\' in table \'dsPurchaseOrderDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurchaseOrderDetails.Prod_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Qty {
                get {
                    try {
                        return ((double)(this[this.tabledsPurchaseOrderDetails.QtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Qty\' in table \'dsPurchaseOrderDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurchaseOrderDetails.QtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Purchase_Price {
                get {
                    try {
                        return ((string)(this[this.tabledsPurchaseOrderDetails.Purchase_PriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Purchase_Price\' in table \'dsPurchaseOrderDetails\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tabledsPurchaseOrderDetails.Purchase_PriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Selling_Price {
                get {
                    try {
                        return ((decimal)(this[this.tabledsPurchaseOrderDetails.Selling_PriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Selling_Price\' in table \'dsPurchaseOrderDetails\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tabledsPurchaseOrderDetails.Selling_PriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Amount {
                get {
                    try {
                        return ((decimal)(this[this.tabledsPurchaseOrderDetails.AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Amount\' in table \'dsPurchaseOrderDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurchaseOrderDetails.AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Ln {
                get {
                    try {
                        return ((string)(this[this.tabledsPurchaseOrderDetails.LnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Ln\' in table \'dsPurchaseOrderDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurchaseOrderDetails.LnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address1 {
                get {
                    try {
                        return ((string)(this[this.tabledsPurchaseOrderDetails.Address1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Address1\' in table \'dsPurchaseOrderDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurchaseOrderDetails.Address1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address2 {
                get {
                    try {
                        return ((string)(this[this.tabledsPurchaseOrderDetails.Address2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Address2\' in table \'dsPurchaseOrderDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurchaseOrderDetails.Address2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address3 {
                get {
                    try {
                        return ((string)(this[this.tabledsPurchaseOrderDetails.Address3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Address3\' in table \'dsPurchaseOrderDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurchaseOrderDetails.Address3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address4 {
                get {
                    try {
                        return ((string)(this[this.tabledsPurchaseOrderDetails.Address4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Address4\' in table \'dsPurchaseOrderDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurchaseOrderDetails.Address4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Tel {
                get {
                    try {
                        return ((string)(this[this.tabledsPurchaseOrderDetails.TelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Tel\' in table \'dsPurchaseOrderDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurchaseOrderDetails.TelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Fax {
                get {
                    try {
                        return ((string)(this[this.tabledsPurchaseOrderDetails.FaxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Fax\' in table \'dsPurchaseOrderDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurchaseOrderDetails.FaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Tax {
                get {
                    try {
                        return ((string)(this[this.tabledsPurchaseOrderDetails.TaxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Tax\' in table \'dsPurchaseOrderDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurchaseOrderDetails.TaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal NetAmount {
                get {
                    try {
                        return ((decimal)(this[this.tabledsPurchaseOrderDetails.NetAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NetAmount\' in table \'dsPurchaseOrderDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurchaseOrderDetails.NetAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Pay1 {
                get {
                    try {
                        return ((string)(this[this.tabledsPurchaseOrderDetails.Pay1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Pay1\' in table \'dsPurchaseOrderDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurchaseOrderDetails.Pay1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Status {
                get {
                    try {
                        return ((string)(this[this.tabledsPurchaseOrderDetails.StatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Status\' in table \'dsPurchaseOrderDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurchaseOrderDetails.StatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDoc_NoNull() {
                return this.IsNull(this.tabledsPurchaseOrderDetails.Doc_NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDoc_NoNull() {
                this[this.tabledsPurchaseOrderDetails.Doc_NoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPost_DateNull() {
                return this.IsNull(this.tabledsPurchaseOrderDetails.Post_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPost_DateNull() {
                this[this.tabledsPurchaseOrderDetails.Post_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupplier_IdNull() {
                return this.IsNull(this.tabledsPurchaseOrderDetails.Supplier_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupplier_IdNull() {
                this[this.tabledsPurchaseOrderDetails.Supplier_IdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupp_NameNull() {
                return this.IsNull(this.tabledsPurchaseOrderDetails.Supp_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupp_NameNull() {
                this[this.tabledsPurchaseOrderDetails.Supp_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPay_TypeNull() {
                return this.IsNull(this.tabledsPurchaseOrderDetails.Pay_TypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPay_TypeNull() {
                this[this.tabledsPurchaseOrderDetails.Pay_TypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRemarksNull() {
                return this.IsNull(this.tabledsPurchaseOrderDetails.RemarksColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRemarksNull() {
                this[this.tabledsPurchaseOrderDetails.RemarksColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExpected_DateNull() {
                return this.IsNull(this.tabledsPurchaseOrderDetails.Expected_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExpected_DateNull() {
                this[this.tabledsPurchaseOrderDetails.Expected_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddRemarksNull() {
                return this.IsNull(this.tabledsPurchaseOrderDetails.AddRemarksColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddRemarksNull() {
                this[this.tabledsPurchaseOrderDetails.AddRemarksColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReferenceNull() {
                return this.IsNull(this.tabledsPurchaseOrderDetails.ReferenceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReferenceNull() {
                this[this.tabledsPurchaseOrderDetails.ReferenceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPayRemark1Null() {
                return this.IsNull(this.tabledsPurchaseOrderDetails.PayRemark1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPayRemark1Null() {
                this[this.tabledsPurchaseOrderDetails.PayRemark1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPayRemark2Null() {
                return this.IsNull(this.tabledsPurchaseOrderDetails.PayRemark2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPayRemark2Null() {
                this[this.tabledsPurchaseOrderDetails.PayRemark2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_CodeNull() {
                return this.IsNull(this.tabledsPurchaseOrderDetails.Prod_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_CodeNull() {
                this[this.tabledsPurchaseOrderDetails.Prod_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_NameNull() {
                return this.IsNull(this.tabledsPurchaseOrderDetails.Prod_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_NameNull() {
                this[this.tabledsPurchaseOrderDetails.Prod_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQtyNull() {
                return this.IsNull(this.tabledsPurchaseOrderDetails.QtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQtyNull() {
                this[this.tabledsPurchaseOrderDetails.QtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPurchase_PriceNull() {
                return this.IsNull(this.tabledsPurchaseOrderDetails.Purchase_PriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPurchase_PriceNull() {
                this[this.tabledsPurchaseOrderDetails.Purchase_PriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelling_PriceNull() {
                return this.IsNull(this.tabledsPurchaseOrderDetails.Selling_PriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelling_PriceNull() {
                this[this.tabledsPurchaseOrderDetails.Selling_PriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountNull() {
                return this.IsNull(this.tabledsPurchaseOrderDetails.AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountNull() {
                this[this.tabledsPurchaseOrderDetails.AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLnNull() {
                return this.IsNull(this.tabledsPurchaseOrderDetails.LnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLnNull() {
                this[this.tabledsPurchaseOrderDetails.LnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddress1Null() {
                return this.IsNull(this.tabledsPurchaseOrderDetails.Address1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddress1Null() {
                this[this.tabledsPurchaseOrderDetails.Address1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddress2Null() {
                return this.IsNull(this.tabledsPurchaseOrderDetails.Address2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddress2Null() {
                this[this.tabledsPurchaseOrderDetails.Address2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddress3Null() {
                return this.IsNull(this.tabledsPurchaseOrderDetails.Address3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddress3Null() {
                this[this.tabledsPurchaseOrderDetails.Address3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddress4Null() {
                return this.IsNull(this.tabledsPurchaseOrderDetails.Address4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddress4Null() {
                this[this.tabledsPurchaseOrderDetails.Address4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTelNull() {
                return this.IsNull(this.tabledsPurchaseOrderDetails.TelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTelNull() {
                this[this.tabledsPurchaseOrderDetails.TelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFaxNull() {
                return this.IsNull(this.tabledsPurchaseOrderDetails.FaxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFaxNull() {
                this[this.tabledsPurchaseOrderDetails.FaxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTaxNull() {
                return this.IsNull(this.tabledsPurchaseOrderDetails.TaxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTaxNull() {
                this[this.tabledsPurchaseOrderDetails.TaxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNetAmountNull() {
                return this.IsNull(this.tabledsPurchaseOrderDetails.NetAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNetAmountNull() {
                this[this.tabledsPurchaseOrderDetails.NetAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPay1Null() {
                return this.IsNull(this.tabledsPurchaseOrderDetails.Pay1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPay1Null() {
                this[this.tabledsPurchaseOrderDetails.Pay1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStatusNull() {
                return this.IsNull(this.tabledsPurchaseOrderDetails.StatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStatusNull() {
                this[this.tabledsPurchaseOrderDetails.StatusColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ProductRow : global::System.Data.DataRow {
            
            private ProductDataTable tableProduct;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ProductRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableProduct = ((ProductDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prod_Code {
                get {
                    try {
                        return ((string)(this[this.tableProduct.Prod_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Prod_Code\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.Prod_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prod_Name {
                get {
                    try {
                        return ((string)(this[this.tableProduct.Prod_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Prod_Name\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.Prod_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Purchase_Price {
                get {
                    try {
                        return ((decimal)(this[this.tableProduct.Purchase_PriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Purchase_Price\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.Purchase_PriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Selling_Price {
                get {
                    try {
                        return ((decimal)(this[this.tableProduct.Selling_PriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Selling_Price\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.Selling_PriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte Prod_Image {
                get {
                    try {
                        return ((byte)(this[this.tableProduct.Prod_ImageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Prod_Image\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.Prod_ImageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Marked_Price {
                get {
                    try {
                        return ((decimal)(this[this.tableProduct.Marked_PriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Marked_Price\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.Marked_PriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Whole_Price {
                get {
                    try {
                        return ((decimal)(this[this.tableProduct.Whole_PriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Whole_Price\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.Whole_PriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Qty {
                get {
                    try {
                        return ((double)(this[this.tableProduct.QtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Qty\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.QtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Price_Level {
                get {
                    try {
                        return ((string)(this[this.tableProduct.Price_LevelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Price_Level\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.Price_LevelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LockedItem {
                get {
                    try {
                        return ((string)(this[this.tableProduct.LockedItemColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LockedItem\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.LockedItemColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Loca {
                get {
                    try {
                        return ((string)(this[this.tableProduct.LocaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Loca\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.LocaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CodeFrom {
                get {
                    try {
                        return ((string)(this[this.tableProduct.CodeFromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CodeFrom\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.CodeFromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CodeTo {
                get {
                    try {
                        return ((string)(this[this.tableProduct.CodeToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CodeTo\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.CodeToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_CodeNull() {
                return this.IsNull(this.tableProduct.Prod_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_CodeNull() {
                this[this.tableProduct.Prod_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_NameNull() {
                return this.IsNull(this.tableProduct.Prod_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_NameNull() {
                this[this.tableProduct.Prod_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPurchase_PriceNull() {
                return this.IsNull(this.tableProduct.Purchase_PriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPurchase_PriceNull() {
                this[this.tableProduct.Purchase_PriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelling_PriceNull() {
                return this.IsNull(this.tableProduct.Selling_PriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelling_PriceNull() {
                this[this.tableProduct.Selling_PriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_ImageNull() {
                return this.IsNull(this.tableProduct.Prod_ImageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_ImageNull() {
                this[this.tableProduct.Prod_ImageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMarked_PriceNull() {
                return this.IsNull(this.tableProduct.Marked_PriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMarked_PriceNull() {
                this[this.tableProduct.Marked_PriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWhole_PriceNull() {
                return this.IsNull(this.tableProduct.Whole_PriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWhole_PriceNull() {
                this[this.tableProduct.Whole_PriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQtyNull() {
                return this.IsNull(this.tableProduct.QtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQtyNull() {
                this[this.tableProduct.QtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPrice_LevelNull() {
                return this.IsNull(this.tableProduct.Price_LevelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPrice_LevelNull() {
                this[this.tableProduct.Price_LevelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLockedItemNull() {
                return this.IsNull(this.tableProduct.LockedItemColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLockedItemNull() {
                this[this.tableProduct.LockedItemColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocaNull() {
                return this.IsNull(this.tableProduct.LocaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocaNull() {
                this[this.tableProduct.LocaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCodeFromNull() {
                return this.IsNull(this.tableProduct.CodeFromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCodeFromNull() {
                this[this.tableProduct.CodeFromColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCodeToNull() {
                return this.IsNull(this.tableProduct.CodeToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCodeToNull() {
                this[this.tableProduct.CodeToColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class InvoiceRow : global::System.Data.DataRow {
            
            private InvoiceDataTable tableInvoice;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal InvoiceRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableInvoice = ((InvoiceDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prod_Code {
                get {
                    try {
                        return ((string)(this[this.tableInvoice.Prod_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Prod_Code\' in table \'Invoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice.Prod_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prod_Name {
                get {
                    try {
                        return ((string)(this[this.tableInvoice.Prod_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Prod_Name\' in table \'Invoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice.Prod_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Unit {
                get {
                    try {
                        return ((string)(this[this.tableInvoice.UnitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Unit\' in table \'Invoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice.UnitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Selling_Price {
                get {
                    try {
                        return ((string)(this[this.tableInvoice.Selling_PriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Selling_Price\' in table \'Invoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice.Selling_PriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Qty {
                get {
                    try {
                        return ((string)(this[this.tableInvoice.QtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Qty\' in table \'Invoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice.QtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FreeQty {
                get {
                    try {
                        return ((string)(this[this.tableInvoice.FreeQtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FreeQty\' in table \'Invoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice.FreeQtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Discount {
                get {
                    try {
                        return ((string)(this[this.tableInvoice.DiscountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Discount\' in table \'Invoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice.DiscountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Amount {
                get {
                    try {
                        return ((string)(this[this.tableInvoice.AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Amount\' in table \'Invoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice.AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Ln {
                get {
                    try {
                        return ((string)(this[this.tableInvoice.LnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Ln\' in table \'Invoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice.LnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ExpDate {
                get {
                    try {
                        return ((string)(this[this.tableInvoice.ExpDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExpDate\' in table \'Invoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice.ExpDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BatchNo {
                get {
                    try {
                        return ((string)(this[this.tableInvoice.BatchNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BatchNo\' in table \'Invoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice.BatchNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VAT {
                get {
                    try {
                        return ((string)(this[this.tableInvoice.VATColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VAT\' in table \'Invoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice.VATColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_CodeNull() {
                return this.IsNull(this.tableInvoice.Prod_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_CodeNull() {
                this[this.tableInvoice.Prod_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_NameNull() {
                return this.IsNull(this.tableInvoice.Prod_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_NameNull() {
                this[this.tableInvoice.Prod_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnitNull() {
                return this.IsNull(this.tableInvoice.UnitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnitNull() {
                this[this.tableInvoice.UnitColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelling_PriceNull() {
                return this.IsNull(this.tableInvoice.Selling_PriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelling_PriceNull() {
                this[this.tableInvoice.Selling_PriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQtyNull() {
                return this.IsNull(this.tableInvoice.QtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQtyNull() {
                this[this.tableInvoice.QtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFreeQtyNull() {
                return this.IsNull(this.tableInvoice.FreeQtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFreeQtyNull() {
                this[this.tableInvoice.FreeQtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDiscountNull() {
                return this.IsNull(this.tableInvoice.DiscountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDiscountNull() {
                this[this.tableInvoice.DiscountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountNull() {
                return this.IsNull(this.tableInvoice.AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountNull() {
                this[this.tableInvoice.AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLnNull() {
                return this.IsNull(this.tableInvoice.LnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLnNull() {
                this[this.tableInvoice.LnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExpDateNull() {
                return this.IsNull(this.tableInvoice.ExpDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExpDateNull() {
                this[this.tableInvoice.ExpDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBatchNoNull() {
                return this.IsNull(this.tableInvoice.BatchNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBatchNoNull() {
                this[this.tableInvoice.BatchNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVATNull() {
                return this.IsNull(this.tableInvoice.VATColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVATNull() {
                this[this.tableInvoice.VATColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dsAccountRow : global::System.Data.DataRow {
            
            private dsAccountDataTable tabledsAccount;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsAccountRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledsAccount = ((dsAccountDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Acc_Code {
                get {
                    try {
                        return ((string)(this[this.tabledsAccount.Acc_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Acc_Code\' in table \'dsAccount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsAccount.Acc_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Acc_Name {
                get {
                    try {
                        return ((string)(this[this.tabledsAccount.Acc_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Acc_Name\' in table \'dsAccount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsAccount.Acc_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address1 {
                get {
                    try {
                        return ((string)(this[this.tabledsAccount.Address1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Address1\' in table \'dsAccount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsAccount.Address1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address2 {
                get {
                    try {
                        return ((string)(this[this.tabledsAccount.Address2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Address2\' in table \'dsAccount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsAccount.Address2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address3 {
                get {
                    try {
                        return ((string)(this[this.tabledsAccount.Address3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Address3\' in table \'dsAccount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsAccount.Address3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string City {
                get {
                    try {
                        return ((string)(this[this.tabledsAccount.CityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'City\' in table \'dsAccount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsAccount.CityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Country {
                get {
                    try {
                        return ((string)(this[this.tabledsAccount.CountryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Country\' in table \'dsAccount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsAccount.CountryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Telephone {
                get {
                    try {
                        return ((string)(this[this.tabledsAccount.TelephoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Telephone\' in table \'dsAccount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsAccount.TelephoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Fax {
                get {
                    try {
                        return ((string)(this[this.tabledsAccount.FaxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Fax\' in table \'dsAccount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsAccount.FaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Email {
                get {
                    try {
                        return ((string)(this[this.tabledsAccount.EmailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Email\' in table \'dsAccount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsAccount.EmailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Contact_Prsn {
                get {
                    try {
                        return ((string)(this[this.tabledsAccount.Contact_PrsnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Contact_Prsn\' in table \'dsAccount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsAccount.Contact_PrsnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Credit_Limit {
                get {
                    try {
                        return ((string)(this[this.tabledsAccount.Credit_LimitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Credit_Limit\' in table \'dsAccount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsAccount.Credit_LimitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Period {
                get {
                    try {
                        return ((string)(this[this.tabledsAccount.PeriodColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Period\' in table \'dsAccount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsAccount.PeriodColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BankDraft {
                get {
                    try {
                        return ((string)(this[this.tabledsAccount.BankDraftColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BankDraft\' in table \'dsAccount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsAccount.BankDraftColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prod_Code {
                get {
                    try {
                        return ((string)(this[this.tabledsAccount.Prod_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Prod_Code\' in table \'dsAccount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsAccount.Prod_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prod_Name {
                get {
                    try {
                        return ((string)(this[this.tabledsAccount.Prod_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Prod_Name\' in table \'dsAccount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsAccount.Prod_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Purchase_price {
                get {
                    try {
                        return ((decimal)(this[this.tabledsAccount.Purchase_priceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Purchase_price\' in table \'dsAccount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsAccount.Purchase_priceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Selling_Price {
                get {
                    try {
                        return ((decimal)(this[this.tabledsAccount.Selling_PriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Selling_Price\' in table \'dsAccount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsAccount.Selling_PriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAcc_CodeNull() {
                return this.IsNull(this.tabledsAccount.Acc_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAcc_CodeNull() {
                this[this.tabledsAccount.Acc_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAcc_NameNull() {
                return this.IsNull(this.tabledsAccount.Acc_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAcc_NameNull() {
                this[this.tabledsAccount.Acc_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddress1Null() {
                return this.IsNull(this.tabledsAccount.Address1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddress1Null() {
                this[this.tabledsAccount.Address1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddress2Null() {
                return this.IsNull(this.tabledsAccount.Address2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddress2Null() {
                this[this.tabledsAccount.Address2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddress3Null() {
                return this.IsNull(this.tabledsAccount.Address3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddress3Null() {
                this[this.tabledsAccount.Address3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCityNull() {
                return this.IsNull(this.tabledsAccount.CityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCityNull() {
                this[this.tabledsAccount.CityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCountryNull() {
                return this.IsNull(this.tabledsAccount.CountryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCountryNull() {
                this[this.tabledsAccount.CountryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTelephoneNull() {
                return this.IsNull(this.tabledsAccount.TelephoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTelephoneNull() {
                this[this.tabledsAccount.TelephoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFaxNull() {
                return this.IsNull(this.tabledsAccount.FaxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFaxNull() {
                this[this.tabledsAccount.FaxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmailNull() {
                return this.IsNull(this.tabledsAccount.EmailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmailNull() {
                this[this.tabledsAccount.EmailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsContact_PrsnNull() {
                return this.IsNull(this.tabledsAccount.Contact_PrsnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetContact_PrsnNull() {
                this[this.tabledsAccount.Contact_PrsnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCredit_LimitNull() {
                return this.IsNull(this.tabledsAccount.Credit_LimitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCredit_LimitNull() {
                this[this.tabledsAccount.Credit_LimitColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPeriodNull() {
                return this.IsNull(this.tabledsAccount.PeriodColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPeriodNull() {
                this[this.tabledsAccount.PeriodColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBankDraftNull() {
                return this.IsNull(this.tabledsAccount.BankDraftColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBankDraftNull() {
                this[this.tabledsAccount.BankDraftColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_CodeNull() {
                return this.IsNull(this.tabledsAccount.Prod_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_CodeNull() {
                this[this.tabledsAccount.Prod_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_NameNull() {
                return this.IsNull(this.tabledsAccount.Prod_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_NameNull() {
                this[this.tabledsAccount.Prod_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPurchase_priceNull() {
                return this.IsNull(this.tabledsAccount.Purchase_priceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPurchase_priceNull() {
                this[this.tabledsAccount.Purchase_priceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelling_PriceNull() {
                return this.IsNull(this.tabledsAccount.Selling_PriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelling_PriceNull() {
                this[this.tabledsAccount.Selling_PriceColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dsInvoiceDetailsRow : global::System.Data.DataRow {
            
            private dsInvoiceDetailsDataTable tabledsInvoiceDetails;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsInvoiceDetailsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledsInvoiceDetails = ((dsInvoiceDetailsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Doc_No {
                get {
                    try {
                        return ((string)(this[this.tabledsInvoiceDetails.Doc_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Doc_No\' in table \'dsInvoiceDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsInvoiceDetails.Doc_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Post_Date {
                get {
                    try {
                        return ((string)(this[this.tabledsInvoiceDetails.Post_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Post_Date\' in table \'dsInvoiceDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsInvoiceDetails.Post_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Cust_Code {
                get {
                    try {
                        return ((string)(this[this.tabledsInvoiceDetails.Cust_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cust_Code\' in table \'dsInvoiceDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsInvoiceDetails.Cust_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Cust_Name {
                get {
                    try {
                        return ((string)(this[this.tabledsInvoiceDetails.Cust_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cust_Name\' in table \'dsInvoiceDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsInvoiceDetails.Cust_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address1 {
                get {
                    try {
                        return ((string)(this[this.tabledsInvoiceDetails.Address1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Address1\' in table \'dsInvoiceDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsInvoiceDetails.Address1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address2 {
                get {
                    try {
                        return ((string)(this[this.tabledsInvoiceDetails.Address2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Address2\' in table \'dsInvoiceDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsInvoiceDetails.Address2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address3 {
                get {
                    try {
                        return ((string)(this[this.tabledsInvoiceDetails.Address3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Address3\' in table \'dsInvoiceDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsInvoiceDetails.Address3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address4 {
                get {
                    try {
                        return ((string)(this[this.tabledsInvoiceDetails.Address4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Address4\' in table \'dsInvoiceDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsInvoiceDetails.Address4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Sales_Assist {
                get {
                    try {
                        return ((string)(this[this.tabledsInvoiceDetails.Sales_AssistColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Sales_Assist\' in table \'dsInvoiceDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsInvoiceDetails.Sales_AssistColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Porder_No {
                get {
                    try {
                        return ((string)(this[this.tabledsInvoiceDetails.Porder_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Porder_No\' in table \'dsInvoiceDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsInvoiceDetails.Porder_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Remarks {
                get {
                    try {
                        return ((string)(this[this.tabledsInvoiceDetails.RemarksColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Remarks\' in table \'dsInvoiceDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsInvoiceDetails.RemarksColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Reference {
                get {
                    try {
                        return ((string)(this[this.tabledsInvoiceDetails.ReferenceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Reference\' in table \'dsInvoiceDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsInvoiceDetails.ReferenceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prod_Code {
                get {
                    try {
                        return ((string)(this[this.tabledsInvoiceDetails.Prod_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Prod_Code\' in table \'dsInvoiceDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsInvoiceDetails.Prod_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prod_Name {
                get {
                    try {
                        return ((string)(this[this.tabledsInvoiceDetails.Prod_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Prod_Name\' in table \'dsInvoiceDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsInvoiceDetails.Prod_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Qty {
                get {
                    try {
                        return ((double)(this[this.tabledsInvoiceDetails.QtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Qty\' in table \'dsInvoiceDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsInvoiceDetails.QtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal FreeQty {
                get {
                    try {
                        return ((decimal)(this[this.tabledsInvoiceDetails.FreeQtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FreeQty\' in table \'dsInvoiceDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsInvoiceDetails.FreeQtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Selling_Price {
                get {
                    try {
                        return ((decimal)(this[this.tabledsInvoiceDetails.Selling_PriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Selling_Price\' in table \'dsInvoiceDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsInvoiceDetails.Selling_PriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Discount {
                get {
                    try {
                        return ((decimal)(this[this.tabledsInvoiceDetails.DiscountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Discount\' in table \'dsInvoiceDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsInvoiceDetails.DiscountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Amount {
                get {
                    try {
                        return ((decimal)(this[this.tabledsInvoiceDetails.AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Amount\' in table \'dsInvoiceDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsInvoiceDetails.AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Ln {
                get {
                    try {
                        return ((string)(this[this.tabledsInvoiceDetails.LnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Ln\' in table \'dsInvoiceDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsInvoiceDetails.LnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PayRemark1 {
                get {
                    try {
                        return ((string)(this[this.tabledsInvoiceDetails.PayRemark1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PayRemark1\' in table \'dsInvoiceDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsInvoiceDetails.PayRemark1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Sub_Discount {
                get {
                    try {
                        return ((decimal)(this[this.tabledsInvoiceDetails.Sub_DiscountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Sub_Discount\' in table \'dsInvoiceDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsInvoiceDetails.Sub_DiscountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Tax {
                get {
                    try {
                        return ((decimal)(this[this.tabledsInvoiceDetails.TaxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Tax\' in table \'dsInvoiceDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsInvoiceDetails.TaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Net_Amount {
                get {
                    try {
                        return ((decimal)(this[this.tabledsInvoiceDetails.Net_AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Net_Amount\' in table \'dsInvoiceDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsInvoiceDetails.Net_AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Gross_Amount {
                get {
                    try {
                        return ((decimal)(this[this.tabledsInvoiceDetails.Gross_AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Gross_Amount\' in table \'dsInvoiceDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsInvoiceDetails.Gross_AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Status {
                get {
                    try {
                        return ((string)(this[this.tabledsInvoiceDetails.StatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Status\' in table \'dsInvoiceDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsInvoiceDetails.StatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Marked_Price {
                get {
                    try {
                        return ((decimal)(this[this.tabledsInvoiceDetails.Marked_PriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Marked_Price\' in table \'dsInvoiceDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsInvoiceDetails.Marked_PriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CompanyName {
                get {
                    try {
                        return ((string)(this[this.tabledsInvoiceDetails.CompanyNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CompanyName\' in table \'dsInvoiceDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsInvoiceDetails.CompanyNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CompanyAddress {
                get {
                    try {
                        return ((string)(this[this.tabledsInvoiceDetails.CompanyAddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CompanyAddress\' in table \'dsInvoiceDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsInvoiceDetails.CompanyAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CompanyTelephone {
                get {
                    try {
                        return ((string)(this[this.tabledsInvoiceDetails.CompanyTelephoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CompanyTelephone\' in table \'dsInvoiceDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsInvoiceDetails.CompanyTelephoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CompanyEmail {
                get {
                    try {
                        return ((string)(this[this.tabledsInvoiceDetails.CompanyEmailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CompanyEmail\' in table \'dsInvoiceDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsInvoiceDetails.CompanyEmailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Balance {
                get {
                    try {
                        return ((decimal)(this[this.tabledsInvoiceDetails.BalanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Balance\' in table \'dsInvoiceDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsInvoiceDetails.BalanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Inv_Amt {
                get {
                    try {
                        return ((decimal)(this[this.tabledsInvoiceDetails.Inv_AmtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Inv_Amt\' in table \'dsInvoiceDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsInvoiceDetails.Inv_AmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Unit {
                get {
                    try {
                        return ((string)(this[this.tabledsInvoiceDetails.UnitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Unit\' in table \'dsInvoiceDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsInvoiceDetails.UnitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InvoType {
                get {
                    try {
                        return ((string)(this[this.tabledsInvoiceDetails.InvoTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InvoType\' in table \'dsInvoiceDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsInvoiceDetails.InvoTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ExpDate {
                get {
                    try {
                        return ((string)(this[this.tabledsInvoiceDetails.ExpDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExpDate\' in table \'dsInvoiceDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsInvoiceDetails.ExpDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BatchNo {
                get {
                    try {
                        return ((string)(this[this.tabledsInvoiceDetails.BatchNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BatchNo\' in table \'dsInvoiceDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsInvoiceDetails.BatchNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VAT {
                get {
                    try {
                        return ((string)(this[this.tabledsInvoiceDetails.VATColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VAT\' in table \'dsInvoiceDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsInvoiceDetails.VATColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TaxPer {
                get {
                    try {
                        return ((decimal)(this[this.tabledsInvoiceDetails.TaxPerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TaxPer\' in table \'dsInvoiceDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsInvoiceDetails.TaxPerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDoc_NoNull() {
                return this.IsNull(this.tabledsInvoiceDetails.Doc_NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDoc_NoNull() {
                this[this.tabledsInvoiceDetails.Doc_NoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPost_DateNull() {
                return this.IsNull(this.tabledsInvoiceDetails.Post_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPost_DateNull() {
                this[this.tabledsInvoiceDetails.Post_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCust_CodeNull() {
                return this.IsNull(this.tabledsInvoiceDetails.Cust_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCust_CodeNull() {
                this[this.tabledsInvoiceDetails.Cust_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCust_NameNull() {
                return this.IsNull(this.tabledsInvoiceDetails.Cust_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCust_NameNull() {
                this[this.tabledsInvoiceDetails.Cust_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddress1Null() {
                return this.IsNull(this.tabledsInvoiceDetails.Address1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddress1Null() {
                this[this.tabledsInvoiceDetails.Address1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddress2Null() {
                return this.IsNull(this.tabledsInvoiceDetails.Address2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddress2Null() {
                this[this.tabledsInvoiceDetails.Address2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddress3Null() {
                return this.IsNull(this.tabledsInvoiceDetails.Address3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddress3Null() {
                this[this.tabledsInvoiceDetails.Address3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddress4Null() {
                return this.IsNull(this.tabledsInvoiceDetails.Address4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddress4Null() {
                this[this.tabledsInvoiceDetails.Address4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSales_AssistNull() {
                return this.IsNull(this.tabledsInvoiceDetails.Sales_AssistColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSales_AssistNull() {
                this[this.tabledsInvoiceDetails.Sales_AssistColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPorder_NoNull() {
                return this.IsNull(this.tabledsInvoiceDetails.Porder_NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPorder_NoNull() {
                this[this.tabledsInvoiceDetails.Porder_NoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRemarksNull() {
                return this.IsNull(this.tabledsInvoiceDetails.RemarksColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRemarksNull() {
                this[this.tabledsInvoiceDetails.RemarksColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReferenceNull() {
                return this.IsNull(this.tabledsInvoiceDetails.ReferenceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReferenceNull() {
                this[this.tabledsInvoiceDetails.ReferenceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_CodeNull() {
                return this.IsNull(this.tabledsInvoiceDetails.Prod_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_CodeNull() {
                this[this.tabledsInvoiceDetails.Prod_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_NameNull() {
                return this.IsNull(this.tabledsInvoiceDetails.Prod_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_NameNull() {
                this[this.tabledsInvoiceDetails.Prod_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQtyNull() {
                return this.IsNull(this.tabledsInvoiceDetails.QtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQtyNull() {
                this[this.tabledsInvoiceDetails.QtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFreeQtyNull() {
                return this.IsNull(this.tabledsInvoiceDetails.FreeQtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFreeQtyNull() {
                this[this.tabledsInvoiceDetails.FreeQtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelling_PriceNull() {
                return this.IsNull(this.tabledsInvoiceDetails.Selling_PriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelling_PriceNull() {
                this[this.tabledsInvoiceDetails.Selling_PriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDiscountNull() {
                return this.IsNull(this.tabledsInvoiceDetails.DiscountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDiscountNull() {
                this[this.tabledsInvoiceDetails.DiscountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountNull() {
                return this.IsNull(this.tabledsInvoiceDetails.AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountNull() {
                this[this.tabledsInvoiceDetails.AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLnNull() {
                return this.IsNull(this.tabledsInvoiceDetails.LnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLnNull() {
                this[this.tabledsInvoiceDetails.LnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPayRemark1Null() {
                return this.IsNull(this.tabledsInvoiceDetails.PayRemark1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPayRemark1Null() {
                this[this.tabledsInvoiceDetails.PayRemark1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSub_DiscountNull() {
                return this.IsNull(this.tabledsInvoiceDetails.Sub_DiscountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSub_DiscountNull() {
                this[this.tabledsInvoiceDetails.Sub_DiscountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTaxNull() {
                return this.IsNull(this.tabledsInvoiceDetails.TaxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTaxNull() {
                this[this.tabledsInvoiceDetails.TaxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNet_AmountNull() {
                return this.IsNull(this.tabledsInvoiceDetails.Net_AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNet_AmountNull() {
                this[this.tabledsInvoiceDetails.Net_AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGross_AmountNull() {
                return this.IsNull(this.tabledsInvoiceDetails.Gross_AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGross_AmountNull() {
                this[this.tabledsInvoiceDetails.Gross_AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStatusNull() {
                return this.IsNull(this.tabledsInvoiceDetails.StatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStatusNull() {
                this[this.tabledsInvoiceDetails.StatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMarked_PriceNull() {
                return this.IsNull(this.tabledsInvoiceDetails.Marked_PriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMarked_PriceNull() {
                this[this.tabledsInvoiceDetails.Marked_PriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompanyNameNull() {
                return this.IsNull(this.tabledsInvoiceDetails.CompanyNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompanyNameNull() {
                this[this.tabledsInvoiceDetails.CompanyNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompanyAddressNull() {
                return this.IsNull(this.tabledsInvoiceDetails.CompanyAddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompanyAddressNull() {
                this[this.tabledsInvoiceDetails.CompanyAddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompanyTelephoneNull() {
                return this.IsNull(this.tabledsInvoiceDetails.CompanyTelephoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompanyTelephoneNull() {
                this[this.tabledsInvoiceDetails.CompanyTelephoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompanyEmailNull() {
                return this.IsNull(this.tabledsInvoiceDetails.CompanyEmailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompanyEmailNull() {
                this[this.tabledsInvoiceDetails.CompanyEmailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBalanceNull() {
                return this.IsNull(this.tabledsInvoiceDetails.BalanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBalanceNull() {
                this[this.tabledsInvoiceDetails.BalanceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInv_AmtNull() {
                return this.IsNull(this.tabledsInvoiceDetails.Inv_AmtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInv_AmtNull() {
                this[this.tabledsInvoiceDetails.Inv_AmtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnitNull() {
                return this.IsNull(this.tabledsInvoiceDetails.UnitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnitNull() {
                this[this.tabledsInvoiceDetails.UnitColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInvoTypeNull() {
                return this.IsNull(this.tabledsInvoiceDetails.InvoTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInvoTypeNull() {
                this[this.tabledsInvoiceDetails.InvoTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExpDateNull() {
                return this.IsNull(this.tabledsInvoiceDetails.ExpDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExpDateNull() {
                this[this.tabledsInvoiceDetails.ExpDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBatchNoNull() {
                return this.IsNull(this.tabledsInvoiceDetails.BatchNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBatchNoNull() {
                this[this.tabledsInvoiceDetails.BatchNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVATNull() {
                return this.IsNull(this.tabledsInvoiceDetails.VATColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVATNull() {
                this[this.tabledsInvoiceDetails.VATColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTaxPerNull() {
                return this.IsNull(this.tabledsInvoiceDetails.TaxPerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTaxPerNull() {
                this[this.tabledsInvoiceDetails.TaxPerColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dsStockProductwiseRow : global::System.Data.DataRow {
            
            private dsStockProductwiseDataTable tabledsStockProductwise;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsStockProductwiseRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledsStockProductwise = ((dsStockProductwiseDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prod_Code {
                get {
                    try {
                        return ((string)(this[this.tabledsStockProductwise.Prod_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Prod_Code\' in table \'dsStockProductwise\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsStockProductwise.Prod_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prod_Name {
                get {
                    try {
                        return ((string)(this[this.tabledsStockProductwise.Prod_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Prod_Name\' in table \'dsStockProductwise\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsStockProductwise.Prod_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Purchase_Price {
                get {
                    try {
                        return ((decimal)(this[this.tabledsStockProductwise.Purchase_PriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Purchase_Price\' in table \'dsStockProductwise\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsStockProductwise.Purchase_PriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Selling_Price {
                get {
                    try {
                        return ((decimal)(this[this.tabledsStockProductwise.Selling_PriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Selling_Price\' in table \'dsStockProductwise\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsStockProductwise.Selling_PriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Qty {
                get {
                    try {
                        return ((double)(this[this.tabledsStockProductwise.QtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Qty\' in table \'dsStockProductwise\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsStockProductwise.QtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Loca {
                get {
                    try {
                        return ((string)(this[this.tabledsStockProductwise.LocaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Loca\' in table \'dsStockProductwise\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsStockProductwise.LocaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Loca_Descrip {
                get {
                    try {
                        return ((string)(this[this.tabledsStockProductwise.Loca_DescripColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Loca_Descrip\' in table \'dsStockProductwise\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsStockProductwise.Loca_DescripColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CodeFrom {
                get {
                    try {
                        return ((string)(this[this.tabledsStockProductwise.CodeFromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CodeFrom\' in table \'dsStockProductwise\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsStockProductwise.CodeFromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CodeTo {
                get {
                    try {
                        return ((string)(this[this.tabledsStockProductwise.CodeToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CodeTo\' in table \'dsStockProductwise\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsStockProductwise.CodeToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Department_Id {
                get {
                    try {
                        return ((string)(this[this.tabledsStockProductwise.Department_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Department_Id\' in table \'dsStockProductwise\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsStockProductwise.Department_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Dept_Name {
                get {
                    try {
                        return ((string)(this[this.tabledsStockProductwise.Dept_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Dept_Name\' in table \'dsStockProductwise\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsStockProductwise.Dept_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Category_Id {
                get {
                    try {
                        return ((string)(this[this.tabledsStockProductwise.Category_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Category_Id\' in table \'dsStockProductwise\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsStockProductwise.Category_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Cat_Name {
                get {
                    try {
                        return ((string)(this[this.tabledsStockProductwise.Cat_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cat_Name\' in table \'dsStockProductwise\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsStockProductwise.Cat_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Supplier_Id {
                get {
                    try {
                        return ((string)(this[this.tabledsStockProductwise.Supplier_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Supplier_Id\' in table \'dsStockProductwise\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsStockProductwise.Supplier_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Supp_Name {
                get {
                    try {
                        return ((string)(this[this.tabledsStockProductwise.Supp_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Supp_Name\' in table \'dsStockProductwise\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsStockProductwise.Supp_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Manufacturer_Id {
                get {
                    try {
                        return ((string)(this[this.tabledsStockProductwise.Manufacturer_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Manufacturer_Id\' in table \'dsStockProductwise\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsStockProductwise.Manufacturer_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Manf_Name {
                get {
                    try {
                        return ((string)(this[this.tabledsStockProductwise.Manf_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Manf_Name\' in table \'dsStockProductwise\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsStockProductwise.Manf_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Opening_Stock {
                get {
                    try {
                        return ((double)(this[this.tabledsStockProductwise.Opening_StockColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Opening_Stock\' in table \'dsStockProductwise\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsStockProductwise.Opening_StockColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double SoldQty {
                get {
                    try {
                        return ((double)(this[this.tabledsStockProductwise.SoldQtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SoldQty\' in table \'dsStockProductwise\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsStockProductwise.SoldQtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DateFrom {
                get {
                    try {
                        return ((string)(this[this.tabledsStockProductwise.DateFromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateFrom\' in table \'dsStockProductwise\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsStockProductwise.DateFromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DateTo {
                get {
                    try {
                        return ((string)(this[this.tabledsStockProductwise.DateToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateTo\' in table \'dsStockProductwise\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsStockProductwise.DateToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] Prod_Image {
                get {
                    try {
                        return ((byte[])(this[this.tabledsStockProductwise.Prod_ImageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Prod_Image\' in table \'dsStockProductwise\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsStockProductwise.Prod_ImageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool ImageView {
                get {
                    try {
                        return ((bool)(this[this.tabledsStockProductwise.ImageViewColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ImageView\' in table \'dsStockProductwise\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsStockProductwise.ImageViewColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_CodeNull() {
                return this.IsNull(this.tabledsStockProductwise.Prod_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_CodeNull() {
                this[this.tabledsStockProductwise.Prod_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_NameNull() {
                return this.IsNull(this.tabledsStockProductwise.Prod_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_NameNull() {
                this[this.tabledsStockProductwise.Prod_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPurchase_PriceNull() {
                return this.IsNull(this.tabledsStockProductwise.Purchase_PriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPurchase_PriceNull() {
                this[this.tabledsStockProductwise.Purchase_PriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelling_PriceNull() {
                return this.IsNull(this.tabledsStockProductwise.Selling_PriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelling_PriceNull() {
                this[this.tabledsStockProductwise.Selling_PriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQtyNull() {
                return this.IsNull(this.tabledsStockProductwise.QtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQtyNull() {
                this[this.tabledsStockProductwise.QtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocaNull() {
                return this.IsNull(this.tabledsStockProductwise.LocaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocaNull() {
                this[this.tabledsStockProductwise.LocaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLoca_DescripNull() {
                return this.IsNull(this.tabledsStockProductwise.Loca_DescripColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLoca_DescripNull() {
                this[this.tabledsStockProductwise.Loca_DescripColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCodeFromNull() {
                return this.IsNull(this.tabledsStockProductwise.CodeFromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCodeFromNull() {
                this[this.tabledsStockProductwise.CodeFromColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCodeToNull() {
                return this.IsNull(this.tabledsStockProductwise.CodeToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCodeToNull() {
                this[this.tabledsStockProductwise.CodeToColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDepartment_IdNull() {
                return this.IsNull(this.tabledsStockProductwise.Department_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDepartment_IdNull() {
                this[this.tabledsStockProductwise.Department_IdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDept_NameNull() {
                return this.IsNull(this.tabledsStockProductwise.Dept_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDept_NameNull() {
                this[this.tabledsStockProductwise.Dept_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCategory_IdNull() {
                return this.IsNull(this.tabledsStockProductwise.Category_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCategory_IdNull() {
                this[this.tabledsStockProductwise.Category_IdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCat_NameNull() {
                return this.IsNull(this.tabledsStockProductwise.Cat_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCat_NameNull() {
                this[this.tabledsStockProductwise.Cat_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupplier_IdNull() {
                return this.IsNull(this.tabledsStockProductwise.Supplier_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupplier_IdNull() {
                this[this.tabledsStockProductwise.Supplier_IdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupp_NameNull() {
                return this.IsNull(this.tabledsStockProductwise.Supp_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupp_NameNull() {
                this[this.tabledsStockProductwise.Supp_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsManufacturer_IdNull() {
                return this.IsNull(this.tabledsStockProductwise.Manufacturer_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetManufacturer_IdNull() {
                this[this.tabledsStockProductwise.Manufacturer_IdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsManf_NameNull() {
                return this.IsNull(this.tabledsStockProductwise.Manf_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetManf_NameNull() {
                this[this.tabledsStockProductwise.Manf_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOpening_StockNull() {
                return this.IsNull(this.tabledsStockProductwise.Opening_StockColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOpening_StockNull() {
                this[this.tabledsStockProductwise.Opening_StockColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSoldQtyNull() {
                return this.IsNull(this.tabledsStockProductwise.SoldQtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSoldQtyNull() {
                this[this.tabledsStockProductwise.SoldQtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateFromNull() {
                return this.IsNull(this.tabledsStockProductwise.DateFromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateFromNull() {
                this[this.tabledsStockProductwise.DateFromColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateToNull() {
                return this.IsNull(this.tabledsStockProductwise.DateToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateToNull() {
                this[this.tabledsStockProductwise.DateToColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_ImageNull() {
                return this.IsNull(this.tabledsStockProductwise.Prod_ImageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_ImageNull() {
                this[this.tabledsStockProductwise.Prod_ImageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsImageViewNull() {
                return this.IsNull(this.tabledsStockProductwise.ImageViewColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetImageViewNull() {
                this[this.tabledsStockProductwise.ImageViewColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class PendingPaymentsRow : global::System.Data.DataRow {
            
            private PendingPaymentsDataTable tablePendingPayments;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PendingPaymentsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePendingPayments = ((PendingPaymentsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Doc_No {
                get {
                    try {
                        return ((string)(this[this.tablePendingPayments.Doc_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Doc_No\' in table \'PendingPayments\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePendingPayments.Doc_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Transaction_Date {
                get {
                    try {
                        return ((string)(this[this.tablePendingPayments.Transaction_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Transaction_Date\' in table \'PendingPayments\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePendingPayments.Transaction_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Transaction_Amount {
                get {
                    try {
                        return ((string)(this[this.tablePendingPayments.Transaction_AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Transaction_Amount\' in table \'PendingPayments\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePendingPayments.Transaction_AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Balance_Amount {
                get {
                    try {
                        return ((string)(this[this.tablePendingPayments.Balance_AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Balance_Amount\' in table \'PendingPayments\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePendingPayments.Balance_AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Temp_DocNo {
                get {
                    try {
                        return ((string)(this[this.tablePendingPayments.Temp_DocNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Temp_DocNo\' in table \'PendingPayments\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePendingPayments.Temp_DocNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDoc_NoNull() {
                return this.IsNull(this.tablePendingPayments.Doc_NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDoc_NoNull() {
                this[this.tablePendingPayments.Doc_NoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTransaction_DateNull() {
                return this.IsNull(this.tablePendingPayments.Transaction_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTransaction_DateNull() {
                this[this.tablePendingPayments.Transaction_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTransaction_AmountNull() {
                return this.IsNull(this.tablePendingPayments.Transaction_AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTransaction_AmountNull() {
                this[this.tablePendingPayments.Transaction_AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBalance_AmountNull() {
                return this.IsNull(this.tablePendingPayments.Balance_AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBalance_AmountNull() {
                this[this.tablePendingPayments.Balance_AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTemp_DocNoNull() {
                return this.IsNull(this.tablePendingPayments.Temp_DocNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTemp_DocNoNull() {
                this[this.tablePendingPayments.Temp_DocNoColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class SelectedPaymentsRow : global::System.Data.DataRow {
            
            private SelectedPaymentsDataTable tableSelectedPayments;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SelectedPaymentsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSelectedPayments = ((SelectedPaymentsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Doc_No {
                get {
                    try {
                        return ((string)(this[this.tableSelectedPayments.Doc_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Doc_No\' in table \'SelectedPayments\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectedPayments.Doc_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Transaction_Date {
                get {
                    try {
                        return ((string)(this[this.tableSelectedPayments.Transaction_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Transaction_Date\' in table \'SelectedPayments\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectedPayments.Transaction_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Transaction_Amount {
                get {
                    try {
                        return ((string)(this[this.tableSelectedPayments.Transaction_AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Transaction_Amount\' in table \'SelectedPayments\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectedPayments.Transaction_AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Balance_Amount {
                get {
                    try {
                        return ((string)(this[this.tableSelectedPayments.Balance_AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Balance_Amount\' in table \'SelectedPayments\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectedPayments.Balance_AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Paid_Amount {
                get {
                    try {
                        return ((string)(this[this.tableSelectedPayments.Paid_AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Paid_Amount\' in table \'SelectedPayments\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectedPayments.Paid_AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Temp_DocNo {
                get {
                    try {
                        return ((string)(this[this.tableSelectedPayments.Temp_DocNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Temp_DocNo\' in table \'SelectedPayments\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectedPayments.Temp_DocNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDoc_NoNull() {
                return this.IsNull(this.tableSelectedPayments.Doc_NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDoc_NoNull() {
                this[this.tableSelectedPayments.Doc_NoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTransaction_DateNull() {
                return this.IsNull(this.tableSelectedPayments.Transaction_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTransaction_DateNull() {
                this[this.tableSelectedPayments.Transaction_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTransaction_AmountNull() {
                return this.IsNull(this.tableSelectedPayments.Transaction_AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTransaction_AmountNull() {
                this[this.tableSelectedPayments.Transaction_AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBalance_AmountNull() {
                return this.IsNull(this.tableSelectedPayments.Balance_AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBalance_AmountNull() {
                this[this.tableSelectedPayments.Balance_AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPaid_AmountNull() {
                return this.IsNull(this.tableSelectedPayments.Paid_AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPaid_AmountNull() {
                this[this.tableSelectedPayments.Paid_AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTemp_DocNoNull() {
                return this.IsNull(this.tableSelectedPayments.Temp_DocNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTemp_DocNoNull() {
                this[this.tableSelectedPayments.Temp_DocNoColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class PaymentDetailsRow : global::System.Data.DataRow {
            
            private PaymentDetailsDataTable tablePaymentDetails;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PaymentDetailsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePaymentDetails = ((PaymentDetailsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Temp_DocNo {
                get {
                    try {
                        return ((string)(this[this.tablePaymentDetails.Temp_DocNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Temp_DocNo\' in table \'PaymentDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePaymentDetails.Temp_DocNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Payment_Mode {
                get {
                    try {
                        return ((string)(this[this.tablePaymentDetails.Payment_ModeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Payment_Mode\' in table \'PaymentDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePaymentDetails.Payment_ModeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Bank_Name {
                get {
                    try {
                        return ((string)(this[this.tablePaymentDetails.Bank_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Bank_Name\' in table \'PaymentDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePaymentDetails.Bank_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Cheque_No {
                get {
                    try {
                        return ((string)(this[this.tablePaymentDetails.Cheque_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cheque_No\' in table \'PaymentDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePaymentDetails.Cheque_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Branch {
                get {
                    try {
                        return ((string)(this[this.tablePaymentDetails.BranchColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Branch\' in table \'PaymentDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePaymentDetails.BranchColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Amount {
                get {
                    try {
                        return ((string)(this[this.tablePaymentDetails.AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Amount\' in table \'PaymentDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePaymentDetails.AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTemp_DocNoNull() {
                return this.IsNull(this.tablePaymentDetails.Temp_DocNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTemp_DocNoNull() {
                this[this.tablePaymentDetails.Temp_DocNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPayment_ModeNull() {
                return this.IsNull(this.tablePaymentDetails.Payment_ModeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPayment_ModeNull() {
                this[this.tablePaymentDetails.Payment_ModeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBank_NameNull() {
                return this.IsNull(this.tablePaymentDetails.Bank_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBank_NameNull() {
                this[this.tablePaymentDetails.Bank_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCheque_NoNull() {
                return this.IsNull(this.tablePaymentDetails.Cheque_NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCheque_NoNull() {
                this[this.tablePaymentDetails.Cheque_NoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBranchNull() {
                return this.IsNull(this.tablePaymentDetails.BranchColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBranchNull() {
                this[this.tablePaymentDetails.BranchColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountNull() {
                return this.IsNull(this.tablePaymentDetails.AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountNull() {
                this[this.tablePaymentDetails.AmountColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tbPaidPaymentSummaryRow : global::System.Data.DataRow {
            
            private tbPaidPaymentSummaryDataTable tabletbPaidPaymentSummary;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tbPaidPaymentSummaryRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletbPaidPaymentSummary = ((tbPaidPaymentSummaryDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Org_Doc_no {
                get {
                    try {
                        return ((string)(this[this.tabletbPaidPaymentSummary.Org_Doc_noColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Org_Doc_no\' in table \'tbPaidPaymentSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbPaidPaymentSummary.Org_Doc_noColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Post_Date {
                get {
                    try {
                        return ((string)(this[this.tabletbPaidPaymentSummary.Post_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Post_Date\' in table \'tbPaidPaymentSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbPaidPaymentSummary.Post_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Doc_No {
                get {
                    try {
                        return ((string)(this[this.tabletbPaidPaymentSummary.Doc_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Doc_No\' in table \'tbPaidPaymentSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbPaidPaymentSummary.Doc_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Transaction_Date {
                get {
                    try {
                        return ((string)(this[this.tabletbPaidPaymentSummary.Transaction_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Transaction_Date\' in table \'tbPaidPaymentSummary\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tabletbPaidPaymentSummary.Transaction_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Balance_Amount {
                get {
                    try {
                        return ((string)(this[this.tabletbPaidPaymentSummary.Balance_AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Balance_Amount\' in table \'tbPaidPaymentSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbPaidPaymentSummary.Balance_AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Transaction_Amount {
                get {
                    try {
                        return ((string)(this[this.tabletbPaidPaymentSummary.Transaction_AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Transaction_Amount\' in table \'tbPaidPaymentSummary\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tabletbPaidPaymentSummary.Transaction_AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Paid_Amount {
                get {
                    try {
                        return ((string)(this[this.tabletbPaidPaymentSummary.Paid_AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Paid_Amount\' in table \'tbPaidPaymentSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbPaidPaymentSummary.Paid_AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Loca {
                get {
                    try {
                        return ((string)(this[this.tabletbPaidPaymentSummary.LocaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Loca\' in table \'tbPaidPaymentSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbPaidPaymentSummary.LocaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Loca_Descrip {
                get {
                    try {
                        return ((string)(this[this.tabletbPaidPaymentSummary.Loca_DescripColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Loca_Descrip\' in table \'tbPaidPaymentSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbPaidPaymentSummary.Loca_DescripColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Acc_Code {
                get {
                    try {
                        return ((string)(this[this.tabletbPaidPaymentSummary.Acc_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Acc_Code\' in table \'tbPaidPaymentSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbPaidPaymentSummary.Acc_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Acc_Name {
                get {
                    try {
                        return ((string)(this[this.tabletbPaidPaymentSummary.Acc_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Acc_Name\' in table \'tbPaidPaymentSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbPaidPaymentSummary.Acc_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address1 {
                get {
                    try {
                        return ((string)(this[this.tabletbPaidPaymentSummary.Address1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Address1\' in table \'tbPaidPaymentSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbPaidPaymentSummary.Address1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address2 {
                get {
                    try {
                        return ((string)(this[this.tabletbPaidPaymentSummary.Address2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Address2\' in table \'tbPaidPaymentSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbPaidPaymentSummary.Address2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address3 {
                get {
                    try {
                        return ((string)(this[this.tabletbPaidPaymentSummary.Address3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Address3\' in table \'tbPaidPaymentSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbPaidPaymentSummary.Address3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address4 {
                get {
                    try {
                        return ((string)(this[this.tabletbPaidPaymentSummary.Address4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Address4\' in table \'tbPaidPaymentSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbPaidPaymentSummary.Address4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string User_Name {
                get {
                    try {
                        return ((string)(this[this.tabletbPaidPaymentSummary.User_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'User_Name\' in table \'tbPaidPaymentSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbPaidPaymentSummary.User_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Status {
                get {
                    try {
                        return ((string)(this[this.tabletbPaidPaymentSummary.StatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Status\' in table \'tbPaidPaymentSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbPaidPaymentSummary.StatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOrg_Doc_noNull() {
                return this.IsNull(this.tabletbPaidPaymentSummary.Org_Doc_noColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOrg_Doc_noNull() {
                this[this.tabletbPaidPaymentSummary.Org_Doc_noColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPost_DateNull() {
                return this.IsNull(this.tabletbPaidPaymentSummary.Post_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPost_DateNull() {
                this[this.tabletbPaidPaymentSummary.Post_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDoc_NoNull() {
                return this.IsNull(this.tabletbPaidPaymentSummary.Doc_NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDoc_NoNull() {
                this[this.tabletbPaidPaymentSummary.Doc_NoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTransaction_DateNull() {
                return this.IsNull(this.tabletbPaidPaymentSummary.Transaction_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTransaction_DateNull() {
                this[this.tabletbPaidPaymentSummary.Transaction_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBalance_AmountNull() {
                return this.IsNull(this.tabletbPaidPaymentSummary.Balance_AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBalance_AmountNull() {
                this[this.tabletbPaidPaymentSummary.Balance_AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTransaction_AmountNull() {
                return this.IsNull(this.tabletbPaidPaymentSummary.Transaction_AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTransaction_AmountNull() {
                this[this.tabletbPaidPaymentSummary.Transaction_AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPaid_AmountNull() {
                return this.IsNull(this.tabletbPaidPaymentSummary.Paid_AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPaid_AmountNull() {
                this[this.tabletbPaidPaymentSummary.Paid_AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocaNull() {
                return this.IsNull(this.tabletbPaidPaymentSummary.LocaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocaNull() {
                this[this.tabletbPaidPaymentSummary.LocaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLoca_DescripNull() {
                return this.IsNull(this.tabletbPaidPaymentSummary.Loca_DescripColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLoca_DescripNull() {
                this[this.tabletbPaidPaymentSummary.Loca_DescripColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAcc_CodeNull() {
                return this.IsNull(this.tabletbPaidPaymentSummary.Acc_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAcc_CodeNull() {
                this[this.tabletbPaidPaymentSummary.Acc_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAcc_NameNull() {
                return this.IsNull(this.tabletbPaidPaymentSummary.Acc_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAcc_NameNull() {
                this[this.tabletbPaidPaymentSummary.Acc_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddress1Null() {
                return this.IsNull(this.tabletbPaidPaymentSummary.Address1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddress1Null() {
                this[this.tabletbPaidPaymentSummary.Address1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddress2Null() {
                return this.IsNull(this.tabletbPaidPaymentSummary.Address2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddress2Null() {
                this[this.tabletbPaidPaymentSummary.Address2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddress3Null() {
                return this.IsNull(this.tabletbPaidPaymentSummary.Address3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddress3Null() {
                this[this.tabletbPaidPaymentSummary.Address3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddress4Null() {
                return this.IsNull(this.tabletbPaidPaymentSummary.Address4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddress4Null() {
                this[this.tabletbPaidPaymentSummary.Address4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUser_NameNull() {
                return this.IsNull(this.tabletbPaidPaymentSummary.User_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUser_NameNull() {
                this[this.tabletbPaidPaymentSummary.User_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStatusNull() {
                return this.IsNull(this.tabletbPaidPaymentSummary.StatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStatusNull() {
                this[this.tabletbPaidPaymentSummary.StatusColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tbPaidPaymentModeRow : global::System.Data.DataRow {
            
            private tbPaidPaymentModeDataTable tabletbPaidPaymentMode;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tbPaidPaymentModeRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletbPaidPaymentMode = ((tbPaidPaymentModeDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Payment_Mode {
                get {
                    try {
                        return ((string)(this[this.tabletbPaidPaymentMode.Payment_ModeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Payment_Mode\' in table \'tbPaidPaymentMode\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbPaidPaymentMode.Payment_ModeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Bank_Name {
                get {
                    try {
                        return ((string)(this[this.tabletbPaidPaymentMode.Bank_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Bank_Name\' in table \'tbPaidPaymentMode\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbPaidPaymentMode.Bank_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Cheque_No {
                get {
                    try {
                        return ((string)(this[this.tabletbPaidPaymentMode.Cheque_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cheque_No\' in table \'tbPaidPaymentMode\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbPaidPaymentMode.Cheque_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Cheque_Date {
                get {
                    try {
                        return ((string)(this[this.tabletbPaidPaymentMode.Cheque_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cheque_Date\' in table \'tbPaidPaymentMode\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbPaidPaymentMode.Cheque_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Branch {
                get {
                    try {
                        return ((string)(this[this.tabletbPaidPaymentMode.BranchColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Branch\' in table \'tbPaidPaymentMode\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbPaidPaymentMode.BranchColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Amount {
                get {
                    try {
                        return ((string)(this[this.tabletbPaidPaymentMode.AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Amount\' in table \'tbPaidPaymentMode\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbPaidPaymentMode.AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPayment_ModeNull() {
                return this.IsNull(this.tabletbPaidPaymentMode.Payment_ModeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPayment_ModeNull() {
                this[this.tabletbPaidPaymentMode.Payment_ModeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBank_NameNull() {
                return this.IsNull(this.tabletbPaidPaymentMode.Bank_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBank_NameNull() {
                this[this.tabletbPaidPaymentMode.Bank_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCheque_NoNull() {
                return this.IsNull(this.tabletbPaidPaymentMode.Cheque_NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCheque_NoNull() {
                this[this.tabletbPaidPaymentMode.Cheque_NoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCheque_DateNull() {
                return this.IsNull(this.tabletbPaidPaymentMode.Cheque_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCheque_DateNull() {
                this[this.tabletbPaidPaymentMode.Cheque_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBranchNull() {
                return this.IsNull(this.tabletbPaidPaymentMode.BranchColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBranchNull() {
                this[this.tabletbPaidPaymentMode.BranchColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountNull() {
                return this.IsNull(this.tabletbPaidPaymentMode.AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountNull() {
                this[this.tabletbPaidPaymentMode.AmountColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class SupplierPaymentSummaryRow : global::System.Data.DataRow {
            
            private SupplierPaymentSummaryDataTable tableSupplierPaymentSummary;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SupplierPaymentSummaryRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSupplierPaymentSummary = ((SupplierPaymentSummaryDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Acc_Code {
                get {
                    try {
                        return ((string)(this[this.tableSupplierPaymentSummary.Acc_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Acc_Code\' in table \'SupplierPaymentSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSupplierPaymentSummary.Acc_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Acc_Name {
                get {
                    try {
                        return ((string)(this[this.tableSupplierPaymentSummary.Acc_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Acc_Name\' in table \'SupplierPaymentSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSupplierPaymentSummary.Acc_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Org_Doc_no {
                get {
                    try {
                        return ((string)(this[this.tableSupplierPaymentSummary.Org_Doc_noColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Org_Doc_no\' in table \'SupplierPaymentSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSupplierPaymentSummary.Org_Doc_noColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Post_Date {
                get {
                    try {
                        return ((string)(this[this.tableSupplierPaymentSummary.Post_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Post_Date\' in table \'SupplierPaymentSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSupplierPaymentSummary.Post_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Payment_Mode {
                get {
                    try {
                        return ((string)(this[this.tableSupplierPaymentSummary.Payment_ModeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Payment_Mode\' in table \'SupplierPaymentSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSupplierPaymentSummary.Payment_ModeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Bank_Name {
                get {
                    try {
                        return ((string)(this[this.tableSupplierPaymentSummary.Bank_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Bank_Name\' in table \'SupplierPaymentSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSupplierPaymentSummary.Bank_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Cheque_No {
                get {
                    try {
                        return ((string)(this[this.tableSupplierPaymentSummary.Cheque_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cheque_No\' in table \'SupplierPaymentSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSupplierPaymentSummary.Cheque_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Cheque_Date {
                get {
                    try {
                        return ((string)(this[this.tableSupplierPaymentSummary.Cheque_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cheque_Date\' in table \'SupplierPaymentSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSupplierPaymentSummary.Cheque_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Branch {
                get {
                    try {
                        return ((string)(this[this.tableSupplierPaymentSummary.BranchColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Branch\' in table \'SupplierPaymentSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSupplierPaymentSummary.BranchColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Amount {
                get {
                    try {
                        return ((string)(this[this.tableSupplierPaymentSummary.AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Amount\' in table \'SupplierPaymentSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSupplierPaymentSummary.AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CodeFrom {
                get {
                    try {
                        return ((string)(this[this.tableSupplierPaymentSummary.CodeFromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CodeFrom\' in table \'SupplierPaymentSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSupplierPaymentSummary.CodeFromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CodeTo {
                get {
                    try {
                        return ((string)(this[this.tableSupplierPaymentSummary.CodeToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CodeTo\' in table \'SupplierPaymentSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSupplierPaymentSummary.CodeToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAcc_CodeNull() {
                return this.IsNull(this.tableSupplierPaymentSummary.Acc_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAcc_CodeNull() {
                this[this.tableSupplierPaymentSummary.Acc_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAcc_NameNull() {
                return this.IsNull(this.tableSupplierPaymentSummary.Acc_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAcc_NameNull() {
                this[this.tableSupplierPaymentSummary.Acc_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOrg_Doc_noNull() {
                return this.IsNull(this.tableSupplierPaymentSummary.Org_Doc_noColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOrg_Doc_noNull() {
                this[this.tableSupplierPaymentSummary.Org_Doc_noColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPost_DateNull() {
                return this.IsNull(this.tableSupplierPaymentSummary.Post_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPost_DateNull() {
                this[this.tableSupplierPaymentSummary.Post_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPayment_ModeNull() {
                return this.IsNull(this.tableSupplierPaymentSummary.Payment_ModeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPayment_ModeNull() {
                this[this.tableSupplierPaymentSummary.Payment_ModeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBank_NameNull() {
                return this.IsNull(this.tableSupplierPaymentSummary.Bank_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBank_NameNull() {
                this[this.tableSupplierPaymentSummary.Bank_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCheque_NoNull() {
                return this.IsNull(this.tableSupplierPaymentSummary.Cheque_NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCheque_NoNull() {
                this[this.tableSupplierPaymentSummary.Cheque_NoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCheque_DateNull() {
                return this.IsNull(this.tableSupplierPaymentSummary.Cheque_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCheque_DateNull() {
                this[this.tableSupplierPaymentSummary.Cheque_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBranchNull() {
                return this.IsNull(this.tableSupplierPaymentSummary.BranchColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBranchNull() {
                this[this.tableSupplierPaymentSummary.BranchColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountNull() {
                return this.IsNull(this.tableSupplierPaymentSummary.AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountNull() {
                this[this.tableSupplierPaymentSummary.AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCodeFromNull() {
                return this.IsNull(this.tableSupplierPaymentSummary.CodeFromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCodeFromNull() {
                this[this.tableSupplierPaymentSummary.CodeFromColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCodeToNull() {
                return this.IsNull(this.tableSupplierPaymentSummary.CodeToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCodeToNull() {
                this[this.tableSupplierPaymentSummary.CodeToColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class TransactionSummaryRow : global::System.Data.DataRow {
            
            private TransactionSummaryDataTable tableTransactionSummary;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TransactionSummaryRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTransactionSummary = ((TransactionSummaryDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Loca {
                get {
                    try {
                        return ((string)(this[this.tableTransactionSummary.LocaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Loca\' in table \'TransactionSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTransactionSummary.LocaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Loca_Descrip {
                get {
                    try {
                        return ((string)(this[this.tableTransactionSummary.Loca_DescripColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Loca_Descrip\' in table \'TransactionSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTransactionSummary.Loca_DescripColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string To_LocaDesc {
                get {
                    try {
                        return ((string)(this[this.tableTransactionSummary.To_LocaDescColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'To_LocaDesc\' in table \'TransactionSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTransactionSummary.To_LocaDescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Supplier_Id {
                get {
                    try {
                        return ((string)(this[this.tableTransactionSummary.Supplier_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Supplier_Id\' in table \'TransactionSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTransactionSummary.Supplier_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Supp_Name {
                get {
                    try {
                        return ((string)(this[this.tableTransactionSummary.Supp_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Supp_Name\' in table \'TransactionSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTransactionSummary.Supp_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Post_Date {
                get {
                    try {
                        return ((string)(this[this.tableTransactionSummary.Post_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Post_Date\' in table \'TransactionSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTransactionSummary.Post_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Net_Amount {
                get {
                    try {
                        return ((string)(this[this.tableTransactionSummary.Net_AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Net_Amount\' in table \'TransactionSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTransactionSummary.Net_AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Doc_No {
                get {
                    try {
                        return ((string)(this[this.tableTransactionSummary.Doc_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Doc_No\' in table \'TransactionSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTransactionSummary.Doc_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CodeFrom {
                get {
                    try {
                        return ((string)(this[this.tableTransactionSummary.CodeFromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CodeFrom\' in table \'TransactionSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTransactionSummary.CodeFromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CodeTo {
                get {
                    try {
                        return ((string)(this[this.tableTransactionSummary.CodeToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CodeTo\' in table \'TransactionSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTransactionSummary.CodeToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string To_Loca {
                get {
                    try {
                        return ((string)(this[this.tableTransactionSummary.To_LocaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'To_Loca\' in table \'TransactionSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTransactionSummary.To_LocaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Amount {
                get {
                    try {
                        return ((decimal)(this[this.tableTransactionSummary.AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Amount\' in table \'TransactionSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTransactionSummary.AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Discount {
                get {
                    try {
                        return ((decimal)(this[this.tableTransactionSummary.DiscountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Discount\' in table \'TransactionSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTransactionSummary.DiscountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prod_Code {
                get {
                    try {
                        return ((string)(this[this.tableTransactionSummary.Prod_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Prod_Code\' in table \'TransactionSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTransactionSummary.Prod_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prod_Name {
                get {
                    try {
                        return ((string)(this[this.tableTransactionSummary.Prod_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Prod_Name\' in table \'TransactionSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTransactionSummary.Prod_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Barcode {
                get {
                    try {
                        return ((string)(this[this.tableTransactionSummary.BarcodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Barcode\' in table \'TransactionSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTransactionSummary.BarcodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Qty {
                get {
                    try {
                        return ((decimal)(this[this.tableTransactionSummary.QtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Qty\' in table \'TransactionSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTransactionSummary.QtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal FreeQty {
                get {
                    try {
                        return ((decimal)(this[this.tableTransactionSummary.FreeQtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FreeQty\' in table \'TransactionSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTransactionSummary.FreeQtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Disc {
                get {
                    try {
                        return ((decimal)(this[this.tableTransactionSummary.DiscColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Disc\' in table \'TransactionSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTransactionSummary.DiscColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Purchase_Price {
                get {
                    try {
                        return ((decimal)(this[this.tableTransactionSummary.Purchase_PriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Purchase_Price\' in table \'TransactionSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTransactionSummary.Purchase_PriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Selling_Price {
                get {
                    try {
                        return ((decimal)(this[this.tableTransactionSummary.Selling_PriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Selling_Price\' in table \'TransactionSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTransactionSummary.Selling_PriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Unit {
                get {
                    try {
                        return ((string)(this[this.tableTransactionSummary.UnitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Unit\' in table \'TransactionSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTransactionSummary.UnitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ItAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableTransactionSummary.ItAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItAmount\' in table \'TransactionSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTransactionSummary.ItAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PayType {
                get {
                    try {
                        return ((string)(this[this.tableTransactionSummary.PayTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PayType\' in table \'TransactionSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTransactionSummary.PayTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Cash {
                get {
                    try {
                        return ((decimal)(this[this.tableTransactionSummary.CashColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cash\' in table \'TransactionSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTransactionSummary.CashColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Credit {
                get {
                    try {
                        return ((decimal)(this[this.tableTransactionSummary.CreditColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Credit\' in table \'TransactionSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTransactionSummary.CreditColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Balance {
                get {
                    try {
                        return ((decimal)(this[this.tableTransactionSummary.BalanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Balance\' in table \'TransactionSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTransactionSummary.BalanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocaNull() {
                return this.IsNull(this.tableTransactionSummary.LocaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocaNull() {
                this[this.tableTransactionSummary.LocaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLoca_DescripNull() {
                return this.IsNull(this.tableTransactionSummary.Loca_DescripColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLoca_DescripNull() {
                this[this.tableTransactionSummary.Loca_DescripColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTo_LocaDescNull() {
                return this.IsNull(this.tableTransactionSummary.To_LocaDescColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTo_LocaDescNull() {
                this[this.tableTransactionSummary.To_LocaDescColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupplier_IdNull() {
                return this.IsNull(this.tableTransactionSummary.Supplier_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupplier_IdNull() {
                this[this.tableTransactionSummary.Supplier_IdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupp_NameNull() {
                return this.IsNull(this.tableTransactionSummary.Supp_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupp_NameNull() {
                this[this.tableTransactionSummary.Supp_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPost_DateNull() {
                return this.IsNull(this.tableTransactionSummary.Post_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPost_DateNull() {
                this[this.tableTransactionSummary.Post_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNet_AmountNull() {
                return this.IsNull(this.tableTransactionSummary.Net_AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNet_AmountNull() {
                this[this.tableTransactionSummary.Net_AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDoc_NoNull() {
                return this.IsNull(this.tableTransactionSummary.Doc_NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDoc_NoNull() {
                this[this.tableTransactionSummary.Doc_NoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCodeFromNull() {
                return this.IsNull(this.tableTransactionSummary.CodeFromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCodeFromNull() {
                this[this.tableTransactionSummary.CodeFromColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCodeToNull() {
                return this.IsNull(this.tableTransactionSummary.CodeToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCodeToNull() {
                this[this.tableTransactionSummary.CodeToColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTo_LocaNull() {
                return this.IsNull(this.tableTransactionSummary.To_LocaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTo_LocaNull() {
                this[this.tableTransactionSummary.To_LocaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountNull() {
                return this.IsNull(this.tableTransactionSummary.AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountNull() {
                this[this.tableTransactionSummary.AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDiscountNull() {
                return this.IsNull(this.tableTransactionSummary.DiscountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDiscountNull() {
                this[this.tableTransactionSummary.DiscountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_CodeNull() {
                return this.IsNull(this.tableTransactionSummary.Prod_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_CodeNull() {
                this[this.tableTransactionSummary.Prod_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_NameNull() {
                return this.IsNull(this.tableTransactionSummary.Prod_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_NameNull() {
                this[this.tableTransactionSummary.Prod_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBarcodeNull() {
                return this.IsNull(this.tableTransactionSummary.BarcodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBarcodeNull() {
                this[this.tableTransactionSummary.BarcodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQtyNull() {
                return this.IsNull(this.tableTransactionSummary.QtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQtyNull() {
                this[this.tableTransactionSummary.QtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFreeQtyNull() {
                return this.IsNull(this.tableTransactionSummary.FreeQtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFreeQtyNull() {
                this[this.tableTransactionSummary.FreeQtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDiscNull() {
                return this.IsNull(this.tableTransactionSummary.DiscColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDiscNull() {
                this[this.tableTransactionSummary.DiscColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPurchase_PriceNull() {
                return this.IsNull(this.tableTransactionSummary.Purchase_PriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPurchase_PriceNull() {
                this[this.tableTransactionSummary.Purchase_PriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelling_PriceNull() {
                return this.IsNull(this.tableTransactionSummary.Selling_PriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelling_PriceNull() {
                this[this.tableTransactionSummary.Selling_PriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnitNull() {
                return this.IsNull(this.tableTransactionSummary.UnitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnitNull() {
                this[this.tableTransactionSummary.UnitColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItAmountNull() {
                return this.IsNull(this.tableTransactionSummary.ItAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItAmountNull() {
                this[this.tableTransactionSummary.ItAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPayTypeNull() {
                return this.IsNull(this.tableTransactionSummary.PayTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPayTypeNull() {
                this[this.tableTransactionSummary.PayTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCashNull() {
                return this.IsNull(this.tableTransactionSummary.CashColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCashNull() {
                this[this.tableTransactionSummary.CashColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreditNull() {
                return this.IsNull(this.tableTransactionSummary.CreditColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreditNull() {
                this[this.tableTransactionSummary.CreditColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBalanceNull() {
                return this.IsNull(this.tableTransactionSummary.BalanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBalanceNull() {
                this[this.tableTransactionSummary.BalanceColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class StockDetailsRow : global::System.Data.DataRow {
            
            private StockDetailsDataTable tableStockDetails;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal StockDetailsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableStockDetails = ((StockDetailsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prod_Code {
                get {
                    try {
                        return ((string)(this[this.tableStockDetails.Prod_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Prod_Code\' in table \'StockDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockDetails.Prod_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prod_Name {
                get {
                    try {
                        return ((string)(this[this.tableStockDetails.Prod_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Prod_Name\' in table \'StockDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockDetails.Prod_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Department_Id {
                get {
                    try {
                        return ((string)(this[this.tableStockDetails.Department_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Department_Id\' in table \'StockDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockDetails.Department_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Category_Id {
                get {
                    try {
                        return ((string)(this[this.tableStockDetails.Category_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Category_Id\' in table \'StockDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockDetails.Category_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Supplier_Id {
                get {
                    try {
                        return ((string)(this[this.tableStockDetails.Supplier_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Supplier_Id\' in table \'StockDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockDetails.Supplier_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Dept_Name {
                get {
                    try {
                        return ((string)(this[this.tableStockDetails.Dept_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Dept_Name\' in table \'StockDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockDetails.Dept_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Cat_Name {
                get {
                    try {
                        return ((string)(this[this.tableStockDetails.Cat_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cat_Name\' in table \'StockDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockDetails.Cat_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Supp_Name {
                get {
                    try {
                        return ((string)(this[this.tableStockDetails.Supp_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Supp_Name\' in table \'StockDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockDetails.Supp_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Manf_Name {
                get {
                    try {
                        return ((string)(this[this.tableStockDetails.Manf_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Manf_Name\' in table \'StockDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockDetails.Manf_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Purchase_price {
                get {
                    try {
                        return ((string)(this[this.tableStockDetails.Purchase_priceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Purchase_price\' in table \'StockDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockDetails.Purchase_priceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Selling_Price {
                get {
                    try {
                        return ((string)(this[this.tableStockDetails.Selling_PriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Selling_Price\' in table \'StockDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockDetails.Selling_PriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Qty {
                get {
                    try {
                        return ((string)(this[this.tableStockDetails.QtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Qty\' in table \'StockDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockDetails.QtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CodeFrom {
                get {
                    try {
                        return ((string)(this[this.tableStockDetails.CodeFromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CodeFrom\' in table \'StockDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockDetails.CodeFromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CodeTo {
                get {
                    try {
                        return ((string)(this[this.tableStockDetails.CodeToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CodeTo\' in table \'StockDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockDetails.CodeToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Manufacturer_Id {
                get {
                    try {
                        return ((string)(this[this.tableStockDetails.Manufacturer_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Manufacturer_Id\' in table \'StockDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockDetails.Manufacturer_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_CodeNull() {
                return this.IsNull(this.tableStockDetails.Prod_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_CodeNull() {
                this[this.tableStockDetails.Prod_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_NameNull() {
                return this.IsNull(this.tableStockDetails.Prod_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_NameNull() {
                this[this.tableStockDetails.Prod_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDepartment_IdNull() {
                return this.IsNull(this.tableStockDetails.Department_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDepartment_IdNull() {
                this[this.tableStockDetails.Department_IdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCategory_IdNull() {
                return this.IsNull(this.tableStockDetails.Category_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCategory_IdNull() {
                this[this.tableStockDetails.Category_IdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupplier_IdNull() {
                return this.IsNull(this.tableStockDetails.Supplier_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupplier_IdNull() {
                this[this.tableStockDetails.Supplier_IdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDept_NameNull() {
                return this.IsNull(this.tableStockDetails.Dept_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDept_NameNull() {
                this[this.tableStockDetails.Dept_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCat_NameNull() {
                return this.IsNull(this.tableStockDetails.Cat_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCat_NameNull() {
                this[this.tableStockDetails.Cat_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupp_NameNull() {
                return this.IsNull(this.tableStockDetails.Supp_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupp_NameNull() {
                this[this.tableStockDetails.Supp_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsManf_NameNull() {
                return this.IsNull(this.tableStockDetails.Manf_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetManf_NameNull() {
                this[this.tableStockDetails.Manf_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPurchase_priceNull() {
                return this.IsNull(this.tableStockDetails.Purchase_priceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPurchase_priceNull() {
                this[this.tableStockDetails.Purchase_priceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelling_PriceNull() {
                return this.IsNull(this.tableStockDetails.Selling_PriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelling_PriceNull() {
                this[this.tableStockDetails.Selling_PriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQtyNull() {
                return this.IsNull(this.tableStockDetails.QtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQtyNull() {
                this[this.tableStockDetails.QtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCodeFromNull() {
                return this.IsNull(this.tableStockDetails.CodeFromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCodeFromNull() {
                this[this.tableStockDetails.CodeFromColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCodeToNull() {
                return this.IsNull(this.tableStockDetails.CodeToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCodeToNull() {
                this[this.tableStockDetails.CodeToColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsManufacturer_IdNull() {
                return this.IsNull(this.tableStockDetails.Manufacturer_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetManufacturer_IdNull() {
                this[this.tableStockDetails.Manufacturer_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dsSalesDetailsRow : global::System.Data.DataRow {
            
            private dsSalesDetailsDataTable tabledsSalesDetails;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsSalesDetailsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledsSalesDetails = ((dsSalesDetailsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prod_Code {
                get {
                    try {
                        return ((string)(this[this.tabledsSalesDetails.Prod_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Prod_Code\' in table \'dsSalesDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsSalesDetails.Prod_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prod_Name {
                get {
                    try {
                        return ((string)(this[this.tabledsSalesDetails.Prod_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Prod_Name\' in table \'dsSalesDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsSalesDetails.Prod_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Purchase_Price {
                get {
                    try {
                        return ((decimal)(this[this.tabledsSalesDetails.Purchase_PriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Purchase_Price\' in table \'dsSalesDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsSalesDetails.Purchase_PriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Selling_Price {
                get {
                    try {
                        return ((decimal)(this[this.tabledsSalesDetails.Selling_PriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Selling_Price\' in table \'dsSalesDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsSalesDetails.Selling_PriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Qty {
                get {
                    try {
                        return ((double)(this[this.tabledsSalesDetails.QtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Qty\' in table \'dsSalesDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsSalesDetails.QtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Loca {
                get {
                    try {
                        return ((string)(this[this.tabledsSalesDetails.LocaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Loca\' in table \'dsSalesDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsSalesDetails.LocaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Loca_Descrip {
                get {
                    try {
                        return ((string)(this[this.tabledsSalesDetails.Loca_DescripColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Loca_Descrip\' in table \'dsSalesDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsSalesDetails.Loca_DescripColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CodeFrom {
                get {
                    try {
                        return ((string)(this[this.tabledsSalesDetails.CodeFromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CodeFrom\' in table \'dsSalesDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsSalesDetails.CodeFromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CodeTo {
                get {
                    try {
                        return ((string)(this[this.tabledsSalesDetails.CodeToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CodeTo\' in table \'dsSalesDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsSalesDetails.CodeToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Department_Id {
                get {
                    try {
                        return ((string)(this[this.tabledsSalesDetails.Department_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Department_Id\' in table \'dsSalesDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsSalesDetails.Department_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Dept_Name {
                get {
                    try {
                        return ((string)(this[this.tabledsSalesDetails.Dept_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Dept_Name\' in table \'dsSalesDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsSalesDetails.Dept_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Category_Id {
                get {
                    try {
                        return ((string)(this[this.tabledsSalesDetails.Category_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Category_Id\' in table \'dsSalesDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsSalesDetails.Category_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Cat_Name {
                get {
                    try {
                        return ((string)(this[this.tabledsSalesDetails.Cat_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cat_Name\' in table \'dsSalesDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsSalesDetails.Cat_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Supplier_Id {
                get {
                    try {
                        return ((string)(this[this.tabledsSalesDetails.Supplier_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Supplier_Id\' in table \'dsSalesDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsSalesDetails.Supplier_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Supp_Name {
                get {
                    try {
                        return ((string)(this[this.tabledsSalesDetails.Supp_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Supp_Name\' in table \'dsSalesDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsSalesDetails.Supp_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Manufacturer_Id {
                get {
                    try {
                        return ((string)(this[this.tabledsSalesDetails.Manufacturer_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Manufacturer_Id\' in table \'dsSalesDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsSalesDetails.Manufacturer_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Manf_Name {
                get {
                    try {
                        return ((string)(this[this.tabledsSalesDetails.Manf_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Manf_Name\' in table \'dsSalesDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsSalesDetails.Manf_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Amount {
                get {
                    try {
                        return ((decimal)(this[this.tabledsSalesDetails.AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Amount\' in table \'dsSalesDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsSalesDetails.AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Iid {
                get {
                    try {
                        return ((string)(this[this.tabledsSalesDetails.IidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Iid\' in table \'dsSalesDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsSalesDetails.IidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DateFrom {
                get {
                    try {
                        return ((string)(this[this.tabledsSalesDetails.DateFromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateFrom\' in table \'dsSalesDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsSalesDetails.DateFromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DateTo {
                get {
                    try {
                        return ((string)(this[this.tabledsSalesDetails.DateToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateTo\' in table \'dsSalesDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsSalesDetails.DateToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Sales_Date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabledsSalesDetails.Sales_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Sales_Date\' in table \'dsSalesDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsSalesDetails.Sales_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] Prod_Image {
                get {
                    try {
                        return ((byte[])(this[this.tabledsSalesDetails.Prod_ImageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Prod_Image\' in table \'dsSalesDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsSalesDetails.Prod_ImageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_CodeNull() {
                return this.IsNull(this.tabledsSalesDetails.Prod_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_CodeNull() {
                this[this.tabledsSalesDetails.Prod_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_NameNull() {
                return this.IsNull(this.tabledsSalesDetails.Prod_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_NameNull() {
                this[this.tabledsSalesDetails.Prod_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPurchase_PriceNull() {
                return this.IsNull(this.tabledsSalesDetails.Purchase_PriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPurchase_PriceNull() {
                this[this.tabledsSalesDetails.Purchase_PriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelling_PriceNull() {
                return this.IsNull(this.tabledsSalesDetails.Selling_PriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelling_PriceNull() {
                this[this.tabledsSalesDetails.Selling_PriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQtyNull() {
                return this.IsNull(this.tabledsSalesDetails.QtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQtyNull() {
                this[this.tabledsSalesDetails.QtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocaNull() {
                return this.IsNull(this.tabledsSalesDetails.LocaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocaNull() {
                this[this.tabledsSalesDetails.LocaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLoca_DescripNull() {
                return this.IsNull(this.tabledsSalesDetails.Loca_DescripColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLoca_DescripNull() {
                this[this.tabledsSalesDetails.Loca_DescripColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCodeFromNull() {
                return this.IsNull(this.tabledsSalesDetails.CodeFromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCodeFromNull() {
                this[this.tabledsSalesDetails.CodeFromColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCodeToNull() {
                return this.IsNull(this.tabledsSalesDetails.CodeToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCodeToNull() {
                this[this.tabledsSalesDetails.CodeToColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDepartment_IdNull() {
                return this.IsNull(this.tabledsSalesDetails.Department_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDepartment_IdNull() {
                this[this.tabledsSalesDetails.Department_IdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDept_NameNull() {
                return this.IsNull(this.tabledsSalesDetails.Dept_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDept_NameNull() {
                this[this.tabledsSalesDetails.Dept_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCategory_IdNull() {
                return this.IsNull(this.tabledsSalesDetails.Category_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCategory_IdNull() {
                this[this.tabledsSalesDetails.Category_IdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCat_NameNull() {
                return this.IsNull(this.tabledsSalesDetails.Cat_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCat_NameNull() {
                this[this.tabledsSalesDetails.Cat_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupplier_IdNull() {
                return this.IsNull(this.tabledsSalesDetails.Supplier_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupplier_IdNull() {
                this[this.tabledsSalesDetails.Supplier_IdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupp_NameNull() {
                return this.IsNull(this.tabledsSalesDetails.Supp_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupp_NameNull() {
                this[this.tabledsSalesDetails.Supp_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsManufacturer_IdNull() {
                return this.IsNull(this.tabledsSalesDetails.Manufacturer_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetManufacturer_IdNull() {
                this[this.tabledsSalesDetails.Manufacturer_IdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsManf_NameNull() {
                return this.IsNull(this.tabledsSalesDetails.Manf_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetManf_NameNull() {
                this[this.tabledsSalesDetails.Manf_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountNull() {
                return this.IsNull(this.tabledsSalesDetails.AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountNull() {
                this[this.tabledsSalesDetails.AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIidNull() {
                return this.IsNull(this.tabledsSalesDetails.IidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIidNull() {
                this[this.tabledsSalesDetails.IidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateFromNull() {
                return this.IsNull(this.tabledsSalesDetails.DateFromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateFromNull() {
                this[this.tabledsSalesDetails.DateFromColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateToNull() {
                return this.IsNull(this.tabledsSalesDetails.DateToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateToNull() {
                this[this.tabledsSalesDetails.DateToColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSales_DateNull() {
                return this.IsNull(this.tabledsSalesDetails.Sales_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSales_DateNull() {
                this[this.tabledsSalesDetails.Sales_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_ImageNull() {
                return this.IsNull(this.tabledsSalesDetails.Prod_ImageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_ImageNull() {
                this[this.tabledsSalesDetails.Prod_ImageColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tbReportMonthlyAnalyseRow : global::System.Data.DataRow {
            
            private tbReportMonthlyAnalyseDataTable tabletbReportMonthlyAnalyse;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tbReportMonthlyAnalyseRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletbReportMonthlyAnalyse = ((tbReportMonthlyAnalyseDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Month_Name {
                get {
                    try {
                        return ((string)(this[this.tabletbReportMonthlyAnalyse.Month_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Month_Name\' in table \'tbReportMonthlyAnalyse\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbReportMonthlyAnalyse.Month_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Sale_Amount {
                get {
                    try {
                        return ((double)(this[this.tabletbReportMonthlyAnalyse.Sale_AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Sale_Amount\' in table \'tbReportMonthlyAnalyse\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbReportMonthlyAnalyse.Sale_AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Purch_amount {
                get {
                    try {
                        return ((double)(this[this.tabletbReportMonthlyAnalyse.Purch_amountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Purch_amount\' in table \'tbReportMonthlyAnalyse\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbReportMonthlyAnalyse.Purch_amountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string idx {
                get {
                    try {
                        return ((string)(this[this.tabletbReportMonthlyAnalyse.idxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'idx\' in table \'tbReportMonthlyAnalyse\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbReportMonthlyAnalyse.idxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Sale_Qty {
                get {
                    try {
                        return ((decimal)(this[this.tabletbReportMonthlyAnalyse.Sale_QtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Sale_Qty\' in table \'tbReportMonthlyAnalyse\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbReportMonthlyAnalyse.Sale_QtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Purch_Qty {
                get {
                    try {
                        return ((decimal)(this[this.tabletbReportMonthlyAnalyse.Purch_QtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Purch_Qty\' in table \'tbReportMonthlyAnalyse\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbReportMonthlyAnalyse.Purch_QtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prod_Code {
                get {
                    try {
                        return ((string)(this[this.tabletbReportMonthlyAnalyse.Prod_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Prod_Code\' in table \'tbReportMonthlyAnalyse\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbReportMonthlyAnalyse.Prod_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prod_Name {
                get {
                    try {
                        return ((string)(this[this.tabletbReportMonthlyAnalyse.Prod_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Prod_Name\' in table \'tbReportMonthlyAnalyse\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbReportMonthlyAnalyse.Prod_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DateFrom {
                get {
                    try {
                        return ((string)(this[this.tabletbReportMonthlyAnalyse.DateFromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateFrom\' in table \'tbReportMonthlyAnalyse\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbReportMonthlyAnalyse.DateFromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DateTo {
                get {
                    try {
                        return ((string)(this[this.tabletbReportMonthlyAnalyse.DateToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateTo\' in table \'tbReportMonthlyAnalyse\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbReportMonthlyAnalyse.DateToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Profit_Amount {
                get {
                    try {
                        return ((string)(this[this.tabletbReportMonthlyAnalyse.Profit_AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Profit_Amount\' in table \'tbReportMonthlyAnalyse\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tabletbReportMonthlyAnalyse.Profit_AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Tr_Date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletbReportMonthlyAnalyse.Tr_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Tr_Date\' in table \'tbReportMonthlyAnalyse\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbReportMonthlyAnalyse.Tr_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMonth_NameNull() {
                return this.IsNull(this.tabletbReportMonthlyAnalyse.Month_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMonth_NameNull() {
                this[this.tabletbReportMonthlyAnalyse.Month_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSale_AmountNull() {
                return this.IsNull(this.tabletbReportMonthlyAnalyse.Sale_AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSale_AmountNull() {
                this[this.tabletbReportMonthlyAnalyse.Sale_AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPurch_amountNull() {
                return this.IsNull(this.tabletbReportMonthlyAnalyse.Purch_amountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPurch_amountNull() {
                this[this.tabletbReportMonthlyAnalyse.Purch_amountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsidxNull() {
                return this.IsNull(this.tabletbReportMonthlyAnalyse.idxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetidxNull() {
                this[this.tabletbReportMonthlyAnalyse.idxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSale_QtyNull() {
                return this.IsNull(this.tabletbReportMonthlyAnalyse.Sale_QtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSale_QtyNull() {
                this[this.tabletbReportMonthlyAnalyse.Sale_QtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPurch_QtyNull() {
                return this.IsNull(this.tabletbReportMonthlyAnalyse.Purch_QtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPurch_QtyNull() {
                this[this.tabletbReportMonthlyAnalyse.Purch_QtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_CodeNull() {
                return this.IsNull(this.tabletbReportMonthlyAnalyse.Prod_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_CodeNull() {
                this[this.tabletbReportMonthlyAnalyse.Prod_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_NameNull() {
                return this.IsNull(this.tabletbReportMonthlyAnalyse.Prod_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_NameNull() {
                this[this.tabletbReportMonthlyAnalyse.Prod_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateFromNull() {
                return this.IsNull(this.tabletbReportMonthlyAnalyse.DateFromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateFromNull() {
                this[this.tabletbReportMonthlyAnalyse.DateFromColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateToNull() {
                return this.IsNull(this.tabletbReportMonthlyAnalyse.DateToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateToNull() {
                this[this.tabletbReportMonthlyAnalyse.DateToColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProfit_AmountNull() {
                return this.IsNull(this.tabletbReportMonthlyAnalyse.Profit_AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProfit_AmountNull() {
                this[this.tabletbReportMonthlyAnalyse.Profit_AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTr_DateNull() {
                return this.IsNull(this.tabletbReportMonthlyAnalyse.Tr_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTr_DateNull() {
                this[this.tabletbReportMonthlyAnalyse.Tr_DateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CollectionRow : global::System.Data.DataRow {
            
            private CollectionDataTable tableCollection;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CollectionRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCollection = ((CollectionDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Code {
                get {
                    try {
                        return ((string)(this[this.tableCollection.CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Code\' in table \'Collection\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCollection.CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tableCollection.NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Name\' in table \'Collection\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCollection.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCodeNull() {
                return this.IsNull(this.tableCollection.CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCodeNull() {
                this[this.tableCollection.CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNameNull() {
                return this.IsNull(this.tableCollection.NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNameNull() {
                this[this.tableCollection.NameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class SelectedRow : global::System.Data.DataRow {
            
            private SelectedDataTable tableSelected;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SelectedRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSelected = ((SelectedDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Code {
                get {
                    try {
                        return ((string)(this[this.tableSelected.CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Code\' in table \'Selected\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelected.CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tableSelected.NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Name\' in table \'Selected\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelected.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCodeNull() {
                return this.IsNull(this.tableSelected.CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCodeNull() {
                this[this.tableSelected.CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNameNull() {
                return this.IsNull(this.tableSelected.NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNameNull() {
                this[this.tableSelected.NameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dsPurchasingDetailsRow : global::System.Data.DataRow {
            
            private dsPurchasingDetailsDataTable tabledsPurchasingDetails;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsPurchasingDetailsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledsPurchasingDetails = ((dsPurchasingDetailsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prod_Code {
                get {
                    try {
                        return ((string)(this[this.tabledsPurchasingDetails.Prod_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Prod_Code\' in table \'dsPurchasingDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurchasingDetails.Prod_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prod_Name {
                get {
                    try {
                        return ((string)(this[this.tabledsPurchasingDetails.Prod_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Prod_Name\' in table \'dsPurchasingDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurchasingDetails.Prod_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Purchase_Price {
                get {
                    try {
                        return ((decimal)(this[this.tabledsPurchasingDetails.Purchase_PriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Purchase_Price\' in table \'dsPurchasingDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurchasingDetails.Purchase_PriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Selling_Price {
                get {
                    try {
                        return ((decimal)(this[this.tabledsPurchasingDetails.Selling_PriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Selling_Price\' in table \'dsPurchasingDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurchasingDetails.Selling_PriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Qty {
                get {
                    try {
                        return ((double)(this[this.tabledsPurchasingDetails.QtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Qty\' in table \'dsPurchasingDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurchasingDetails.QtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Loca {
                get {
                    try {
                        return ((string)(this[this.tabledsPurchasingDetails.LocaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Loca\' in table \'dsPurchasingDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurchasingDetails.LocaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Loca_Descrip {
                get {
                    try {
                        return ((string)(this[this.tabledsPurchasingDetails.Loca_DescripColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Loca_Descrip\' in table \'dsPurchasingDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurchasingDetails.Loca_DescripColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CodeFrom {
                get {
                    try {
                        return ((string)(this[this.tabledsPurchasingDetails.CodeFromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CodeFrom\' in table \'dsPurchasingDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurchasingDetails.CodeFromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CodeTo {
                get {
                    try {
                        return ((string)(this[this.tabledsPurchasingDetails.CodeToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CodeTo\' in table \'dsPurchasingDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurchasingDetails.CodeToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Department_Id {
                get {
                    try {
                        return ((string)(this[this.tabledsPurchasingDetails.Department_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Department_Id\' in table \'dsPurchasingDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurchasingDetails.Department_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Dept_Name {
                get {
                    try {
                        return ((string)(this[this.tabledsPurchasingDetails.Dept_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Dept_Name\' in table \'dsPurchasingDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurchasingDetails.Dept_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Category_Id {
                get {
                    try {
                        return ((string)(this[this.tabledsPurchasingDetails.Category_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Category_Id\' in table \'dsPurchasingDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurchasingDetails.Category_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Cat_Name {
                get {
                    try {
                        return ((string)(this[this.tabledsPurchasingDetails.Cat_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cat_Name\' in table \'dsPurchasingDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurchasingDetails.Cat_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Supplier_Id {
                get {
                    try {
                        return ((string)(this[this.tabledsPurchasingDetails.Supplier_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Supplier_Id\' in table \'dsPurchasingDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurchasingDetails.Supplier_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Supp_Name {
                get {
                    try {
                        return ((string)(this[this.tabledsPurchasingDetails.Supp_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Supp_Name\' in table \'dsPurchasingDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurchasingDetails.Supp_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Manufacturer_Id {
                get {
                    try {
                        return ((string)(this[this.tabledsPurchasingDetails.Manufacturer_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Manufacturer_Id\' in table \'dsPurchasingDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurchasingDetails.Manufacturer_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Manf_Name {
                get {
                    try {
                        return ((string)(this[this.tabledsPurchasingDetails.Manf_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Manf_Name\' in table \'dsPurchasingDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurchasingDetails.Manf_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Amount {
                get {
                    try {
                        return ((decimal)(this[this.tabledsPurchasingDetails.AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Amount\' in table \'dsPurchasingDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurchasingDetails.AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DateFrom {
                get {
                    try {
                        return ((string)(this[this.tabledsPurchasingDetails.DateFromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateFrom\' in table \'dsPurchasingDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurchasingDetails.DateFromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DateTo {
                get {
                    try {
                        return ((string)(this[this.tabledsPurchasingDetails.DateToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateTo\' in table \'dsPurchasingDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurchasingDetails.DateToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Purch_Date {
                get {
                    try {
                        return ((string)(this[this.tabledsPurchasingDetails.Purch_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Purch_Date\' in table \'dsPurchasingDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurchasingDetails.Purch_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Doc_No {
                get {
                    try {
                        return ((string)(this[this.tabledsPurchasingDetails.Doc_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Doc_No\' in table \'dsPurchasingDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurchasingDetails.Doc_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_CodeNull() {
                return this.IsNull(this.tabledsPurchasingDetails.Prod_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_CodeNull() {
                this[this.tabledsPurchasingDetails.Prod_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_NameNull() {
                return this.IsNull(this.tabledsPurchasingDetails.Prod_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_NameNull() {
                this[this.tabledsPurchasingDetails.Prod_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPurchase_PriceNull() {
                return this.IsNull(this.tabledsPurchasingDetails.Purchase_PriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPurchase_PriceNull() {
                this[this.tabledsPurchasingDetails.Purchase_PriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelling_PriceNull() {
                return this.IsNull(this.tabledsPurchasingDetails.Selling_PriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelling_PriceNull() {
                this[this.tabledsPurchasingDetails.Selling_PriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQtyNull() {
                return this.IsNull(this.tabledsPurchasingDetails.QtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQtyNull() {
                this[this.tabledsPurchasingDetails.QtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocaNull() {
                return this.IsNull(this.tabledsPurchasingDetails.LocaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocaNull() {
                this[this.tabledsPurchasingDetails.LocaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLoca_DescripNull() {
                return this.IsNull(this.tabledsPurchasingDetails.Loca_DescripColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLoca_DescripNull() {
                this[this.tabledsPurchasingDetails.Loca_DescripColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCodeFromNull() {
                return this.IsNull(this.tabledsPurchasingDetails.CodeFromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCodeFromNull() {
                this[this.tabledsPurchasingDetails.CodeFromColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCodeToNull() {
                return this.IsNull(this.tabledsPurchasingDetails.CodeToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCodeToNull() {
                this[this.tabledsPurchasingDetails.CodeToColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDepartment_IdNull() {
                return this.IsNull(this.tabledsPurchasingDetails.Department_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDepartment_IdNull() {
                this[this.tabledsPurchasingDetails.Department_IdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDept_NameNull() {
                return this.IsNull(this.tabledsPurchasingDetails.Dept_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDept_NameNull() {
                this[this.tabledsPurchasingDetails.Dept_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCategory_IdNull() {
                return this.IsNull(this.tabledsPurchasingDetails.Category_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCategory_IdNull() {
                this[this.tabledsPurchasingDetails.Category_IdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCat_NameNull() {
                return this.IsNull(this.tabledsPurchasingDetails.Cat_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCat_NameNull() {
                this[this.tabledsPurchasingDetails.Cat_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupplier_IdNull() {
                return this.IsNull(this.tabledsPurchasingDetails.Supplier_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupplier_IdNull() {
                this[this.tabledsPurchasingDetails.Supplier_IdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupp_NameNull() {
                return this.IsNull(this.tabledsPurchasingDetails.Supp_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupp_NameNull() {
                this[this.tabledsPurchasingDetails.Supp_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsManufacturer_IdNull() {
                return this.IsNull(this.tabledsPurchasingDetails.Manufacturer_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetManufacturer_IdNull() {
                this[this.tabledsPurchasingDetails.Manufacturer_IdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsManf_NameNull() {
                return this.IsNull(this.tabledsPurchasingDetails.Manf_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetManf_NameNull() {
                this[this.tabledsPurchasingDetails.Manf_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountNull() {
                return this.IsNull(this.tabledsPurchasingDetails.AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountNull() {
                this[this.tabledsPurchasingDetails.AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateFromNull() {
                return this.IsNull(this.tabledsPurchasingDetails.DateFromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateFromNull() {
                this[this.tabledsPurchasingDetails.DateFromColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateToNull() {
                return this.IsNull(this.tabledsPurchasingDetails.DateToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateToNull() {
                this[this.tabledsPurchasingDetails.DateToColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPurch_DateNull() {
                return this.IsNull(this.tabledsPurchasingDetails.Purch_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPurch_DateNull() {
                this[this.tabledsPurchasingDetails.Purch_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDoc_NoNull() {
                return this.IsNull(this.tabledsPurchasingDetails.Doc_NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDoc_NoNull() {
                this[this.tabledsPurchasingDetails.Doc_NoColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dsAnalyseDataRow : global::System.Data.DataRow {
            
            private dsAnalyseDataDataTable tabledsAnalyseData;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsAnalyseDataRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledsAnalyseData = ((dsAnalyseDataDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prod_Code {
                get {
                    try {
                        return ((string)(this[this.tabledsAnalyseData.Prod_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Prod_Code\' in table \'dsAnalyseData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsAnalyseData.Prod_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prod_Name {
                get {
                    try {
                        return ((string)(this[this.tabledsAnalyseData.Prod_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Prod_Name\' in table \'dsAnalyseData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsAnalyseData.Prod_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Purchase_price {
                get {
                    try {
                        return ((decimal)(this[this.tabledsAnalyseData.Purchase_priceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Purchase_price\' in table \'dsAnalyseData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsAnalyseData.Purchase_priceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Selling_Price {
                get {
                    try {
                        return ((decimal)(this[this.tabledsAnalyseData.Selling_PriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Selling_Price\' in table \'dsAnalyseData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsAnalyseData.Selling_PriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Purch_Amount {
                get {
                    try {
                        return ((decimal)(this[this.tabledsAnalyseData.Purch_AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Purch_Amount\' in table \'dsAnalyseData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsAnalyseData.Purch_AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Sel_Amount {
                get {
                    try {
                        return ((decimal)(this[this.tabledsAnalyseData.Sel_AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Sel_Amount\' in table \'dsAnalyseData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsAnalyseData.Sel_AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Pro_Amount {
                get {
                    try {
                        return ((decimal)(this[this.tabledsAnalyseData.Pro_AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Pro_Amount\' in table \'dsAnalyseData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsAnalyseData.Pro_AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Tr_Date {
                get {
                    try {
                        return ((string)(this[this.tabledsAnalyseData.Tr_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Tr_Date\' in table \'dsAnalyseData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsAnalyseData.Tr_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Sel_Qty {
                get {
                    try {
                        return ((double)(this[this.tabledsAnalyseData.Sel_QtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Sel_Qty\' in table \'dsAnalyseData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsAnalyseData.Sel_QtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DateFrom {
                get {
                    try {
                        return ((string)(this[this.tabledsAnalyseData.DateFromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateFrom\' in table \'dsAnalyseData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsAnalyseData.DateFromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DateTo {
                get {
                    try {
                        return ((string)(this[this.tabledsAnalyseData.DateToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateTo\' in table \'dsAnalyseData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsAnalyseData.DateToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Qty {
                get {
                    try {
                        return ((double)(this[this.tabledsAnalyseData.QtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Qty\' in table \'dsAnalyseData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsAnalyseData.QtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Pur_Qty {
                get {
                    try {
                        return ((double)(this[this.tabledsAnalyseData.Pur_QtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Pur_Qty\' in table \'dsAnalyseData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsAnalyseData.Pur_QtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_CodeNull() {
                return this.IsNull(this.tabledsAnalyseData.Prod_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_CodeNull() {
                this[this.tabledsAnalyseData.Prod_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_NameNull() {
                return this.IsNull(this.tabledsAnalyseData.Prod_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_NameNull() {
                this[this.tabledsAnalyseData.Prod_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPurchase_priceNull() {
                return this.IsNull(this.tabledsAnalyseData.Purchase_priceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPurchase_priceNull() {
                this[this.tabledsAnalyseData.Purchase_priceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelling_PriceNull() {
                return this.IsNull(this.tabledsAnalyseData.Selling_PriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelling_PriceNull() {
                this[this.tabledsAnalyseData.Selling_PriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPurch_AmountNull() {
                return this.IsNull(this.tabledsAnalyseData.Purch_AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPurch_AmountNull() {
                this[this.tabledsAnalyseData.Purch_AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSel_AmountNull() {
                return this.IsNull(this.tabledsAnalyseData.Sel_AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSel_AmountNull() {
                this[this.tabledsAnalyseData.Sel_AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPro_AmountNull() {
                return this.IsNull(this.tabledsAnalyseData.Pro_AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPro_AmountNull() {
                this[this.tabledsAnalyseData.Pro_AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTr_DateNull() {
                return this.IsNull(this.tabledsAnalyseData.Tr_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTr_DateNull() {
                this[this.tabledsAnalyseData.Tr_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSel_QtyNull() {
                return this.IsNull(this.tabledsAnalyseData.Sel_QtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSel_QtyNull() {
                this[this.tabledsAnalyseData.Sel_QtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateFromNull() {
                return this.IsNull(this.tabledsAnalyseData.DateFromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateFromNull() {
                this[this.tabledsAnalyseData.DateFromColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateToNull() {
                return this.IsNull(this.tabledsAnalyseData.DateToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateToNull() {
                this[this.tabledsAnalyseData.DateToColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQtyNull() {
                return this.IsNull(this.tabledsAnalyseData.QtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQtyNull() {
                this[this.tabledsAnalyseData.QtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPur_QtyNull() {
                return this.IsNull(this.tabledsAnalyseData.Pur_QtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPur_QtyNull() {
                this[this.tabledsAnalyseData.Pur_QtyColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dsProductBinCardRow : global::System.Data.DataRow {
            
            private dsProductBinCardDataTable tabledsProductBinCard;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsProductBinCardRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledsProductBinCard = ((dsProductBinCardDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prod_Code {
                get {
                    try {
                        return ((string)(this[this.tabledsProductBinCard.Prod_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Prod_Code\' in table \'dsProductBinCard\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProductBinCard.Prod_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Qty {
                get {
                    try {
                        return ((double)(this[this.tabledsProductBinCard.QtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Qty\' in table \'dsProductBinCard\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProductBinCard.QtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Iid {
                get {
                    try {
                        return ((string)(this[this.tabledsProductBinCard.IidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Iid\' in table \'dsProductBinCard\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProductBinCard.IidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Loca {
                get {
                    try {
                        return ((string)(this[this.tabledsProductBinCard.LocaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Loca\' in table \'dsProductBinCard\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProductBinCard.LocaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string To_Loca {
                get {
                    try {
                        return ((string)(this[this.tabledsProductBinCard.To_LocaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'To_Loca\' in table \'dsProductBinCard\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProductBinCard.To_LocaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Doc_No {
                get {
                    try {
                        return ((string)(this[this.tabledsProductBinCard.Doc_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Doc_No\' in table \'dsProductBinCard\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProductBinCard.Doc_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Post_Date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabledsProductBinCard.Post_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Post_Date\' in table \'dsProductBinCard\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProductBinCard.Post_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime InsertDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabledsProductBinCard.InsertDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertDate\' in table \'dsProductBinCard\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProductBinCard.InsertDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TrId {
                get {
                    try {
                        return ((string)(this[this.tabledsProductBinCard.TrIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TrId\' in table \'dsProductBinCard\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProductBinCard.TrIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prod_Name {
                get {
                    try {
                        return ((string)(this[this.tabledsProductBinCard.Prod_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Prod_Name\' in table \'dsProductBinCard\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProductBinCard.Prod_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Purchase_Price {
                get {
                    try {
                        return ((decimal)(this[this.tabledsProductBinCard.Purchase_PriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Purchase_Price\' in table \'dsProductBinCard\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProductBinCard.Purchase_PriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Selling_Price {
                get {
                    try {
                        return ((decimal)(this[this.tabledsProductBinCard.Selling_PriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Selling_Price\' in table \'dsProductBinCard\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProductBinCard.Selling_PriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Loca_Descrip {
                get {
                    try {
                        return ((string)(this[this.tabledsProductBinCard.Loca_DescripColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Loca_Descrip\' in table \'dsProductBinCard\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProductBinCard.Loca_DescripColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_CodeNull() {
                return this.IsNull(this.tabledsProductBinCard.Prod_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_CodeNull() {
                this[this.tabledsProductBinCard.Prod_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQtyNull() {
                return this.IsNull(this.tabledsProductBinCard.QtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQtyNull() {
                this[this.tabledsProductBinCard.QtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIidNull() {
                return this.IsNull(this.tabledsProductBinCard.IidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIidNull() {
                this[this.tabledsProductBinCard.IidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocaNull() {
                return this.IsNull(this.tabledsProductBinCard.LocaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocaNull() {
                this[this.tabledsProductBinCard.LocaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTo_LocaNull() {
                return this.IsNull(this.tabledsProductBinCard.To_LocaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTo_LocaNull() {
                this[this.tabledsProductBinCard.To_LocaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDoc_NoNull() {
                return this.IsNull(this.tabledsProductBinCard.Doc_NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDoc_NoNull() {
                this[this.tabledsProductBinCard.Doc_NoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPost_DateNull() {
                return this.IsNull(this.tabledsProductBinCard.Post_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPost_DateNull() {
                this[this.tabledsProductBinCard.Post_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertDateNull() {
                return this.IsNull(this.tabledsProductBinCard.InsertDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertDateNull() {
                this[this.tabledsProductBinCard.InsertDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTrIdNull() {
                return this.IsNull(this.tabledsProductBinCard.TrIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTrIdNull() {
                this[this.tabledsProductBinCard.TrIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_NameNull() {
                return this.IsNull(this.tabledsProductBinCard.Prod_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_NameNull() {
                this[this.tabledsProductBinCard.Prod_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPurchase_PriceNull() {
                return this.IsNull(this.tabledsProductBinCard.Purchase_PriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPurchase_PriceNull() {
                this[this.tabledsProductBinCard.Purchase_PriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelling_PriceNull() {
                return this.IsNull(this.tabledsProductBinCard.Selling_PriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelling_PriceNull() {
                this[this.tabledsProductBinCard.Selling_PriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLoca_DescripNull() {
                return this.IsNull(this.tabledsProductBinCard.Loca_DescripColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLoca_DescripNull() {
                this[this.tabledsProductBinCard.Loca_DescripColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dsBarcodeRow : global::System.Data.DataRow {
            
            private dsBarcodeDataTable tabledsBarcode;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsBarcodeRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledsBarcode = ((dsBarcodeDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prod_Code {
                get {
                    try {
                        return ((string)(this[this.tabledsBarcode.Prod_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Prod_Code\' in table \'dsBarcode\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsBarcode.Prod_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prod_Name {
                get {
                    try {
                        return ((string)(this[this.tabledsBarcode.Prod_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Prod_Name\' in table \'dsBarcode\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsBarcode.Prod_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Selling_Price {
                get {
                    try {
                        return ((decimal)(this[this.tabledsBarcode.Selling_PriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Selling_Price\' in table \'dsBarcode\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsBarcode.Selling_PriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Qty {
                get {
                    try {
                        return ((double)(this[this.tabledsBarcode.QtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Qty\' in table \'dsBarcode\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsBarcode.QtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Supp_Code {
                get {
                    try {
                        return ((string)(this[this.tabledsBarcode.Supp_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Supp_Code\' in table \'dsBarcode\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsBarcode.Supp_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_CodeNull() {
                return this.IsNull(this.tabledsBarcode.Prod_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_CodeNull() {
                this[this.tabledsBarcode.Prod_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_NameNull() {
                return this.IsNull(this.tabledsBarcode.Prod_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_NameNull() {
                this[this.tabledsBarcode.Prod_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelling_PriceNull() {
                return this.IsNull(this.tabledsBarcode.Selling_PriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelling_PriceNull() {
                this[this.tabledsBarcode.Selling_PriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQtyNull() {
                return this.IsNull(this.tabledsBarcode.QtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQtyNull() {
                this[this.tabledsBarcode.QtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupp_CodeNull() {
                return this.IsNull(this.tabledsBarcode.Supp_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupp_CodeNull() {
                this[this.tabledsBarcode.Supp_CodeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class SupplierStatementRow : global::System.Data.DataRow {
            
            private SupplierStatementDataTable tableSupplierStatement;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SupplierStatementRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSupplierStatement = ((SupplierStatementDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Acc_No {
                get {
                    try {
                        return ((string)(this[this.tableSupplierStatement.Acc_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Acc_No\' in table \'SupplierStatement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSupplierStatement.Acc_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Supp_Name {
                get {
                    try {
                        return ((string)(this[this.tableSupplierStatement.Supp_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Supp_Name\' in table \'SupplierStatement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSupplierStatement.Supp_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Doc_Date {
                get {
                    try {
                        return ((string)(this[this.tableSupplierStatement.Doc_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Doc_Date\' in table \'SupplierStatement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSupplierStatement.Doc_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Doc_No {
                get {
                    try {
                        return ((string)(this[this.tableSupplierStatement.Doc_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Doc_No\' in table \'SupplierStatement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSupplierStatement.Doc_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Credit_Amount {
                get {
                    try {
                        return ((decimal)(this[this.tableSupplierStatement.Credit_AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Credit_Amount\' in table \'SupplierStatement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSupplierStatement.Credit_AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Debit_Amount {
                get {
                    try {
                        return ((decimal)(this[this.tableSupplierStatement.Debit_AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Debit_Amount\' in table \'SupplierStatement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSupplierStatement.Debit_AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string iid {
                get {
                    try {
                        return ((string)(this[this.tableSupplierStatement.iidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'iid\' in table \'SupplierStatement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSupplierStatement.iidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Loca {
                get {
                    try {
                        return ((string)(this[this.tableSupplierStatement.LocaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Loca\' in table \'SupplierStatement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSupplierStatement.LocaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Loca_Descrip {
                get {
                    try {
                        return ((decimal)(this[this.tableSupplierStatement.Loca_DescripColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Loca_Descrip\' in table \'SupplierStatement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSupplierStatement.Loca_DescripColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address1 {
                get {
                    try {
                        return ((string)(this[this.tableSupplierStatement.Address1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Address1\' in table \'SupplierStatement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSupplierStatement.Address1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address2 {
                get {
                    try {
                        return ((string)(this[this.tableSupplierStatement.Address2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Address2\' in table \'SupplierStatement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSupplierStatement.Address2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address3 {
                get {
                    try {
                        return ((string)(this[this.tableSupplierStatement.Address3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Address3\' in table \'SupplierStatement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSupplierStatement.Address3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address4 {
                get {
                    try {
                        return ((string)(this[this.tableSupplierStatement.Address4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Address4\' in table \'SupplierStatement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSupplierStatement.Address4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Tr_Date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSupplierStatement.Tr_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Tr_Date\' in table \'SupplierStatement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSupplierStatement.Tr_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Ref_No {
                get {
                    try {
                        return ((string)(this[this.tableSupplierStatement.Ref_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Ref_No\' in table \'SupplierStatement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSupplierStatement.Ref_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Acc_No2 {
                get {
                    try {
                        return ((string)(this[this.tableSupplierStatement.Acc_No2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Acc_No2\' in table \'SupplierStatement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSupplierStatement.Acc_No2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Supp_Name2 {
                get {
                    try {
                        return ((string)(this[this.tableSupplierStatement.Supp_Name2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Supp_Name2\' in table \'SupplierStatement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSupplierStatement.Supp_Name2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Cheque_Amount {
                get {
                    try {
                        return ((decimal)(this[this.tableSupplierStatement.Cheque_AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cheque_Amount\' in table \'SupplierStatement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSupplierStatement.Cheque_AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Branch {
                get {
                    try {
                        return ((string)(this[this.tableSupplierStatement.BranchColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Branch\' in table \'SupplierStatement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSupplierStatement.BranchColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Bank_Name {
                get {
                    try {
                        return ((string)(this[this.tableSupplierStatement.Bank_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Bank_Name\' in table \'SupplierStatement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSupplierStatement.Bank_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAcc_NoNull() {
                return this.IsNull(this.tableSupplierStatement.Acc_NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAcc_NoNull() {
                this[this.tableSupplierStatement.Acc_NoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupp_NameNull() {
                return this.IsNull(this.tableSupplierStatement.Supp_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupp_NameNull() {
                this[this.tableSupplierStatement.Supp_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDoc_DateNull() {
                return this.IsNull(this.tableSupplierStatement.Doc_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDoc_DateNull() {
                this[this.tableSupplierStatement.Doc_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDoc_NoNull() {
                return this.IsNull(this.tableSupplierStatement.Doc_NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDoc_NoNull() {
                this[this.tableSupplierStatement.Doc_NoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCredit_AmountNull() {
                return this.IsNull(this.tableSupplierStatement.Credit_AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCredit_AmountNull() {
                this[this.tableSupplierStatement.Credit_AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDebit_AmountNull() {
                return this.IsNull(this.tableSupplierStatement.Debit_AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDebit_AmountNull() {
                this[this.tableSupplierStatement.Debit_AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsiidNull() {
                return this.IsNull(this.tableSupplierStatement.iidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetiidNull() {
                this[this.tableSupplierStatement.iidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocaNull() {
                return this.IsNull(this.tableSupplierStatement.LocaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocaNull() {
                this[this.tableSupplierStatement.LocaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLoca_DescripNull() {
                return this.IsNull(this.tableSupplierStatement.Loca_DescripColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLoca_DescripNull() {
                this[this.tableSupplierStatement.Loca_DescripColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddress1Null() {
                return this.IsNull(this.tableSupplierStatement.Address1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddress1Null() {
                this[this.tableSupplierStatement.Address1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddress2Null() {
                return this.IsNull(this.tableSupplierStatement.Address2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddress2Null() {
                this[this.tableSupplierStatement.Address2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddress3Null() {
                return this.IsNull(this.tableSupplierStatement.Address3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddress3Null() {
                this[this.tableSupplierStatement.Address3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddress4Null() {
                return this.IsNull(this.tableSupplierStatement.Address4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddress4Null() {
                this[this.tableSupplierStatement.Address4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTr_DateNull() {
                return this.IsNull(this.tableSupplierStatement.Tr_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTr_DateNull() {
                this[this.tableSupplierStatement.Tr_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRef_NoNull() {
                return this.IsNull(this.tableSupplierStatement.Ref_NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRef_NoNull() {
                this[this.tableSupplierStatement.Ref_NoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAcc_No2Null() {
                return this.IsNull(this.tableSupplierStatement.Acc_No2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAcc_No2Null() {
                this[this.tableSupplierStatement.Acc_No2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupp_Name2Null() {
                return this.IsNull(this.tableSupplierStatement.Supp_Name2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupp_Name2Null() {
                this[this.tableSupplierStatement.Supp_Name2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCheque_AmountNull() {
                return this.IsNull(this.tableSupplierStatement.Cheque_AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCheque_AmountNull() {
                this[this.tableSupplierStatement.Cheque_AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBranchNull() {
                return this.IsNull(this.tableSupplierStatement.BranchColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBranchNull() {
                this[this.tableSupplierStatement.BranchColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBank_NameNull() {
                return this.IsNull(this.tableSupplierStatement.Bank_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBank_NameNull() {
                this[this.tableSupplierStatement.Bank_NameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dsChequeReconRow : global::System.Data.DataRow {
            
            private dsChequeReconDataTable tabledsChequeRecon;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsChequeReconRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledsChequeRecon = ((dsChequeReconDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Cheque_No {
                get {
                    try {
                        return ((string)(this[this.tabledsChequeRecon.Cheque_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cheque_No\' in table \'dsChequeRecon\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsChequeRecon.Cheque_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Cheque_Date {
                get {
                    try {
                        return ((string)(this[this.tabledsChequeRecon.Cheque_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cheque_Date\' in table \'dsChequeRecon\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsChequeRecon.Cheque_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Bank_Name {
                get {
                    try {
                        return ((string)(this[this.tabledsChequeRecon.Bank_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Bank_Name\' in table \'dsChequeRecon\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsChequeRecon.Bank_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Branch {
                get {
                    try {
                        return ((string)(this[this.tabledsChequeRecon.BranchColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Branch\' in table \'dsChequeRecon\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsChequeRecon.BranchColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Realized {
                get {
                    try {
                        return ((string)(this[this.tabledsChequeRecon.RealizedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Realized\' in table \'dsChequeRecon\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsChequeRecon.RealizedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Amount {
                get {
                    try {
                        return ((decimal)(this[this.tabledsChequeRecon.AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Amount\' in table \'dsChequeRecon\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsChequeRecon.AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Tr_Date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabledsChequeRecon.Tr_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Tr_Date\' in table \'dsChequeRecon\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsChequeRecon.Tr_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Remark {
                get {
                    try {
                        return ((string)(this[this.tabledsChequeRecon.RemarkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Remark\' in table \'dsChequeRecon\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsChequeRecon.RemarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCheque_NoNull() {
                return this.IsNull(this.tabledsChequeRecon.Cheque_NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCheque_NoNull() {
                this[this.tabledsChequeRecon.Cheque_NoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCheque_DateNull() {
                return this.IsNull(this.tabledsChequeRecon.Cheque_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCheque_DateNull() {
                this[this.tabledsChequeRecon.Cheque_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBank_NameNull() {
                return this.IsNull(this.tabledsChequeRecon.Bank_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBank_NameNull() {
                this[this.tabledsChequeRecon.Bank_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBranchNull() {
                return this.IsNull(this.tabledsChequeRecon.BranchColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBranchNull() {
                this[this.tabledsChequeRecon.BranchColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRealizedNull() {
                return this.IsNull(this.tabledsChequeRecon.RealizedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRealizedNull() {
                this[this.tabledsChequeRecon.RealizedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountNull() {
                return this.IsNull(this.tabledsChequeRecon.AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountNull() {
                this[this.tabledsChequeRecon.AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTr_DateNull() {
                return this.IsNull(this.tabledsChequeRecon.Tr_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTr_DateNull() {
                this[this.tabledsChequeRecon.Tr_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRemarkNull() {
                return this.IsNull(this.tabledsChequeRecon.RemarkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRemarkNull() {
                this[this.tabledsChequeRecon.RemarkColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dsChequeReconDetailsRow : global::System.Data.DataRow {
            
            private dsChequeReconDetailsDataTable tabledsChequeReconDetails;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsChequeReconDetailsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledsChequeReconDetails = ((dsChequeReconDetailsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Loca {
                get {
                    try {
                        return ((string)(this[this.tabledsChequeReconDetails.LocaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Loca\' in table \'dsChequeReconDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsChequeReconDetails.LocaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Loca_Descrip {
                get {
                    try {
                        return ((string)(this[this.tabledsChequeReconDetails.Loca_DescripColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Loca_Descrip\' in table \'dsChequeReconDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsChequeReconDetails.Loca_DescripColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Doc_No {
                get {
                    try {
                        return ((string)(this[this.tabledsChequeReconDetails.Doc_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Doc_No\' in table \'dsChequeReconDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsChequeReconDetails.Doc_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Supplier_Id {
                get {
                    try {
                        return ((string)(this[this.tabledsChequeReconDetails.Supplier_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Supplier_Id\' in table \'dsChequeReconDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsChequeReconDetails.Supplier_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Acc_Name {
                get {
                    try {
                        return ((string)(this[this.tabledsChequeReconDetails.Acc_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Acc_Name\' in table \'dsChequeReconDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsChequeReconDetails.Acc_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Post_Date {
                get {
                    try {
                        return ((string)(this[this.tabledsChequeReconDetails.Post_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Post_Date\' in table \'dsChequeReconDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsChequeReconDetails.Post_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Inv_Date {
                get {
                    try {
                        return ((string)(this[this.tabledsChequeReconDetails.Inv_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Inv_Date\' in table \'dsChequeReconDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsChequeReconDetails.Inv_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Inv_No {
                get {
                    try {
                        return ((string)(this[this.tabledsChequeReconDetails.Inv_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Inv_No\' in table \'dsChequeReconDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsChequeReconDetails.Inv_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Code {
                get {
                    try {
                        return ((string)(this[this.tabledsChequeReconDetails.CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Code\' in table \'dsChequeReconDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsChequeReconDetails.CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Amount {
                get {
                    try {
                        return ((decimal)(this[this.tabledsChequeReconDetails.AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Amount\' in table \'dsChequeReconDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsChequeReconDetails.AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Remarks {
                get {
                    try {
                        return ((string)(this[this.tabledsChequeReconDetails.RemarksColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Remarks\' in table \'dsChequeReconDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsChequeReconDetails.RemarksColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string To_LocaDesc {
                get {
                    try {
                        return ((string)(this[this.tabledsChequeReconDetails.To_LocaDescColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'To_LocaDesc\' in table \'dsChequeReconDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsChequeReconDetails.To_LocaDescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string User_Name {
                get {
                    try {
                        return ((string)(this[this.tabledsChequeReconDetails.User_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'User_Name\' in table \'dsChequeReconDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsChequeReconDetails.User_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Iid {
                get {
                    try {
                        return ((string)(this[this.tabledsChequeReconDetails.IidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Iid\' in table \'dsChequeReconDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsChequeReconDetails.IidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocaNull() {
                return this.IsNull(this.tabledsChequeReconDetails.LocaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocaNull() {
                this[this.tabledsChequeReconDetails.LocaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLoca_DescripNull() {
                return this.IsNull(this.tabledsChequeReconDetails.Loca_DescripColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLoca_DescripNull() {
                this[this.tabledsChequeReconDetails.Loca_DescripColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDoc_NoNull() {
                return this.IsNull(this.tabledsChequeReconDetails.Doc_NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDoc_NoNull() {
                this[this.tabledsChequeReconDetails.Doc_NoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupplier_IdNull() {
                return this.IsNull(this.tabledsChequeReconDetails.Supplier_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupplier_IdNull() {
                this[this.tabledsChequeReconDetails.Supplier_IdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAcc_NameNull() {
                return this.IsNull(this.tabledsChequeReconDetails.Acc_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAcc_NameNull() {
                this[this.tabledsChequeReconDetails.Acc_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPost_DateNull() {
                return this.IsNull(this.tabledsChequeReconDetails.Post_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPost_DateNull() {
                this[this.tabledsChequeReconDetails.Post_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInv_DateNull() {
                return this.IsNull(this.tabledsChequeReconDetails.Inv_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInv_DateNull() {
                this[this.tabledsChequeReconDetails.Inv_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInv_NoNull() {
                return this.IsNull(this.tabledsChequeReconDetails.Inv_NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInv_NoNull() {
                this[this.tabledsChequeReconDetails.Inv_NoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCodeNull() {
                return this.IsNull(this.tabledsChequeReconDetails.CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCodeNull() {
                this[this.tabledsChequeReconDetails.CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountNull() {
                return this.IsNull(this.tabledsChequeReconDetails.AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountNull() {
                this[this.tabledsChequeReconDetails.AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRemarksNull() {
                return this.IsNull(this.tabledsChequeReconDetails.RemarksColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRemarksNull() {
                this[this.tabledsChequeReconDetails.RemarksColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTo_LocaDescNull() {
                return this.IsNull(this.tabledsChequeReconDetails.To_LocaDescColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTo_LocaDescNull() {
                this[this.tabledsChequeReconDetails.To_LocaDescColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUser_NameNull() {
                return this.IsNull(this.tabledsChequeReconDetails.User_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUser_NameNull() {
                this[this.tabledsChequeReconDetails.User_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIidNull() {
                return this.IsNull(this.tabledsChequeReconDetails.IidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIidNull() {
                this[this.tabledsChequeReconDetails.IidColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dsProfitableProductRow : global::System.Data.DataRow {
            
            private dsProfitableProductDataTable tabledsProfitableProduct;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsProfitableProductRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledsProfitableProduct = ((dsProfitableProductDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prod_Code {
                get {
                    try {
                        return ((string)(this[this.tabledsProfitableProduct.Prod_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Prod_Code\' in table \'dsProfitableProduct\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProfitableProduct.Prod_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prod_Name {
                get {
                    try {
                        return ((string)(this[this.tabledsProfitableProduct.Prod_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Prod_Name\' in table \'dsProfitableProduct\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProfitableProduct.Prod_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Purchase_price {
                get {
                    try {
                        return ((string)(this[this.tabledsProfitableProduct.Purchase_priceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Purchase_price\' in table \'dsProfitableProduct\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProfitableProduct.Purchase_priceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Selling_Price {
                get {
                    try {
                        return ((string)(this[this.tabledsProfitableProduct.Selling_PriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Selling_Price\' in table \'dsProfitableProduct\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProfitableProduct.Selling_PriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Sold_Qty {
                get {
                    try {
                        return ((string)(this[this.tabledsProfitableProduct.Sold_QtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Sold_Qty\' in table \'dsProfitableProduct\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProfitableProduct.Sold_QtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Pur_Qty {
                get {
                    try {
                        return ((string)(this[this.tabledsProfitableProduct.Pur_QtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Pur_Qty\' in table \'dsProfitableProduct\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProfitableProduct.Pur_QtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Profit_Amount {
                get {
                    try {
                        return ((string)(this[this.tabledsProfitableProduct.Profit_AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Profit_Amount\' in table \'dsProfitableProduct\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProfitableProduct.Profit_AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Loca {
                get {
                    try {
                        return ((string)(this[this.tabledsProfitableProduct.LocaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Loca\' in table \'dsProfitableProduct\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProfitableProduct.LocaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Loca_Descrip {
                get {
                    try {
                        return ((string)(this[this.tabledsProfitableProduct.Loca_DescripColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Loca_Descrip\' in table \'dsProfitableProduct\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProfitableProduct.Loca_DescripColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DateFrom {
                get {
                    try {
                        return ((string)(this[this.tabledsProfitableProduct.DateFromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateFrom\' in table \'dsProfitableProduct\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProfitableProduct.DateFromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DateTo {
                get {
                    try {
                        return ((string)(this[this.tabledsProfitableProduct.DateToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateTo\' in table \'dsProfitableProduct\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProfitableProduct.DateToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_CodeNull() {
                return this.IsNull(this.tabledsProfitableProduct.Prod_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_CodeNull() {
                this[this.tabledsProfitableProduct.Prod_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_NameNull() {
                return this.IsNull(this.tabledsProfitableProduct.Prod_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_NameNull() {
                this[this.tabledsProfitableProduct.Prod_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPurchase_priceNull() {
                return this.IsNull(this.tabledsProfitableProduct.Purchase_priceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPurchase_priceNull() {
                this[this.tabledsProfitableProduct.Purchase_priceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelling_PriceNull() {
                return this.IsNull(this.tabledsProfitableProduct.Selling_PriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelling_PriceNull() {
                this[this.tabledsProfitableProduct.Selling_PriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSold_QtyNull() {
                return this.IsNull(this.tabledsProfitableProduct.Sold_QtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSold_QtyNull() {
                this[this.tabledsProfitableProduct.Sold_QtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPur_QtyNull() {
                return this.IsNull(this.tabledsProfitableProduct.Pur_QtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPur_QtyNull() {
                this[this.tabledsProfitableProduct.Pur_QtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProfit_AmountNull() {
                return this.IsNull(this.tabledsProfitableProduct.Profit_AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProfit_AmountNull() {
                this[this.tabledsProfitableProduct.Profit_AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocaNull() {
                return this.IsNull(this.tabledsProfitableProduct.LocaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocaNull() {
                this[this.tabledsProfitableProduct.LocaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLoca_DescripNull() {
                return this.IsNull(this.tabledsProfitableProduct.Loca_DescripColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLoca_DescripNull() {
                this[this.tabledsProfitableProduct.Loca_DescripColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateFromNull() {
                return this.IsNull(this.tabledsProfitableProduct.DateFromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateFromNull() {
                this[this.tabledsProfitableProduct.DateFromColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateToNull() {
                return this.IsNull(this.tabledsProfitableProduct.DateToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateToNull() {
                this[this.tabledsProfitableProduct.DateToColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dsReOrderLevelDetailsRow : global::System.Data.DataRow {
            
            private dsReOrderLevelDetailsDataTable tabledsReOrderLevelDetails;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsReOrderLevelDetailsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledsReOrderLevelDetails = ((dsReOrderLevelDetailsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prod_Code {
                get {
                    try {
                        return ((string)(this[this.tabledsReOrderLevelDetails.Prod_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Prod_Code\' in table \'dsReOrderLevelDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsReOrderLevelDetails.Prod_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prod_Name {
                get {
                    try {
                        return ((string)(this[this.tabledsReOrderLevelDetails.Prod_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Prod_Name\' in table \'dsReOrderLevelDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsReOrderLevelDetails.Prod_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Purchase_price {
                get {
                    try {
                        return ((string)(this[this.tabledsReOrderLevelDetails.Purchase_priceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Purchase_price\' in table \'dsReOrderLevelDetails\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tabledsReOrderLevelDetails.Purchase_priceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Selling_Price {
                get {
                    try {
                        return ((string)(this[this.tabledsReOrderLevelDetails.Selling_PriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Selling_Price\' in table \'dsReOrderLevelDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsReOrderLevelDetails.Selling_PriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Supplier_Id {
                get {
                    try {
                        return ((string)(this[this.tabledsReOrderLevelDetails.Supplier_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Supplier_Id\' in table \'dsReOrderLevelDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsReOrderLevelDetails.Supplier_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Supp_Name {
                get {
                    try {
                        return ((string)(this[this.tabledsReOrderLevelDetails.Supp_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Supp_Name\' in table \'dsReOrderLevelDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsReOrderLevelDetails.Supp_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Reorder_Level {
                get {
                    try {
                        return ((string)(this[this.tabledsReOrderLevelDetails.Reorder_LevelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Reorder_Level\' in table \'dsReOrderLevelDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsReOrderLevelDetails.Reorder_LevelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Reorder_Qty {
                get {
                    try {
                        return ((string)(this[this.tabledsReOrderLevelDetails.Reorder_QtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Reorder_Qty\' in table \'dsReOrderLevelDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsReOrderLevelDetails.Reorder_QtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Qty {
                get {
                    try {
                        return ((string)(this[this.tabledsReOrderLevelDetails.QtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Qty\' in table \'dsReOrderLevelDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsReOrderLevelDetails.QtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_CodeNull() {
                return this.IsNull(this.tabledsReOrderLevelDetails.Prod_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_CodeNull() {
                this[this.tabledsReOrderLevelDetails.Prod_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_NameNull() {
                return this.IsNull(this.tabledsReOrderLevelDetails.Prod_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_NameNull() {
                this[this.tabledsReOrderLevelDetails.Prod_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPurchase_priceNull() {
                return this.IsNull(this.tabledsReOrderLevelDetails.Purchase_priceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPurchase_priceNull() {
                this[this.tabledsReOrderLevelDetails.Purchase_priceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelling_PriceNull() {
                return this.IsNull(this.tabledsReOrderLevelDetails.Selling_PriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelling_PriceNull() {
                this[this.tabledsReOrderLevelDetails.Selling_PriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupplier_IdNull() {
                return this.IsNull(this.tabledsReOrderLevelDetails.Supplier_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupplier_IdNull() {
                this[this.tabledsReOrderLevelDetails.Supplier_IdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupp_NameNull() {
                return this.IsNull(this.tabledsReOrderLevelDetails.Supp_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupp_NameNull() {
                this[this.tabledsReOrderLevelDetails.Supp_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReorder_LevelNull() {
                return this.IsNull(this.tabledsReOrderLevelDetails.Reorder_LevelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReorder_LevelNull() {
                this[this.tabledsReOrderLevelDetails.Reorder_LevelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReorder_QtyNull() {
                return this.IsNull(this.tabledsReOrderLevelDetails.Reorder_QtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReorder_QtyNull() {
                this[this.tabledsReOrderLevelDetails.Reorder_QtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQtyNull() {
                return this.IsNull(this.tabledsReOrderLevelDetails.QtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQtyNull() {
                this[this.tabledsReOrderLevelDetails.QtyColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ManufacturerDetailsRow : global::System.Data.DataRow {
            
            private ManufacturerDetailsDataTable tableManufacturerDetails;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ManufacturerDetailsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableManufacturerDetails = ((ManufacturerDetailsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Manf_Code {
                get {
                    try {
                        return ((string)(this[this.tableManufacturerDetails.Manf_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Manf_Code\' in table \'ManufacturerDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableManufacturerDetails.Manf_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Manf_Name {
                get {
                    try {
                        return ((string)(this[this.tableManufacturerDetails.Manf_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Manf_Name\' in table \'ManufacturerDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableManufacturerDetails.Manf_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address1 {
                get {
                    try {
                        return ((string)(this[this.tableManufacturerDetails.Address1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Address1\' in table \'ManufacturerDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableManufacturerDetails.Address1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address2 {
                get {
                    try {
                        return ((string)(this[this.tableManufacturerDetails.Address2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Address2\' in table \'ManufacturerDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableManufacturerDetails.Address2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsManf_CodeNull() {
                return this.IsNull(this.tableManufacturerDetails.Manf_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetManf_CodeNull() {
                this[this.tableManufacturerDetails.Manf_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsManf_NameNull() {
                return this.IsNull(this.tableManufacturerDetails.Manf_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetManf_NameNull() {
                this[this.tableManufacturerDetails.Manf_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddress1Null() {
                return this.IsNull(this.tableManufacturerDetails.Address1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddress1Null() {
                this[this.tableManufacturerDetails.Address1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddress2Null() {
                return this.IsNull(this.tableManufacturerDetails.Address2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddress2Null() {
                this[this.tableManufacturerDetails.Address2Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dsCreditorsOutstandingRow : global::System.Data.DataRow {
            
            private dsCreditorsOutstandingDataTable tabledsCreditorsOutstanding;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsCreditorsOutstandingRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledsCreditorsOutstanding = ((dsCreditorsOutstandingDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Supp_Code {
                get {
                    try {
                        return ((string)(this[this.tabledsCreditorsOutstanding.Supp_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Supp_Code\' in table \'dsCreditorsOutstanding\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsCreditorsOutstanding.Supp_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Doc_No {
                get {
                    try {
                        return ((string)(this[this.tabledsCreditorsOutstanding.Doc_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Doc_No\' in table \'dsCreditorsOutstanding\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsCreditorsOutstanding.Doc_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Doc_Date {
                get {
                    try {
                        return ((string)(this[this.tabledsCreditorsOutstanding.Doc_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Doc_Date\' in table \'dsCreditorsOutstanding\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsCreditorsOutstanding.Doc_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Tr_Date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabledsCreditorsOutstanding.Tr_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Tr_Date\' in table \'dsCreditorsOutstanding\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsCreditorsOutstanding.Tr_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Tr_Amount {
                get {
                    try {
                        return ((decimal)(this[this.tabledsCreditorsOutstanding.Tr_AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Tr_Amount\' in table \'dsCreditorsOutstanding\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsCreditorsOutstanding.Tr_AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short No_Of_Days {
                get {
                    try {
                        return ((short)(this[this.tabledsCreditorsOutstanding.No_Of_DaysColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'No_Of_Days\' in table \'dsCreditorsOutstanding\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsCreditorsOutstanding.No_Of_DaysColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal First_Bal_Amount {
                get {
                    try {
                        return ((decimal)(this[this.tabledsCreditorsOutstanding.First_Bal_AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'First_Bal_Amount\' in table \'dsCreditorsOutstanding\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tabledsCreditorsOutstanding.First_Bal_AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Second_Bal_Amount {
                get {
                    try {
                        return ((decimal)(this[this.tabledsCreditorsOutstanding.Second_Bal_AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Second_Bal_Amount\' in table \'dsCreditorsOutstanding\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tabledsCreditorsOutstanding.Second_Bal_AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Third_Bal_Amount {
                get {
                    try {
                        return ((decimal)(this[this.tabledsCreditorsOutstanding.Third_Bal_AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Third_Bal_Amount\' in table \'dsCreditorsOutstanding\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tabledsCreditorsOutstanding.Third_Bal_AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Over_Forth_Bal_Amount {
                get {
                    try {
                        return ((decimal)(this[this.tabledsCreditorsOutstanding.Over_Forth_Bal_AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Over_Forth_Bal_Amount\' in table \'dsCreditorsOutstanding\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsCreditorsOutstanding.Over_Forth_Bal_AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DayRange1 {
                get {
                    try {
                        return ((string)(this[this.tabledsCreditorsOutstanding.DayRange1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DayRange1\' in table \'dsCreditorsOutstanding\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsCreditorsOutstanding.DayRange1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DayRange2 {
                get {
                    try {
                        return ((string)(this[this.tabledsCreditorsOutstanding.DayRange2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DayRange2\' in table \'dsCreditorsOutstanding\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsCreditorsOutstanding.DayRange2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DayRange3 {
                get {
                    try {
                        return ((string)(this[this.tabledsCreditorsOutstanding.DayRange3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DayRange3\' in table \'dsCreditorsOutstanding\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsCreditorsOutstanding.DayRange3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DayRange4 {
                get {
                    try {
                        return ((string)(this[this.tabledsCreditorsOutstanding.DayRange4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DayRange4\' in table \'dsCreditorsOutstanding\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsCreditorsOutstanding.DayRange4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Supp_Name {
                get {
                    try {
                        return ((string)(this[this.tabledsCreditorsOutstanding.Supp_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Supp_Name\' in table \'dsCreditorsOutstanding\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsCreditorsOutstanding.Supp_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupp_CodeNull() {
                return this.IsNull(this.tabledsCreditorsOutstanding.Supp_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupp_CodeNull() {
                this[this.tabledsCreditorsOutstanding.Supp_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDoc_NoNull() {
                return this.IsNull(this.tabledsCreditorsOutstanding.Doc_NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDoc_NoNull() {
                this[this.tabledsCreditorsOutstanding.Doc_NoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDoc_DateNull() {
                return this.IsNull(this.tabledsCreditorsOutstanding.Doc_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDoc_DateNull() {
                this[this.tabledsCreditorsOutstanding.Doc_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTr_DateNull() {
                return this.IsNull(this.tabledsCreditorsOutstanding.Tr_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTr_DateNull() {
                this[this.tabledsCreditorsOutstanding.Tr_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTr_AmountNull() {
                return this.IsNull(this.tabledsCreditorsOutstanding.Tr_AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTr_AmountNull() {
                this[this.tabledsCreditorsOutstanding.Tr_AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNo_Of_DaysNull() {
                return this.IsNull(this.tabledsCreditorsOutstanding.No_Of_DaysColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNo_Of_DaysNull() {
                this[this.tabledsCreditorsOutstanding.No_Of_DaysColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFirst_Bal_AmountNull() {
                return this.IsNull(this.tabledsCreditorsOutstanding.First_Bal_AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFirst_Bal_AmountNull() {
                this[this.tabledsCreditorsOutstanding.First_Bal_AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSecond_Bal_AmountNull() {
                return this.IsNull(this.tabledsCreditorsOutstanding.Second_Bal_AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSecond_Bal_AmountNull() {
                this[this.tabledsCreditorsOutstanding.Second_Bal_AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsThird_Bal_AmountNull() {
                return this.IsNull(this.tabledsCreditorsOutstanding.Third_Bal_AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetThird_Bal_AmountNull() {
                this[this.tabledsCreditorsOutstanding.Third_Bal_AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOver_Forth_Bal_AmountNull() {
                return this.IsNull(this.tabledsCreditorsOutstanding.Over_Forth_Bal_AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOver_Forth_Bal_AmountNull() {
                this[this.tabledsCreditorsOutstanding.Over_Forth_Bal_AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDayRange1Null() {
                return this.IsNull(this.tabledsCreditorsOutstanding.DayRange1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDayRange1Null() {
                this[this.tabledsCreditorsOutstanding.DayRange1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDayRange2Null() {
                return this.IsNull(this.tabledsCreditorsOutstanding.DayRange2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDayRange2Null() {
                this[this.tabledsCreditorsOutstanding.DayRange2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDayRange3Null() {
                return this.IsNull(this.tabledsCreditorsOutstanding.DayRange3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDayRange3Null() {
                this[this.tabledsCreditorsOutstanding.DayRange3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDayRange4Null() {
                return this.IsNull(this.tabledsCreditorsOutstanding.DayRange4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDayRange4Null() {
                this[this.tabledsCreditorsOutstanding.DayRange4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupp_NameNull() {
                return this.IsNull(this.tabledsCreditorsOutstanding.Supp_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupp_NameNull() {
                this[this.tabledsCreditorsOutstanding.Supp_NameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dsProductMovingRow : global::System.Data.DataRow {
            
            private dsProductMovingDataTable tabledsProductMoving;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsProductMovingRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledsProductMoving = ((dsProductMovingDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prod_Code {
                get {
                    try {
                        return ((string)(this[this.tabledsProductMoving.Prod_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Prod_Code\' in table \'dsProductMoving\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProductMoving.Prod_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prod_Name {
                get {
                    try {
                        return ((string)(this[this.tabledsProductMoving.Prod_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Prod_Name\' in table \'dsProductMoving\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProductMoving.Prod_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Qty {
                get {
                    try {
                        return ((double)(this[this.tabledsProductMoving.QtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Qty\' in table \'dsProductMoving\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProductMoving.QtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Supplier_Id {
                get {
                    try {
                        return ((string)(this[this.tabledsProductMoving.Supplier_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Supplier_Id\' in table \'dsProductMoving\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProductMoving.Supplier_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Purchase_price {
                get {
                    try {
                        return ((decimal)(this[this.tabledsProductMoving.Purchase_priceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Purchase_price\' in table \'dsProductMoving\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProductMoving.Purchase_priceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Selling_Price {
                get {
                    try {
                        return ((decimal)(this[this.tabledsProductMoving.Selling_PriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Selling_Price\' in table \'dsProductMoving\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProductMoving.Selling_PriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Bal_Qty {
                get {
                    try {
                        return ((double)(this[this.tabledsProductMoving.Bal_QtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Bal_Qty\' in table \'dsProductMoving\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProductMoving.Bal_QtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DateFrom {
                get {
                    try {
                        return ((string)(this[this.tabledsProductMoving.DateFromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateFrom\' in table \'dsProductMoving\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProductMoving.DateFromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DateTo {
                get {
                    try {
                        return ((string)(this[this.tabledsProductMoving.DateToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateTo\' in table \'dsProductMoving\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProductMoving.DateToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Loca {
                get {
                    try {
                        return ((string)(this[this.tabledsProductMoving.LocaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Loca\' in table \'dsProductMoving\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProductMoving.LocaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Loca_Descrip {
                get {
                    try {
                        return ((string)(this[this.tabledsProductMoving.Loca_DescripColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Loca_Descrip\' in table \'dsProductMoving\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProductMoving.Loca_DescripColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Supp_Code {
                get {
                    try {
                        return ((string)(this[this.tabledsProductMoving.Supp_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Supp_Code\' in table \'dsProductMoving\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProductMoving.Supp_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Supp_Name {
                get {
                    try {
                        return ((string)(this[this.tabledsProductMoving.Supp_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Supp_Name\' in table \'dsProductMoving\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProductMoving.Supp_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_CodeNull() {
                return this.IsNull(this.tabledsProductMoving.Prod_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_CodeNull() {
                this[this.tabledsProductMoving.Prod_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_NameNull() {
                return this.IsNull(this.tabledsProductMoving.Prod_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_NameNull() {
                this[this.tabledsProductMoving.Prod_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQtyNull() {
                return this.IsNull(this.tabledsProductMoving.QtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQtyNull() {
                this[this.tabledsProductMoving.QtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupplier_IdNull() {
                return this.IsNull(this.tabledsProductMoving.Supplier_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupplier_IdNull() {
                this[this.tabledsProductMoving.Supplier_IdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPurchase_priceNull() {
                return this.IsNull(this.tabledsProductMoving.Purchase_priceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPurchase_priceNull() {
                this[this.tabledsProductMoving.Purchase_priceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelling_PriceNull() {
                return this.IsNull(this.tabledsProductMoving.Selling_PriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelling_PriceNull() {
                this[this.tabledsProductMoving.Selling_PriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBal_QtyNull() {
                return this.IsNull(this.tabledsProductMoving.Bal_QtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBal_QtyNull() {
                this[this.tabledsProductMoving.Bal_QtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateFromNull() {
                return this.IsNull(this.tabledsProductMoving.DateFromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateFromNull() {
                this[this.tabledsProductMoving.DateFromColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateToNull() {
                return this.IsNull(this.tabledsProductMoving.DateToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateToNull() {
                this[this.tabledsProductMoving.DateToColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocaNull() {
                return this.IsNull(this.tabledsProductMoving.LocaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocaNull() {
                this[this.tabledsProductMoving.LocaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLoca_DescripNull() {
                return this.IsNull(this.tabledsProductMoving.Loca_DescripColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLoca_DescripNull() {
                this[this.tabledsProductMoving.Loca_DescripColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupp_CodeNull() {
                return this.IsNull(this.tabledsProductMoving.Supp_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupp_CodeNull() {
                this[this.tabledsProductMoving.Supp_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupp_NameNull() {
                return this.IsNull(this.tabledsProductMoving.Supp_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupp_NameNull() {
                this[this.tabledsProductMoving.Supp_NameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dsProductSalesComparisonRow : global::System.Data.DataRow {
            
            private dsProductSalesComparisonDataTable tabledsProductSalesComparison;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsProductSalesComparisonRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledsProductSalesComparison = ((dsProductSalesComparisonDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prod_Code {
                get {
                    try {
                        return ((string)(this[this.tabledsProductSalesComparison.Prod_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Prod_Code\' in table \'dsProductSalesComparison\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProductSalesComparison.Prod_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prod_Name {
                get {
                    try {
                        return ((string)(this[this.tabledsProductSalesComparison.Prod_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Prod_Name\' in table \'dsProductSalesComparison\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProductSalesComparison.Prod_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Code {
                get {
                    try {
                        return ((string)(this[this.tabledsProductSalesComparison.CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Code\' in table \'dsProductSalesComparison\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProductSalesComparison.CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tabledsProductSalesComparison.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'dsProductSalesComparison\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tabledsProductSalesComparison.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Purchase_price {
                get {
                    try {
                        return ((decimal)(this[this.tabledsProductSalesComparison.Purchase_priceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Purchase_price\' in table \'dsProductSalesComparison\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tabledsProductSalesComparison.Purchase_priceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Selling_Price {
                get {
                    try {
                        return ((decimal)(this[this.tabledsProductSalesComparison.Selling_PriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Selling_Price\' in table \'dsProductSalesComparison\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tabledsProductSalesComparison.Selling_PriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Loca {
                get {
                    try {
                        return ((string)(this[this.tabledsProductSalesComparison.LocaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Loca\' in table \'dsProductSalesComparison\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProductSalesComparison.LocaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Loca_Descrip {
                get {
                    try {
                        return ((string)(this[this.tabledsProductSalesComparison.Loca_DescripColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Loca_Descrip\' in table \'dsProductSalesComparison\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tabledsProductSalesComparison.Loca_DescripColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double First_Qty {
                get {
                    try {
                        return ((double)(this[this.tabledsProductSalesComparison.First_QtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'First_Qty\' in table \'dsProductSalesComparison\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProductSalesComparison.First_QtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal First_Amount {
                get {
                    try {
                        return ((decimal)(this[this.tabledsProductSalesComparison.First_AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'First_Amount\' in table \'dsProductSalesComparison\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tabledsProductSalesComparison.First_AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Second_Qty {
                get {
                    try {
                        return ((double)(this[this.tabledsProductSalesComparison.Second_QtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Second_Qty\' in table \'dsProductSalesComparison\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProductSalesComparison.Second_QtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Second_Amount {
                get {
                    try {
                        return ((decimal)(this[this.tabledsProductSalesComparison.Second_AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Second_Amount\' in table \'dsProductSalesComparison\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tabledsProductSalesComparison.Second_AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FirstDateFrom {
                get {
                    try {
                        return ((string)(this[this.tabledsProductSalesComparison.FirstDateFromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FirstDateFrom\' in table \'dsProductSalesComparison\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tabledsProductSalesComparison.FirstDateFromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FirstDateTo {
                get {
                    try {
                        return ((string)(this[this.tabledsProductSalesComparison.FirstDateToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FirstDateTo\' in table \'dsProductSalesComparison\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tabledsProductSalesComparison.FirstDateToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SecondDateFrom {
                get {
                    try {
                        return ((string)(this[this.tabledsProductSalesComparison.SecondDateFromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SecondDateFrom\' in table \'dsProductSalesComparison\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tabledsProductSalesComparison.SecondDateFromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SecondDateTo {
                get {
                    try {
                        return ((string)(this[this.tabledsProductSalesComparison.SecondDateToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SecondDateTo\' in table \'dsProductSalesComparison\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tabledsProductSalesComparison.SecondDateToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_CodeNull() {
                return this.IsNull(this.tabledsProductSalesComparison.Prod_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_CodeNull() {
                this[this.tabledsProductSalesComparison.Prod_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_NameNull() {
                return this.IsNull(this.tabledsProductSalesComparison.Prod_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_NameNull() {
                this[this.tabledsProductSalesComparison.Prod_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCodeNull() {
                return this.IsNull(this.tabledsProductSalesComparison.CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCodeNull() {
                this[this.tabledsProductSalesComparison.CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tabledsProductSalesComparison.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionNull() {
                this[this.tabledsProductSalesComparison.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPurchase_priceNull() {
                return this.IsNull(this.tabledsProductSalesComparison.Purchase_priceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPurchase_priceNull() {
                this[this.tabledsProductSalesComparison.Purchase_priceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelling_PriceNull() {
                return this.IsNull(this.tabledsProductSalesComparison.Selling_PriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelling_PriceNull() {
                this[this.tabledsProductSalesComparison.Selling_PriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocaNull() {
                return this.IsNull(this.tabledsProductSalesComparison.LocaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocaNull() {
                this[this.tabledsProductSalesComparison.LocaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLoca_DescripNull() {
                return this.IsNull(this.tabledsProductSalesComparison.Loca_DescripColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLoca_DescripNull() {
                this[this.tabledsProductSalesComparison.Loca_DescripColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFirst_QtyNull() {
                return this.IsNull(this.tabledsProductSalesComparison.First_QtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFirst_QtyNull() {
                this[this.tabledsProductSalesComparison.First_QtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFirst_AmountNull() {
                return this.IsNull(this.tabledsProductSalesComparison.First_AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFirst_AmountNull() {
                this[this.tabledsProductSalesComparison.First_AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSecond_QtyNull() {
                return this.IsNull(this.tabledsProductSalesComparison.Second_QtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSecond_QtyNull() {
                this[this.tabledsProductSalesComparison.Second_QtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSecond_AmountNull() {
                return this.IsNull(this.tabledsProductSalesComparison.Second_AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSecond_AmountNull() {
                this[this.tabledsProductSalesComparison.Second_AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFirstDateFromNull() {
                return this.IsNull(this.tabledsProductSalesComparison.FirstDateFromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFirstDateFromNull() {
                this[this.tabledsProductSalesComparison.FirstDateFromColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFirstDateToNull() {
                return this.IsNull(this.tabledsProductSalesComparison.FirstDateToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFirstDateToNull() {
                this[this.tabledsProductSalesComparison.FirstDateToColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSecondDateFromNull() {
                return this.IsNull(this.tabledsProductSalesComparison.SecondDateFromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSecondDateFromNull() {
                this[this.tabledsProductSalesComparison.SecondDateFromColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSecondDateToNull() {
                return this.IsNull(this.tabledsProductSalesComparison.SecondDateToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSecondDateToNull() {
                this[this.tabledsProductSalesComparison.SecondDateToColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dsProductDetails_ChangeRow : global::System.Data.DataRow {
            
            private dsProductDetails_ChangeDataTable tabledsProductDetails_Change;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsProductDetails_ChangeRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledsProductDetails_Change = ((dsProductDetails_ChangeDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prod_Code {
                get {
                    try {
                        return ((string)(this[this.tabledsProductDetails_Change.Prod_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Prod_Code\' in table \'dsProductDetails_Change\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProductDetails_Change.Prod_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prod_Name {
                get {
                    try {
                        return ((string)(this[this.tabledsProductDetails_Change.Prod_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Prod_Name\' in table \'dsProductDetails_Change\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProductDetails_Change.Prod_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Barcode {
                get {
                    try {
                        return ((string)(this[this.tabledsProductDetails_Change.BarcodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Barcode\' in table \'dsProductDetails_Change\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProductDetails_Change.BarcodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Department_Id {
                get {
                    try {
                        return ((string)(this[this.tabledsProductDetails_Change.Department_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Department_Id\' in table \'dsProductDetails_Change\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tabledsProductDetails_Change.Department_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Dept_Name {
                get {
                    try {
                        return ((string)(this[this.tabledsProductDetails_Change.Dept_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Dept_Name\' in table \'dsProductDetails_Change\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProductDetails_Change.Dept_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Category_Id {
                get {
                    try {
                        return ((string)(this[this.tabledsProductDetails_Change.Category_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Category_Id\' in table \'dsProductDetails_Change\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProductDetails_Change.Category_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Cat_Name {
                get {
                    try {
                        return ((string)(this[this.tabledsProductDetails_Change.Cat_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cat_Name\' in table \'dsProductDetails_Change\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProductDetails_Change.Cat_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Supplier_Id {
                get {
                    try {
                        return ((string)(this[this.tabledsProductDetails_Change.Supplier_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Supplier_Id\' in table \'dsProductDetails_Change\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProductDetails_Change.Supplier_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Supp_Name {
                get {
                    try {
                        return ((string)(this[this.tabledsProductDetails_Change.Supp_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Supp_Name\' in table \'dsProductDetails_Change\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProductDetails_Change.Supp_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Manufacturer_Id {
                get {
                    try {
                        return ((string)(this[this.tabledsProductDetails_Change.Manufacturer_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Manufacturer_Id\' in table \'dsProductDetails_Change\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tabledsProductDetails_Change.Manufacturer_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Manf_Name {
                get {
                    try {
                        return ((string)(this[this.tabledsProductDetails_Change.Manf_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Manf_Name\' in table \'dsProductDetails_Change\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProductDetails_Change.Manf_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Purchase_price {
                get {
                    try {
                        return ((decimal)(this[this.tabledsProductDetails_Change.Purchase_priceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Purchase_price\' in table \'dsProductDetails_Change\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tabledsProductDetails_Change.Purchase_priceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Selling_Price {
                get {
                    try {
                        return ((decimal)(this[this.tabledsProductDetails_Change.Selling_PriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Selling_Price\' in table \'dsProductDetails_Change\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tabledsProductDetails_Change.Selling_PriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Disc_Price {
                get {
                    try {
                        return ((decimal)(this[this.tabledsProductDetails_Change.Disc_PriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Disc_Price\' in table \'dsProductDetails_Change\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProductDetails_Change.Disc_PriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Reorder_Level {
                get {
                    try {
                        return ((double)(this[this.tabledsProductDetails_Change.Reorder_LevelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Reorder_Level\' in table \'dsProductDetails_Change\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tabledsProductDetails_Change.Reorder_LevelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Unit {
                get {
                    try {
                        return ((string)(this[this.tabledsProductDetails_Change.UnitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Unit\' in table \'dsProductDetails_Change\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProductDetails_Change.UnitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Reorder_Qty {
                get {
                    try {
                        return ((double)(this[this.tabledsProductDetails_Change.Reorder_QtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Reorder_Qty\' in table \'dsProductDetails_Change\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProductDetails_Change.Reorder_QtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short Rack_No {
                get {
                    try {
                        return ((short)(this[this.tabledsProductDetails_Change.Rack_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Rack_No\' in table \'dsProductDetails_Change\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProductDetails_Change.Rack_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short Pack_Size {
                get {
                    try {
                        return ((short)(this[this.tabledsProductDetails_Change.Pack_SizeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Pack_Size\' in table \'dsProductDetails_Change\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProductDetails_Change.Pack_SizeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Modified_User {
                get {
                    try {
                        return ((string)(this[this.tabledsProductDetails_Change.Modified_UserColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Modified_User\' in table \'dsProductDetails_Change\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tabledsProductDetails_Change.Modified_UserColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Modified_Date {
                get {
                    try {
                        return ((string)(this[this.tabledsProductDetails_Change.Modified_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Modified_Date\' in table \'dsProductDetails_Change\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tabledsProductDetails_Change.Modified_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LockedItem {
                get {
                    try {
                        return ((string)(this[this.tabledsProductDetails_Change.LockedItemColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LockedItem\' in table \'dsProductDetails_Change\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProductDetails_Change.LockedItemColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Short_Description {
                get {
                    try {
                        return ((string)(this[this.tabledsProductDetails_Change.Short_DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Short_Description\' in table \'dsProductDetails_Change\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tabledsProductDetails_Change.Short_DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Whole_Price {
                get {
                    try {
                        return ((decimal)(this[this.tabledsProductDetails_Change.Whole_PriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Whole_Price\' in table \'dsProductDetails_Change\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProductDetails_Change.Whole_PriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Disc_Str {
                get {
                    try {
                        return ((string)(this[this.tabledsProductDetails_Change.Disc_StrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Disc_Str\' in table \'dsProductDetails_Change\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProductDetails_Change.Disc_StrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Chg_Iid {
                get {
                    try {
                        return ((string)(this[this.tabledsProductDetails_Change.Chg_IidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Chg_Iid\' in table \'dsProductDetails_Change\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProductDetails_Change.Chg_IidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Chg_No {
                get {
                    try {
                        return ((string)(this[this.tabledsProductDetails_Change.Chg_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Chg_No\' in table \'dsProductDetails_Change\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProductDetails_Change.Chg_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DateFrom {
                get {
                    try {
                        return ((string)(this[this.tabledsProductDetails_Change.DateFromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateFrom\' in table \'dsProductDetails_Change\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProductDetails_Change.DateFromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DateTo {
                get {
                    try {
                        return ((string)(this[this.tabledsProductDetails_Change.DateToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateTo\' in table \'dsProductDetails_Change\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProductDetails_Change.DateToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CodeFrom {
                get {
                    try {
                        return ((string)(this[this.tabledsProductDetails_Change.CodeFromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CodeFrom\' in table \'dsProductDetails_Change\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProductDetails_Change.CodeFromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DescriptionFrom {
                get {
                    try {
                        return ((string)(this[this.tabledsProductDetails_Change.DescriptionFromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DescriptionFrom\' in table \'dsProductDetails_Change\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tabledsProductDetails_Change.DescriptionFromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_CodeNull() {
                return this.IsNull(this.tabledsProductDetails_Change.Prod_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_CodeNull() {
                this[this.tabledsProductDetails_Change.Prod_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_NameNull() {
                return this.IsNull(this.tabledsProductDetails_Change.Prod_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_NameNull() {
                this[this.tabledsProductDetails_Change.Prod_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBarcodeNull() {
                return this.IsNull(this.tabledsProductDetails_Change.BarcodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBarcodeNull() {
                this[this.tabledsProductDetails_Change.BarcodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDepartment_IdNull() {
                return this.IsNull(this.tabledsProductDetails_Change.Department_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDepartment_IdNull() {
                this[this.tabledsProductDetails_Change.Department_IdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDept_NameNull() {
                return this.IsNull(this.tabledsProductDetails_Change.Dept_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDept_NameNull() {
                this[this.tabledsProductDetails_Change.Dept_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCategory_IdNull() {
                return this.IsNull(this.tabledsProductDetails_Change.Category_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCategory_IdNull() {
                this[this.tabledsProductDetails_Change.Category_IdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCat_NameNull() {
                return this.IsNull(this.tabledsProductDetails_Change.Cat_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCat_NameNull() {
                this[this.tabledsProductDetails_Change.Cat_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupplier_IdNull() {
                return this.IsNull(this.tabledsProductDetails_Change.Supplier_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupplier_IdNull() {
                this[this.tabledsProductDetails_Change.Supplier_IdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupp_NameNull() {
                return this.IsNull(this.tabledsProductDetails_Change.Supp_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupp_NameNull() {
                this[this.tabledsProductDetails_Change.Supp_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsManufacturer_IdNull() {
                return this.IsNull(this.tabledsProductDetails_Change.Manufacturer_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetManufacturer_IdNull() {
                this[this.tabledsProductDetails_Change.Manufacturer_IdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsManf_NameNull() {
                return this.IsNull(this.tabledsProductDetails_Change.Manf_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetManf_NameNull() {
                this[this.tabledsProductDetails_Change.Manf_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPurchase_priceNull() {
                return this.IsNull(this.tabledsProductDetails_Change.Purchase_priceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPurchase_priceNull() {
                this[this.tabledsProductDetails_Change.Purchase_priceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelling_PriceNull() {
                return this.IsNull(this.tabledsProductDetails_Change.Selling_PriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelling_PriceNull() {
                this[this.tabledsProductDetails_Change.Selling_PriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDisc_PriceNull() {
                return this.IsNull(this.tabledsProductDetails_Change.Disc_PriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDisc_PriceNull() {
                this[this.tabledsProductDetails_Change.Disc_PriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReorder_LevelNull() {
                return this.IsNull(this.tabledsProductDetails_Change.Reorder_LevelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReorder_LevelNull() {
                this[this.tabledsProductDetails_Change.Reorder_LevelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnitNull() {
                return this.IsNull(this.tabledsProductDetails_Change.UnitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnitNull() {
                this[this.tabledsProductDetails_Change.UnitColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReorder_QtyNull() {
                return this.IsNull(this.tabledsProductDetails_Change.Reorder_QtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReorder_QtyNull() {
                this[this.tabledsProductDetails_Change.Reorder_QtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRack_NoNull() {
                return this.IsNull(this.tabledsProductDetails_Change.Rack_NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRack_NoNull() {
                this[this.tabledsProductDetails_Change.Rack_NoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPack_SizeNull() {
                return this.IsNull(this.tabledsProductDetails_Change.Pack_SizeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPack_SizeNull() {
                this[this.tabledsProductDetails_Change.Pack_SizeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModified_UserNull() {
                return this.IsNull(this.tabledsProductDetails_Change.Modified_UserColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModified_UserNull() {
                this[this.tabledsProductDetails_Change.Modified_UserColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModified_DateNull() {
                return this.IsNull(this.tabledsProductDetails_Change.Modified_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModified_DateNull() {
                this[this.tabledsProductDetails_Change.Modified_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLockedItemNull() {
                return this.IsNull(this.tabledsProductDetails_Change.LockedItemColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLockedItemNull() {
                this[this.tabledsProductDetails_Change.LockedItemColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShort_DescriptionNull() {
                return this.IsNull(this.tabledsProductDetails_Change.Short_DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShort_DescriptionNull() {
                this[this.tabledsProductDetails_Change.Short_DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWhole_PriceNull() {
                return this.IsNull(this.tabledsProductDetails_Change.Whole_PriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWhole_PriceNull() {
                this[this.tabledsProductDetails_Change.Whole_PriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDisc_StrNull() {
                return this.IsNull(this.tabledsProductDetails_Change.Disc_StrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDisc_StrNull() {
                this[this.tabledsProductDetails_Change.Disc_StrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsChg_IidNull() {
                return this.IsNull(this.tabledsProductDetails_Change.Chg_IidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetChg_IidNull() {
                this[this.tabledsProductDetails_Change.Chg_IidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsChg_NoNull() {
                return this.IsNull(this.tabledsProductDetails_Change.Chg_NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetChg_NoNull() {
                this[this.tabledsProductDetails_Change.Chg_NoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateFromNull() {
                return this.IsNull(this.tabledsProductDetails_Change.DateFromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateFromNull() {
                this[this.tabledsProductDetails_Change.DateFromColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateToNull() {
                return this.IsNull(this.tabledsProductDetails_Change.DateToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateToNull() {
                this[this.tabledsProductDetails_Change.DateToColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCodeFromNull() {
                return this.IsNull(this.tabledsProductDetails_Change.CodeFromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCodeFromNull() {
                this[this.tabledsProductDetails_Change.CodeFromColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionFromNull() {
                return this.IsNull(this.tabledsProductDetails_Change.DescriptionFromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionFromNull() {
                this[this.tabledsProductDetails_Change.DescriptionFromColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dsTempPacketProductRow : global::System.Data.DataRow {
            
            private dsTempPacketProductDataTable tabledsTempPacketProduct;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsTempPacketProductRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledsTempPacketProduct = ((dsTempPacketProductDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prod_Code {
                get {
                    try {
                        return ((string)(this[this.tabledsTempPacketProduct.Prod_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Prod_Code\' in table \'dsTempPacketProduct\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsTempPacketProduct.Prod_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prod_Name {
                get {
                    try {
                        return ((string)(this[this.tabledsTempPacketProduct.Prod_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Prod_Name\' in table \'dsTempPacketProduct\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsTempPacketProduct.Prod_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Packet_Qty {
                get {
                    try {
                        return ((string)(this[this.tabledsTempPacketProduct.Packet_QtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Packet_Qty\' in table \'dsTempPacketProduct\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsTempPacketProduct.Packet_QtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Purchase_price {
                get {
                    try {
                        return ((string)(this[this.tabledsTempPacketProduct.Purchase_priceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Purchase_price\' in table \'dsTempPacketProduct\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsTempPacketProduct.Purchase_priceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Main_Prod_Code {
                get {
                    try {
                        return ((string)(this[this.tabledsTempPacketProduct.Main_Prod_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Main_Prod_Code\' in table \'dsTempPacketProduct\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsTempPacketProduct.Main_Prod_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Main_Prod_Name {
                get {
                    try {
                        return ((string)(this[this.tabledsTempPacketProduct.Main_Prod_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Main_Prod_Name\' in table \'dsTempPacketProduct\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsTempPacketProduct.Main_Prod_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string No_Of_Packets {
                get {
                    try {
                        return ((string)(this[this.tabledsTempPacketProduct.No_Of_PacketsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'No_Of_Packets\' in table \'dsTempPacketProduct\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsTempPacketProduct.No_Of_PacketsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_CodeNull() {
                return this.IsNull(this.tabledsTempPacketProduct.Prod_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_CodeNull() {
                this[this.tabledsTempPacketProduct.Prod_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_NameNull() {
                return this.IsNull(this.tabledsTempPacketProduct.Prod_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_NameNull() {
                this[this.tabledsTempPacketProduct.Prod_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPacket_QtyNull() {
                return this.IsNull(this.tabledsTempPacketProduct.Packet_QtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPacket_QtyNull() {
                this[this.tabledsTempPacketProduct.Packet_QtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPurchase_priceNull() {
                return this.IsNull(this.tabledsTempPacketProduct.Purchase_priceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPurchase_priceNull() {
                this[this.tabledsTempPacketProduct.Purchase_priceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMain_Prod_CodeNull() {
                return this.IsNull(this.tabledsTempPacketProduct.Main_Prod_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMain_Prod_CodeNull() {
                this[this.tabledsTempPacketProduct.Main_Prod_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMain_Prod_NameNull() {
                return this.IsNull(this.tabledsTempPacketProduct.Main_Prod_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMain_Prod_NameNull() {
                this[this.tabledsTempPacketProduct.Main_Prod_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNo_Of_PacketsNull() {
                return this.IsNull(this.tabledsTempPacketProduct.No_Of_PacketsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNo_Of_PacketsNull() {
                this[this.tabledsTempPacketProduct.No_Of_PacketsColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dsPacketingProductNoteRow : global::System.Data.DataRow {
            
            private dsPacketingProductNoteDataTable tabledsPacketingProductNote;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsPacketingProductNoteRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledsPacketingProductNote = ((dsPacketingProductNoteDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Doc_No {
                get {
                    try {
                        return ((string)(this[this.tabledsPacketingProductNote.Doc_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Doc_No\' in table \'dsPacketingProductNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPacketingProductNote.Doc_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Post_Date {
                get {
                    try {
                        return ((string)(this[this.tabledsPacketingProductNote.Post_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Post_Date\' in table \'dsPacketingProductNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPacketingProductNote.Post_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Main_Prod_Code {
                get {
                    try {
                        return ((string)(this[this.tabledsPacketingProductNote.Main_Prod_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Main_Prod_Code\' in table \'dsPacketingProductNote\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tabledsPacketingProductNote.Main_Prod_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Main_Prod_Name {
                get {
                    try {
                        return ((string)(this[this.tabledsPacketingProductNote.Main_Prod_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Main_Prod_Name\' in table \'dsPacketingProductNote\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tabledsPacketingProductNote.Main_Prod_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prod_Code {
                get {
                    try {
                        return ((string)(this[this.tabledsPacketingProductNote.Prod_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Prod_Code\' in table \'dsPacketingProductNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPacketingProductNote.Prod_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prod_Name {
                get {
                    try {
                        return ((string)(this[this.tabledsPacketingProductNote.Prod_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Prod_Name\' in table \'dsPacketingProductNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPacketingProductNote.Prod_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Purchase_price {
                get {
                    try {
                        return ((decimal)(this[this.tabledsPacketingProductNote.Purchase_priceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Purchase_price\' in table \'dsPacketingProductNote\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tabledsPacketingProductNote.Purchase_priceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Packet_Qty {
                get {
                    try {
                        return ((double)(this[this.tabledsPacketingProductNote.Packet_QtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Packet_Qty\' in table \'dsPacketingProductNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPacketingProductNote.Packet_QtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double No_Of_Packets {
                get {
                    try {
                        return ((double)(this[this.tabledsPacketingProductNote.No_Of_PacketsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'No_Of_Packets\' in table \'dsPacketingProductNote\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tabledsPacketingProductNote.No_Of_PacketsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Loca {
                get {
                    try {
                        return ((string)(this[this.tabledsPacketingProductNote.LocaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Loca\' in table \'dsPacketingProductNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPacketingProductNote.LocaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Loca_Descrip {
                get {
                    try {
                        return ((string)(this[this.tabledsPacketingProductNote.Loca_DescripColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Loca_Descrip\' in table \'dsPacketingProductNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPacketingProductNote.Loca_DescripColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Status {
                get {
                    try {
                        return ((string)(this[this.tabledsPacketingProductNote.StatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Status\' in table \'dsPacketingProductNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPacketingProductNote.StatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal MPurchase {
                get {
                    try {
                        return ((decimal)(this[this.tabledsPacketingProductNote.MPurchaseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MPurchase\' in table \'dsPacketingProductNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPacketingProductNote.MPurchaseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal MSelling {
                get {
                    try {
                        return ((decimal)(this[this.tabledsPacketingProductNote.MSellingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MSelling\' in table \'dsPacketingProductNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPacketingProductNote.MSellingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDoc_NoNull() {
                return this.IsNull(this.tabledsPacketingProductNote.Doc_NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDoc_NoNull() {
                this[this.tabledsPacketingProductNote.Doc_NoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPost_DateNull() {
                return this.IsNull(this.tabledsPacketingProductNote.Post_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPost_DateNull() {
                this[this.tabledsPacketingProductNote.Post_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMain_Prod_CodeNull() {
                return this.IsNull(this.tabledsPacketingProductNote.Main_Prod_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMain_Prod_CodeNull() {
                this[this.tabledsPacketingProductNote.Main_Prod_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMain_Prod_NameNull() {
                return this.IsNull(this.tabledsPacketingProductNote.Main_Prod_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMain_Prod_NameNull() {
                this[this.tabledsPacketingProductNote.Main_Prod_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_CodeNull() {
                return this.IsNull(this.tabledsPacketingProductNote.Prod_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_CodeNull() {
                this[this.tabledsPacketingProductNote.Prod_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_NameNull() {
                return this.IsNull(this.tabledsPacketingProductNote.Prod_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_NameNull() {
                this[this.tabledsPacketingProductNote.Prod_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPurchase_priceNull() {
                return this.IsNull(this.tabledsPacketingProductNote.Purchase_priceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPurchase_priceNull() {
                this[this.tabledsPacketingProductNote.Purchase_priceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPacket_QtyNull() {
                return this.IsNull(this.tabledsPacketingProductNote.Packet_QtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPacket_QtyNull() {
                this[this.tabledsPacketingProductNote.Packet_QtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNo_Of_PacketsNull() {
                return this.IsNull(this.tabledsPacketingProductNote.No_Of_PacketsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNo_Of_PacketsNull() {
                this[this.tabledsPacketingProductNote.No_Of_PacketsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocaNull() {
                return this.IsNull(this.tabledsPacketingProductNote.LocaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocaNull() {
                this[this.tabledsPacketingProductNote.LocaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLoca_DescripNull() {
                return this.IsNull(this.tabledsPacketingProductNote.Loca_DescripColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLoca_DescripNull() {
                this[this.tabledsPacketingProductNote.Loca_DescripColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStatusNull() {
                return this.IsNull(this.tabledsPacketingProductNote.StatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStatusNull() {
                this[this.tabledsPacketingProductNote.StatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMPurchaseNull() {
                return this.IsNull(this.tabledsPacketingProductNote.MPurchaseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMPurchaseNull() {
                this[this.tabledsPacketingProductNote.MPurchaseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMSellingNull() {
                return this.IsNull(this.tabledsPacketingProductNote.MSellingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMSellingNull() {
                this[this.tabledsPacketingProductNote.MSellingColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dsNonMovingProductRow : global::System.Data.DataRow {
            
            private dsNonMovingProductDataTable tabledsNonMovingProduct;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsNonMovingProductRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledsNonMovingProduct = ((dsNonMovingProductDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prod_Code {
                get {
                    try {
                        return ((string)(this[this.tabledsNonMovingProduct.Prod_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Prod_Code\' in table \'dsNonMovingProduct\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsNonMovingProduct.Prod_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prod_Name {
                get {
                    try {
                        return ((string)(this[this.tabledsNonMovingProduct.Prod_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Prod_Name\' in table \'dsNonMovingProduct\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsNonMovingProduct.Prod_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Purchase_price {
                get {
                    try {
                        return ((string)(this[this.tabledsNonMovingProduct.Purchase_priceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Purchase_price\' in table \'dsNonMovingProduct\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsNonMovingProduct.Purchase_priceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Selling_Price {
                get {
                    try {
                        return ((string)(this[this.tabledsNonMovingProduct.Selling_PriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Selling_Price\' in table \'dsNonMovingProduct\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsNonMovingProduct.Selling_PriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Supplier_Id {
                get {
                    try {
                        return ((string)(this[this.tabledsNonMovingProduct.Supplier_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Supplier_Id\' in table \'dsNonMovingProduct\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsNonMovingProduct.Supplier_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Qty {
                get {
                    try {
                        return ((string)(this[this.tabledsNonMovingProduct.QtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Qty\' in table \'dsNonMovingProduct\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsNonMovingProduct.QtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Supp_Name {
                get {
                    try {
                        return ((string)(this[this.tabledsNonMovingProduct.Supp_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Supp_Name\' in table \'dsNonMovingProduct\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsNonMovingProduct.Supp_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Loca_Descrip {
                get {
                    try {
                        return ((string)(this[this.tabledsNonMovingProduct.Loca_DescripColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Loca_Descrip\' in table \'dsNonMovingProduct\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsNonMovingProduct.Loca_DescripColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DateFrom {
                get {
                    try {
                        return ((string)(this[this.tabledsNonMovingProduct.DateFromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateFrom\' in table \'dsNonMovingProduct\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsNonMovingProduct.DateFromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DateTo {
                get {
                    try {
                        return ((string)(this[this.tabledsNonMovingProduct.DateToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateTo\' in table \'dsNonMovingProduct\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsNonMovingProduct.DateToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Loca {
                get {
                    try {
                        return ((string)(this[this.tabledsNonMovingProduct.LocaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Loca\' in table \'dsNonMovingProduct\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsNonMovingProduct.LocaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_CodeNull() {
                return this.IsNull(this.tabledsNonMovingProduct.Prod_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_CodeNull() {
                this[this.tabledsNonMovingProduct.Prod_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_NameNull() {
                return this.IsNull(this.tabledsNonMovingProduct.Prod_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_NameNull() {
                this[this.tabledsNonMovingProduct.Prod_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPurchase_priceNull() {
                return this.IsNull(this.tabledsNonMovingProduct.Purchase_priceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPurchase_priceNull() {
                this[this.tabledsNonMovingProduct.Purchase_priceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelling_PriceNull() {
                return this.IsNull(this.tabledsNonMovingProduct.Selling_PriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelling_PriceNull() {
                this[this.tabledsNonMovingProduct.Selling_PriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupplier_IdNull() {
                return this.IsNull(this.tabledsNonMovingProduct.Supplier_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupplier_IdNull() {
                this[this.tabledsNonMovingProduct.Supplier_IdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQtyNull() {
                return this.IsNull(this.tabledsNonMovingProduct.QtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQtyNull() {
                this[this.tabledsNonMovingProduct.QtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupp_NameNull() {
                return this.IsNull(this.tabledsNonMovingProduct.Supp_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupp_NameNull() {
                this[this.tabledsNonMovingProduct.Supp_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLoca_DescripNull() {
                return this.IsNull(this.tabledsNonMovingProduct.Loca_DescripColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLoca_DescripNull() {
                this[this.tabledsNonMovingProduct.Loca_DescripColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateFromNull() {
                return this.IsNull(this.tabledsNonMovingProduct.DateFromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateFromNull() {
                this[this.tabledsNonMovingProduct.DateFromColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateToNull() {
                return this.IsNull(this.tabledsNonMovingProduct.DateToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateToNull() {
                this[this.tabledsNonMovingProduct.DateToColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocaNull() {
                return this.IsNull(this.tabledsNonMovingProduct.LocaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocaNull() {
                this[this.tabledsNonMovingProduct.LocaColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dsHourlySalesRow : global::System.Data.DataRow {
            
            private dsHourlySalesDataTable tabledsHourlySales;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsHourlySalesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledsHourlySales = ((dsHourlySalesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short Time_Id {
                get {
                    try {
                        return ((short)(this[this.tabledsHourlySales.Time_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Time_Id\' in table \'dsHourlySales\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsHourlySales.Time_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Time_Desc {
                get {
                    try {
                        return ((string)(this[this.tabledsHourlySales.Time_DescColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Time_Desc\' in table \'dsHourlySales\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsHourlySales.Time_DescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Qty {
                get {
                    try {
                        return ((double)(this[this.tabledsHourlySales.QtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Qty\' in table \'dsHourlySales\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsHourlySales.QtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Amount {
                get {
                    try {
                        return ((decimal)(this[this.tabledsHourlySales.AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Amount\' in table \'dsHourlySales\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsHourlySales.AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Loca {
                get {
                    try {
                        return ((string)(this[this.tabledsHourlySales.LocaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Loca\' in table \'dsHourlySales\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsHourlySales.LocaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Loca_Descrip {
                get {
                    try {
                        return ((string)(this[this.tabledsHourlySales.Loca_DescripColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Loca_Descrip\' in table \'dsHourlySales\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsHourlySales.Loca_DescripColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DateFrom {
                get {
                    try {
                        return ((string)(this[this.tabledsHourlySales.DateFromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateFrom\' in table \'dsHourlySales\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsHourlySales.DateFromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DateTo {
                get {
                    try {
                        return ((string)(this[this.tabledsHourlySales.DateToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateTo\' in table \'dsHourlySales\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsHourlySales.DateToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Header {
                get {
                    try {
                        return ((string)(this[this.tabledsHourlySales.HeaderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Header\' in table \'dsHourlySales\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsHourlySales.HeaderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime BillDate_Tr {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabledsHourlySales.BillDate_TrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BillDate_Tr\' in table \'dsHourlySales\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsHourlySales.BillDate_TrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BillDate {
                get {
                    try {
                        return ((string)(this[this.tabledsHourlySales.BillDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BillDate\' in table \'dsHourlySales\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsHourlySales.BillDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTime_IdNull() {
                return this.IsNull(this.tabledsHourlySales.Time_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTime_IdNull() {
                this[this.tabledsHourlySales.Time_IdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTime_DescNull() {
                return this.IsNull(this.tabledsHourlySales.Time_DescColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTime_DescNull() {
                this[this.tabledsHourlySales.Time_DescColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQtyNull() {
                return this.IsNull(this.tabledsHourlySales.QtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQtyNull() {
                this[this.tabledsHourlySales.QtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountNull() {
                return this.IsNull(this.tabledsHourlySales.AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountNull() {
                this[this.tabledsHourlySales.AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocaNull() {
                return this.IsNull(this.tabledsHourlySales.LocaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocaNull() {
                this[this.tabledsHourlySales.LocaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLoca_DescripNull() {
                return this.IsNull(this.tabledsHourlySales.Loca_DescripColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLoca_DescripNull() {
                this[this.tabledsHourlySales.Loca_DescripColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateFromNull() {
                return this.IsNull(this.tabledsHourlySales.DateFromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateFromNull() {
                this[this.tabledsHourlySales.DateFromColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateToNull() {
                return this.IsNull(this.tabledsHourlySales.DateToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateToNull() {
                this[this.tabledsHourlySales.DateToColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHeaderNull() {
                return this.IsNull(this.tabledsHourlySales.HeaderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHeaderNull() {
                this[this.tabledsHourlySales.HeaderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBillDate_TrNull() {
                return this.IsNull(this.tabledsHourlySales.BillDate_TrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBillDate_TrNull() {
                this[this.tabledsHourlySales.BillDate_TrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBillDateNull() {
                return this.IsNull(this.tabledsHourlySales.BillDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBillDateNull() {
                this[this.tabledsHourlySales.BillDateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dsDailyCollectionRow : global::System.Data.DataRow {
            
            private dsDailyCollectionDataTable tabledsDailyCollection;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsDailyCollectionRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledsDailyCollection = ((dsDailyCollectionDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Sale_Date {
                get {
                    try {
                        return ((string)(this[this.tabledsDailyCollection.Sale_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Sale_Date\' in table \'dsDailyCollection\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsDailyCollection.Sale_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Tr_Date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabledsDailyCollection.Tr_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Tr_Date\' in table \'dsDailyCollection\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsDailyCollection.Tr_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Unit_No {
                get {
                    try {
                        return ((string)(this[this.tabledsDailyCollection.Unit_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Unit_No\' in table \'dsDailyCollection\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsDailyCollection.Unit_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PosNet_Amt {
                get {
                    try {
                        return ((decimal)(this[this.tabledsDailyCollection.PosNet_AmtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PosNet_Amt\' in table \'dsDailyCollection\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsDailyCollection.PosNet_AmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PosCash_Amt {
                get {
                    try {
                        return ((decimal)(this[this.tabledsDailyCollection.PosCash_AmtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PosCash_Amt\' in table \'dsDailyCollection\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsDailyCollection.PosCash_AmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PosCredit_amt {
                get {
                    try {
                        return ((decimal)(this[this.tabledsDailyCollection.PosCredit_amtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PosCredit_amt\' in table \'dsDailyCollection\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsDailyCollection.PosCredit_amtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Card1_Descr {
                get {
                    try {
                        return ((string)(this[this.tabledsDailyCollection.Card1_DescrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Card1_Descr\' in table \'dsDailyCollection\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsDailyCollection.Card1_DescrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Card1_Amount {
                get {
                    try {
                        return ((decimal)(this[this.tabledsDailyCollection.Card1_AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Card1_Amount\' in table \'dsDailyCollection\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsDailyCollection.Card1_AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Card2_Descr {
                get {
                    try {
                        return ((string)(this[this.tabledsDailyCollection.Card2_DescrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Card2_Descr\' in table \'dsDailyCollection\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsDailyCollection.Card2_DescrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Card2_Amount {
                get {
                    try {
                        return ((decimal)(this[this.tabledsDailyCollection.Card2_AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Card2_Amount\' in table \'dsDailyCollection\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsDailyCollection.Card2_AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Card3_Descr {
                get {
                    try {
                        return ((string)(this[this.tabledsDailyCollection.Card3_DescrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Card3_Descr\' in table \'dsDailyCollection\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsDailyCollection.Card3_DescrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Card3_Amount {
                get {
                    try {
                        return ((decimal)(this[this.tabledsDailyCollection.Card3_AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Card3_Amount\' in table \'dsDailyCollection\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsDailyCollection.Card3_AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Card4_Descr {
                get {
                    try {
                        return ((string)(this[this.tabledsDailyCollection.Card4_DescrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Card4_Descr\' in table \'dsDailyCollection\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsDailyCollection.Card4_DescrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Card4_Amount {
                get {
                    try {
                        return ((decimal)(this[this.tabledsDailyCollection.Card4_AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Card4_Amount\' in table \'dsDailyCollection\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsDailyCollection.Card4_AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Card5_Descr {
                get {
                    try {
                        return ((string)(this[this.tabledsDailyCollection.Card5_DescrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Card5_Descr\' in table \'dsDailyCollection\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsDailyCollection.Card5_DescrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Card5_Amount {
                get {
                    try {
                        return ((decimal)(this[this.tabledsDailyCollection.Card5_AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Card5_Amount\' in table \'dsDailyCollection\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsDailyCollection.Card5_AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short PosBill_Count {
                get {
                    try {
                        return ((short)(this[this.tabledsDailyCollection.PosBill_CountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PosBill_Count\' in table \'dsDailyCollection\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsDailyCollection.PosBill_CountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DateFrom {
                get {
                    try {
                        return ((string)(this[this.tabledsDailyCollection.DateFromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateFrom\' in table \'dsDailyCollection\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsDailyCollection.DateFromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DateTo {
                get {
                    try {
                        return ((string)(this[this.tabledsDailyCollection.DateToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateTo\' in table \'dsDailyCollection\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsDailyCollection.DateToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Loca {
                get {
                    try {
                        return ((string)(this[this.tabledsDailyCollection.LocaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Loca\' in table \'dsDailyCollection\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsDailyCollection.LocaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Loca_Descrip {
                get {
                    try {
                        return ((string)(this[this.tabledsDailyCollection.Loca_DescripColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Loca_Descrip\' in table \'dsDailyCollection\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsDailyCollection.Loca_DescripColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSale_DateNull() {
                return this.IsNull(this.tabledsDailyCollection.Sale_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSale_DateNull() {
                this[this.tabledsDailyCollection.Sale_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTr_DateNull() {
                return this.IsNull(this.tabledsDailyCollection.Tr_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTr_DateNull() {
                this[this.tabledsDailyCollection.Tr_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnit_NoNull() {
                return this.IsNull(this.tabledsDailyCollection.Unit_NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnit_NoNull() {
                this[this.tabledsDailyCollection.Unit_NoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPosNet_AmtNull() {
                return this.IsNull(this.tabledsDailyCollection.PosNet_AmtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPosNet_AmtNull() {
                this[this.tabledsDailyCollection.PosNet_AmtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPosCash_AmtNull() {
                return this.IsNull(this.tabledsDailyCollection.PosCash_AmtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPosCash_AmtNull() {
                this[this.tabledsDailyCollection.PosCash_AmtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPosCredit_amtNull() {
                return this.IsNull(this.tabledsDailyCollection.PosCredit_amtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPosCredit_amtNull() {
                this[this.tabledsDailyCollection.PosCredit_amtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCard1_DescrNull() {
                return this.IsNull(this.tabledsDailyCollection.Card1_DescrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCard1_DescrNull() {
                this[this.tabledsDailyCollection.Card1_DescrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCard1_AmountNull() {
                return this.IsNull(this.tabledsDailyCollection.Card1_AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCard1_AmountNull() {
                this[this.tabledsDailyCollection.Card1_AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCard2_DescrNull() {
                return this.IsNull(this.tabledsDailyCollection.Card2_DescrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCard2_DescrNull() {
                this[this.tabledsDailyCollection.Card2_DescrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCard2_AmountNull() {
                return this.IsNull(this.tabledsDailyCollection.Card2_AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCard2_AmountNull() {
                this[this.tabledsDailyCollection.Card2_AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCard3_DescrNull() {
                return this.IsNull(this.tabledsDailyCollection.Card3_DescrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCard3_DescrNull() {
                this[this.tabledsDailyCollection.Card3_DescrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCard3_AmountNull() {
                return this.IsNull(this.tabledsDailyCollection.Card3_AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCard3_AmountNull() {
                this[this.tabledsDailyCollection.Card3_AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCard4_DescrNull() {
                return this.IsNull(this.tabledsDailyCollection.Card4_DescrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCard4_DescrNull() {
                this[this.tabledsDailyCollection.Card4_DescrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCard4_AmountNull() {
                return this.IsNull(this.tabledsDailyCollection.Card4_AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCard4_AmountNull() {
                this[this.tabledsDailyCollection.Card4_AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCard5_DescrNull() {
                return this.IsNull(this.tabledsDailyCollection.Card5_DescrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCard5_DescrNull() {
                this[this.tabledsDailyCollection.Card5_DescrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCard5_AmountNull() {
                return this.IsNull(this.tabledsDailyCollection.Card5_AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCard5_AmountNull() {
                this[this.tabledsDailyCollection.Card5_AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPosBill_CountNull() {
                return this.IsNull(this.tabledsDailyCollection.PosBill_CountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPosBill_CountNull() {
                this[this.tabledsDailyCollection.PosBill_CountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateFromNull() {
                return this.IsNull(this.tabledsDailyCollection.DateFromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateFromNull() {
                this[this.tabledsDailyCollection.DateFromColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateToNull() {
                return this.IsNull(this.tabledsDailyCollection.DateToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateToNull() {
                this[this.tabledsDailyCollection.DateToColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocaNull() {
                return this.IsNull(this.tabledsDailyCollection.LocaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocaNull() {
                this[this.tabledsDailyCollection.LocaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLoca_DescripNull() {
                return this.IsNull(this.tabledsDailyCollection.Loca_DescripColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLoca_DescripNull() {
                this[this.tabledsDailyCollection.Loca_DescripColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dsReceiptWiseSalesRow : global::System.Data.DataRow {
            
            private dsReceiptWiseSalesDataTable tabledsReceiptWiseSales;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsReceiptWiseSalesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledsReceiptWiseSales = ((dsReceiptWiseSalesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Loca {
                get {
                    try {
                        return ((string)(this[this.tabledsReceiptWiseSales.LocaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Loca\' in table \'dsReceiptWiseSales\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsReceiptWiseSales.LocaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Loca_Descrip {
                get {
                    try {
                        return ((string)(this[this.tabledsReceiptWiseSales.Loca_DescripColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Loca_Descrip\' in table \'dsReceiptWiseSales\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsReceiptWiseSales.Loca_DescripColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime BillDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabledsReceiptWiseSales.BillDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BillDate\' in table \'dsReceiptWiseSales\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsReceiptWiseSales.BillDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Receipt_No {
                get {
                    try {
                        return ((string)(this[this.tabledsReceiptWiseSales.Receipt_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Receipt_No\' in table \'dsReceiptWiseSales\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsReceiptWiseSales.Receipt_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Unit {
                get {
                    try {
                        return ((string)(this[this.tabledsReceiptWiseSales.UnitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Unit\' in table \'dsReceiptWiseSales\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsReceiptWiseSales.UnitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Amount {
                get {
                    try {
                        return ((decimal)(this[this.tabledsReceiptWiseSales.AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Amount\' in table \'dsReceiptWiseSales\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsReceiptWiseSales.AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DateFrom {
                get {
                    try {
                        return ((string)(this[this.tabledsReceiptWiseSales.DateFromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateFrom\' in table \'dsReceiptWiseSales\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsReceiptWiseSales.DateFromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DateTo {
                get {
                    try {
                        return ((string)(this[this.tabledsReceiptWiseSales.DateToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateTo\' in table \'dsReceiptWiseSales\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsReceiptWiseSales.DateToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Discount {
                get {
                    try {
                        return ((decimal)(this[this.tabledsReceiptWiseSales.DiscountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Discount\' in table \'dsReceiptWiseSales\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsReceiptWiseSales.DiscountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocaNull() {
                return this.IsNull(this.tabledsReceiptWiseSales.LocaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocaNull() {
                this[this.tabledsReceiptWiseSales.LocaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLoca_DescripNull() {
                return this.IsNull(this.tabledsReceiptWiseSales.Loca_DescripColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLoca_DescripNull() {
                this[this.tabledsReceiptWiseSales.Loca_DescripColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBillDateNull() {
                return this.IsNull(this.tabledsReceiptWiseSales.BillDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBillDateNull() {
                this[this.tabledsReceiptWiseSales.BillDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReceipt_NoNull() {
                return this.IsNull(this.tabledsReceiptWiseSales.Receipt_NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReceipt_NoNull() {
                this[this.tabledsReceiptWiseSales.Receipt_NoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnitNull() {
                return this.IsNull(this.tabledsReceiptWiseSales.UnitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnitNull() {
                this[this.tabledsReceiptWiseSales.UnitColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountNull() {
                return this.IsNull(this.tabledsReceiptWiseSales.AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountNull() {
                this[this.tabledsReceiptWiseSales.AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateFromNull() {
                return this.IsNull(this.tabledsReceiptWiseSales.DateFromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateFromNull() {
                this[this.tabledsReceiptWiseSales.DateFromColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateToNull() {
                return this.IsNull(this.tabledsReceiptWiseSales.DateToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateToNull() {
                this[this.tabledsReceiptWiseSales.DateToColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDiscountNull() {
                return this.IsNull(this.tabledsReceiptWiseSales.DiscountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDiscountNull() {
                this[this.tabledsReceiptWiseSales.DiscountColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dsSalesmanSalesRow : global::System.Data.DataRow {
            
            private dsSalesmanSalesDataTable tabledsSalesmanSales;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsSalesmanSalesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledsSalesmanSales = ((dsSalesmanSalesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Sale_Code {
                get {
                    try {
                        return ((string)(this[this.tabledsSalesmanSales.Sale_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Sale_Code\' in table \'dsSalesmanSales\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsSalesmanSales.Sale_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Sale_Name {
                get {
                    try {
                        return ((string)(this[this.tabledsSalesmanSales.Sale_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Sale_Name\' in table \'dsSalesmanSales\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsSalesmanSales.Sale_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Vehicle_No {
                get {
                    try {
                        return ((string)(this[this.tabledsSalesmanSales.Vehicle_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Vehicle_No\' in table \'dsSalesmanSales\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsSalesmanSales.Vehicle_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Sales_Target {
                get {
                    try {
                        return ((string)(this[this.tabledsSalesmanSales.Sales_TargetColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Sales_Target\' in table \'dsSalesmanSales\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsSalesmanSales.Sales_TargetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string iid {
                get {
                    try {
                        return ((string)(this[this.tabledsSalesmanSales.iidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'iid\' in table \'dsSalesmanSales\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsSalesmanSales.iidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Amount {
                get {
                    try {
                        return ((decimal)(this[this.tabledsSalesmanSales.AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Amount\' in table \'dsSalesmanSales\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsSalesmanSales.AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DateFrom {
                get {
                    try {
                        return ((string)(this[this.tabledsSalesmanSales.DateFromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateFrom\' in table \'dsSalesmanSales\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsSalesmanSales.DateFromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DateTo {
                get {
                    try {
                        return ((string)(this[this.tabledsSalesmanSales.DateToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateTo\' in table \'dsSalesmanSales\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsSalesmanSales.DateToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Item_Code {
                get {
                    try {
                        return ((string)(this[this.tabledsSalesmanSales.Item_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Item_Code\' in table \'dsSalesmanSales\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsSalesmanSales.Item_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Item_Descrip {
                get {
                    try {
                        return ((string)(this[this.tabledsSalesmanSales.Item_DescripColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Item_Descrip\' in table \'dsSalesmanSales\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsSalesmanSales.Item_DescripColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Unit_Price {
                get {
                    try {
                        return ((string)(this[this.tabledsSalesmanSales.Unit_PriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Unit_Price\' in table \'dsSalesmanSales\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsSalesmanSales.Unit_PriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Qty {
                get {
                    try {
                        return ((string)(this[this.tabledsSalesmanSales.QtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Qty\' in table \'dsSalesmanSales\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsSalesmanSales.QtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSale_CodeNull() {
                return this.IsNull(this.tabledsSalesmanSales.Sale_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSale_CodeNull() {
                this[this.tabledsSalesmanSales.Sale_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSale_NameNull() {
                return this.IsNull(this.tabledsSalesmanSales.Sale_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSale_NameNull() {
                this[this.tabledsSalesmanSales.Sale_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVehicle_NoNull() {
                return this.IsNull(this.tabledsSalesmanSales.Vehicle_NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVehicle_NoNull() {
                this[this.tabledsSalesmanSales.Vehicle_NoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSales_TargetNull() {
                return this.IsNull(this.tabledsSalesmanSales.Sales_TargetColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSales_TargetNull() {
                this[this.tabledsSalesmanSales.Sales_TargetColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsiidNull() {
                return this.IsNull(this.tabledsSalesmanSales.iidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetiidNull() {
                this[this.tabledsSalesmanSales.iidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountNull() {
                return this.IsNull(this.tabledsSalesmanSales.AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountNull() {
                this[this.tabledsSalesmanSales.AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateFromNull() {
                return this.IsNull(this.tabledsSalesmanSales.DateFromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateFromNull() {
                this[this.tabledsSalesmanSales.DateFromColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateToNull() {
                return this.IsNull(this.tabledsSalesmanSales.DateToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateToNull() {
                this[this.tabledsSalesmanSales.DateToColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItem_CodeNull() {
                return this.IsNull(this.tabledsSalesmanSales.Item_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItem_CodeNull() {
                this[this.tabledsSalesmanSales.Item_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItem_DescripNull() {
                return this.IsNull(this.tabledsSalesmanSales.Item_DescripColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItem_DescripNull() {
                this[this.tabledsSalesmanSales.Item_DescripColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnit_PriceNull() {
                return this.IsNull(this.tabledsSalesmanSales.Unit_PriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnit_PriceNull() {
                this[this.tabledsSalesmanSales.Unit_PriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQtyNull() {
                return this.IsNull(this.tabledsSalesmanSales.QtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQtyNull() {
                this[this.tabledsSalesmanSales.QtyColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dsPurSalesStockRow : global::System.Data.DataRow {
            
            private dsPurSalesStockDataTable tabledsPurSalesStock;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsPurSalesStockRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledsPurSalesStock = ((dsPurSalesStockDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prod_Code {
                get {
                    try {
                        return ((string)(this[this.tabledsPurSalesStock.Prod_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Prod_Code\' in table \'dsPurSalesStock\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurSalesStock.Prod_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prod_Name {
                get {
                    try {
                        return ((string)(this[this.tabledsPurSalesStock.Prod_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Prod_Name\' in table \'dsPurSalesStock\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurSalesStock.Prod_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Purchase_price {
                get {
                    try {
                        return ((decimal)(this[this.tabledsPurSalesStock.Purchase_priceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Purchase_price\' in table \'dsPurSalesStock\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurSalesStock.Purchase_priceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Selling_Price {
                get {
                    try {
                        return ((decimal)(this[this.tabledsPurSalesStock.Selling_PriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Selling_Price\' in table \'dsPurSalesStock\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurSalesStock.Selling_PriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Sel_Qty {
                get {
                    try {
                        return ((double)(this[this.tabledsPurSalesStock.Sel_QtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Sel_Qty\' in table \'dsPurSalesStock\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurSalesStock.Sel_QtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Pur_Qty {
                get {
                    try {
                        return ((double)(this[this.tabledsPurSalesStock.Pur_QtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Pur_Qty\' in table \'dsPurSalesStock\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurSalesStock.Pur_QtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double St_Qty {
                get {
                    try {
                        return ((double)(this[this.tabledsPurSalesStock.St_QtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'St_Qty\' in table \'dsPurSalesStock\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurSalesStock.St_QtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CodeFrom {
                get {
                    try {
                        return ((string)(this[this.tabledsPurSalesStock.CodeFromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CodeFrom\' in table \'dsPurSalesStock\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurSalesStock.CodeFromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CodeTo {
                get {
                    try {
                        return ((string)(this[this.tabledsPurSalesStock.CodeToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CodeTo\' in table \'dsPurSalesStock\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurSalesStock.CodeToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Dept_Code {
                get {
                    try {
                        return ((string)(this[this.tabledsPurSalesStock.Dept_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Dept_Code\' in table \'dsPurSalesStock\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurSalesStock.Dept_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Dept_Name {
                get {
                    try {
                        return ((string)(this[this.tabledsPurSalesStock.Dept_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Dept_Name\' in table \'dsPurSalesStock\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurSalesStock.Dept_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Loca {
                get {
                    try {
                        return ((string)(this[this.tabledsPurSalesStock.LocaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Loca\' in table \'dsPurSalesStock\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurSalesStock.LocaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Loca_Descrip {
                get {
                    try {
                        return ((string)(this[this.tabledsPurSalesStock.Loca_DescripColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Loca_Descrip\' in table \'dsPurSalesStock\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurSalesStock.Loca_DescripColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_CodeNull() {
                return this.IsNull(this.tabledsPurSalesStock.Prod_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_CodeNull() {
                this[this.tabledsPurSalesStock.Prod_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_NameNull() {
                return this.IsNull(this.tabledsPurSalesStock.Prod_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_NameNull() {
                this[this.tabledsPurSalesStock.Prod_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPurchase_priceNull() {
                return this.IsNull(this.tabledsPurSalesStock.Purchase_priceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPurchase_priceNull() {
                this[this.tabledsPurSalesStock.Purchase_priceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelling_PriceNull() {
                return this.IsNull(this.tabledsPurSalesStock.Selling_PriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelling_PriceNull() {
                this[this.tabledsPurSalesStock.Selling_PriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSel_QtyNull() {
                return this.IsNull(this.tabledsPurSalesStock.Sel_QtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSel_QtyNull() {
                this[this.tabledsPurSalesStock.Sel_QtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPur_QtyNull() {
                return this.IsNull(this.tabledsPurSalesStock.Pur_QtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPur_QtyNull() {
                this[this.tabledsPurSalesStock.Pur_QtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSt_QtyNull() {
                return this.IsNull(this.tabledsPurSalesStock.St_QtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSt_QtyNull() {
                this[this.tabledsPurSalesStock.St_QtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCodeFromNull() {
                return this.IsNull(this.tabledsPurSalesStock.CodeFromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCodeFromNull() {
                this[this.tabledsPurSalesStock.CodeFromColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCodeToNull() {
                return this.IsNull(this.tabledsPurSalesStock.CodeToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCodeToNull() {
                this[this.tabledsPurSalesStock.CodeToColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDept_CodeNull() {
                return this.IsNull(this.tabledsPurSalesStock.Dept_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDept_CodeNull() {
                this[this.tabledsPurSalesStock.Dept_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDept_NameNull() {
                return this.IsNull(this.tabledsPurSalesStock.Dept_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDept_NameNull() {
                this[this.tabledsPurSalesStock.Dept_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocaNull() {
                return this.IsNull(this.tabledsPurSalesStock.LocaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocaNull() {
                this[this.tabledsPurSalesStock.LocaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLoca_DescripNull() {
                return this.IsNull(this.tabledsPurSalesStock.Loca_DescripColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLoca_DescripNull() {
                this[this.tabledsPurSalesStock.Loca_DescripColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dsGivenDateStockRow : global::System.Data.DataRow {
            
            private dsGivenDateStockDataTable tabledsGivenDateStock;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsGivenDateStockRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledsGivenDateStock = ((dsGivenDateStockDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prod_Code {
                get {
                    try {
                        return ((string)(this[this.tabledsGivenDateStock.Prod_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Prod_Code\' in table \'dsGivenDateStock\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsGivenDateStock.Prod_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prod_Name {
                get {
                    try {
                        return ((string)(this[this.tabledsGivenDateStock.Prod_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Prod_Name\' in table \'dsGivenDateStock\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsGivenDateStock.Prod_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Curr_Qty {
                get {
                    try {
                        return ((double)(this[this.tabledsGivenDateStock.Curr_QtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Curr_Qty\' in table \'dsGivenDateStock\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsGivenDateStock.Curr_QtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Pur_Qty {
                get {
                    try {
                        return ((double)(this[this.tabledsGivenDateStock.Pur_QtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Pur_Qty\' in table \'dsGivenDateStock\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsGivenDateStock.Pur_QtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Sale_Qty {
                get {
                    try {
                        return ((double)(this[this.tabledsGivenDateStock.Sale_QtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Sale_Qty\' in table \'dsGivenDateStock\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsGivenDateStock.Sale_QtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double St_Adj {
                get {
                    try {
                        return ((double)(this[this.tabledsGivenDateStock.St_AdjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'St_Adj\' in table \'dsGivenDateStock\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsGivenDateStock.St_AdjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double On_Date_Stock {
                get {
                    try {
                        return ((double)(this[this.tabledsGivenDateStock.On_Date_StockColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'On_Date_Stock\' in table \'dsGivenDateStock\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsGivenDateStock.On_Date_StockColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Loca {
                get {
                    try {
                        return ((string)(this[this.tabledsGivenDateStock.LocaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Loca\' in table \'dsGivenDateStock\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsGivenDateStock.LocaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Loca_Descrip {
                get {
                    try {
                        return ((string)(this[this.tabledsGivenDateStock.Loca_DescripColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Loca_Descrip\' in table \'dsGivenDateStock\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsGivenDateStock.Loca_DescripColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Department_Id {
                get {
                    try {
                        return ((string)(this[this.tabledsGivenDateStock.Department_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Department_Id\' in table \'dsGivenDateStock\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsGivenDateStock.Department_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Dept_Name {
                get {
                    try {
                        return ((string)(this[this.tabledsGivenDateStock.Dept_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Dept_Name\' in table \'dsGivenDateStock\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsGivenDateStock.Dept_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DateTo {
                get {
                    try {
                        return ((string)(this[this.tabledsGivenDateStock.DateToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateTo\' in table \'dsGivenDateStock\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsGivenDateStock.DateToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Purchase_price {
                get {
                    try {
                        return ((decimal)(this[this.tabledsGivenDateStock.Purchase_priceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Purchase_price\' in table \'dsGivenDateStock\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsGivenDateStock.Purchase_priceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Selling_Price {
                get {
                    try {
                        return ((decimal)(this[this.tabledsGivenDateStock.Selling_PriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Selling_Price\' in table \'dsGivenDateStock\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsGivenDateStock.Selling_PriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_CodeNull() {
                return this.IsNull(this.tabledsGivenDateStock.Prod_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_CodeNull() {
                this[this.tabledsGivenDateStock.Prod_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_NameNull() {
                return this.IsNull(this.tabledsGivenDateStock.Prod_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_NameNull() {
                this[this.tabledsGivenDateStock.Prod_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCurr_QtyNull() {
                return this.IsNull(this.tabledsGivenDateStock.Curr_QtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCurr_QtyNull() {
                this[this.tabledsGivenDateStock.Curr_QtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPur_QtyNull() {
                return this.IsNull(this.tabledsGivenDateStock.Pur_QtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPur_QtyNull() {
                this[this.tabledsGivenDateStock.Pur_QtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSale_QtyNull() {
                return this.IsNull(this.tabledsGivenDateStock.Sale_QtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSale_QtyNull() {
                this[this.tabledsGivenDateStock.Sale_QtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSt_AdjNull() {
                return this.IsNull(this.tabledsGivenDateStock.St_AdjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSt_AdjNull() {
                this[this.tabledsGivenDateStock.St_AdjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOn_Date_StockNull() {
                return this.IsNull(this.tabledsGivenDateStock.On_Date_StockColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOn_Date_StockNull() {
                this[this.tabledsGivenDateStock.On_Date_StockColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocaNull() {
                return this.IsNull(this.tabledsGivenDateStock.LocaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocaNull() {
                this[this.tabledsGivenDateStock.LocaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLoca_DescripNull() {
                return this.IsNull(this.tabledsGivenDateStock.Loca_DescripColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLoca_DescripNull() {
                this[this.tabledsGivenDateStock.Loca_DescripColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDepartment_IdNull() {
                return this.IsNull(this.tabledsGivenDateStock.Department_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDepartment_IdNull() {
                this[this.tabledsGivenDateStock.Department_IdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDept_NameNull() {
                return this.IsNull(this.tabledsGivenDateStock.Dept_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDept_NameNull() {
                this[this.tabledsGivenDateStock.Dept_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateToNull() {
                return this.IsNull(this.tabledsGivenDateStock.DateToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateToNull() {
                this[this.tabledsGivenDateStock.DateToColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPurchase_priceNull() {
                return this.IsNull(this.tabledsGivenDateStock.Purchase_priceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPurchase_priceNull() {
                this[this.tabledsGivenDateStock.Purchase_priceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelling_PriceNull() {
                return this.IsNull(this.tabledsGivenDateStock.Selling_PriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelling_PriceNull() {
                this[this.tabledsGivenDateStock.Selling_PriceColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dsProductToBeReturnRow : global::System.Data.DataRow {
            
            private dsProductToBeReturnDataTable tabledsProductToBeReturn;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsProductToBeReturnRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledsProductToBeReturn = ((dsProductToBeReturnDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Doc_No {
                get {
                    try {
                        return ((string)(this[this.tabledsProductToBeReturn.Doc_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Doc_No\' in table \'dsProductToBeReturn\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProductToBeReturn.Doc_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Post_Date {
                get {
                    try {
                        return ((string)(this[this.tabledsProductToBeReturn.Post_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Post_Date\' in table \'dsProductToBeReturn\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProductToBeReturn.Post_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prod_Code {
                get {
                    try {
                        return ((string)(this[this.tabledsProductToBeReturn.Prod_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Prod_Code\' in table \'dsProductToBeReturn\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProductToBeReturn.Prod_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prod_Name {
                get {
                    try {
                        return ((string)(this[this.tabledsProductToBeReturn.Prod_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Prod_Name\' in table \'dsProductToBeReturn\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProductToBeReturn.Prod_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Qty {
                get {
                    try {
                        return ((decimal)(this[this.tabledsProductToBeReturn.QtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Qty\' in table \'dsProductToBeReturn\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProductToBeReturn.QtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Purchase_Price {
                get {
                    try {
                        return ((string)(this[this.tabledsProductToBeReturn.Purchase_PriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Purchase_Price\' in table \'dsProductToBeReturn\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProductToBeReturn.Purchase_PriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Supplier_Id {
                get {
                    try {
                        return ((string)(this[this.tabledsProductToBeReturn.Supplier_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Supplier_Id\' in table \'dsProductToBeReturn\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProductToBeReturn.Supplier_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Supp_Name {
                get {
                    try {
                        return ((string)(this[this.tabledsProductToBeReturn.Supp_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Supp_Name\' in table \'dsProductToBeReturn\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProductToBeReturn.Supp_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DateFrom {
                get {
                    try {
                        return ((string)(this[this.tabledsProductToBeReturn.DateFromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateFrom\' in table \'dsProductToBeReturn\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProductToBeReturn.DateFromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DateTo {
                get {
                    try {
                        return ((string)(this[this.tabledsProductToBeReturn.DateToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateTo\' in table \'dsProductToBeReturn\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProductToBeReturn.DateToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Purchased_Date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabledsProductToBeReturn.Purchased_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Purchased_Date\' in table \'dsProductToBeReturn\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProductToBeReturn.Purchased_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDoc_NoNull() {
                return this.IsNull(this.tabledsProductToBeReturn.Doc_NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDoc_NoNull() {
                this[this.tabledsProductToBeReturn.Doc_NoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPost_DateNull() {
                return this.IsNull(this.tabledsProductToBeReturn.Post_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPost_DateNull() {
                this[this.tabledsProductToBeReturn.Post_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_CodeNull() {
                return this.IsNull(this.tabledsProductToBeReturn.Prod_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_CodeNull() {
                this[this.tabledsProductToBeReturn.Prod_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_NameNull() {
                return this.IsNull(this.tabledsProductToBeReturn.Prod_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_NameNull() {
                this[this.tabledsProductToBeReturn.Prod_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQtyNull() {
                return this.IsNull(this.tabledsProductToBeReturn.QtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQtyNull() {
                this[this.tabledsProductToBeReturn.QtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPurchase_PriceNull() {
                return this.IsNull(this.tabledsProductToBeReturn.Purchase_PriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPurchase_PriceNull() {
                this[this.tabledsProductToBeReturn.Purchase_PriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupplier_IdNull() {
                return this.IsNull(this.tabledsProductToBeReturn.Supplier_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupplier_IdNull() {
                this[this.tabledsProductToBeReturn.Supplier_IdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupp_NameNull() {
                return this.IsNull(this.tabledsProductToBeReturn.Supp_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupp_NameNull() {
                this[this.tabledsProductToBeReturn.Supp_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateFromNull() {
                return this.IsNull(this.tabledsProductToBeReturn.DateFromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateFromNull() {
                this[this.tabledsProductToBeReturn.DateFromColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateToNull() {
                return this.IsNull(this.tabledsProductToBeReturn.DateToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateToNull() {
                this[this.tabledsProductToBeReturn.DateToColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPurchased_DateNull() {
                return this.IsNull(this.tabledsProductToBeReturn.Purchased_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPurchased_DateNull() {
                this[this.tabledsProductToBeReturn.Purchased_DateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dsProdROLRow : global::System.Data.DataRow {
            
            private dsProdROLDataTable tabledsProdROL;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsProdROLRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledsProdROL = ((dsProdROLDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Loca {
                get {
                    try {
                        return ((string)(this[this.tabledsProdROL.LocaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Loca\' in table \'dsProdROL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProdROL.LocaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double ROL {
                get {
                    try {
                        return ((double)(this[this.tabledsProdROL.ROLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ROL\' in table \'dsProdROL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProdROL.ROLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double RO_Qty {
                get {
                    try {
                        return ((double)(this[this.tabledsProdROL.RO_QtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RO_Qty\' in table \'dsProdROL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProdROL.RO_QtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Loca_Descrip {
                get {
                    try {
                        return ((string)(this[this.tabledsProdROL.Loca_DescripColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Loca_Descrip\' in table \'dsProdROL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProdROL.Loca_DescripColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Qty {
                get {
                    try {
                        return ((double)(this[this.tabledsProdROL.QtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Qty\' in table \'dsProdROL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProdROL.QtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocaNull() {
                return this.IsNull(this.tabledsProdROL.LocaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocaNull() {
                this[this.tabledsProdROL.LocaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsROLNull() {
                return this.IsNull(this.tabledsProdROL.ROLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetROLNull() {
                this[this.tabledsProdROL.ROLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRO_QtyNull() {
                return this.IsNull(this.tabledsProdROL.RO_QtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRO_QtyNull() {
                this[this.tabledsProdROL.RO_QtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLoca_DescripNull() {
                return this.IsNull(this.tabledsProdROL.Loca_DescripColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLoca_DescripNull() {
                this[this.tabledsProdROL.Loca_DescripColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQtyNull() {
                return this.IsNull(this.tabledsProdROL.QtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQtyNull() {
                this[this.tabledsProdROL.QtyColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dsProductReqRow : global::System.Data.DataRow {
            
            private dsProductReqDataTable tabledsProductReq;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsProductReqRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledsProductReq = ((dsProductReqDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prod_Code {
                get {
                    try {
                        return ((string)(this[this.tabledsProductReq.Prod_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Prod_Code\' in table \'dsProductReq\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProductReq.Prod_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prod_Name {
                get {
                    try {
                        return ((string)(this[this.tabledsProductReq.Prod_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Prod_Name\' in table \'dsProductReq\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProductReq.Prod_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Department_Id {
                get {
                    try {
                        return ((string)(this[this.tabledsProductReq.Department_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Department_Id\' in table \'dsProductReq\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProductReq.Department_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Dept_Name {
                get {
                    try {
                        return ((string)(this[this.tabledsProductReq.Dept_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Dept_Name\' in table \'dsProductReq\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProductReq.Dept_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double St_Qty {
                get {
                    try {
                        return ((double)(this[this.tabledsProductReq.St_QtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'St_Qty\' in table \'dsProductReq\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProductReq.St_QtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double SR_Qty {
                get {
                    try {
                        return ((double)(this[this.tabledsProductReq.SR_QtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SR_Qty\' in table \'dsProductReq\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProductReq.SR_QtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double ROL {
                get {
                    try {
                        return ((double)(this[this.tabledsProductReq.ROLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ROL\' in table \'dsProductReq\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProductReq.ROLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double RO_Qty {
                get {
                    try {
                        return ((double)(this[this.tabledsProductReq.RO_QtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RO_Qty\' in table \'dsProductReq\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProductReq.RO_QtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CodeFrom {
                get {
                    try {
                        return ((string)(this[this.tabledsProductReq.CodeFromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CodeFrom\' in table \'dsProductReq\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProductReq.CodeFromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CodeTo {
                get {
                    try {
                        return ((string)(this[this.tabledsProductReq.CodeToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CodeTo\' in table \'dsProductReq\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProductReq.CodeToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Loca {
                get {
                    try {
                        return ((string)(this[this.tabledsProductReq.LocaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Loca\' in table \'dsProductReq\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProductReq.LocaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Loca_Descrip {
                get {
                    try {
                        return ((string)(this[this.tabledsProductReq.Loca_DescripColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Loca_Descrip\' in table \'dsProductReq\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProductReq.Loca_DescripColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_CodeNull() {
                return this.IsNull(this.tabledsProductReq.Prod_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_CodeNull() {
                this[this.tabledsProductReq.Prod_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_NameNull() {
                return this.IsNull(this.tabledsProductReq.Prod_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_NameNull() {
                this[this.tabledsProductReq.Prod_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDepartment_IdNull() {
                return this.IsNull(this.tabledsProductReq.Department_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDepartment_IdNull() {
                this[this.tabledsProductReq.Department_IdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDept_NameNull() {
                return this.IsNull(this.tabledsProductReq.Dept_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDept_NameNull() {
                this[this.tabledsProductReq.Dept_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSt_QtyNull() {
                return this.IsNull(this.tabledsProductReq.St_QtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSt_QtyNull() {
                this[this.tabledsProductReq.St_QtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSR_QtyNull() {
                return this.IsNull(this.tabledsProductReq.SR_QtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSR_QtyNull() {
                this[this.tabledsProductReq.SR_QtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsROLNull() {
                return this.IsNull(this.tabledsProductReq.ROLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetROLNull() {
                this[this.tabledsProductReq.ROLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRO_QtyNull() {
                return this.IsNull(this.tabledsProductReq.RO_QtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRO_QtyNull() {
                this[this.tabledsProductReq.RO_QtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCodeFromNull() {
                return this.IsNull(this.tabledsProductReq.CodeFromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCodeFromNull() {
                this[this.tabledsProductReq.CodeFromColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCodeToNull() {
                return this.IsNull(this.tabledsProductReq.CodeToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCodeToNull() {
                this[this.tabledsProductReq.CodeToColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocaNull() {
                return this.IsNull(this.tabledsProductReq.LocaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocaNull() {
                this[this.tabledsProductReq.LocaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLoca_DescripNull() {
                return this.IsNull(this.tabledsProductReq.Loca_DescripColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLoca_DescripNull() {
                this[this.tabledsProductReq.Loca_DescripColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dsProductDiscountRow : global::System.Data.DataRow {
            
            private dsProductDiscountDataTable tabledsProductDiscount;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsProductDiscountRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledsProductDiscount = ((dsProductDiscountDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Item_Code {
                get {
                    try {
                        return ((string)(this[this.tabledsProductDiscount.Item_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Item_Code\' in table \'dsProductDiscount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProductDiscount.Item_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Item_Descrip {
                get {
                    try {
                        return ((string)(this[this.tabledsProductDiscount.Item_DescripColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Item_Descrip\' in table \'dsProductDiscount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProductDiscount.Item_DescripColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Unit_Price {
                get {
                    try {
                        return ((string)(this[this.tabledsProductDiscount.Unit_PriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Unit_Price\' in table \'dsProductDiscount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProductDiscount.Unit_PriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Amount {
                get {
                    try {
                        return ((decimal)(this[this.tabledsProductDiscount.AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Amount\' in table \'dsProductDiscount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProductDiscount.AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Receipt_No {
                get {
                    try {
                        return ((string)(this[this.tabledsProductDiscount.Receipt_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Receipt_No\' in table \'dsProductDiscount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProductDiscount.Receipt_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UserName {
                get {
                    try {
                        return ((string)(this[this.tabledsProductDiscount.UserNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UserName\' in table \'dsProductDiscount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProductDiscount.UserNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BillDate {
                get {
                    try {
                        return ((string)(this[this.tabledsProductDiscount.BillDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BillDate\' in table \'dsProductDiscount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProductDiscount.BillDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Unit {
                get {
                    try {
                        return ((string)(this[this.tabledsProductDiscount.UnitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Unit\' in table \'dsProductDiscount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProductDiscount.UnitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Loca {
                get {
                    try {
                        return ((string)(this[this.tabledsProductDiscount.LocaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Loca\' in table \'dsProductDiscount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProductDiscount.LocaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Loca_Descrip {
                get {
                    try {
                        return ((string)(this[this.tabledsProductDiscount.Loca_DescripColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Loca_Descrip\' in table \'dsProductDiscount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProductDiscount.Loca_DescripColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CodeFrom {
                get {
                    try {
                        return ((string)(this[this.tabledsProductDiscount.CodeFromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CodeFrom\' in table \'dsProductDiscount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProductDiscount.CodeFromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CodeTo {
                get {
                    try {
                        return ((string)(this[this.tabledsProductDiscount.CodeToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CodeTo\' in table \'dsProductDiscount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProductDiscount.CodeToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DateFrom {
                get {
                    try {
                        return ((string)(this[this.tabledsProductDiscount.DateFromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateFrom\' in table \'dsProductDiscount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProductDiscount.DateFromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DateTo {
                get {
                    try {
                        return ((string)(this[this.tabledsProductDiscount.DateToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateTo\' in table \'dsProductDiscount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProductDiscount.DateToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Tr_Date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabledsProductDiscount.Tr_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Tr_Date\' in table \'dsProductDiscount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProductDiscount.Tr_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Qty {
                get {
                    try {
                        return ((double)(this[this.tabledsProductDiscount.QtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Qty\' in table \'dsProductDiscount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProductDiscount.QtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItem_CodeNull() {
                return this.IsNull(this.tabledsProductDiscount.Item_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItem_CodeNull() {
                this[this.tabledsProductDiscount.Item_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItem_DescripNull() {
                return this.IsNull(this.tabledsProductDiscount.Item_DescripColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItem_DescripNull() {
                this[this.tabledsProductDiscount.Item_DescripColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnit_PriceNull() {
                return this.IsNull(this.tabledsProductDiscount.Unit_PriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnit_PriceNull() {
                this[this.tabledsProductDiscount.Unit_PriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountNull() {
                return this.IsNull(this.tabledsProductDiscount.AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountNull() {
                this[this.tabledsProductDiscount.AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReceipt_NoNull() {
                return this.IsNull(this.tabledsProductDiscount.Receipt_NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReceipt_NoNull() {
                this[this.tabledsProductDiscount.Receipt_NoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUserNameNull() {
                return this.IsNull(this.tabledsProductDiscount.UserNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUserNameNull() {
                this[this.tabledsProductDiscount.UserNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBillDateNull() {
                return this.IsNull(this.tabledsProductDiscount.BillDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBillDateNull() {
                this[this.tabledsProductDiscount.BillDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnitNull() {
                return this.IsNull(this.tabledsProductDiscount.UnitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnitNull() {
                this[this.tabledsProductDiscount.UnitColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocaNull() {
                return this.IsNull(this.tabledsProductDiscount.LocaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocaNull() {
                this[this.tabledsProductDiscount.LocaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLoca_DescripNull() {
                return this.IsNull(this.tabledsProductDiscount.Loca_DescripColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLoca_DescripNull() {
                this[this.tabledsProductDiscount.Loca_DescripColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCodeFromNull() {
                return this.IsNull(this.tabledsProductDiscount.CodeFromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCodeFromNull() {
                this[this.tabledsProductDiscount.CodeFromColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCodeToNull() {
                return this.IsNull(this.tabledsProductDiscount.CodeToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCodeToNull() {
                this[this.tabledsProductDiscount.CodeToColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateFromNull() {
                return this.IsNull(this.tabledsProductDiscount.DateFromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateFromNull() {
                this[this.tabledsProductDiscount.DateFromColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateToNull() {
                return this.IsNull(this.tabledsProductDiscount.DateToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateToNull() {
                this[this.tabledsProductDiscount.DateToColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTr_DateNull() {
                return this.IsNull(this.tabledsProductDiscount.Tr_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTr_DateNull() {
                this[this.tabledsProductDiscount.Tr_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQtyNull() {
                return this.IsNull(this.tabledsProductDiscount.QtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQtyNull() {
                this[this.tabledsProductDiscount.QtyColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class PendingReturnsRow : global::System.Data.DataRow {
            
            private PendingReturnsDataTable tablePendingReturns;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PendingReturnsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePendingReturns = ((PendingReturnsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Doc_No {
                get {
                    try {
                        return ((string)(this[this.tablePendingReturns.Doc_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Doc_No\' in table \'PendingReturns\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePendingReturns.Doc_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Transaction_Date {
                get {
                    try {
                        return ((string)(this[this.tablePendingReturns.Transaction_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Transaction_Date\' in table \'PendingReturns\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePendingReturns.Transaction_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Transaction_Amount {
                get {
                    try {
                        return ((string)(this[this.tablePendingReturns.Transaction_AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Transaction_Amount\' in table \'PendingReturns\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePendingReturns.Transaction_AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Balance_Amount {
                get {
                    try {
                        return ((string)(this[this.tablePendingReturns.Balance_AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Balance_Amount\' in table \'PendingReturns\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePendingReturns.Balance_AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Temp_DocNo {
                get {
                    try {
                        return ((string)(this[this.tablePendingReturns.Temp_DocNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Temp_DocNo\' in table \'PendingReturns\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePendingReturns.Temp_DocNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDoc_NoNull() {
                return this.IsNull(this.tablePendingReturns.Doc_NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDoc_NoNull() {
                this[this.tablePendingReturns.Doc_NoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTransaction_DateNull() {
                return this.IsNull(this.tablePendingReturns.Transaction_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTransaction_DateNull() {
                this[this.tablePendingReturns.Transaction_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTransaction_AmountNull() {
                return this.IsNull(this.tablePendingReturns.Transaction_AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTransaction_AmountNull() {
                this[this.tablePendingReturns.Transaction_AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBalance_AmountNull() {
                return this.IsNull(this.tablePendingReturns.Balance_AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBalance_AmountNull() {
                this[this.tablePendingReturns.Balance_AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTemp_DocNoNull() {
                return this.IsNull(this.tablePendingReturns.Temp_DocNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTemp_DocNoNull() {
                this[this.tablePendingReturns.Temp_DocNoColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class SelectedSetoffRow : global::System.Data.DataRow {
            
            private SelectedSetoffDataTable tableSelectedSetoff;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SelectedSetoffRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSelectedSetoff = ((SelectedSetoffDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Grn_Doc {
                get {
                    try {
                        return ((string)(this[this.tableSelectedSetoff.Grn_DocColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Grn_Doc\' in table \'SelectedSetoff\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectedSetoff.Grn_DocColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Grn_Tr_Date {
                get {
                    try {
                        return ((string)(this[this.tableSelectedSetoff.Grn_Tr_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Grn_Tr_Date\' in table \'SelectedSetoff\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectedSetoff.Grn_Tr_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Grn_Tr_Amount {
                get {
                    try {
                        return ((string)(this[this.tableSelectedSetoff.Grn_Tr_AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Grn_Tr_Amount\' in table \'SelectedSetoff\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectedSetoff.Grn_Tr_AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Grn_Balance_Amount {
                get {
                    try {
                        return ((string)(this[this.tableSelectedSetoff.Grn_Balance_AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Grn_Balance_Amount\' in table \'SelectedSetoff\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectedSetoff.Grn_Balance_AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Srn_Doc {
                get {
                    try {
                        return ((string)(this[this.tableSelectedSetoff.Srn_DocColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Srn_Doc\' in table \'SelectedSetoff\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectedSetoff.Srn_DocColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Srn_Tr_Date {
                get {
                    try {
                        return ((string)(this[this.tableSelectedSetoff.Srn_Tr_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Srn_Tr_Date\' in table \'SelectedSetoff\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectedSetoff.Srn_Tr_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Srn_Tr_Amount {
                get {
                    try {
                        return ((string)(this[this.tableSelectedSetoff.Srn_Tr_AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Srn_Tr_Amount\' in table \'SelectedSetoff\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectedSetoff.Srn_Tr_AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Srn_Balance_Amount {
                get {
                    try {
                        return ((string)(this[this.tableSelectedSetoff.Srn_Balance_AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Srn_Balance_Amount\' in table \'SelectedSetoff\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectedSetoff.Srn_Balance_AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGrn_DocNull() {
                return this.IsNull(this.tableSelectedSetoff.Grn_DocColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGrn_DocNull() {
                this[this.tableSelectedSetoff.Grn_DocColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGrn_Tr_DateNull() {
                return this.IsNull(this.tableSelectedSetoff.Grn_Tr_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGrn_Tr_DateNull() {
                this[this.tableSelectedSetoff.Grn_Tr_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGrn_Tr_AmountNull() {
                return this.IsNull(this.tableSelectedSetoff.Grn_Tr_AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGrn_Tr_AmountNull() {
                this[this.tableSelectedSetoff.Grn_Tr_AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGrn_Balance_AmountNull() {
                return this.IsNull(this.tableSelectedSetoff.Grn_Balance_AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGrn_Balance_AmountNull() {
                this[this.tableSelectedSetoff.Grn_Balance_AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSrn_DocNull() {
                return this.IsNull(this.tableSelectedSetoff.Srn_DocColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSrn_DocNull() {
                this[this.tableSelectedSetoff.Srn_DocColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSrn_Tr_DateNull() {
                return this.IsNull(this.tableSelectedSetoff.Srn_Tr_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSrn_Tr_DateNull() {
                this[this.tableSelectedSetoff.Srn_Tr_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSrn_Tr_AmountNull() {
                return this.IsNull(this.tableSelectedSetoff.Srn_Tr_AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSrn_Tr_AmountNull() {
                this[this.tableSelectedSetoff.Srn_Tr_AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSrn_Balance_AmountNull() {
                return this.IsNull(this.tableSelectedSetoff.Srn_Balance_AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSrn_Balance_AmountNull() {
                this[this.tableSelectedSetoff.Srn_Balance_AmountColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dsPaymentsetOffDetailsRow : global::System.Data.DataRow {
            
            private dsPaymentsetOffDetailsDataTable tabledsPaymentsetOffDetails;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsPaymentsetOffDetailsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledsPaymentsetOffDetails = ((dsPaymentsetOffDetailsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Org_Doc_no {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentsetOffDetails.Org_Doc_noColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Org_Doc_no\' in table \'dsPaymentsetOffDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentsetOffDetails.Org_Doc_noColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Doc_No {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentsetOffDetails.Doc_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Doc_No\' in table \'dsPaymentsetOffDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentsetOffDetails.Doc_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Transaction_Date {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentsetOffDetails.Transaction_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Transaction_Date\' in table \'dsPaymentsetOffDetails\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentsetOffDetails.Transaction_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Transaction_Amount {
                get {
                    try {
                        return ((decimal)(this[this.tabledsPaymentsetOffDetails.Transaction_AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Transaction_Amount\' in table \'dsPaymentsetOffDetails\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentsetOffDetails.Transaction_AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Paid_Amount {
                get {
                    try {
                        return ((decimal)(this[this.tabledsPaymentsetOffDetails.Paid_AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Paid_Amount\' in table \'dsPaymentsetOffDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentsetOffDetails.Paid_AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Post_Date {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentsetOffDetails.Post_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Post_Date\' in table \'dsPaymentsetOffDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentsetOffDetails.Post_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SetOff_SR_Doc {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentsetOffDetails.SetOff_SR_DocColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SetOff_SR_Doc\' in table \'dsPaymentsetOffDetails\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tabledsPaymentsetOffDetails.SetOff_SR_DocColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Loca {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentsetOffDetails.LocaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Loca\' in table \'dsPaymentsetOffDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentsetOffDetails.LocaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Loca_Descrip {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentsetOffDetails.Loca_DescripColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Loca_Descrip\' in table \'dsPaymentsetOffDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentsetOffDetails.Loca_DescripColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Acc_Code {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentsetOffDetails.Acc_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Acc_Code\' in table \'dsPaymentsetOffDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentsetOffDetails.Acc_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Supp_Name {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentsetOffDetails.Supp_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Supp_Name\' in table \'dsPaymentsetOffDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentsetOffDetails.Supp_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Status {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentsetOffDetails.StatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Status\' in table \'dsPaymentsetOffDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentsetOffDetails.StatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SetOff_Acc_Code {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentsetOffDetails.SetOff_Acc_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SetOff_Acc_Code\' in table \'dsPaymentsetOffDetails\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentsetOffDetails.SetOff_Acc_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Transaction_Date2 {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentsetOffDetails.Transaction_Date2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Transaction_Date2\' in table \'dsPaymentsetOffDetails\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentsetOffDetails.Transaction_Date2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Cust_Name {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentsetOffDetails.Cust_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cust_Name\' in table \'dsPaymentsetOffDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentsetOffDetails.Cust_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOrg_Doc_noNull() {
                return this.IsNull(this.tabledsPaymentsetOffDetails.Org_Doc_noColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOrg_Doc_noNull() {
                this[this.tabledsPaymentsetOffDetails.Org_Doc_noColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDoc_NoNull() {
                return this.IsNull(this.tabledsPaymentsetOffDetails.Doc_NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDoc_NoNull() {
                this[this.tabledsPaymentsetOffDetails.Doc_NoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTransaction_DateNull() {
                return this.IsNull(this.tabledsPaymentsetOffDetails.Transaction_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTransaction_DateNull() {
                this[this.tabledsPaymentsetOffDetails.Transaction_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTransaction_AmountNull() {
                return this.IsNull(this.tabledsPaymentsetOffDetails.Transaction_AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTransaction_AmountNull() {
                this[this.tabledsPaymentsetOffDetails.Transaction_AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPaid_AmountNull() {
                return this.IsNull(this.tabledsPaymentsetOffDetails.Paid_AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPaid_AmountNull() {
                this[this.tabledsPaymentsetOffDetails.Paid_AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPost_DateNull() {
                return this.IsNull(this.tabledsPaymentsetOffDetails.Post_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPost_DateNull() {
                this[this.tabledsPaymentsetOffDetails.Post_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSetOff_SR_DocNull() {
                return this.IsNull(this.tabledsPaymentsetOffDetails.SetOff_SR_DocColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSetOff_SR_DocNull() {
                this[this.tabledsPaymentsetOffDetails.SetOff_SR_DocColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocaNull() {
                return this.IsNull(this.tabledsPaymentsetOffDetails.LocaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocaNull() {
                this[this.tabledsPaymentsetOffDetails.LocaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLoca_DescripNull() {
                return this.IsNull(this.tabledsPaymentsetOffDetails.Loca_DescripColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLoca_DescripNull() {
                this[this.tabledsPaymentsetOffDetails.Loca_DescripColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAcc_CodeNull() {
                return this.IsNull(this.tabledsPaymentsetOffDetails.Acc_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAcc_CodeNull() {
                this[this.tabledsPaymentsetOffDetails.Acc_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupp_NameNull() {
                return this.IsNull(this.tabledsPaymentsetOffDetails.Supp_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupp_NameNull() {
                this[this.tabledsPaymentsetOffDetails.Supp_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStatusNull() {
                return this.IsNull(this.tabledsPaymentsetOffDetails.StatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStatusNull() {
                this[this.tabledsPaymentsetOffDetails.StatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSetOff_Acc_CodeNull() {
                return this.IsNull(this.tabledsPaymentsetOffDetails.SetOff_Acc_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSetOff_Acc_CodeNull() {
                this[this.tabledsPaymentsetOffDetails.SetOff_Acc_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTransaction_Date2Null() {
                return this.IsNull(this.tabledsPaymentsetOffDetails.Transaction_Date2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTransaction_Date2Null() {
                this[this.tabledsPaymentsetOffDetails.Transaction_Date2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCust_NameNull() {
                return this.IsNull(this.tabledsPaymentsetOffDetails.Cust_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCust_NameNull() {
                this[this.tabledsPaymentsetOffDetails.Cust_NameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dsPaymentSetOffSummaryRow : global::System.Data.DataRow {
            
            private dsPaymentSetOffSummaryDataTable tabledsPaymentSetOffSummary;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsPaymentSetOffSummaryRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledsPaymentSetOffSummary = ((dsPaymentSetOffSummaryDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Org_Doc_no {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentSetOffSummary.Org_Doc_noColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Org_Doc_no\' in table \'dsPaymentSetOffSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentSetOffSummary.Org_Doc_noColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Doc_No {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentSetOffSummary.Doc_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Doc_No\' in table \'dsPaymentSetOffSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentSetOffSummary.Doc_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Transaction_Date {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentSetOffSummary.Transaction_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Transaction_Date\' in table \'dsPaymentSetOffSummary\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentSetOffSummary.Transaction_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Transaction_Amount {
                get {
                    try {
                        return ((decimal)(this[this.tabledsPaymentSetOffSummary.Transaction_AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Transaction_Amount\' in table \'dsPaymentSetOffSummary\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentSetOffSummary.Transaction_AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Paid_Amount {
                get {
                    try {
                        return ((decimal)(this[this.tabledsPaymentSetOffSummary.Paid_AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Paid_Amount\' in table \'dsPaymentSetOffSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentSetOffSummary.Paid_AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Loca {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentSetOffSummary.LocaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Loca\' in table \'dsPaymentSetOffSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentSetOffSummary.LocaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Acc_Code {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentSetOffSummary.Acc_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Acc_Code\' in table \'dsPaymentSetOffSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentSetOffSummary.Acc_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Post_Date {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentSetOffSummary.Post_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Post_Date\' in table \'dsPaymentSetOffSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentSetOffSummary.Post_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SetOff_SR_Doc {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentSetOffSummary.SetOff_SR_DocColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SetOff_SR_Doc\' in table \'dsPaymentSetOffSummary\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tabledsPaymentSetOffSummary.SetOff_SR_DocColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Iid {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentSetOffSummary.IidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Iid\' in table \'dsPaymentSetOffSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentSetOffSummary.IidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Loca_Descrip {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentSetOffSummary.Loca_DescripColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Loca_Descrip\' in table \'dsPaymentSetOffSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentSetOffSummary.Loca_DescripColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Supp_Name {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentSetOffSummary.Supp_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Supp_Name\' in table \'dsPaymentSetOffSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentSetOffSummary.Supp_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Tr_Date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabledsPaymentSetOffSummary.Tr_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Tr_Date\' in table \'dsPaymentSetOffSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentSetOffSummary.Tr_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CodeFrom {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentSetOffSummary.CodeFromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CodeFrom\' in table \'dsPaymentSetOffSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentSetOffSummary.CodeFromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CodeTo {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentSetOffSummary.CodeToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CodeTo\' in table \'dsPaymentSetOffSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentSetOffSummary.CodeToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOrg_Doc_noNull() {
                return this.IsNull(this.tabledsPaymentSetOffSummary.Org_Doc_noColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOrg_Doc_noNull() {
                this[this.tabledsPaymentSetOffSummary.Org_Doc_noColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDoc_NoNull() {
                return this.IsNull(this.tabledsPaymentSetOffSummary.Doc_NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDoc_NoNull() {
                this[this.tabledsPaymentSetOffSummary.Doc_NoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTransaction_DateNull() {
                return this.IsNull(this.tabledsPaymentSetOffSummary.Transaction_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTransaction_DateNull() {
                this[this.tabledsPaymentSetOffSummary.Transaction_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTransaction_AmountNull() {
                return this.IsNull(this.tabledsPaymentSetOffSummary.Transaction_AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTransaction_AmountNull() {
                this[this.tabledsPaymentSetOffSummary.Transaction_AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPaid_AmountNull() {
                return this.IsNull(this.tabledsPaymentSetOffSummary.Paid_AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPaid_AmountNull() {
                this[this.tabledsPaymentSetOffSummary.Paid_AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocaNull() {
                return this.IsNull(this.tabledsPaymentSetOffSummary.LocaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocaNull() {
                this[this.tabledsPaymentSetOffSummary.LocaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAcc_CodeNull() {
                return this.IsNull(this.tabledsPaymentSetOffSummary.Acc_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAcc_CodeNull() {
                this[this.tabledsPaymentSetOffSummary.Acc_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPost_DateNull() {
                return this.IsNull(this.tabledsPaymentSetOffSummary.Post_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPost_DateNull() {
                this[this.tabledsPaymentSetOffSummary.Post_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSetOff_SR_DocNull() {
                return this.IsNull(this.tabledsPaymentSetOffSummary.SetOff_SR_DocColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSetOff_SR_DocNull() {
                this[this.tabledsPaymentSetOffSummary.SetOff_SR_DocColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIidNull() {
                return this.IsNull(this.tabledsPaymentSetOffSummary.IidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIidNull() {
                this[this.tabledsPaymentSetOffSummary.IidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLoca_DescripNull() {
                return this.IsNull(this.tabledsPaymentSetOffSummary.Loca_DescripColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLoca_DescripNull() {
                this[this.tabledsPaymentSetOffSummary.Loca_DescripColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupp_NameNull() {
                return this.IsNull(this.tabledsPaymentSetOffSummary.Supp_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupp_NameNull() {
                this[this.tabledsPaymentSetOffSummary.Supp_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTr_DateNull() {
                return this.IsNull(this.tabledsPaymentSetOffSummary.Tr_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTr_DateNull() {
                this[this.tabledsPaymentSetOffSummary.Tr_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCodeFromNull() {
                return this.IsNull(this.tabledsPaymentSetOffSummary.CodeFromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCodeFromNull() {
                this[this.tabledsPaymentSetOffSummary.CodeFromColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCodeToNull() {
                return this.IsNull(this.tabledsPaymentSetOffSummary.CodeToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCodeToNull() {
                this[this.tabledsPaymentSetOffSummary.CodeToColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dsPriceMasterDetailsRow : global::System.Data.DataRow {
            
            private dsPriceMasterDetailsDataTable tabledsPriceMasterDetails;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsPriceMasterDetailsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledsPriceMasterDetails = ((dsPriceMasterDetailsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prod_Code {
                get {
                    try {
                        return ((string)(this[this.tabledsPriceMasterDetails.Prod_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Prod_Code\' in table \'dsPriceMasterDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPriceMasterDetails.Prod_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prod_Name {
                get {
                    try {
                        return ((string)(this[this.tabledsPriceMasterDetails.Prod_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Prod_Name\' in table \'dsPriceMasterDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPriceMasterDetails.Prod_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Selling_Price {
                get {
                    try {
                        return ((decimal)(this[this.tabledsPriceMasterDetails.Selling_PriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Selling_Price\' in table \'dsPriceMasterDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPriceMasterDetails.Selling_PriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Qty_Credit {
                get {
                    try {
                        return ((double)(this[this.tabledsPriceMasterDetails.Qty_CreditColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Qty_Credit\' in table \'dsPriceMasterDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPriceMasterDetails.Qty_CreditColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Qty {
                get {
                    try {
                        return ((double)(this[this.tabledsPriceMasterDetails.QtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Qty\' in table \'dsPriceMasterDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPriceMasterDetails.QtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Price_Level_Credit {
                get {
                    try {
                        return ((decimal)(this[this.tabledsPriceMasterDetails.Price_Level_CreditColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Price_Level_Credit\' in table \'dsPriceMasterDetails\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tabledsPriceMasterDetails.Price_Level_CreditColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Price_Level {
                get {
                    try {
                        return ((decimal)(this[this.tabledsPriceMasterDetails.Price_LevelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Price_Level\' in table \'dsPriceMasterDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPriceMasterDetails.Price_LevelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Marked_Price {
                get {
                    try {
                        return ((decimal)(this[this.tabledsPriceMasterDetails.Marked_PriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Marked_Price\' in table \'dsPriceMasterDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPriceMasterDetails.Marked_PriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Whole_Price {
                get {
                    try {
                        return ((decimal)(this[this.tabledsPriceMasterDetails.Whole_PriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Whole_Price\' in table \'dsPriceMasterDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPriceMasterDetails.Whole_PriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double WholeQty_Credit {
                get {
                    try {
                        return ((double)(this[this.tabledsPriceMasterDetails.WholeQty_CreditColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WholeQty_Credit\' in table \'dsPriceMasterDetails\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tabledsPriceMasterDetails.WholeQty_CreditColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double WholeQty {
                get {
                    try {
                        return ((double)(this[this.tabledsPriceMasterDetails.WholeQtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WholeQty\' in table \'dsPriceMasterDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPriceMasterDetails.WholeQtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal WholeQtyPrice_Credit {
                get {
                    try {
                        return ((decimal)(this[this.tabledsPriceMasterDetails.WholeQtyPrice_CreditColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WholeQtyPrice_Credit\' in table \'dsPriceMasterDetails\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tabledsPriceMasterDetails.WholeQtyPrice_CreditColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal WholeQtyPrice {
                get {
                    try {
                        return ((decimal)(this[this.tabledsPriceMasterDetails.WholeQtyPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WholeQtyPrice\' in table \'dsPriceMasterDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPriceMasterDetails.WholeQtyPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Purchase_Price {
                get {
                    try {
                        return ((decimal)(this[this.tabledsPriceMasterDetails.Purchase_PriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Purchase_Price\' in table \'dsPriceMasterDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPriceMasterDetails.Purchase_PriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Ln {
                get {
                    try {
                        return ((int)(this[this.tabledsPriceMasterDetails.LnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Ln\' in table \'dsPriceMasterDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPriceMasterDetails.LnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short PriceBatch {
                get {
                    try {
                        return ((short)(this[this.tabledsPriceMasterDetails.PriceBatchColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PriceBatch\' in table \'dsPriceMasterDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPriceMasterDetails.PriceBatchColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal RPrice {
                get {
                    try {
                        return ((decimal)(this[this.tabledsPriceMasterDetails.RPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RPrice\' in table \'dsPriceMasterDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPriceMasterDetails.RPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal WPrice {
                get {
                    try {
                        return ((decimal)(this[this.tabledsPriceMasterDetails.WPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WPrice\' in table \'dsPriceMasterDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPriceMasterDetails.WPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal DPrice {
                get {
                    try {
                        return ((decimal)(this[this.tabledsPriceMasterDetails.DPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DPrice\' in table \'dsPriceMasterDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPriceMasterDetails.DPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal MMPrice {
                get {
                    try {
                        return ((decimal)(this[this.tabledsPriceMasterDetails.MMPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MMPrice\' in table \'dsPriceMasterDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPriceMasterDetails.MMPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_CodeNull() {
                return this.IsNull(this.tabledsPriceMasterDetails.Prod_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_CodeNull() {
                this[this.tabledsPriceMasterDetails.Prod_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_NameNull() {
                return this.IsNull(this.tabledsPriceMasterDetails.Prod_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_NameNull() {
                this[this.tabledsPriceMasterDetails.Prod_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelling_PriceNull() {
                return this.IsNull(this.tabledsPriceMasterDetails.Selling_PriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelling_PriceNull() {
                this[this.tabledsPriceMasterDetails.Selling_PriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQty_CreditNull() {
                return this.IsNull(this.tabledsPriceMasterDetails.Qty_CreditColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQty_CreditNull() {
                this[this.tabledsPriceMasterDetails.Qty_CreditColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQtyNull() {
                return this.IsNull(this.tabledsPriceMasterDetails.QtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQtyNull() {
                this[this.tabledsPriceMasterDetails.QtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPrice_Level_CreditNull() {
                return this.IsNull(this.tabledsPriceMasterDetails.Price_Level_CreditColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPrice_Level_CreditNull() {
                this[this.tabledsPriceMasterDetails.Price_Level_CreditColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPrice_LevelNull() {
                return this.IsNull(this.tabledsPriceMasterDetails.Price_LevelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPrice_LevelNull() {
                this[this.tabledsPriceMasterDetails.Price_LevelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMarked_PriceNull() {
                return this.IsNull(this.tabledsPriceMasterDetails.Marked_PriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMarked_PriceNull() {
                this[this.tabledsPriceMasterDetails.Marked_PriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWhole_PriceNull() {
                return this.IsNull(this.tabledsPriceMasterDetails.Whole_PriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWhole_PriceNull() {
                this[this.tabledsPriceMasterDetails.Whole_PriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWholeQty_CreditNull() {
                return this.IsNull(this.tabledsPriceMasterDetails.WholeQty_CreditColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWholeQty_CreditNull() {
                this[this.tabledsPriceMasterDetails.WholeQty_CreditColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWholeQtyNull() {
                return this.IsNull(this.tabledsPriceMasterDetails.WholeQtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWholeQtyNull() {
                this[this.tabledsPriceMasterDetails.WholeQtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWholeQtyPrice_CreditNull() {
                return this.IsNull(this.tabledsPriceMasterDetails.WholeQtyPrice_CreditColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWholeQtyPrice_CreditNull() {
                this[this.tabledsPriceMasterDetails.WholeQtyPrice_CreditColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWholeQtyPriceNull() {
                return this.IsNull(this.tabledsPriceMasterDetails.WholeQtyPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWholeQtyPriceNull() {
                this[this.tabledsPriceMasterDetails.WholeQtyPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPurchase_PriceNull() {
                return this.IsNull(this.tabledsPriceMasterDetails.Purchase_PriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPurchase_PriceNull() {
                this[this.tabledsPriceMasterDetails.Purchase_PriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLnNull() {
                return this.IsNull(this.tabledsPriceMasterDetails.LnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLnNull() {
                this[this.tabledsPriceMasterDetails.LnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPriceBatchNull() {
                return this.IsNull(this.tabledsPriceMasterDetails.PriceBatchColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPriceBatchNull() {
                this[this.tabledsPriceMasterDetails.PriceBatchColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRPriceNull() {
                return this.IsNull(this.tabledsPriceMasterDetails.RPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRPriceNull() {
                this[this.tabledsPriceMasterDetails.RPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWPriceNull() {
                return this.IsNull(this.tabledsPriceMasterDetails.WPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWPriceNull() {
                this[this.tabledsPriceMasterDetails.WPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDPriceNull() {
                return this.IsNull(this.tabledsPriceMasterDetails.DPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDPriceNull() {
                this[this.tabledsPriceMasterDetails.DPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMMPriceNull() {
                return this.IsNull(this.tabledsPriceMasterDetails.MMPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMMPriceNull() {
                this[this.tabledsPriceMasterDetails.MMPriceColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dsSystem_LogRow : global::System.Data.DataRow {
            
            private dsSystem_LogDataTable tabledsSystem_Log;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsSystem_LogRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledsSystem_Log = ((dsSystem_LogDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string User_Name {
                get {
                    try {
                        return ((string)(this[this.tabledsSystem_Log.User_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'User_Name\' in table \'dsSystem_Log\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsSystem_Log.User_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Tr_Date {
                get {
                    try {
                        return ((string)(this[this.tabledsSystem_Log.Tr_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Tr_Date\' in table \'dsSystem_Log\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsSystem_Log.Tr_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Loca {
                get {
                    try {
                        return ((string)(this[this.tabledsSystem_Log.LocaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Loca\' in table \'dsSystem_Log\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsSystem_Log.LocaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Iid {
                get {
                    try {
                        return ((string)(this[this.tabledsSystem_Log.IidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Iid\' in table \'dsSystem_Log\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsSystem_Log.IidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Tr_Code {
                get {
                    try {
                        return ((string)(this[this.tabledsSystem_Log.Tr_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Tr_Code\' in table \'dsSystem_Log\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsSystem_Log.Tr_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Tr_Description {
                get {
                    try {
                        return ((string)(this[this.tabledsSystem_Log.Tr_DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Tr_Description\' in table \'dsSystem_Log\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsSystem_Log.Tr_DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DateFrom {
                get {
                    try {
                        return ((string)(this[this.tabledsSystem_Log.DateFromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateFrom\' in table \'dsSystem_Log\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsSystem_Log.DateFromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DateTo {
                get {
                    try {
                        return ((string)(this[this.tabledsSystem_Log.DateToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateTo\' in table \'dsSystem_Log\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsSystem_Log.DateToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Loca_Descrip {
                get {
                    try {
                        return ((string)(this[this.tabledsSystem_Log.Loca_DescripColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Loca_Descrip\' in table \'dsSystem_Log\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsSystem_Log.Loca_DescripColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUser_NameNull() {
                return this.IsNull(this.tabledsSystem_Log.User_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUser_NameNull() {
                this[this.tabledsSystem_Log.User_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTr_DateNull() {
                return this.IsNull(this.tabledsSystem_Log.Tr_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTr_DateNull() {
                this[this.tabledsSystem_Log.Tr_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocaNull() {
                return this.IsNull(this.tabledsSystem_Log.LocaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocaNull() {
                this[this.tabledsSystem_Log.LocaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIidNull() {
                return this.IsNull(this.tabledsSystem_Log.IidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIidNull() {
                this[this.tabledsSystem_Log.IidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTr_CodeNull() {
                return this.IsNull(this.tabledsSystem_Log.Tr_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTr_CodeNull() {
                this[this.tabledsSystem_Log.Tr_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTr_DescriptionNull() {
                return this.IsNull(this.tabledsSystem_Log.Tr_DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTr_DescriptionNull() {
                this[this.tabledsSystem_Log.Tr_DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateFromNull() {
                return this.IsNull(this.tabledsSystem_Log.DateFromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateFromNull() {
                this[this.tabledsSystem_Log.DateFromColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateToNull() {
                return this.IsNull(this.tabledsSystem_Log.DateToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateToNull() {
                this[this.tabledsSystem_Log.DateToColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLoca_DescripNull() {
                return this.IsNull(this.tabledsSystem_Log.Loca_DescripColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLoca_DescripNull() {
                this[this.tabledsSystem_Log.Loca_DescripColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dsPostDatedChequeRow : global::System.Data.DataRow {
            
            private dsPostDatedChequeDataTable tabledsPostDatedCheque;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsPostDatedChequeRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledsPostDatedCheque = ((dsPostDatedChequeDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Org_Doc_no {
                get {
                    try {
                        return ((string)(this[this.tabledsPostDatedCheque.Org_Doc_noColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Org_Doc_no\' in table \'dsPostDatedCheque\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPostDatedCheque.Org_Doc_noColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Bank_Name {
                get {
                    try {
                        return ((string)(this[this.tabledsPostDatedCheque.Bank_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Bank_Name\' in table \'dsPostDatedCheque\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPostDatedCheque.Bank_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Cheque_No {
                get {
                    try {
                        return ((string)(this[this.tabledsPostDatedCheque.Cheque_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cheque_No\' in table \'dsPostDatedCheque\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPostDatedCheque.Cheque_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Cheque_Date {
                get {
                    try {
                        return ((string)(this[this.tabledsPostDatedCheque.Cheque_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cheque_Date\' in table \'dsPostDatedCheque\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPostDatedCheque.Cheque_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Branch {
                get {
                    try {
                        return ((string)(this[this.tabledsPostDatedCheque.BranchColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Branch\' in table \'dsPostDatedCheque\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPostDatedCheque.BranchColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Amount {
                get {
                    try {
                        return ((decimal)(this[this.tabledsPostDatedCheque.AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Amount\' in table \'dsPostDatedCheque\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPostDatedCheque.AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Loca {
                get {
                    try {
                        return ((string)(this[this.tabledsPostDatedCheque.LocaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Loca\' in table \'dsPostDatedCheque\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPostDatedCheque.LocaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Loca_Descrip {
                get {
                    try {
                        return ((string)(this[this.tabledsPostDatedCheque.Loca_DescripColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Loca_Descrip\' in table \'dsPostDatedCheque\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPostDatedCheque.Loca_DescripColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Acc_Code {
                get {
                    try {
                        return ((string)(this[this.tabledsPostDatedCheque.Acc_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Acc_Code\' in table \'dsPostDatedCheque\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPostDatedCheque.Acc_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Supp_Name {
                get {
                    try {
                        return ((string)(this[this.tabledsPostDatedCheque.Supp_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Supp_Name\' in table \'dsPostDatedCheque\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPostDatedCheque.Supp_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Tr_Date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabledsPostDatedCheque.Tr_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Tr_Date\' in table \'dsPostDatedCheque\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPostDatedCheque.Tr_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DateFrom {
                get {
                    try {
                        return ((string)(this[this.tabledsPostDatedCheque.DateFromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateFrom\' in table \'dsPostDatedCheque\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPostDatedCheque.DateFromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DateTo {
                get {
                    try {
                        return ((string)(this[this.tabledsPostDatedCheque.DateToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateTo\' in table \'dsPostDatedCheque\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPostDatedCheque.DateToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOrg_Doc_noNull() {
                return this.IsNull(this.tabledsPostDatedCheque.Org_Doc_noColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOrg_Doc_noNull() {
                this[this.tabledsPostDatedCheque.Org_Doc_noColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBank_NameNull() {
                return this.IsNull(this.tabledsPostDatedCheque.Bank_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBank_NameNull() {
                this[this.tabledsPostDatedCheque.Bank_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCheque_NoNull() {
                return this.IsNull(this.tabledsPostDatedCheque.Cheque_NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCheque_NoNull() {
                this[this.tabledsPostDatedCheque.Cheque_NoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCheque_DateNull() {
                return this.IsNull(this.tabledsPostDatedCheque.Cheque_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCheque_DateNull() {
                this[this.tabledsPostDatedCheque.Cheque_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBranchNull() {
                return this.IsNull(this.tabledsPostDatedCheque.BranchColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBranchNull() {
                this[this.tabledsPostDatedCheque.BranchColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountNull() {
                return this.IsNull(this.tabledsPostDatedCheque.AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountNull() {
                this[this.tabledsPostDatedCheque.AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocaNull() {
                return this.IsNull(this.tabledsPostDatedCheque.LocaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocaNull() {
                this[this.tabledsPostDatedCheque.LocaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLoca_DescripNull() {
                return this.IsNull(this.tabledsPostDatedCheque.Loca_DescripColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLoca_DescripNull() {
                this[this.tabledsPostDatedCheque.Loca_DescripColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAcc_CodeNull() {
                return this.IsNull(this.tabledsPostDatedCheque.Acc_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAcc_CodeNull() {
                this[this.tabledsPostDatedCheque.Acc_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupp_NameNull() {
                return this.IsNull(this.tabledsPostDatedCheque.Supp_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupp_NameNull() {
                this[this.tabledsPostDatedCheque.Supp_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTr_DateNull() {
                return this.IsNull(this.tabledsPostDatedCheque.Tr_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTr_DateNull() {
                this[this.tabledsPostDatedCheque.Tr_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateFromNull() {
                return this.IsNull(this.tabledsPostDatedCheque.DateFromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateFromNull() {
                this[this.tabledsPostDatedCheque.DateFromColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateToNull() {
                return this.IsNull(this.tabledsPostDatedCheque.DateToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateToNull() {
                this[this.tabledsPostDatedCheque.DateToColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dsProductLinkTempRow : global::System.Data.DataRow {
            
            private dsProductLinkTempDataTable tabledsProductLinkTemp;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsProductLinkTempRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledsProductLinkTemp = ((dsProductLinkTempDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prod_Code {
                get {
                    try {
                        return ((string)(this[this.tabledsProductLinkTemp.Prod_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Prod_Code\' in table \'dsProductLinkTemp\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProductLinkTemp.Prod_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Barcode {
                get {
                    try {
                        return ((string)(this[this.tabledsProductLinkTemp.BarcodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Barcode\' in table \'dsProductLinkTemp\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProductLinkTemp.BarcodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prod_Name {
                get {
                    try {
                        return ((string)(this[this.tabledsProductLinkTemp.Prod_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Prod_Name\' in table \'dsProductLinkTemp\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProductLinkTemp.Prod_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Selling_Price {
                get {
                    try {
                        return ((string)(this[this.tabledsProductLinkTemp.Selling_PriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Selling_Price\' in table \'dsProductLinkTemp\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProductLinkTemp.Selling_PriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Tr_Date {
                get {
                    try {
                        return ((string)(this[this.tabledsProductLinkTemp.Tr_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Tr_Date\' in table \'dsProductLinkTemp\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProductLinkTemp.Tr_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UserName {
                get {
                    try {
                        return ((string)(this[this.tabledsProductLinkTemp.UserNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UserName\' in table \'dsProductLinkTemp\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProductLinkTemp.UserNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CodeFrom {
                get {
                    try {
                        return ((string)(this[this.tabledsProductLinkTemp.CodeFromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CodeFrom\' in table \'dsProductLinkTemp\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProductLinkTemp.CodeFromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CodeTo {
                get {
                    try {
                        return ((string)(this[this.tabledsProductLinkTemp.CodeToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CodeTo\' in table \'dsProductLinkTemp\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProductLinkTemp.CodeToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_CodeNull() {
                return this.IsNull(this.tabledsProductLinkTemp.Prod_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_CodeNull() {
                this[this.tabledsProductLinkTemp.Prod_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBarcodeNull() {
                return this.IsNull(this.tabledsProductLinkTemp.BarcodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBarcodeNull() {
                this[this.tabledsProductLinkTemp.BarcodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_NameNull() {
                return this.IsNull(this.tabledsProductLinkTemp.Prod_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_NameNull() {
                this[this.tabledsProductLinkTemp.Prod_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelling_PriceNull() {
                return this.IsNull(this.tabledsProductLinkTemp.Selling_PriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelling_PriceNull() {
                this[this.tabledsProductLinkTemp.Selling_PriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTr_DateNull() {
                return this.IsNull(this.tabledsProductLinkTemp.Tr_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTr_DateNull() {
                this[this.tabledsProductLinkTemp.Tr_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUserNameNull() {
                return this.IsNull(this.tabledsProductLinkTemp.UserNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUserNameNull() {
                this[this.tabledsProductLinkTemp.UserNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCodeFromNull() {
                return this.IsNull(this.tabledsProductLinkTemp.CodeFromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCodeFromNull() {
                this[this.tabledsProductLinkTemp.CodeFromColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCodeToNull() {
                return this.IsNull(this.tabledsProductLinkTemp.CodeToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCodeToNull() {
                this[this.tabledsProductLinkTemp.CodeToColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class PriceChangeRow : global::System.Data.DataRow {
            
            private PriceChangeDataTable tablePriceChange;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PriceChangeRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePriceChange = ((PriceChangeDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prod_Code {
                get {
                    try {
                        return ((string)(this[this.tablePriceChange.Prod_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Prod_Code\' in table \'PriceChange\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePriceChange.Prod_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prod_Name {
                get {
                    try {
                        return ((string)(this[this.tablePriceChange.Prod_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Prod_Name\' in table \'PriceChange\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePriceChange.Prod_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Pre_Purchase_price {
                get {
                    try {
                        return ((string)(this[this.tablePriceChange.Pre_Purchase_priceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Pre_Purchase_price\' in table \'PriceChange\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePriceChange.Pre_Purchase_priceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string New_Purchase_price {
                get {
                    try {
                        return ((string)(this[this.tablePriceChange.New_Purchase_priceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'New_Purchase_price\' in table \'PriceChange\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePriceChange.New_Purchase_priceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Pre_Selling_Price {
                get {
                    try {
                        return ((string)(this[this.tablePriceChange.Pre_Selling_PriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Pre_Selling_Price\' in table \'PriceChange\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePriceChange.Pre_Selling_PriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string New_Selling_Price {
                get {
                    try {
                        return ((string)(this[this.tablePriceChange.New_Selling_PriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'New_Selling_Price\' in table \'PriceChange\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePriceChange.New_Selling_PriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Tr_Date {
                get {
                    try {
                        return ((decimal)(this[this.tablePriceChange.Tr_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Tr_Date\' in table \'PriceChange\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePriceChange.Tr_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Modified_User {
                get {
                    try {
                        return ((string)(this[this.tablePriceChange.Modified_UserColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Modified_User\' in table \'PriceChange\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePriceChange.Modified_UserColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_CodeNull() {
                return this.IsNull(this.tablePriceChange.Prod_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_CodeNull() {
                this[this.tablePriceChange.Prod_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_NameNull() {
                return this.IsNull(this.tablePriceChange.Prod_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_NameNull() {
                this[this.tablePriceChange.Prod_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPre_Purchase_priceNull() {
                return this.IsNull(this.tablePriceChange.Pre_Purchase_priceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPre_Purchase_priceNull() {
                this[this.tablePriceChange.Pre_Purchase_priceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNew_Purchase_priceNull() {
                return this.IsNull(this.tablePriceChange.New_Purchase_priceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNew_Purchase_priceNull() {
                this[this.tablePriceChange.New_Purchase_priceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPre_Selling_PriceNull() {
                return this.IsNull(this.tablePriceChange.Pre_Selling_PriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPre_Selling_PriceNull() {
                this[this.tablePriceChange.Pre_Selling_PriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNew_Selling_PriceNull() {
                return this.IsNull(this.tablePriceChange.New_Selling_PriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNew_Selling_PriceNull() {
                this[this.tablePriceChange.New_Selling_PriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTr_DateNull() {
                return this.IsNull(this.tablePriceChange.Tr_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTr_DateNull() {
                this[this.tablePriceChange.Tr_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModified_UserNull() {
                return this.IsNull(this.tablePriceChange.Modified_UserColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModified_UserNull() {
                this[this.tablePriceChange.Modified_UserColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dsPosSalesSummaryRow : global::System.Data.DataRow {
            
            private dsPosSalesSummaryDataTable tabledsPosSalesSummary;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsPosSalesSummaryRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledsPosSalesSummary = ((dsPosSalesSummaryDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Unit_No {
                get {
                    try {
                        return ((string)(this[this.tabledsPosSalesSummary.Unit_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Unit_No\' in table \'dsPosSalesSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPosSalesSummary.Unit_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double PosGross_Sales {
                get {
                    try {
                        return ((double)(this[this.tabledsPosSalesSummary.PosGross_SalesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PosGross_Sales\' in table \'dsPosSalesSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPosSalesSummary.PosGross_SalesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double PosRefund_Tot {
                get {
                    try {
                        return ((double)(this[this.tabledsPosSalesSummary.PosRefund_TotColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PosRefund_Tot\' in table \'dsPosSalesSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPosSalesSummary.PosRefund_TotColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double PosRefund_No {
                get {
                    try {
                        return ((double)(this[this.tabledsPosSalesSummary.PosRefund_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PosRefund_No\' in table \'dsPosSalesSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPosSalesSummary.PosRefund_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double PosVoid_Tot {
                get {
                    try {
                        return ((double)(this[this.tabledsPosSalesSummary.PosVoid_TotColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PosVoid_Tot\' in table \'dsPosSalesSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPosSalesSummary.PosVoid_TotColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double PosVoid_No {
                get {
                    try {
                        return ((double)(this[this.tabledsPosSalesSummary.PosVoid_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PosVoid_No\' in table \'dsPosSalesSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPosSalesSummary.PosVoid_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double PosError_Tot {
                get {
                    try {
                        return ((double)(this[this.tabledsPosSalesSummary.PosError_TotColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PosError_Tot\' in table \'dsPosSalesSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPosSalesSummary.PosError_TotColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double PosError_No {
                get {
                    try {
                        return ((double)(this[this.tabledsPosSalesSummary.PosError_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PosError_No\' in table \'dsPosSalesSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPosSalesSummary.PosError_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double PosCancel_Tot {
                get {
                    try {
                        return ((double)(this[this.tabledsPosSalesSummary.PosCancel_TotColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PosCancel_Tot\' in table \'dsPosSalesSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPosSalesSummary.PosCancel_TotColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double PosCancel_No {
                get {
                    try {
                        return ((double)(this[this.tabledsPosSalesSummary.PosCancel_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PosCancel_No\' in table \'dsPosSalesSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPosSalesSummary.PosCancel_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double PosNet_Amt {
                get {
                    try {
                        return ((double)(this[this.tabledsPosSalesSummary.PosNet_AmtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PosNet_Amt\' in table \'dsPosSalesSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPosSalesSummary.PosNet_AmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double PosCash_Amt {
                get {
                    try {
                        return ((double)(this[this.tabledsPosSalesSummary.PosCash_AmtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PosCash_Amt\' in table \'dsPosSalesSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPosSalesSummary.PosCash_AmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double PosCredit_amt {
                get {
                    try {
                        return ((double)(this[this.tabledsPosSalesSummary.PosCredit_amtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PosCredit_amt\' in table \'dsPosSalesSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPosSalesSummary.PosCredit_amtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double PosBill_Count {
                get {
                    try {
                        return ((double)(this[this.tabledsPosSalesSummary.PosBill_CountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PosBill_Count\' in table \'dsPosSalesSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPosSalesSummary.PosBill_CountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double PosExchange_Tot {
                get {
                    try {
                        return ((double)(this[this.tabledsPosSalesSummary.PosExchange_TotColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PosExchange_Tot\' in table \'dsPosSalesSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPosSalesSummary.PosExchange_TotColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double PosExchange_No {
                get {
                    try {
                        return ((double)(this[this.tabledsPosSalesSummary.PosExchange_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PosExchange_No\' in table \'dsPosSalesSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPosSalesSummary.PosExchange_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double PosDiscount_Tot {
                get {
                    try {
                        return ((double)(this[this.tabledsPosSalesSummary.PosDiscount_TotColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PosDiscount_Tot\' in table \'dsPosSalesSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPosSalesSummary.PosDiscount_TotColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double PosDiscount_No {
                get {
                    try {
                        return ((double)(this[this.tabledsPosSalesSummary.PosDiscount_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PosDiscount_No\' in table \'dsPosSalesSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPosSalesSummary.PosDiscount_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Declare_Amount {
                get {
                    try {
                        return ((double)(this[this.tabledsPosSalesSummary.Declare_AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Declare_Amount\' in table \'dsPosSalesSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPosSalesSummary.Declare_AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Pos_CashOut {
                get {
                    try {
                        return ((double)(this[this.tabledsPosSalesSummary.Pos_CashOutColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Pos_CashOut\' in table \'dsPosSalesSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPosSalesSummary.Pos_CashOutColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Card1_Descr {
                get {
                    try {
                        return ((string)(this[this.tabledsPosSalesSummary.Card1_DescrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Card1_Descr\' in table \'dsPosSalesSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPosSalesSummary.Card1_DescrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Card1_Amount {
                get {
                    try {
                        return ((double)(this[this.tabledsPosSalesSummary.Card1_AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Card1_Amount\' in table \'dsPosSalesSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPosSalesSummary.Card1_AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Card2_Descr {
                get {
                    try {
                        return ((string)(this[this.tabledsPosSalesSummary.Card2_DescrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Card2_Descr\' in table \'dsPosSalesSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPosSalesSummary.Card2_DescrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Card2_Amount {
                get {
                    try {
                        return ((double)(this[this.tabledsPosSalesSummary.Card2_AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Card2_Amount\' in table \'dsPosSalesSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPosSalesSummary.Card2_AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Card3_Descr {
                get {
                    try {
                        return ((string)(this[this.tabledsPosSalesSummary.Card3_DescrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Card3_Descr\' in table \'dsPosSalesSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPosSalesSummary.Card3_DescrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Card3_Amount {
                get {
                    try {
                        return ((double)(this[this.tabledsPosSalesSummary.Card3_AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Card3_Amount\' in table \'dsPosSalesSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPosSalesSummary.Card3_AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Card4_Descr {
                get {
                    try {
                        return ((string)(this[this.tabledsPosSalesSummary.Card4_DescrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Card4_Descr\' in table \'dsPosSalesSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPosSalesSummary.Card4_DescrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Card4_Amount {
                get {
                    try {
                        return ((double)(this[this.tabledsPosSalesSummary.Card4_AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Card4_Amount\' in table \'dsPosSalesSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPosSalesSummary.Card4_AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Card5_Descr {
                get {
                    try {
                        return ((string)(this[this.tabledsPosSalesSummary.Card5_DescrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Card5_Descr\' in table \'dsPosSalesSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPosSalesSummary.Card5_DescrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Card5_Amount {
                get {
                    try {
                        return ((double)(this[this.tabledsPosSalesSummary.Card5_AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Card5_Amount\' in table \'dsPosSalesSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPosSalesSummary.Card5_AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Dept1_Descr {
                get {
                    try {
                        return ((string)(this[this.tabledsPosSalesSummary.Dept1_DescrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Dept1_Descr\' in table \'dsPosSalesSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPosSalesSummary.Dept1_DescrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Dept1_Amount {
                get {
                    try {
                        return ((double)(this[this.tabledsPosSalesSummary.Dept1_AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Dept1_Amount\' in table \'dsPosSalesSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPosSalesSummary.Dept1_AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Dept2_Descr {
                get {
                    try {
                        return ((string)(this[this.tabledsPosSalesSummary.Dept2_DescrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Dept2_Descr\' in table \'dsPosSalesSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPosSalesSummary.Dept2_DescrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Dept2_Amount {
                get {
                    try {
                        return ((double)(this[this.tabledsPosSalesSummary.Dept2_AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Dept2_Amount\' in table \'dsPosSalesSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPosSalesSummary.Dept2_AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Dept3_Descr {
                get {
                    try {
                        return ((string)(this[this.tabledsPosSalesSummary.Dept3_DescrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Dept3_Descr\' in table \'dsPosSalesSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPosSalesSummary.Dept3_DescrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Dept3_Amount {
                get {
                    try {
                        return ((double)(this[this.tabledsPosSalesSummary.Dept3_AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Dept3_Amount\' in table \'dsPosSalesSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPosSalesSummary.Dept3_AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Dept4_Descr {
                get {
                    try {
                        return ((string)(this[this.tabledsPosSalesSummary.Dept4_DescrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Dept4_Descr\' in table \'dsPosSalesSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPosSalesSummary.Dept4_DescrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Dept4_Amount {
                get {
                    try {
                        return ((double)(this[this.tabledsPosSalesSummary.Dept4_AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Dept4_Amount\' in table \'dsPosSalesSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPosSalesSummary.Dept4_AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Dept5_Descr {
                get {
                    try {
                        return ((string)(this[this.tabledsPosSalesSummary.Dept5_DescrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Dept5_Descr\' in table \'dsPosSalesSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPosSalesSummary.Dept5_DescrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Dept5_Amount {
                get {
                    try {
                        return ((double)(this[this.tabledsPosSalesSummary.Dept5_AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Dept5_Amount\' in table \'dsPosSalesSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPosSalesSummary.Dept5_AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Loca {
                get {
                    try {
                        return ((string)(this[this.tabledsPosSalesSummary.LocaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Loca\' in table \'dsPosSalesSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPosSalesSummary.LocaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Loca_Descrip {
                get {
                    try {
                        return ((string)(this[this.tabledsPosSalesSummary.Loca_DescripColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Loca_Descrip\' in table \'dsPosSalesSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPosSalesSummary.Loca_DescripColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DateFrom {
                get {
                    try {
                        return ((string)(this[this.tabledsPosSalesSummary.DateFromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateFrom\' in table \'dsPosSalesSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPosSalesSummary.DateFromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DateTo {
                get {
                    try {
                        return ((string)(this[this.tabledsPosSalesSummary.DateToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateTo\' in table \'dsPosSalesSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPosSalesSummary.DateToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double WholeSale_Inv {
                get {
                    try {
                        return ((double)(this[this.tabledsPosSalesSummary.WholeSale_InvColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WholeSale_Inv\' in table \'dsPosSalesSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPosSalesSummary.WholeSale_InvColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double WholeSale_Return {
                get {
                    try {
                        return ((double)(this[this.tabledsPosSalesSummary.WholeSale_ReturnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WholeSale_Return\' in table \'dsPosSalesSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPosSalesSummary.WholeSale_ReturnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Wholesale_Payment {
                get {
                    try {
                        return ((double)(this[this.tabledsPosSalesSummary.Wholesale_PaymentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Wholesale_Payment\' in table \'dsPosSalesSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPosSalesSummary.Wholesale_PaymentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Cash_Out {
                get {
                    try {
                        return ((decimal)(this[this.tabledsPosSalesSummary.Cash_OutColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cash_Out\' in table \'dsPosSalesSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPosSalesSummary.Cash_OutColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Bank {
                get {
                    try {
                        return ((decimal)(this[this.tabledsPosSalesSummary.BankColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Bank\' in table \'dsPosSalesSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPosSalesSummary.BankColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Payment {
                get {
                    try {
                        return ((decimal)(this[this.tabledsPosSalesSummary.PaymentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Payment\' in table \'dsPosSalesSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPosSalesSummary.PaymentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Supplier_Payment {
                get {
                    try {
                        return ((decimal)(this[this.tabledsPosSalesSummary.Supplier_PaymentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Supplier_Payment\' in table \'dsPosSalesSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPosSalesSummary.Supplier_PaymentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Petty_Cash {
                get {
                    try {
                        return ((decimal)(this[this.tabledsPosSalesSummary.Petty_CashColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Petty_Cash\' in table \'dsPosSalesSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPosSalesSummary.Petty_CashColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal GVCash {
                get {
                    try {
                        return ((decimal)(this[this.tabledsPosSalesSummary.GVCashColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GVCash\' in table \'dsPosSalesSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPosSalesSummary.GVCashColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal GVCredit {
                get {
                    try {
                        return ((decimal)(this[this.tabledsPosSalesSummary.GVCreditColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GVCredit\' in table \'dsPosSalesSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPosSalesSummary.GVCreditColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Invice {
                get {
                    try {
                        return ((decimal)(this[this.tabledsPosSalesSummary.InviceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Invice\' in table \'dsPosSalesSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPosSalesSummary.InviceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Return {
                get {
                    try {
                        return ((decimal)(this[this.tabledsPosSalesSummary.ReturnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Return\' in table \'dsPosSalesSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPosSalesSummary.ReturnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Cheque {
                get {
                    try {
                        return ((decimal)(this[this.tabledsPosSalesSummary.ChequeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cheque\' in table \'dsPosSalesSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPosSalesSummary.ChequeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal RtnChq {
                get {
                    try {
                        return ((decimal)(this[this.tabledsPosSalesSummary.RtnChqColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RtnChq\' in table \'dsPosSalesSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPosSalesSummary.RtnChqColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Wholesale_Cash {
                get {
                    try {
                        return ((decimal)(this[this.tabledsPosSalesSummary.Wholesale_CashColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Wholesale_Cash\' in table \'dsPosSalesSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPosSalesSummary.Wholesale_CashColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnit_NoNull() {
                return this.IsNull(this.tabledsPosSalesSummary.Unit_NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnit_NoNull() {
                this[this.tabledsPosSalesSummary.Unit_NoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPosGross_SalesNull() {
                return this.IsNull(this.tabledsPosSalesSummary.PosGross_SalesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPosGross_SalesNull() {
                this[this.tabledsPosSalesSummary.PosGross_SalesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPosRefund_TotNull() {
                return this.IsNull(this.tabledsPosSalesSummary.PosRefund_TotColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPosRefund_TotNull() {
                this[this.tabledsPosSalesSummary.PosRefund_TotColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPosRefund_NoNull() {
                return this.IsNull(this.tabledsPosSalesSummary.PosRefund_NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPosRefund_NoNull() {
                this[this.tabledsPosSalesSummary.PosRefund_NoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPosVoid_TotNull() {
                return this.IsNull(this.tabledsPosSalesSummary.PosVoid_TotColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPosVoid_TotNull() {
                this[this.tabledsPosSalesSummary.PosVoid_TotColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPosVoid_NoNull() {
                return this.IsNull(this.tabledsPosSalesSummary.PosVoid_NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPosVoid_NoNull() {
                this[this.tabledsPosSalesSummary.PosVoid_NoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPosError_TotNull() {
                return this.IsNull(this.tabledsPosSalesSummary.PosError_TotColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPosError_TotNull() {
                this[this.tabledsPosSalesSummary.PosError_TotColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPosError_NoNull() {
                return this.IsNull(this.tabledsPosSalesSummary.PosError_NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPosError_NoNull() {
                this[this.tabledsPosSalesSummary.PosError_NoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPosCancel_TotNull() {
                return this.IsNull(this.tabledsPosSalesSummary.PosCancel_TotColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPosCancel_TotNull() {
                this[this.tabledsPosSalesSummary.PosCancel_TotColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPosCancel_NoNull() {
                return this.IsNull(this.tabledsPosSalesSummary.PosCancel_NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPosCancel_NoNull() {
                this[this.tabledsPosSalesSummary.PosCancel_NoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPosNet_AmtNull() {
                return this.IsNull(this.tabledsPosSalesSummary.PosNet_AmtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPosNet_AmtNull() {
                this[this.tabledsPosSalesSummary.PosNet_AmtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPosCash_AmtNull() {
                return this.IsNull(this.tabledsPosSalesSummary.PosCash_AmtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPosCash_AmtNull() {
                this[this.tabledsPosSalesSummary.PosCash_AmtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPosCredit_amtNull() {
                return this.IsNull(this.tabledsPosSalesSummary.PosCredit_amtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPosCredit_amtNull() {
                this[this.tabledsPosSalesSummary.PosCredit_amtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPosBill_CountNull() {
                return this.IsNull(this.tabledsPosSalesSummary.PosBill_CountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPosBill_CountNull() {
                this[this.tabledsPosSalesSummary.PosBill_CountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPosExchange_TotNull() {
                return this.IsNull(this.tabledsPosSalesSummary.PosExchange_TotColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPosExchange_TotNull() {
                this[this.tabledsPosSalesSummary.PosExchange_TotColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPosExchange_NoNull() {
                return this.IsNull(this.tabledsPosSalesSummary.PosExchange_NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPosExchange_NoNull() {
                this[this.tabledsPosSalesSummary.PosExchange_NoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPosDiscount_TotNull() {
                return this.IsNull(this.tabledsPosSalesSummary.PosDiscount_TotColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPosDiscount_TotNull() {
                this[this.tabledsPosSalesSummary.PosDiscount_TotColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPosDiscount_NoNull() {
                return this.IsNull(this.tabledsPosSalesSummary.PosDiscount_NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPosDiscount_NoNull() {
                this[this.tabledsPosSalesSummary.PosDiscount_NoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeclare_AmountNull() {
                return this.IsNull(this.tabledsPosSalesSummary.Declare_AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeclare_AmountNull() {
                this[this.tabledsPosSalesSummary.Declare_AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPos_CashOutNull() {
                return this.IsNull(this.tabledsPosSalesSummary.Pos_CashOutColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPos_CashOutNull() {
                this[this.tabledsPosSalesSummary.Pos_CashOutColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCard1_DescrNull() {
                return this.IsNull(this.tabledsPosSalesSummary.Card1_DescrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCard1_DescrNull() {
                this[this.tabledsPosSalesSummary.Card1_DescrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCard1_AmountNull() {
                return this.IsNull(this.tabledsPosSalesSummary.Card1_AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCard1_AmountNull() {
                this[this.tabledsPosSalesSummary.Card1_AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCard2_DescrNull() {
                return this.IsNull(this.tabledsPosSalesSummary.Card2_DescrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCard2_DescrNull() {
                this[this.tabledsPosSalesSummary.Card2_DescrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCard2_AmountNull() {
                return this.IsNull(this.tabledsPosSalesSummary.Card2_AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCard2_AmountNull() {
                this[this.tabledsPosSalesSummary.Card2_AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCard3_DescrNull() {
                return this.IsNull(this.tabledsPosSalesSummary.Card3_DescrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCard3_DescrNull() {
                this[this.tabledsPosSalesSummary.Card3_DescrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCard3_AmountNull() {
                return this.IsNull(this.tabledsPosSalesSummary.Card3_AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCard3_AmountNull() {
                this[this.tabledsPosSalesSummary.Card3_AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCard4_DescrNull() {
                return this.IsNull(this.tabledsPosSalesSummary.Card4_DescrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCard4_DescrNull() {
                this[this.tabledsPosSalesSummary.Card4_DescrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCard4_AmountNull() {
                return this.IsNull(this.tabledsPosSalesSummary.Card4_AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCard4_AmountNull() {
                this[this.tabledsPosSalesSummary.Card4_AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCard5_DescrNull() {
                return this.IsNull(this.tabledsPosSalesSummary.Card5_DescrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCard5_DescrNull() {
                this[this.tabledsPosSalesSummary.Card5_DescrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCard5_AmountNull() {
                return this.IsNull(this.tabledsPosSalesSummary.Card5_AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCard5_AmountNull() {
                this[this.tabledsPosSalesSummary.Card5_AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDept1_DescrNull() {
                return this.IsNull(this.tabledsPosSalesSummary.Dept1_DescrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDept1_DescrNull() {
                this[this.tabledsPosSalesSummary.Dept1_DescrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDept1_AmountNull() {
                return this.IsNull(this.tabledsPosSalesSummary.Dept1_AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDept1_AmountNull() {
                this[this.tabledsPosSalesSummary.Dept1_AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDept2_DescrNull() {
                return this.IsNull(this.tabledsPosSalesSummary.Dept2_DescrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDept2_DescrNull() {
                this[this.tabledsPosSalesSummary.Dept2_DescrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDept2_AmountNull() {
                return this.IsNull(this.tabledsPosSalesSummary.Dept2_AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDept2_AmountNull() {
                this[this.tabledsPosSalesSummary.Dept2_AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDept3_DescrNull() {
                return this.IsNull(this.tabledsPosSalesSummary.Dept3_DescrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDept3_DescrNull() {
                this[this.tabledsPosSalesSummary.Dept3_DescrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDept3_AmountNull() {
                return this.IsNull(this.tabledsPosSalesSummary.Dept3_AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDept3_AmountNull() {
                this[this.tabledsPosSalesSummary.Dept3_AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDept4_DescrNull() {
                return this.IsNull(this.tabledsPosSalesSummary.Dept4_DescrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDept4_DescrNull() {
                this[this.tabledsPosSalesSummary.Dept4_DescrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDept4_AmountNull() {
                return this.IsNull(this.tabledsPosSalesSummary.Dept4_AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDept4_AmountNull() {
                this[this.tabledsPosSalesSummary.Dept4_AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDept5_DescrNull() {
                return this.IsNull(this.tabledsPosSalesSummary.Dept5_DescrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDept5_DescrNull() {
                this[this.tabledsPosSalesSummary.Dept5_DescrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDept5_AmountNull() {
                return this.IsNull(this.tabledsPosSalesSummary.Dept5_AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDept5_AmountNull() {
                this[this.tabledsPosSalesSummary.Dept5_AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocaNull() {
                return this.IsNull(this.tabledsPosSalesSummary.LocaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocaNull() {
                this[this.tabledsPosSalesSummary.LocaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLoca_DescripNull() {
                return this.IsNull(this.tabledsPosSalesSummary.Loca_DescripColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLoca_DescripNull() {
                this[this.tabledsPosSalesSummary.Loca_DescripColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateFromNull() {
                return this.IsNull(this.tabledsPosSalesSummary.DateFromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateFromNull() {
                this[this.tabledsPosSalesSummary.DateFromColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateToNull() {
                return this.IsNull(this.tabledsPosSalesSummary.DateToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateToNull() {
                this[this.tabledsPosSalesSummary.DateToColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWholeSale_InvNull() {
                return this.IsNull(this.tabledsPosSalesSummary.WholeSale_InvColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWholeSale_InvNull() {
                this[this.tabledsPosSalesSummary.WholeSale_InvColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWholeSale_ReturnNull() {
                return this.IsNull(this.tabledsPosSalesSummary.WholeSale_ReturnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWholeSale_ReturnNull() {
                this[this.tabledsPosSalesSummary.WholeSale_ReturnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWholesale_PaymentNull() {
                return this.IsNull(this.tabledsPosSalesSummary.Wholesale_PaymentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWholesale_PaymentNull() {
                this[this.tabledsPosSalesSummary.Wholesale_PaymentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCash_OutNull() {
                return this.IsNull(this.tabledsPosSalesSummary.Cash_OutColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCash_OutNull() {
                this[this.tabledsPosSalesSummary.Cash_OutColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBankNull() {
                return this.IsNull(this.tabledsPosSalesSummary.BankColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBankNull() {
                this[this.tabledsPosSalesSummary.BankColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPaymentNull() {
                return this.IsNull(this.tabledsPosSalesSummary.PaymentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPaymentNull() {
                this[this.tabledsPosSalesSummary.PaymentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupplier_PaymentNull() {
                return this.IsNull(this.tabledsPosSalesSummary.Supplier_PaymentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupplier_PaymentNull() {
                this[this.tabledsPosSalesSummary.Supplier_PaymentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPetty_CashNull() {
                return this.IsNull(this.tabledsPosSalesSummary.Petty_CashColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPetty_CashNull() {
                this[this.tabledsPosSalesSummary.Petty_CashColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGVCashNull() {
                return this.IsNull(this.tabledsPosSalesSummary.GVCashColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGVCashNull() {
                this[this.tabledsPosSalesSummary.GVCashColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGVCreditNull() {
                return this.IsNull(this.tabledsPosSalesSummary.GVCreditColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGVCreditNull() {
                this[this.tabledsPosSalesSummary.GVCreditColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInviceNull() {
                return this.IsNull(this.tabledsPosSalesSummary.InviceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInviceNull() {
                this[this.tabledsPosSalesSummary.InviceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReturnNull() {
                return this.IsNull(this.tabledsPosSalesSummary.ReturnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReturnNull() {
                this[this.tabledsPosSalesSummary.ReturnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsChequeNull() {
                return this.IsNull(this.tabledsPosSalesSummary.ChequeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetChequeNull() {
                this[this.tabledsPosSalesSummary.ChequeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRtnChqNull() {
                return this.IsNull(this.tabledsPosSalesSummary.RtnChqColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRtnChqNull() {
                this[this.tabledsPosSalesSummary.RtnChqColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWholesale_CashNull() {
                return this.IsNull(this.tabledsPosSalesSummary.Wholesale_CashColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWholesale_CashNull() {
                this[this.tabledsPosSalesSummary.Wholesale_CashColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DataTable1Row : global::System.Data.DataRow {
            
            private DataTable1DataTable tableDataTable1;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DataTable1Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDataTable1 = ((DataTable1DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Unit_No {
                get {
                    try {
                        return ((string)(this[this.tableDataTable1.Unit_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Unit_No\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.Unit_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PosGross_Sales {
                get {
                    try {
                        return ((string)(this[this.tableDataTable1.PosGross_SalesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PosGross_Sales\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.PosGross_SalesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PosRefund_Tot {
                get {
                    try {
                        return ((string)(this[this.tableDataTable1.PosRefund_TotColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PosRefund_Tot\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.PosRefund_TotColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PosRefund_No {
                get {
                    try {
                        return ((string)(this[this.tableDataTable1.PosRefund_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PosRefund_No\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.PosRefund_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PosVoid_Tot {
                get {
                    try {
                        return ((string)(this[this.tableDataTable1.PosVoid_TotColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PosVoid_Tot\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.PosVoid_TotColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PosVoid_No {
                get {
                    try {
                        return ((string)(this[this.tableDataTable1.PosVoid_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PosVoid_No\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.PosVoid_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PosError_Tot {
                get {
                    try {
                        return ((string)(this[this.tableDataTable1.PosError_TotColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PosError_Tot\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.PosError_TotColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PosError_No {
                get {
                    try {
                        return ((string)(this[this.tableDataTable1.PosError_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PosError_No\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.PosError_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PosCancel_Tot {
                get {
                    try {
                        return ((string)(this[this.tableDataTable1.PosCancel_TotColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PosCancel_Tot\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.PosCancel_TotColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PosCancel_No {
                get {
                    try {
                        return ((string)(this[this.tableDataTable1.PosCancel_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PosCancel_No\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.PosCancel_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PosNet_Amt {
                get {
                    try {
                        return ((string)(this[this.tableDataTable1.PosNet_AmtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PosNet_Amt\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.PosNet_AmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PosCash_Amt {
                get {
                    try {
                        return ((string)(this[this.tableDataTable1.PosCash_AmtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PosCash_Amt\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.PosCash_AmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PosCredit_amt {
                get {
                    try {
                        return ((string)(this[this.tableDataTable1.PosCredit_amtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PosCredit_amt\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.PosCredit_amtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PosBill_Count {
                get {
                    try {
                        return ((string)(this[this.tableDataTable1.PosBill_CountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PosBill_Count\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.PosBill_CountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PosExchange_Tot {
                get {
                    try {
                        return ((string)(this[this.tableDataTable1.PosExchange_TotColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PosExchange_Tot\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.PosExchange_TotColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PosExchange_No {
                get {
                    try {
                        return ((string)(this[this.tableDataTable1.PosExchange_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PosExchange_No\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.PosExchange_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PosDiscount_Tot {
                get {
                    try {
                        return ((string)(this[this.tableDataTable1.PosDiscount_TotColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PosDiscount_Tot\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.PosDiscount_TotColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PosDiscount_No {
                get {
                    try {
                        return ((string)(this[this.tableDataTable1.PosDiscount_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PosDiscount_No\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.PosDiscount_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Declare_Amount {
                get {
                    try {
                        return ((string)(this[this.tableDataTable1.Declare_AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Declare_Amount\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.Declare_AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Pos_CashOut {
                get {
                    try {
                        return ((string)(this[this.tableDataTable1.Pos_CashOutColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Pos_CashOut\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.Pos_CashOutColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Card1_Descr {
                get {
                    try {
                        return ((string)(this[this.tableDataTable1.Card1_DescrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Card1_Descr\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.Card1_DescrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Card1_Amount {
                get {
                    try {
                        return ((string)(this[this.tableDataTable1.Card1_AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Card1_Amount\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.Card1_AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Card2_Descr {
                get {
                    try {
                        return ((string)(this[this.tableDataTable1.Card2_DescrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Card2_Descr\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.Card2_DescrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Card2_Amount {
                get {
                    try {
                        return ((string)(this[this.tableDataTable1.Card2_AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Card2_Amount\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.Card2_AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Card3_Descr {
                get {
                    try {
                        return ((string)(this[this.tableDataTable1.Card3_DescrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Card3_Descr\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.Card3_DescrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Card3_Amount {
                get {
                    try {
                        return ((string)(this[this.tableDataTable1.Card3_AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Card3_Amount\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.Card3_AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Card4_Descr {
                get {
                    try {
                        return ((string)(this[this.tableDataTable1.Card4_DescrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Card4_Descr\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.Card4_DescrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Card4_Amount {
                get {
                    try {
                        return ((string)(this[this.tableDataTable1.Card4_AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Card4_Amount\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.Card4_AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Card5_Descr {
                get {
                    try {
                        return ((string)(this[this.tableDataTable1.Card5_DescrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Card5_Descr\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.Card5_DescrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Card5_Amount {
                get {
                    try {
                        return ((string)(this[this.tableDataTable1.Card5_AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Card5_Amount\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.Card5_AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Dept1_Descr {
                get {
                    try {
                        return ((string)(this[this.tableDataTable1.Dept1_DescrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Dept1_Descr\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.Dept1_DescrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Dept1_Amount {
                get {
                    try {
                        return ((string)(this[this.tableDataTable1.Dept1_AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Dept1_Amount\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.Dept1_AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Dept2_Descr {
                get {
                    try {
                        return ((string)(this[this.tableDataTable1.Dept2_DescrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Dept2_Descr\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.Dept2_DescrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Dept2_Amount {
                get {
                    try {
                        return ((string)(this[this.tableDataTable1.Dept2_AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Dept2_Amount\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.Dept2_AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Dept3_Descr {
                get {
                    try {
                        return ((string)(this[this.tableDataTable1.Dept3_DescrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Dept3_Descr\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.Dept3_DescrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Dept3_Amount {
                get {
                    try {
                        return ((string)(this[this.tableDataTable1.Dept3_AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Dept3_Amount\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.Dept3_AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Dept4_Descr {
                get {
                    try {
                        return ((string)(this[this.tableDataTable1.Dept4_DescrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Dept4_Descr\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.Dept4_DescrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Dept4_Amount {
                get {
                    try {
                        return ((string)(this[this.tableDataTable1.Dept4_AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Dept4_Amount\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.Dept4_AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Dept5_Descr {
                get {
                    try {
                        return ((string)(this[this.tableDataTable1.Dept5_DescrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Dept5_Descr\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.Dept5_DescrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Dept5_Amount {
                get {
                    try {
                        return ((string)(this[this.tableDataTable1.Dept5_AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Dept5_Amount\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.Dept5_AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Loca {
                get {
                    try {
                        return ((string)(this[this.tableDataTable1.LocaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Loca\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.LocaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Loca_Descrip {
                get {
                    try {
                        return ((string)(this[this.tableDataTable1.Loca_DescripColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Loca_Descrip\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.Loca_DescripColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DateFrom {
                get {
                    try {
                        return ((string)(this[this.tableDataTable1.DateFromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateFrom\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.DateFromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DateTo {
                get {
                    try {
                        return ((string)(this[this.tableDataTable1.DateToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateTo\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.DateToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WholeSale_Inv {
                get {
                    try {
                        return ((string)(this[this.tableDataTable1.WholeSale_InvColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WholeSale_Inv\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.WholeSale_InvColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WholeSale_Return {
                get {
                    try {
                        return ((string)(this[this.tableDataTable1.WholeSale_ReturnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WholeSale_Return\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.WholeSale_ReturnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Wholesale_Payment {
                get {
                    try {
                        return ((string)(this[this.tableDataTable1.Wholesale_PaymentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Wholesale_Payment\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.Wholesale_PaymentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnit_NoNull() {
                return this.IsNull(this.tableDataTable1.Unit_NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnit_NoNull() {
                this[this.tableDataTable1.Unit_NoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPosGross_SalesNull() {
                return this.IsNull(this.tableDataTable1.PosGross_SalesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPosGross_SalesNull() {
                this[this.tableDataTable1.PosGross_SalesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPosRefund_TotNull() {
                return this.IsNull(this.tableDataTable1.PosRefund_TotColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPosRefund_TotNull() {
                this[this.tableDataTable1.PosRefund_TotColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPosRefund_NoNull() {
                return this.IsNull(this.tableDataTable1.PosRefund_NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPosRefund_NoNull() {
                this[this.tableDataTable1.PosRefund_NoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPosVoid_TotNull() {
                return this.IsNull(this.tableDataTable1.PosVoid_TotColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPosVoid_TotNull() {
                this[this.tableDataTable1.PosVoid_TotColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPosVoid_NoNull() {
                return this.IsNull(this.tableDataTable1.PosVoid_NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPosVoid_NoNull() {
                this[this.tableDataTable1.PosVoid_NoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPosError_TotNull() {
                return this.IsNull(this.tableDataTable1.PosError_TotColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPosError_TotNull() {
                this[this.tableDataTable1.PosError_TotColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPosError_NoNull() {
                return this.IsNull(this.tableDataTable1.PosError_NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPosError_NoNull() {
                this[this.tableDataTable1.PosError_NoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPosCancel_TotNull() {
                return this.IsNull(this.tableDataTable1.PosCancel_TotColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPosCancel_TotNull() {
                this[this.tableDataTable1.PosCancel_TotColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPosCancel_NoNull() {
                return this.IsNull(this.tableDataTable1.PosCancel_NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPosCancel_NoNull() {
                this[this.tableDataTable1.PosCancel_NoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPosNet_AmtNull() {
                return this.IsNull(this.tableDataTable1.PosNet_AmtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPosNet_AmtNull() {
                this[this.tableDataTable1.PosNet_AmtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPosCash_AmtNull() {
                return this.IsNull(this.tableDataTable1.PosCash_AmtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPosCash_AmtNull() {
                this[this.tableDataTable1.PosCash_AmtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPosCredit_amtNull() {
                return this.IsNull(this.tableDataTable1.PosCredit_amtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPosCredit_amtNull() {
                this[this.tableDataTable1.PosCredit_amtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPosBill_CountNull() {
                return this.IsNull(this.tableDataTable1.PosBill_CountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPosBill_CountNull() {
                this[this.tableDataTable1.PosBill_CountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPosExchange_TotNull() {
                return this.IsNull(this.tableDataTable1.PosExchange_TotColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPosExchange_TotNull() {
                this[this.tableDataTable1.PosExchange_TotColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPosExchange_NoNull() {
                return this.IsNull(this.tableDataTable1.PosExchange_NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPosExchange_NoNull() {
                this[this.tableDataTable1.PosExchange_NoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPosDiscount_TotNull() {
                return this.IsNull(this.tableDataTable1.PosDiscount_TotColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPosDiscount_TotNull() {
                this[this.tableDataTable1.PosDiscount_TotColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPosDiscount_NoNull() {
                return this.IsNull(this.tableDataTable1.PosDiscount_NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPosDiscount_NoNull() {
                this[this.tableDataTable1.PosDiscount_NoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeclare_AmountNull() {
                return this.IsNull(this.tableDataTable1.Declare_AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeclare_AmountNull() {
                this[this.tableDataTable1.Declare_AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPos_CashOutNull() {
                return this.IsNull(this.tableDataTable1.Pos_CashOutColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPos_CashOutNull() {
                this[this.tableDataTable1.Pos_CashOutColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCard1_DescrNull() {
                return this.IsNull(this.tableDataTable1.Card1_DescrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCard1_DescrNull() {
                this[this.tableDataTable1.Card1_DescrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCard1_AmountNull() {
                return this.IsNull(this.tableDataTable1.Card1_AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCard1_AmountNull() {
                this[this.tableDataTable1.Card1_AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCard2_DescrNull() {
                return this.IsNull(this.tableDataTable1.Card2_DescrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCard2_DescrNull() {
                this[this.tableDataTable1.Card2_DescrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCard2_AmountNull() {
                return this.IsNull(this.tableDataTable1.Card2_AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCard2_AmountNull() {
                this[this.tableDataTable1.Card2_AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCard3_DescrNull() {
                return this.IsNull(this.tableDataTable1.Card3_DescrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCard3_DescrNull() {
                this[this.tableDataTable1.Card3_DescrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCard3_AmountNull() {
                return this.IsNull(this.tableDataTable1.Card3_AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCard3_AmountNull() {
                this[this.tableDataTable1.Card3_AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCard4_DescrNull() {
                return this.IsNull(this.tableDataTable1.Card4_DescrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCard4_DescrNull() {
                this[this.tableDataTable1.Card4_DescrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCard4_AmountNull() {
                return this.IsNull(this.tableDataTable1.Card4_AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCard4_AmountNull() {
                this[this.tableDataTable1.Card4_AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCard5_DescrNull() {
                return this.IsNull(this.tableDataTable1.Card5_DescrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCard5_DescrNull() {
                this[this.tableDataTable1.Card5_DescrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCard5_AmountNull() {
                return this.IsNull(this.tableDataTable1.Card5_AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCard5_AmountNull() {
                this[this.tableDataTable1.Card5_AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDept1_DescrNull() {
                return this.IsNull(this.tableDataTable1.Dept1_DescrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDept1_DescrNull() {
                this[this.tableDataTable1.Dept1_DescrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDept1_AmountNull() {
                return this.IsNull(this.tableDataTable1.Dept1_AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDept1_AmountNull() {
                this[this.tableDataTable1.Dept1_AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDept2_DescrNull() {
                return this.IsNull(this.tableDataTable1.Dept2_DescrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDept2_DescrNull() {
                this[this.tableDataTable1.Dept2_DescrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDept2_AmountNull() {
                return this.IsNull(this.tableDataTable1.Dept2_AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDept2_AmountNull() {
                this[this.tableDataTable1.Dept2_AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDept3_DescrNull() {
                return this.IsNull(this.tableDataTable1.Dept3_DescrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDept3_DescrNull() {
                this[this.tableDataTable1.Dept3_DescrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDept3_AmountNull() {
                return this.IsNull(this.tableDataTable1.Dept3_AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDept3_AmountNull() {
                this[this.tableDataTable1.Dept3_AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDept4_DescrNull() {
                return this.IsNull(this.tableDataTable1.Dept4_DescrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDept4_DescrNull() {
                this[this.tableDataTable1.Dept4_DescrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDept4_AmountNull() {
                return this.IsNull(this.tableDataTable1.Dept4_AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDept4_AmountNull() {
                this[this.tableDataTable1.Dept4_AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDept5_DescrNull() {
                return this.IsNull(this.tableDataTable1.Dept5_DescrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDept5_DescrNull() {
                this[this.tableDataTable1.Dept5_DescrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDept5_AmountNull() {
                return this.IsNull(this.tableDataTable1.Dept5_AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDept5_AmountNull() {
                this[this.tableDataTable1.Dept5_AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocaNull() {
                return this.IsNull(this.tableDataTable1.LocaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocaNull() {
                this[this.tableDataTable1.LocaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLoca_DescripNull() {
                return this.IsNull(this.tableDataTable1.Loca_DescripColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLoca_DescripNull() {
                this[this.tableDataTable1.Loca_DescripColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateFromNull() {
                return this.IsNull(this.tableDataTable1.DateFromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateFromNull() {
                this[this.tableDataTable1.DateFromColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateToNull() {
                return this.IsNull(this.tableDataTable1.DateToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateToNull() {
                this[this.tableDataTable1.DateToColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWholeSale_InvNull() {
                return this.IsNull(this.tableDataTable1.WholeSale_InvColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWholeSale_InvNull() {
                this[this.tableDataTable1.WholeSale_InvColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWholeSale_ReturnNull() {
                return this.IsNull(this.tableDataTable1.WholeSale_ReturnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWholeSale_ReturnNull() {
                this[this.tableDataTable1.WholeSale_ReturnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWholesale_PaymentNull() {
                return this.IsNull(this.tableDataTable1.Wholesale_PaymentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWholesale_PaymentNull() {
                this[this.tableDataTable1.Wholesale_PaymentColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tb_Customer_DetailRow : global::System.Data.DataRow {
            
            private tb_Customer_DetailDataTable tabletb_Customer_Detail;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tb_Customer_DetailRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletb_Customer_Detail = ((tb_Customer_DetailDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RefName {
                get {
                    return ((string)(this[this.tabletb_Customer_Detail.RefNameColumn]));
                }
                set {
                    this[this.tabletb_Customer_Detail.RefNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime RefBirthday {
                get {
                    return ((global::System.DateTime)(this[this.tabletb_Customer_Detail.RefBirthdayColumn]));
                }
                set {
                    this[this.tabletb_Customer_Detail.RefBirthdayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RefNIC {
                get {
                    return ((string)(this[this.tabletb_Customer_Detail.RefNICColumn]));
                }
                set {
                    this[this.tabletb_Customer_Detail.RefNICColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RefOccupation {
                get {
                    return ((string)(this[this.tabletb_Customer_Detail.RefOccupationColumn]));
                }
                set {
                    this[this.tabletb_Customer_Detail.RefOccupationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Class {
                get {
                    return ((string)(this[this.tabletb_Customer_Detail.ClassColumn]));
                }
                set {
                    this[this.tabletb_Customer_Detail.ClassColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dsCustomerSalesRow : global::System.Data.DataRow {
            
            private dsCustomerSalesDataTable tabledsCustomerSales;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsCustomerSalesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledsCustomerSales = ((dsCustomerSalesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Cust_Code {
                get {
                    return ((string)(this[this.tabledsCustomerSales.Cust_CodeColumn]));
                }
                set {
                    this[this.tabledsCustomerSales.Cust_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Cust_Name {
                get {
                    return ((string)(this[this.tabledsCustomerSales.Cust_NameColumn]));
                }
                set {
                    this[this.tabledsCustomerSales.Cust_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NIC {
                get {
                    try {
                        return ((string)(this[this.tabledsCustomerSales.NICColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NIC\' in table \'dsCustomerSales\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsCustomerSales.NICColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Amount {
                get {
                    try {
                        return ((decimal)(this[this.tabledsCustomerSales.AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Amount\' in table \'dsCustomerSales\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsCustomerSales.AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Receipt_No {
                get {
                    try {
                        return ((string)(this[this.tabledsCustomerSales.Receipt_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Receipt_No\' in table \'dsCustomerSales\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsCustomerSales.Receipt_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Unit {
                get {
                    try {
                        return ((string)(this[this.tabledsCustomerSales.UnitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Unit\' in table \'dsCustomerSales\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsCustomerSales.UnitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime BillDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabledsCustomerSales.BillDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BillDate\' in table \'dsCustomerSales\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsCustomerSales.BillDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Location {
                get {
                    try {
                        return ((string)(this[this.tabledsCustomerSales.LocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Location\' in table \'dsCustomerSales\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsCustomerSales.LocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CodeFrom {
                get {
                    try {
                        return ((string)(this[this.tabledsCustomerSales.CodeFromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CodeFrom\' in table \'dsCustomerSales\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsCustomerSales.CodeFromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CodeTo {
                get {
                    try {
                        return ((string)(this[this.tabledsCustomerSales.CodeToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CodeTo\' in table \'dsCustomerSales\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsCustomerSales.CodeToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Heder {
                get {
                    try {
                        return ((string)(this[this.tabledsCustomerSales.HederColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Heder\' in table \'dsCustomerSales\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsCustomerSales.HederColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNICNull() {
                return this.IsNull(this.tabledsCustomerSales.NICColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNICNull() {
                this[this.tabledsCustomerSales.NICColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountNull() {
                return this.IsNull(this.tabledsCustomerSales.AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountNull() {
                this[this.tabledsCustomerSales.AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReceipt_NoNull() {
                return this.IsNull(this.tabledsCustomerSales.Receipt_NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReceipt_NoNull() {
                this[this.tabledsCustomerSales.Receipt_NoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnitNull() {
                return this.IsNull(this.tabledsCustomerSales.UnitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnitNull() {
                this[this.tabledsCustomerSales.UnitColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBillDateNull() {
                return this.IsNull(this.tabledsCustomerSales.BillDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBillDateNull() {
                this[this.tabledsCustomerSales.BillDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocationNull() {
                return this.IsNull(this.tabledsCustomerSales.LocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocationNull() {
                this[this.tabledsCustomerSales.LocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCodeFromNull() {
                return this.IsNull(this.tabledsCustomerSales.CodeFromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCodeFromNull() {
                this[this.tabledsCustomerSales.CodeFromColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCodeToNull() {
                return this.IsNull(this.tabledsCustomerSales.CodeToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCodeToNull() {
                this[this.tabledsCustomerSales.CodeToColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHederNull() {
                return this.IsNull(this.tabledsCustomerSales.HederColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHederNull() {
                this[this.tabledsCustomerSales.HederColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dsPurchScheduleRow : global::System.Data.DataRow {
            
            private dsPurchScheduleDataTable tabledsPurchSchedule;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsPurchScheduleRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledsPurchSchedule = ((dsPurchScheduleDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Location {
                get {
                    try {
                        return ((string)(this[this.tabledsPurchSchedule.LocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Location\' in table \'dsPurchSchedule\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurchSchedule.LocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Supplier {
                get {
                    try {
                        return ((string)(this[this.tabledsPurchSchedule.SupplierColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Supplier\' in table \'dsPurchSchedule\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurchSchedule.SupplierColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ProdCode {
                get {
                    try {
                        return ((string)(this[this.tabledsPurchSchedule.ProdCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProdCode\' in table \'dsPurchSchedule\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurchSchedule.ProdCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ProdName {
                get {
                    try {
                        return ((string)(this[this.tabledsPurchSchedule.ProdNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProdName\' in table \'dsPurchSchedule\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurchSchedule.ProdNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime LastPurchDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabledsPurchSchedule.LastPurchDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastPurchDate\' in table \'dsPurchSchedule\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurchSchedule.LastPurchDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double LastPurchQty {
                get {
                    try {
                        return ((double)(this[this.tabledsPurchSchedule.LastPurchQtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastPurchQty\' in table \'dsPurchSchedule\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurchSchedule.LastPurchQtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime PrevPurchDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabledsPurchSchedule.PrevPurchDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PrevPurchDate\' in table \'dsPurchSchedule\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurchSchedule.PrevPurchDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double PrevPurchQty {
                get {
                    try {
                        return ((double)(this[this.tabledsPurchSchedule.PrevPurchQtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PrevPurchQty\' in table \'dsPurchSchedule\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurchSchedule.PrevPurchQtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double AvlStock {
                get {
                    try {
                        return ((double)(this[this.tabledsPurchSchedule.AvlStockColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AvlStock\' in table \'dsPurchSchedule\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurchSchedule.AvlStockColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double PhyQty {
                get {
                    try {
                        return ((double)(this[this.tabledsPurchSchedule.PhyQtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PhyQty\' in table \'dsPurchSchedule\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurchSchedule.PhyQtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double NewPurchQty {
                get {
                    try {
                        return ((double)(this[this.tabledsPurchSchedule.NewPurchQtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NewPurchQty\' in table \'dsPurchSchedule\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurchSchedule.NewPurchQtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocationNull() {
                return this.IsNull(this.tabledsPurchSchedule.LocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocationNull() {
                this[this.tabledsPurchSchedule.LocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupplierNull() {
                return this.IsNull(this.tabledsPurchSchedule.SupplierColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupplierNull() {
                this[this.tabledsPurchSchedule.SupplierColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProdCodeNull() {
                return this.IsNull(this.tabledsPurchSchedule.ProdCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProdCodeNull() {
                this[this.tabledsPurchSchedule.ProdCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProdNameNull() {
                return this.IsNull(this.tabledsPurchSchedule.ProdNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProdNameNull() {
                this[this.tabledsPurchSchedule.ProdNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLastPurchDateNull() {
                return this.IsNull(this.tabledsPurchSchedule.LastPurchDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLastPurchDateNull() {
                this[this.tabledsPurchSchedule.LastPurchDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLastPurchQtyNull() {
                return this.IsNull(this.tabledsPurchSchedule.LastPurchQtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLastPurchQtyNull() {
                this[this.tabledsPurchSchedule.LastPurchQtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPrevPurchDateNull() {
                return this.IsNull(this.tabledsPurchSchedule.PrevPurchDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPrevPurchDateNull() {
                this[this.tabledsPurchSchedule.PrevPurchDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPrevPurchQtyNull() {
                return this.IsNull(this.tabledsPurchSchedule.PrevPurchQtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPrevPurchQtyNull() {
                this[this.tabledsPurchSchedule.PrevPurchQtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAvlStockNull() {
                return this.IsNull(this.tabledsPurchSchedule.AvlStockColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAvlStockNull() {
                this[this.tabledsPurchSchedule.AvlStockColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPhyQtyNull() {
                return this.IsNull(this.tabledsPurchSchedule.PhyQtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPhyQtyNull() {
                this[this.tabledsPurchSchedule.PhyQtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNewPurchQtyNull() {
                return this.IsNull(this.tabledsPurchSchedule.NewPurchQtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNewPurchQtyNull() {
                this[this.tabledsPurchSchedule.NewPurchQtyColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CompanyProfileRow : global::System.Data.DataRow {
            
            private CompanyProfileDataTable tableCompanyProfile;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CompanyProfileRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCompanyProfile = ((CompanyProfileDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CompanyName {
                get {
                    try {
                        return ((string)(this[this.tableCompanyProfile.CompanyNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CompanyName\' in table \'CompanyProfile\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCompanyProfile.CompanyNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CompanyAddress {
                get {
                    try {
                        return ((string)(this[this.tableCompanyProfile.CompanyAddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CompanyAddress\' in table \'CompanyProfile\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCompanyProfile.CompanyAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CompanyTelephone {
                get {
                    try {
                        return ((string)(this[this.tableCompanyProfile.CompanyTelephoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CompanyTelephone\' in table \'CompanyProfile\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCompanyProfile.CompanyTelephoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CompanyEmail {
                get {
                    try {
                        return ((string)(this[this.tableCompanyProfile.CompanyEmailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CompanyEmail\' in table \'CompanyProfile\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCompanyProfile.CompanyEmailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompanyNameNull() {
                return this.IsNull(this.tableCompanyProfile.CompanyNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompanyNameNull() {
                this[this.tableCompanyProfile.CompanyNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompanyAddressNull() {
                return this.IsNull(this.tableCompanyProfile.CompanyAddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompanyAddressNull() {
                this[this.tableCompanyProfile.CompanyAddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompanyTelephoneNull() {
                return this.IsNull(this.tableCompanyProfile.CompanyTelephoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompanyTelephoneNull() {
                this[this.tableCompanyProfile.CompanyTelephoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompanyEmailNull() {
                return this.IsNull(this.tableCompanyProfile.CompanyEmailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompanyEmailNull() {
                this[this.tableCompanyProfile.CompanyEmailColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dsFreeIssuedProductRow : global::System.Data.DataRow {
            
            private dsFreeIssuedProductDataTable tabledsFreeIssuedProduct;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsFreeIssuedProductRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledsFreeIssuedProduct = ((dsFreeIssuedProductDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prod_Code {
                get {
                    try {
                        return ((string)(this[this.tabledsFreeIssuedProduct.Prod_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Prod_Code\' in table \'dsFreeIssuedProduct\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsFreeIssuedProduct.Prod_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prod_Name {
                get {
                    try {
                        return ((string)(this[this.tabledsFreeIssuedProduct.Prod_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Prod_Name\' in table \'dsFreeIssuedProduct\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsFreeIssuedProduct.Prod_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal FreeQty {
                get {
                    try {
                        return ((decimal)(this[this.tabledsFreeIssuedProduct.FreeQtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FreeQty\' in table \'dsFreeIssuedProduct\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsFreeIssuedProduct.FreeQtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Purchase_Price {
                get {
                    try {
                        return ((decimal)(this[this.tabledsFreeIssuedProduct.Purchase_PriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Purchase_Price\' in table \'dsFreeIssuedProduct\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsFreeIssuedProduct.Purchase_PriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Selling_Price {
                get {
                    try {
                        return ((decimal)(this[this.tabledsFreeIssuedProduct.Selling_PriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Selling_Price\' in table \'dsFreeIssuedProduct\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsFreeIssuedProduct.Selling_PriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Sales_Date {
                get {
                    try {
                        return ((string)(this[this.tabledsFreeIssuedProduct.Sales_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Sales_Date\' in table \'dsFreeIssuedProduct\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsFreeIssuedProduct.Sales_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DateFrom {
                get {
                    try {
                        return ((string)(this[this.tabledsFreeIssuedProduct.DateFromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateFrom\' in table \'dsFreeIssuedProduct\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsFreeIssuedProduct.DateFromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DateTo {
                get {
                    try {
                        return ((string)(this[this.tabledsFreeIssuedProduct.DateToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateTo\' in table \'dsFreeIssuedProduct\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsFreeIssuedProduct.DateToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_CodeNull() {
                return this.IsNull(this.tabledsFreeIssuedProduct.Prod_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_CodeNull() {
                this[this.tabledsFreeIssuedProduct.Prod_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_NameNull() {
                return this.IsNull(this.tabledsFreeIssuedProduct.Prod_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_NameNull() {
                this[this.tabledsFreeIssuedProduct.Prod_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFreeQtyNull() {
                return this.IsNull(this.tabledsFreeIssuedProduct.FreeQtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFreeQtyNull() {
                this[this.tabledsFreeIssuedProduct.FreeQtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPurchase_PriceNull() {
                return this.IsNull(this.tabledsFreeIssuedProduct.Purchase_PriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPurchase_PriceNull() {
                this[this.tabledsFreeIssuedProduct.Purchase_PriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelling_PriceNull() {
                return this.IsNull(this.tabledsFreeIssuedProduct.Selling_PriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelling_PriceNull() {
                this[this.tabledsFreeIssuedProduct.Selling_PriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSales_DateNull() {
                return this.IsNull(this.tabledsFreeIssuedProduct.Sales_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSales_DateNull() {
                this[this.tabledsFreeIssuedProduct.Sales_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateFromNull() {
                return this.IsNull(this.tabledsFreeIssuedProduct.DateFromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateFromNull() {
                this[this.tabledsFreeIssuedProduct.DateFromColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateToNull() {
                return this.IsNull(this.tabledsFreeIssuedProduct.DateToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateToNull() {
                this[this.tabledsFreeIssuedProduct.DateToColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dsLocaWiseTGNSummaryRow : global::System.Data.DataRow {
            
            private dsLocaWiseTGNSummaryDataTable tabledsLocaWiseTGNSummary;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsLocaWiseTGNSummaryRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledsLocaWiseTGNSummary = ((dsLocaWiseTGNSummaryDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string To_Loca {
                get {
                    try {
                        return ((string)(this[this.tabledsLocaWiseTGNSummary.To_LocaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'To_Loca\' in table \'dsLocaWiseTGNSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsLocaWiseTGNSummary.To_LocaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string To_LocaDesc {
                get {
                    try {
                        return ((string)(this[this.tabledsLocaWiseTGNSummary.To_LocaDescColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'To_LocaDesc\' in table \'dsLocaWiseTGNSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsLocaWiseTGNSummary.To_LocaDescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Doc_No {
                get {
                    try {
                        return ((string)(this[this.tabledsLocaWiseTGNSummary.Doc_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Doc_No\' in table \'dsLocaWiseTGNSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsLocaWiseTGNSummary.Doc_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Post_Date {
                get {
                    try {
                        return ((string)(this[this.tabledsLocaWiseTGNSummary.Post_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Post_Date\' in table \'dsLocaWiseTGNSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsLocaWiseTGNSummary.Post_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Amount {
                get {
                    try {
                        return ((decimal)(this[this.tabledsLocaWiseTGNSummary.AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Amount\' in table \'dsLocaWiseTGNSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsLocaWiseTGNSummary.AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CodeFrom {
                get {
                    try {
                        return ((string)(this[this.tabledsLocaWiseTGNSummary.CodeFromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CodeFrom\' in table \'dsLocaWiseTGNSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsLocaWiseTGNSummary.CodeFromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CodeTo {
                get {
                    try {
                        return ((string)(this[this.tabledsLocaWiseTGNSummary.CodeToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CodeTo\' in table \'dsLocaWiseTGNSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsLocaWiseTGNSummary.CodeToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DateFrom {
                get {
                    try {
                        return ((string)(this[this.tabledsLocaWiseTGNSummary.DateFromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateFrom\' in table \'dsLocaWiseTGNSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsLocaWiseTGNSummary.DateFromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DateTo {
                get {
                    try {
                        return ((string)(this[this.tabledsLocaWiseTGNSummary.DateToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateTo\' in table \'dsLocaWiseTGNSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsLocaWiseTGNSummary.DateToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTo_LocaNull() {
                return this.IsNull(this.tabledsLocaWiseTGNSummary.To_LocaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTo_LocaNull() {
                this[this.tabledsLocaWiseTGNSummary.To_LocaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTo_LocaDescNull() {
                return this.IsNull(this.tabledsLocaWiseTGNSummary.To_LocaDescColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTo_LocaDescNull() {
                this[this.tabledsLocaWiseTGNSummary.To_LocaDescColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDoc_NoNull() {
                return this.IsNull(this.tabledsLocaWiseTGNSummary.Doc_NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDoc_NoNull() {
                this[this.tabledsLocaWiseTGNSummary.Doc_NoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPost_DateNull() {
                return this.IsNull(this.tabledsLocaWiseTGNSummary.Post_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPost_DateNull() {
                this[this.tabledsLocaWiseTGNSummary.Post_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountNull() {
                return this.IsNull(this.tabledsLocaWiseTGNSummary.AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountNull() {
                this[this.tabledsLocaWiseTGNSummary.AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCodeFromNull() {
                return this.IsNull(this.tabledsLocaWiseTGNSummary.CodeFromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCodeFromNull() {
                this[this.tabledsLocaWiseTGNSummary.CodeFromColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCodeToNull() {
                return this.IsNull(this.tabledsLocaWiseTGNSummary.CodeToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCodeToNull() {
                this[this.tabledsLocaWiseTGNSummary.CodeToColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateFromNull() {
                return this.IsNull(this.tabledsLocaWiseTGNSummary.DateFromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateFromNull() {
                this[this.tabledsLocaWiseTGNSummary.DateFromColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateToNull() {
                return this.IsNull(this.tabledsLocaWiseTGNSummary.DateToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateToNull() {
                this[this.tabledsLocaWiseTGNSummary.DateToColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dsReturnChequeRow : global::System.Data.DataRow {
            
            private dsReturnChequeDataTable tabledsReturnCheque;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsReturnChequeRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledsReturnCheque = ((dsReturnChequeDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Cheque_No {
                get {
                    try {
                        return ((string)(this[this.tabledsReturnCheque.Cheque_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cheque_No\' in table \'dsReturnCheque\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsReturnCheque.Cheque_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Cheque_Date {
                get {
                    try {
                        return ((string)(this[this.tabledsReturnCheque.Cheque_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cheque_Date\' in table \'dsReturnCheque\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsReturnCheque.Cheque_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Bank {
                get {
                    try {
                        return ((string)(this[this.tabledsReturnCheque.BankColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Bank\' in table \'dsReturnCheque\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsReturnCheque.BankColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AccNo {
                get {
                    try {
                        return ((string)(this[this.tabledsReturnCheque.AccNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AccNo\' in table \'dsReturnCheque\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsReturnCheque.AccNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Amount {
                get {
                    try {
                        return ((decimal)(this[this.tabledsReturnCheque.AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Amount\' in table \'dsReturnCheque\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsReturnCheque.AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CodeFrom {
                get {
                    try {
                        return ((string)(this[this.tabledsReturnCheque.CodeFromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CodeFrom\' in table \'dsReturnCheque\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsReturnCheque.CodeFromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CodeTo {
                get {
                    try {
                        return ((string)(this[this.tabledsReturnCheque.CodeToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CodeTo\' in table \'dsReturnCheque\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsReturnCheque.CodeToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DateFrom {
                get {
                    try {
                        return ((string)(this[this.tabledsReturnCheque.DateFromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateFrom\' in table \'dsReturnCheque\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsReturnCheque.DateFromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DateTo {
                get {
                    try {
                        return ((string)(this[this.tabledsReturnCheque.DateToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateTo\' in table \'dsReturnCheque\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsReturnCheque.DateToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Doc_No {
                get {
                    try {
                        return ((string)(this[this.tabledsReturnCheque.Doc_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Doc_No\' in table \'dsReturnCheque\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsReturnCheque.Doc_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Post_Date {
                get {
                    try {
                        return ((string)(this[this.tabledsReturnCheque.Post_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Post_Date\' in table \'dsReturnCheque\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsReturnCheque.Post_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Branch {
                get {
                    try {
                        return ((string)(this[this.tabledsReturnCheque.BranchColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Branch\' in table \'dsReturnCheque\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsReturnCheque.BranchColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Supplier {
                get {
                    try {
                        return ((string)(this[this.tabledsReturnCheque.SupplierColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Supplier\' in table \'dsReturnCheque\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsReturnCheque.SupplierColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Customer {
                get {
                    try {
                        return ((string)(this[this.tabledsReturnCheque.CustomerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Customer\' in table \'dsReturnCheque\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsReturnCheque.CustomerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCheque_NoNull() {
                return this.IsNull(this.tabledsReturnCheque.Cheque_NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCheque_NoNull() {
                this[this.tabledsReturnCheque.Cheque_NoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCheque_DateNull() {
                return this.IsNull(this.tabledsReturnCheque.Cheque_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCheque_DateNull() {
                this[this.tabledsReturnCheque.Cheque_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBankNull() {
                return this.IsNull(this.tabledsReturnCheque.BankColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBankNull() {
                this[this.tabledsReturnCheque.BankColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAccNoNull() {
                return this.IsNull(this.tabledsReturnCheque.AccNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAccNoNull() {
                this[this.tabledsReturnCheque.AccNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountNull() {
                return this.IsNull(this.tabledsReturnCheque.AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountNull() {
                this[this.tabledsReturnCheque.AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCodeFromNull() {
                return this.IsNull(this.tabledsReturnCheque.CodeFromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCodeFromNull() {
                this[this.tabledsReturnCheque.CodeFromColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCodeToNull() {
                return this.IsNull(this.tabledsReturnCheque.CodeToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCodeToNull() {
                this[this.tabledsReturnCheque.CodeToColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateFromNull() {
                return this.IsNull(this.tabledsReturnCheque.DateFromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateFromNull() {
                this[this.tabledsReturnCheque.DateFromColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateToNull() {
                return this.IsNull(this.tabledsReturnCheque.DateToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateToNull() {
                this[this.tabledsReturnCheque.DateToColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDoc_NoNull() {
                return this.IsNull(this.tabledsReturnCheque.Doc_NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDoc_NoNull() {
                this[this.tabledsReturnCheque.Doc_NoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPost_DateNull() {
                return this.IsNull(this.tabledsReturnCheque.Post_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPost_DateNull() {
                this[this.tabledsReturnCheque.Post_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBranchNull() {
                return this.IsNull(this.tabledsReturnCheque.BranchColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBranchNull() {
                this[this.tabledsReturnCheque.BranchColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupplierNull() {
                return this.IsNull(this.tabledsReturnCheque.SupplierColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupplierNull() {
                this[this.tabledsReturnCheque.SupplierColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerNull() {
                return this.IsNull(this.tabledsReturnCheque.CustomerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerNull() {
                this[this.tabledsReturnCheque.CustomerColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dsProductDiscardRow : global::System.Data.DataRow {
            
            private dsProductDiscardDataTable tabledsProductDiscard;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsProductDiscardRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledsProductDiscard = ((dsProductDiscardDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Supplier {
                get {
                    try {
                        return ((string)(this[this.tabledsProductDiscard.SupplierColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Supplier\' in table \'dsProductDiscard\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProductDiscard.SupplierColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Doc_No {
                get {
                    try {
                        return ((string)(this[this.tabledsProductDiscard.Doc_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Doc_No\' in table \'dsProductDiscard\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProductDiscard.Doc_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Post_Date {
                get {
                    try {
                        return ((string)(this[this.tabledsProductDiscard.Post_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Post_Date\' in table \'dsProductDiscard\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProductDiscard.Post_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Loca {
                get {
                    try {
                        return ((string)(this[this.tabledsProductDiscard.LocaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Loca\' in table \'dsProductDiscard\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProductDiscard.LocaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Loca_Descrip {
                get {
                    try {
                        return ((string)(this[this.tabledsProductDiscard.Loca_DescripColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Loca_Descrip\' in table \'dsProductDiscard\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProductDiscard.Loca_DescripColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prod_Code {
                get {
                    try {
                        return ((string)(this[this.tabledsProductDiscard.Prod_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Prod_Code\' in table \'dsProductDiscard\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProductDiscard.Prod_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prod_Name {
                get {
                    try {
                        return ((string)(this[this.tabledsProductDiscard.Prod_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Prod_Name\' in table \'dsProductDiscard\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProductDiscard.Prod_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Purchase_Price {
                get {
                    try {
                        return ((decimal)(this[this.tabledsProductDiscard.Purchase_PriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Purchase_Price\' in table \'dsProductDiscard\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProductDiscard.Purchase_PriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Qty {
                get {
                    try {
                        return ((decimal)(this[this.tabledsProductDiscard.QtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Qty\' in table \'dsProductDiscard\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProductDiscard.QtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Amount {
                get {
                    try {
                        return ((decimal)(this[this.tabledsProductDiscard.AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Amount\' in table \'dsProductDiscard\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProductDiscard.AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Net_Amount {
                get {
                    try {
                        return ((decimal)(this[this.tabledsProductDiscard.Net_AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Net_Amount\' in table \'dsProductDiscard\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProductDiscard.Net_AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Remarks {
                get {
                    try {
                        return ((string)(this[this.tabledsProductDiscard.RemarksColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Remarks\' in table \'dsProductDiscard\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProductDiscard.RemarksColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Gross_Amount {
                get {
                    try {
                        return ((decimal)(this[this.tabledsProductDiscard.Gross_AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Gross_Amount\' in table \'dsProductDiscard\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProductDiscard.Gross_AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CodeFrom {
                get {
                    try {
                        return ((string)(this[this.tabledsProductDiscard.CodeFromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CodeFrom\' in table \'dsProductDiscard\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProductDiscard.CodeFromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CodeTo {
                get {
                    try {
                        return ((string)(this[this.tabledsProductDiscard.CodeToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CodeTo\' in table \'dsProductDiscard\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProductDiscard.CodeToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DateFrom {
                get {
                    try {
                        return ((string)(this[this.tabledsProductDiscard.DateFromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateFrom\' in table \'dsProductDiscard\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProductDiscard.DateFromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DateTo {
                get {
                    try {
                        return ((string)(this[this.tabledsProductDiscard.DateToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateTo\' in table \'dsProductDiscard\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProductDiscard.DateToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupplierNull() {
                return this.IsNull(this.tabledsProductDiscard.SupplierColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupplierNull() {
                this[this.tabledsProductDiscard.SupplierColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDoc_NoNull() {
                return this.IsNull(this.tabledsProductDiscard.Doc_NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDoc_NoNull() {
                this[this.tabledsProductDiscard.Doc_NoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPost_DateNull() {
                return this.IsNull(this.tabledsProductDiscard.Post_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPost_DateNull() {
                this[this.tabledsProductDiscard.Post_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocaNull() {
                return this.IsNull(this.tabledsProductDiscard.LocaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocaNull() {
                this[this.tabledsProductDiscard.LocaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLoca_DescripNull() {
                return this.IsNull(this.tabledsProductDiscard.Loca_DescripColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLoca_DescripNull() {
                this[this.tabledsProductDiscard.Loca_DescripColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_CodeNull() {
                return this.IsNull(this.tabledsProductDiscard.Prod_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_CodeNull() {
                this[this.tabledsProductDiscard.Prod_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_NameNull() {
                return this.IsNull(this.tabledsProductDiscard.Prod_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_NameNull() {
                this[this.tabledsProductDiscard.Prod_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPurchase_PriceNull() {
                return this.IsNull(this.tabledsProductDiscard.Purchase_PriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPurchase_PriceNull() {
                this[this.tabledsProductDiscard.Purchase_PriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQtyNull() {
                return this.IsNull(this.tabledsProductDiscard.QtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQtyNull() {
                this[this.tabledsProductDiscard.QtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountNull() {
                return this.IsNull(this.tabledsProductDiscard.AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountNull() {
                this[this.tabledsProductDiscard.AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNet_AmountNull() {
                return this.IsNull(this.tabledsProductDiscard.Net_AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNet_AmountNull() {
                this[this.tabledsProductDiscard.Net_AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRemarksNull() {
                return this.IsNull(this.tabledsProductDiscard.RemarksColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRemarksNull() {
                this[this.tabledsProductDiscard.RemarksColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGross_AmountNull() {
                return this.IsNull(this.tabledsProductDiscard.Gross_AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGross_AmountNull() {
                this[this.tabledsProductDiscard.Gross_AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCodeFromNull() {
                return this.IsNull(this.tabledsProductDiscard.CodeFromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCodeFromNull() {
                this[this.tabledsProductDiscard.CodeFromColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCodeToNull() {
                return this.IsNull(this.tabledsProductDiscard.CodeToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCodeToNull() {
                this[this.tabledsProductDiscard.CodeToColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateFromNull() {
                return this.IsNull(this.tabledsProductDiscard.DateFromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateFromNull() {
                this[this.tabledsProductDiscard.DateFromColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateToNull() {
                return this.IsNull(this.tabledsProductDiscard.DateToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateToNull() {
                this[this.tabledsProductDiscard.DateToColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dsChqReconnRow : global::System.Data.DataRow {
            
            private dsChqReconnDataTable tabledsChqReconn;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsChqReconnRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledsChqReconn = ((dsChqReconnDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Doc_No {
                get {
                    try {
                        return ((string)(this[this.tabledsChqReconn.Doc_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Doc_No\' in table \'dsChqReconn\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsChqReconn.Doc_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Inv_No {
                get {
                    try {
                        return ((string)(this[this.tabledsChqReconn.Inv_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Inv_No\' in table \'dsChqReconn\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsChqReconn.Inv_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Inv_Date {
                get {
                    try {
                        return ((string)(this[this.tabledsChqReconn.Inv_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Inv_Date\' in table \'dsChqReconn\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsChqReconn.Inv_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Amount {
                get {
                    try {
                        return ((decimal)(this[this.tabledsChqReconn.AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Amount\' in table \'dsChqReconn\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsChqReconn.AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Loca {
                get {
                    try {
                        return ((string)(this[this.tabledsChqReconn.LocaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Loca\' in table \'dsChqReconn\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsChqReconn.LocaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CodeFrom {
                get {
                    try {
                        return ((string)(this[this.tabledsChqReconn.CodeFromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CodeFrom\' in table \'dsChqReconn\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsChqReconn.CodeFromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CodeTo {
                get {
                    try {
                        return ((string)(this[this.tabledsChqReconn.CodeToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CodeTo\' in table \'dsChqReconn\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsChqReconn.CodeToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DateFrom {
                get {
                    try {
                        return ((string)(this[this.tabledsChqReconn.DateFromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateFrom\' in table \'dsChqReconn\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsChqReconn.DateFromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DateTo {
                get {
                    try {
                        return ((string)(this[this.tabledsChqReconn.DateToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateTo\' in table \'dsChqReconn\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsChqReconn.DateToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Customer {
                get {
                    try {
                        return ((string)(this[this.tabledsChqReconn.CustomerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Customer\' in table \'dsChqReconn\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsChqReconn.CustomerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Supplier {
                get {
                    try {
                        return ((string)(this[this.tabledsChqReconn.SupplierColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Supplier\' in table \'dsChqReconn\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsChqReconn.SupplierColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string To_LocaDesc {
                get {
                    try {
                        return ((string)(this[this.tabledsChqReconn.To_LocaDescColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'To_LocaDesc\' in table \'dsChqReconn\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsChqReconn.To_LocaDescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Code {
                get {
                    try {
                        return ((string)(this[this.tabledsChqReconn.CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Code\' in table \'dsChqReconn\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsChqReconn.CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDoc_NoNull() {
                return this.IsNull(this.tabledsChqReconn.Doc_NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDoc_NoNull() {
                this[this.tabledsChqReconn.Doc_NoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInv_NoNull() {
                return this.IsNull(this.tabledsChqReconn.Inv_NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInv_NoNull() {
                this[this.tabledsChqReconn.Inv_NoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInv_DateNull() {
                return this.IsNull(this.tabledsChqReconn.Inv_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInv_DateNull() {
                this[this.tabledsChqReconn.Inv_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountNull() {
                return this.IsNull(this.tabledsChqReconn.AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountNull() {
                this[this.tabledsChqReconn.AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocaNull() {
                return this.IsNull(this.tabledsChqReconn.LocaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocaNull() {
                this[this.tabledsChqReconn.LocaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCodeFromNull() {
                return this.IsNull(this.tabledsChqReconn.CodeFromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCodeFromNull() {
                this[this.tabledsChqReconn.CodeFromColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCodeToNull() {
                return this.IsNull(this.tabledsChqReconn.CodeToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCodeToNull() {
                this[this.tabledsChqReconn.CodeToColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateFromNull() {
                return this.IsNull(this.tabledsChqReconn.DateFromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateFromNull() {
                this[this.tabledsChqReconn.DateFromColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateToNull() {
                return this.IsNull(this.tabledsChqReconn.DateToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateToNull() {
                this[this.tabledsChqReconn.DateToColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerNull() {
                return this.IsNull(this.tabledsChqReconn.CustomerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerNull() {
                this[this.tabledsChqReconn.CustomerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupplierNull() {
                return this.IsNull(this.tabledsChqReconn.SupplierColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupplierNull() {
                this[this.tabledsChqReconn.SupplierColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTo_LocaDescNull() {
                return this.IsNull(this.tabledsChqReconn.To_LocaDescColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTo_LocaDescNull() {
                this[this.tabledsChqReconn.To_LocaDescColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCodeNull() {
                return this.IsNull(this.tabledsChqReconn.CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCodeNull() {
                this[this.tabledsChqReconn.CodeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dsLocaWiseDeptSaleRow : global::System.Data.DataRow {
            
            private dsLocaWiseDeptSaleDataTable tabledsLocaWiseDeptSale;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsLocaWiseDeptSaleRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledsLocaWiseDeptSale = ((dsLocaWiseDeptSaleDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prod_Code {
                get {
                    try {
                        return ((string)(this[this.tabledsLocaWiseDeptSale.Prod_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Prod_Code\' in table \'dsLocaWiseDeptSale\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsLocaWiseDeptSale.Prod_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prod_Name {
                get {
                    try {
                        return ((string)(this[this.tabledsLocaWiseDeptSale.Prod_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Prod_Name\' in table \'dsLocaWiseDeptSale\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsLocaWiseDeptSale.Prod_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Qty {
                get {
                    try {
                        return ((decimal)(this[this.tabledsLocaWiseDeptSale.QtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Qty\' in table \'dsLocaWiseDeptSale\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsLocaWiseDeptSale.QtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Amount {
                get {
                    try {
                        return ((decimal)(this[this.tabledsLocaWiseDeptSale.AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Amount\' in table \'dsLocaWiseDeptSale\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsLocaWiseDeptSale.AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Purchase_Price {
                get {
                    try {
                        return ((decimal)(this[this.tabledsLocaWiseDeptSale.Purchase_PriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Purchase_Price\' in table \'dsLocaWiseDeptSale\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsLocaWiseDeptSale.Purchase_PriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Selling_Price {
                get {
                    try {
                        return ((decimal)(this[this.tabledsLocaWiseDeptSale.Selling_PriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Selling_Price\' in table \'dsLocaWiseDeptSale\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsLocaWiseDeptSale.Selling_PriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Loca {
                get {
                    try {
                        return ((string)(this[this.tabledsLocaWiseDeptSale.LocaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Loca\' in table \'dsLocaWiseDeptSale\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsLocaWiseDeptSale.LocaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Sales_Date {
                get {
                    try {
                        return ((string)(this[this.tabledsLocaWiseDeptSale.Sales_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Sales_Date\' in table \'dsLocaWiseDeptSale\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsLocaWiseDeptSale.Sales_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CodeFrom {
                get {
                    try {
                        return ((string)(this[this.tabledsLocaWiseDeptSale.CodeFromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CodeFrom\' in table \'dsLocaWiseDeptSale\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsLocaWiseDeptSale.CodeFromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CodeTo {
                get {
                    try {
                        return ((string)(this[this.tabledsLocaWiseDeptSale.CodeToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CodeTo\' in table \'dsLocaWiseDeptSale\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsLocaWiseDeptSale.CodeToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DateFrom {
                get {
                    try {
                        return ((string)(this[this.tabledsLocaWiseDeptSale.DateFromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateFrom\' in table \'dsLocaWiseDeptSale\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsLocaWiseDeptSale.DateFromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DateTo {
                get {
                    try {
                        return ((string)(this[this.tabledsLocaWiseDeptSale.DateToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateTo\' in table \'dsLocaWiseDeptSale\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsLocaWiseDeptSale.DateToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Dept_Code {
                get {
                    try {
                        return ((string)(this[this.tabledsLocaWiseDeptSale.Dept_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Dept_Code\' in table \'dsLocaWiseDeptSale\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsLocaWiseDeptSale.Dept_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Cat_Code {
                get {
                    try {
                        return ((string)(this[this.tabledsLocaWiseDeptSale.Cat_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cat_Code\' in table \'dsLocaWiseDeptSale\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsLocaWiseDeptSale.Cat_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Supp_Code {
                get {
                    try {
                        return ((string)(this[this.tabledsLocaWiseDeptSale.Supp_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Supp_Code\' in table \'dsLocaWiseDeptSale\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsLocaWiseDeptSale.Supp_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Column1 {
                get {
                    try {
                        return ((string)(this[this.tabledsLocaWiseDeptSale.Column1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Column1\' in table \'dsLocaWiseDeptSale\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsLocaWiseDeptSale.Column1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_CodeNull() {
                return this.IsNull(this.tabledsLocaWiseDeptSale.Prod_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_CodeNull() {
                this[this.tabledsLocaWiseDeptSale.Prod_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_NameNull() {
                return this.IsNull(this.tabledsLocaWiseDeptSale.Prod_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_NameNull() {
                this[this.tabledsLocaWiseDeptSale.Prod_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQtyNull() {
                return this.IsNull(this.tabledsLocaWiseDeptSale.QtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQtyNull() {
                this[this.tabledsLocaWiseDeptSale.QtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountNull() {
                return this.IsNull(this.tabledsLocaWiseDeptSale.AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountNull() {
                this[this.tabledsLocaWiseDeptSale.AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPurchase_PriceNull() {
                return this.IsNull(this.tabledsLocaWiseDeptSale.Purchase_PriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPurchase_PriceNull() {
                this[this.tabledsLocaWiseDeptSale.Purchase_PriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelling_PriceNull() {
                return this.IsNull(this.tabledsLocaWiseDeptSale.Selling_PriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelling_PriceNull() {
                this[this.tabledsLocaWiseDeptSale.Selling_PriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocaNull() {
                return this.IsNull(this.tabledsLocaWiseDeptSale.LocaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocaNull() {
                this[this.tabledsLocaWiseDeptSale.LocaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSales_DateNull() {
                return this.IsNull(this.tabledsLocaWiseDeptSale.Sales_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSales_DateNull() {
                this[this.tabledsLocaWiseDeptSale.Sales_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCodeFromNull() {
                return this.IsNull(this.tabledsLocaWiseDeptSale.CodeFromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCodeFromNull() {
                this[this.tabledsLocaWiseDeptSale.CodeFromColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCodeToNull() {
                return this.IsNull(this.tabledsLocaWiseDeptSale.CodeToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCodeToNull() {
                this[this.tabledsLocaWiseDeptSale.CodeToColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateFromNull() {
                return this.IsNull(this.tabledsLocaWiseDeptSale.DateFromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateFromNull() {
                this[this.tabledsLocaWiseDeptSale.DateFromColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateToNull() {
                return this.IsNull(this.tabledsLocaWiseDeptSale.DateToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateToNull() {
                this[this.tabledsLocaWiseDeptSale.DateToColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDept_CodeNull() {
                return this.IsNull(this.tabledsLocaWiseDeptSale.Dept_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDept_CodeNull() {
                this[this.tabledsLocaWiseDeptSale.Dept_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCat_CodeNull() {
                return this.IsNull(this.tabledsLocaWiseDeptSale.Cat_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCat_CodeNull() {
                this[this.tabledsLocaWiseDeptSale.Cat_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupp_CodeNull() {
                return this.IsNull(this.tabledsLocaWiseDeptSale.Supp_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupp_CodeNull() {
                this[this.tabledsLocaWiseDeptSale.Supp_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsColumn1Null() {
                return this.IsNull(this.tabledsLocaWiseDeptSale.Column1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetColumn1Null() {
                this[this.tabledsLocaWiseDeptSale.Column1Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dsProdWiseSpecialDiscRow : global::System.Data.DataRow {
            
            private dsProdWiseSpecialDiscDataTable tabledsProdWiseSpecialDisc;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsProdWiseSpecialDiscRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledsProdWiseSpecialDisc = ((dsProdWiseSpecialDiscDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Item_Code {
                get {
                    try {
                        return ((string)(this[this.tabledsProdWiseSpecialDisc.Item_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Item_Code\' in table \'dsProdWiseSpecialDisc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProdWiseSpecialDisc.Item_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Item_Descrip {
                get {
                    try {
                        return ((string)(this[this.tabledsProdWiseSpecialDisc.Item_DescripColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Item_Descrip\' in table \'dsProdWiseSpecialDisc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProdWiseSpecialDisc.Item_DescripColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Qty {
                get {
                    try {
                        return ((decimal)(this[this.tabledsProdWiseSpecialDisc.QtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Qty\' in table \'dsProdWiseSpecialDisc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProdWiseSpecialDisc.QtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Marked_Price {
                get {
                    try {
                        return ((decimal)(this[this.tabledsProdWiseSpecialDisc.Marked_PriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Marked_Price\' in table \'dsProdWiseSpecialDisc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProdWiseSpecialDisc.Marked_PriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Unit_Price {
                get {
                    try {
                        return ((decimal)(this[this.tabledsProdWiseSpecialDisc.Unit_PriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Unit_Price\' in table \'dsProdWiseSpecialDisc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProdWiseSpecialDisc.Unit_PriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Discount {
                get {
                    try {
                        return ((decimal)(this[this.tabledsProdWiseSpecialDisc.DiscountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Discount\' in table \'dsProdWiseSpecialDisc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProdWiseSpecialDisc.DiscountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CodeFrom {
                get {
                    try {
                        return ((string)(this[this.tabledsProdWiseSpecialDisc.CodeFromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CodeFrom\' in table \'dsProdWiseSpecialDisc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProdWiseSpecialDisc.CodeFromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CodeTo {
                get {
                    try {
                        return ((string)(this[this.tabledsProdWiseSpecialDisc.CodeToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CodeTo\' in table \'dsProdWiseSpecialDisc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProdWiseSpecialDisc.CodeToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DateFrom {
                get {
                    try {
                        return ((string)(this[this.tabledsProdWiseSpecialDisc.DateFromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateFrom\' in table \'dsProdWiseSpecialDisc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProdWiseSpecialDisc.DateFromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DateTo {
                get {
                    try {
                        return ((string)(this[this.tabledsProdWiseSpecialDisc.DateToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateTo\' in table \'dsProdWiseSpecialDisc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProdWiseSpecialDisc.DateToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItem_CodeNull() {
                return this.IsNull(this.tabledsProdWiseSpecialDisc.Item_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItem_CodeNull() {
                this[this.tabledsProdWiseSpecialDisc.Item_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItem_DescripNull() {
                return this.IsNull(this.tabledsProdWiseSpecialDisc.Item_DescripColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItem_DescripNull() {
                this[this.tabledsProdWiseSpecialDisc.Item_DescripColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQtyNull() {
                return this.IsNull(this.tabledsProdWiseSpecialDisc.QtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQtyNull() {
                this[this.tabledsProdWiseSpecialDisc.QtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMarked_PriceNull() {
                return this.IsNull(this.tabledsProdWiseSpecialDisc.Marked_PriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMarked_PriceNull() {
                this[this.tabledsProdWiseSpecialDisc.Marked_PriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnit_PriceNull() {
                return this.IsNull(this.tabledsProdWiseSpecialDisc.Unit_PriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnit_PriceNull() {
                this[this.tabledsProdWiseSpecialDisc.Unit_PriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDiscountNull() {
                return this.IsNull(this.tabledsProdWiseSpecialDisc.DiscountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDiscountNull() {
                this[this.tabledsProdWiseSpecialDisc.DiscountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCodeFromNull() {
                return this.IsNull(this.tabledsProdWiseSpecialDisc.CodeFromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCodeFromNull() {
                this[this.tabledsProdWiseSpecialDisc.CodeFromColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCodeToNull() {
                return this.IsNull(this.tabledsProdWiseSpecialDisc.CodeToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCodeToNull() {
                this[this.tabledsProdWiseSpecialDisc.CodeToColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateFromNull() {
                return this.IsNull(this.tabledsProdWiseSpecialDisc.DateFromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateFromNull() {
                this[this.tabledsProdWiseSpecialDisc.DateFromColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateToNull() {
                return this.IsNull(this.tabledsProdWiseSpecialDisc.DateToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateToNull() {
                this[this.tabledsProdWiseSpecialDisc.DateToColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dsProdCombinationRow : global::System.Data.DataRow {
            
            private dsProdCombinationDataTable tabledsProdCombination;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsProdCombinationRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledsProdCombination = ((dsProdCombinationDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MainProdCode {
                get {
                    try {
                        return ((string)(this[this.tabledsProdCombination.MainProdCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MainProdCode\' in table \'dsProdCombination\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProdCombination.MainProdCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SubProd_Code {
                get {
                    try {
                        return ((string)(this[this.tabledsProdCombination.SubProd_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubProd_Code\' in table \'dsProdCombination\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProdCombination.SubProd_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Purchase_Price {
                get {
                    try {
                        return ((decimal)(this[this.tabledsProdCombination.Purchase_PriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Purchase_Price\' in table \'dsProdCombination\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProdCombination.Purchase_PriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Selling_Price {
                get {
                    try {
                        return ((decimal)(this[this.tabledsProdCombination.Selling_PriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Selling_Price\' in table \'dsProdCombination\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProdCombination.Selling_PriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Qty {
                get {
                    try {
                        return ((decimal)(this[this.tabledsProdCombination.QtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Qty\' in table \'dsProdCombination\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProdCombination.QtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MainProdName {
                get {
                    try {
                        return ((string)(this[this.tabledsProdCombination.MainProdNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MainProdName\' in table \'dsProdCombination\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProdCombination.MainProdNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SubProdName {
                get {
                    try {
                        return ((string)(this[this.tabledsProdCombination.SubProdNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubProdName\' in table \'dsProdCombination\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProdCombination.SubProdNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMainProdCodeNull() {
                return this.IsNull(this.tabledsProdCombination.MainProdCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMainProdCodeNull() {
                this[this.tabledsProdCombination.MainProdCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubProd_CodeNull() {
                return this.IsNull(this.tabledsProdCombination.SubProd_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubProd_CodeNull() {
                this[this.tabledsProdCombination.SubProd_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPurchase_PriceNull() {
                return this.IsNull(this.tabledsProdCombination.Purchase_PriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPurchase_PriceNull() {
                this[this.tabledsProdCombination.Purchase_PriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelling_PriceNull() {
                return this.IsNull(this.tabledsProdCombination.Selling_PriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelling_PriceNull() {
                this[this.tabledsProdCombination.Selling_PriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQtyNull() {
                return this.IsNull(this.tabledsProdCombination.QtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQtyNull() {
                this[this.tabledsProdCombination.QtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMainProdNameNull() {
                return this.IsNull(this.tabledsProdCombination.MainProdNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMainProdNameNull() {
                this[this.tabledsProdCombination.MainProdNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubProdNameNull() {
                return this.IsNull(this.tabledsProdCombination.SubProdNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubProdNameNull() {
                this[this.tabledsProdCombination.SubProdNameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dsPurchaseScheduleRow : global::System.Data.DataRow {
            
            private dsPurchaseScheduleDataTable tabledsPurchaseSchedule;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsPurchaseScheduleRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledsPurchaseSchedule = ((dsPurchaseScheduleDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prod_Code {
                get {
                    try {
                        return ((string)(this[this.tabledsPurchaseSchedule.Prod_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Prod_Code\' in table \'dsPurchaseSchedule\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurchaseSchedule.Prod_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prod_Name {
                get {
                    try {
                        return ((string)(this[this.tabledsPurchaseSchedule.Prod_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Prod_Name\' in table \'dsPurchaseSchedule\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurchaseSchedule.Prod_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Purchase_Price {
                get {
                    try {
                        return ((decimal)(this[this.tabledsPurchaseSchedule.Purchase_PriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Purchase_Price\' in table \'dsPurchaseSchedule\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurchaseSchedule.Purchase_PriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Selling_Price {
                get {
                    try {
                        return ((decimal)(this[this.tabledsPurchaseSchedule.Selling_PriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Selling_Price\' in table \'dsPurchaseSchedule\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurchaseSchedule.Selling_PriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Reorder_Qty {
                get {
                    try {
                        return ((decimal)(this[this.tabledsPurchaseSchedule.Reorder_QtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Reorder_Qty\' in table \'dsPurchaseSchedule\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurchaseSchedule.Reorder_QtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Sold_Qty {
                get {
                    try {
                        return ((decimal)(this[this.tabledsPurchaseSchedule.Sold_QtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Sold_Qty\' in table \'dsPurchaseSchedule\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurchaseSchedule.Sold_QtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Curr_Qty {
                get {
                    try {
                        return ((decimal)(this[this.tabledsPurchaseSchedule.Curr_QtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Curr_Qty\' in table \'dsPurchaseSchedule\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurchaseSchedule.Curr_QtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Order_Qty {
                get {
                    try {
                        return ((decimal)(this[this.tabledsPurchaseSchedule.Order_QtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Order_Qty\' in table \'dsPurchaseSchedule\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurchaseSchedule.Order_QtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CodeFrom {
                get {
                    try {
                        return ((string)(this[this.tabledsPurchaseSchedule.CodeFromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CodeFrom\' in table \'dsPurchaseSchedule\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurchaseSchedule.CodeFromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tabledsPurchaseSchedule.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'dsPurchaseSchedule\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurchaseSchedule.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DateFrom {
                get {
                    try {
                        return ((string)(this[this.tabledsPurchaseSchedule.DateFromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateFrom\' in table \'dsPurchaseSchedule\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurchaseSchedule.DateFromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DateTo {
                get {
                    try {
                        return ((string)(this[this.tabledsPurchaseSchedule.DateToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateTo\' in table \'dsPurchaseSchedule\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurchaseSchedule.DateToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_CodeNull() {
                return this.IsNull(this.tabledsPurchaseSchedule.Prod_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_CodeNull() {
                this[this.tabledsPurchaseSchedule.Prod_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_NameNull() {
                return this.IsNull(this.tabledsPurchaseSchedule.Prod_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_NameNull() {
                this[this.tabledsPurchaseSchedule.Prod_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPurchase_PriceNull() {
                return this.IsNull(this.tabledsPurchaseSchedule.Purchase_PriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPurchase_PriceNull() {
                this[this.tabledsPurchaseSchedule.Purchase_PriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelling_PriceNull() {
                return this.IsNull(this.tabledsPurchaseSchedule.Selling_PriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelling_PriceNull() {
                this[this.tabledsPurchaseSchedule.Selling_PriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReorder_QtyNull() {
                return this.IsNull(this.tabledsPurchaseSchedule.Reorder_QtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReorder_QtyNull() {
                this[this.tabledsPurchaseSchedule.Reorder_QtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSold_QtyNull() {
                return this.IsNull(this.tabledsPurchaseSchedule.Sold_QtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSold_QtyNull() {
                this[this.tabledsPurchaseSchedule.Sold_QtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCurr_QtyNull() {
                return this.IsNull(this.tabledsPurchaseSchedule.Curr_QtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCurr_QtyNull() {
                this[this.tabledsPurchaseSchedule.Curr_QtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOrder_QtyNull() {
                return this.IsNull(this.tabledsPurchaseSchedule.Order_QtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOrder_QtyNull() {
                this[this.tabledsPurchaseSchedule.Order_QtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCodeFromNull() {
                return this.IsNull(this.tabledsPurchaseSchedule.CodeFromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCodeFromNull() {
                this[this.tabledsPurchaseSchedule.CodeFromColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tabledsPurchaseSchedule.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionNull() {
                this[this.tabledsPurchaseSchedule.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateFromNull() {
                return this.IsNull(this.tabledsPurchaseSchedule.DateFromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateFromNull() {
                this[this.tabledsPurchaseSchedule.DateFromColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateToNull() {
                return this.IsNull(this.tabledsPurchaseSchedule.DateToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateToNull() {
                this[this.tabledsPurchaseSchedule.DateToColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dsLocaWiseProdOrderRow : global::System.Data.DataRow {
            
            private dsLocaWiseProdOrderDataTable tabledsLocaWiseProdOrder;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsLocaWiseProdOrderRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledsLocaWiseProdOrder = ((dsLocaWiseProdOrderDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prod_Code {
                get {
                    try {
                        return ((string)(this[this.tabledsLocaWiseProdOrder.Prod_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Prod_Code\' in table \'dsLocaWiseProdOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsLocaWiseProdOrder.Prod_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prod_Name {
                get {
                    try {
                        return ((string)(this[this.tabledsLocaWiseProdOrder.Prod_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Prod_Name\' in table \'dsLocaWiseProdOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsLocaWiseProdOrder.Prod_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Reorder_Qty {
                get {
                    try {
                        return ((decimal)(this[this.tabledsLocaWiseProdOrder.Reorder_QtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Reorder_Qty\' in table \'dsLocaWiseProdOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsLocaWiseProdOrder.Reorder_QtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Curr_Qty {
                get {
                    try {
                        return ((decimal)(this[this.tabledsLocaWiseProdOrder.Curr_QtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Curr_Qty\' in table \'dsLocaWiseProdOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsLocaWiseProdOrder.Curr_QtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Order_Qty {
                get {
                    try {
                        return ((decimal)(this[this.tabledsLocaWiseProdOrder.Order_QtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Order_Qty\' in table \'dsLocaWiseProdOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsLocaWiseProdOrder.Order_QtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DateFrom {
                get {
                    try {
                        return ((string)(this[this.tabledsLocaWiseProdOrder.DateFromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateFrom\' in table \'dsLocaWiseProdOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsLocaWiseProdOrder.DateFromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DateTo {
                get {
                    try {
                        return ((string)(this[this.tabledsLocaWiseProdOrder.DateToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateTo\' in table \'dsLocaWiseProdOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsLocaWiseProdOrder.DateToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SuppCode {
                get {
                    try {
                        return ((string)(this[this.tabledsLocaWiseProdOrder.SuppCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SuppCode\' in table \'dsLocaWiseProdOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsLocaWiseProdOrder.SuppCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SuppName {
                get {
                    try {
                        return ((string)(this[this.tabledsLocaWiseProdOrder.SuppNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SuppName\' in table \'dsLocaWiseProdOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsLocaWiseProdOrder.SuppNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Loca {
                get {
                    try {
                        return ((string)(this[this.tabledsLocaWiseProdOrder.LocaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Loca\' in table \'dsLocaWiseProdOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsLocaWiseProdOrder.LocaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_CodeNull() {
                return this.IsNull(this.tabledsLocaWiseProdOrder.Prod_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_CodeNull() {
                this[this.tabledsLocaWiseProdOrder.Prod_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_NameNull() {
                return this.IsNull(this.tabledsLocaWiseProdOrder.Prod_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_NameNull() {
                this[this.tabledsLocaWiseProdOrder.Prod_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReorder_QtyNull() {
                return this.IsNull(this.tabledsLocaWiseProdOrder.Reorder_QtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReorder_QtyNull() {
                this[this.tabledsLocaWiseProdOrder.Reorder_QtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCurr_QtyNull() {
                return this.IsNull(this.tabledsLocaWiseProdOrder.Curr_QtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCurr_QtyNull() {
                this[this.tabledsLocaWiseProdOrder.Curr_QtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOrder_QtyNull() {
                return this.IsNull(this.tabledsLocaWiseProdOrder.Order_QtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOrder_QtyNull() {
                this[this.tabledsLocaWiseProdOrder.Order_QtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateFromNull() {
                return this.IsNull(this.tabledsLocaWiseProdOrder.DateFromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateFromNull() {
                this[this.tabledsLocaWiseProdOrder.DateFromColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateToNull() {
                return this.IsNull(this.tabledsLocaWiseProdOrder.DateToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateToNull() {
                this[this.tabledsLocaWiseProdOrder.DateToColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSuppCodeNull() {
                return this.IsNull(this.tabledsLocaWiseProdOrder.SuppCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSuppCodeNull() {
                this[this.tabledsLocaWiseProdOrder.SuppCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSuppNameNull() {
                return this.IsNull(this.tabledsLocaWiseProdOrder.SuppNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSuppNameNull() {
                this[this.tabledsLocaWiseProdOrder.SuppNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocaNull() {
                return this.IsNull(this.tabledsLocaWiseProdOrder.LocaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocaNull() {
                this[this.tabledsLocaWiseProdOrder.LocaColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dsPurchaseRow : global::System.Data.DataRow {
            
            private dsPurchaseDataTable tabledsPurchase;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsPurchaseRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledsPurchase = ((dsPurchaseDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Post_Date {
                get {
                    return ((string)(this[this.tabledsPurchase.Post_DateColumn]));
                }
                set {
                    this[this.tabledsPurchase.Post_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Supp_Code {
                get {
                    return ((string)(this[this.tabledsPurchase.Supp_CodeColumn]));
                }
                set {
                    this[this.tabledsPurchase.Supp_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Supp_Name {
                get {
                    return ((string)(this[this.tabledsPurchase.Supp_NameColumn]));
                }
                set {
                    this[this.tabledsPurchase.Supp_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Bill_No {
                get {
                    return ((string)(this[this.tabledsPurchase.Bill_NoColumn]));
                }
                set {
                    this[this.tabledsPurchase.Bill_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Purr_Date {
                get {
                    return ((string)(this[this.tabledsPurchase.Purr_DateColumn]));
                }
                set {
                    this[this.tabledsPurchase.Purr_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Bill_Amount {
                get {
                    return ((decimal)(this[this.tabledsPurchase.Bill_AmountColumn]));
                }
                set {
                    this[this.tabledsPurchase.Bill_AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Memo {
                get {
                    return ((string)(this[this.tabledsPurchase.MemoColumn]));
                }
                set {
                    this[this.tabledsPurchase.MemoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Document_No {
                get {
                    return ((string)(this[this.tabledsPurchase.Document_NoColumn]));
                }
                set {
                    this[this.tabledsPurchase.Document_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DateFrom {
                get {
                    try {
                        return ((string)(this[this.tabledsPurchase.DateFromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateFrom\' in table \'dsPurchase\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurchase.DateFromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DateTo {
                get {
                    try {
                        return ((string)(this[this.tabledsPurchase.DateToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateTo\' in table \'dsPurchase\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurchase.DateToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CodeFrom {
                get {
                    try {
                        return ((string)(this[this.tabledsPurchase.CodeFromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CodeFrom\' in table \'dsPurchase\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurchase.CodeFromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CodeTo {
                get {
                    try {
                        return ((string)(this[this.tabledsPurchase.CodeToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CodeTo\' in table \'dsPurchase\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPurchase.CodeToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateFromNull() {
                return this.IsNull(this.tabledsPurchase.DateFromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateFromNull() {
                this[this.tabledsPurchase.DateFromColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateToNull() {
                return this.IsNull(this.tabledsPurchase.DateToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateToNull() {
                this[this.tabledsPurchase.DateToColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCodeFromNull() {
                return this.IsNull(this.tabledsPurchase.CodeFromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCodeFromNull() {
                this[this.tabledsPurchase.CodeFromColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCodeToNull() {
                return this.IsNull(this.tabledsPurchase.CodeToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCodeToNull() {
                this[this.tabledsPurchase.CodeToColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dsProductSumDetailsRow : global::System.Data.DataRow {
            
            private dsProductSumDetailsDataTable tabledsProductSumDetails;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsProductSumDetailsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledsProductSumDetails = ((dsProductSumDetailsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prod_Code {
                get {
                    try {
                        return ((string)(this[this.tabledsProductSumDetails.Prod_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Prod_Code\' in table \'dsProductSumDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProductSumDetails.Prod_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prod_Name {
                get {
                    try {
                        return ((string)(this[this.tabledsProductSumDetails.Prod_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Prod_Name\' in table \'dsProductSumDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProductSumDetails.Prod_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Selling_Price {
                get {
                    try {
                        return ((decimal)(this[this.tabledsProductSumDetails.Selling_PriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Selling_Price\' in table \'dsProductSumDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProductSumDetails.Selling_PriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Qty {
                get {
                    try {
                        return ((decimal)(this[this.tabledsProductSumDetails.QtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Qty\' in table \'dsProductSumDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProductSumDetails.QtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Amount {
                get {
                    try {
                        return ((decimal)(this[this.tabledsProductSumDetails.AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Amount\' in table \'dsProductSumDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProductSumDetails.AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CodeFrom {
                get {
                    try {
                        return ((string)(this[this.tabledsProductSumDetails.CodeFromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CodeFrom\' in table \'dsProductSumDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProductSumDetails.CodeFromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CodeTo {
                get {
                    try {
                        return ((string)(this[this.tabledsProductSumDetails.CodeToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CodeTo\' in table \'dsProductSumDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProductSumDetails.CodeToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DateFrom {
                get {
                    try {
                        return ((string)(this[this.tabledsProductSumDetails.DateFromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateFrom\' in table \'dsProductSumDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProductSumDetails.DateFromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DateTo {
                get {
                    try {
                        return ((string)(this[this.tabledsProductSumDetails.DateToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateTo\' in table \'dsProductSumDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsProductSumDetails.DateToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_CodeNull() {
                return this.IsNull(this.tabledsProductSumDetails.Prod_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_CodeNull() {
                this[this.tabledsProductSumDetails.Prod_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_NameNull() {
                return this.IsNull(this.tabledsProductSumDetails.Prod_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_NameNull() {
                this[this.tabledsProductSumDetails.Prod_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelling_PriceNull() {
                return this.IsNull(this.tabledsProductSumDetails.Selling_PriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelling_PriceNull() {
                this[this.tabledsProductSumDetails.Selling_PriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQtyNull() {
                return this.IsNull(this.tabledsProductSumDetails.QtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQtyNull() {
                this[this.tabledsProductSumDetails.QtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountNull() {
                return this.IsNull(this.tabledsProductSumDetails.AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountNull() {
                this[this.tabledsProductSumDetails.AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCodeFromNull() {
                return this.IsNull(this.tabledsProductSumDetails.CodeFromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCodeFromNull() {
                this[this.tabledsProductSumDetails.CodeFromColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCodeToNull() {
                return this.IsNull(this.tabledsProductSumDetails.CodeToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCodeToNull() {
                this[this.tabledsProductSumDetails.CodeToColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateFromNull() {
                return this.IsNull(this.tabledsProductSumDetails.DateFromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateFromNull() {
                this[this.tabledsProductSumDetails.DateFromColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateToNull() {
                return this.IsNull(this.tabledsProductSumDetails.DateToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateToNull() {
                this[this.tabledsProductSumDetails.DateToColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dsDailySalesSummaryDetailWiseRow : global::System.Data.DataRow {
            
            private dsDailySalesSummaryDetailWiseDataTable tabledsDailySalesSummaryDetailWise;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsDailySalesSummaryDetailWiseRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledsDailySalesSummaryDetailWise = ((dsDailySalesSummaryDetailWiseDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Loca {
                get {
                    try {
                        return ((string)(this[this.tabledsDailySalesSummaryDetailWise.LocaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Loca\' in table \'dsDailySalesSummaryDetailWise\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsDailySalesSummaryDetailWise.LocaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DateFrom {
                get {
                    try {
                        return ((string)(this[this.tabledsDailySalesSummaryDetailWise.DateFromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateFrom\' in table \'dsDailySalesSummaryDetailWise\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tabledsDailySalesSummaryDetailWise.DateFromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DateTo {
                get {
                    try {
                        return ((string)(this[this.tabledsDailySalesSummaryDetailWise.DateToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateTo\' in table \'dsDailySalesSummaryDetailWise\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tabledsDailySalesSummaryDetailWise.DateToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TotSale {
                get {
                    try {
                        return ((decimal)(this[this.tabledsDailySalesSummaryDetailWise.TotSaleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotSale\' in table \'dsDailySalesSummaryDetailWise\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tabledsDailySalesSummaryDetailWise.TotSaleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TotDiscount {
                get {
                    try {
                        return ((decimal)(this[this.tabledsDailySalesSummaryDetailWise.TotDiscountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotDiscount\' in table \'dsDailySalesSummaryDetailWise\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tabledsDailySalesSummaryDetailWise.TotDiscountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal DiscountCredit {
                get {
                    try {
                        return ((decimal)(this[this.tabledsDailySalesSummaryDetailWise.DiscountCreditColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DiscountCredit\' in table \'dsDailySalesSummaryDetailWise\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsDailySalesSummaryDetailWise.DiscountCreditColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal DiscountCash {
                get {
                    try {
                        return ((decimal)(this[this.tabledsDailySalesSummaryDetailWise.DiscountCashColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DiscountCash\' in table \'dsDailySalesSummaryDetailWise\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tabledsDailySalesSummaryDetailWise.DiscountCashColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CustReturn {
                get {
                    try {
                        return ((decimal)(this[this.tabledsDailySalesSummaryDetailWise.CustReturnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustReturn\' in table \'dsDailySalesSummaryDetailWise\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tabledsDailySalesSummaryDetailWise.CustReturnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CreditSale {
                get {
                    try {
                        return ((decimal)(this[this.tabledsDailySalesSummaryDetailWise.CreditSaleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreditSale\' in table \'dsDailySalesSummaryDetailWise\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tabledsDailySalesSummaryDetailWise.CreditSaleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CashSale {
                get {
                    try {
                        return ((decimal)(this[this.tabledsDailySalesSummaryDetailWise.CashSaleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CashSale\' in table \'dsDailySalesSummaryDetailWise\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tabledsDailySalesSummaryDetailWise.CashSaleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Reciept {
                get {
                    try {
                        return ((decimal)(this[this.tabledsDailySalesSummaryDetailWise.RecieptColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Reciept\' in table \'dsDailySalesSummaryDetailWise\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tabledsDailySalesSummaryDetailWise.RecieptColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CashRefund {
                get {
                    try {
                        return ((decimal)(this[this.tabledsDailySalesSummaryDetailWise.CashRefundColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CashRefund\' in table \'dsDailySalesSummaryDetailWise\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tabledsDailySalesSummaryDetailWise.CashRefundColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal RecieptCheque {
                get {
                    try {
                        return ((decimal)(this[this.tabledsDailySalesSummaryDetailWise.RecieptChequeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RecieptCheque\' in table \'dsDailySalesSummaryDetailWise\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsDailySalesSummaryDetailWise.RecieptChequeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Expense {
                get {
                    try {
                        return ((decimal)(this[this.tabledsDailySalesSummaryDetailWise.ExpenseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Expense\' in table \'dsDailySalesSummaryDetailWise\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tabledsDailySalesSummaryDetailWise.ExpenseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal GiftSale {
                get {
                    try {
                        return ((decimal)(this[this.tabledsDailySalesSummaryDetailWise.GiftSaleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GiftSale\' in table \'dsDailySalesSummaryDetailWise\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tabledsDailySalesSummaryDetailWise.GiftSaleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TopUpSale {
                get {
                    try {
                        return ((decimal)(this[this.tabledsDailySalesSummaryDetailWise.TopUpSaleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TopUpSale\' in table \'dsDailySalesSummaryDetailWise\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tabledsDailySalesSummaryDetailWise.TopUpSaleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Advance {
                get {
                    try {
                        return ((decimal)(this[this.tabledsDailySalesSummaryDetailWise.AdvanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Advance\' in table \'dsDailySalesSummaryDetailWise\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tabledsDailySalesSummaryDetailWise.AdvanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal AdvanceRedeem {
                get {
                    try {
                        return ((decimal)(this[this.tabledsDailySalesSummaryDetailWise.AdvanceRedeemColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AdvanceRedeem\' in table \'dsDailySalesSummaryDetailWise\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsDailySalesSummaryDetailWise.AdvanceRedeemColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CreditReceipt {
                get {
                    try {
                        return ((decimal)(this[this.tabledsDailySalesSummaryDetailWise.CreditReceiptColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreditReceipt\' in table \'dsDailySalesSummaryDetailWise\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsDailySalesSummaryDetailWise.CreditReceiptColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ReceiptRedeem {
                get {
                    try {
                        return ((decimal)(this[this.tabledsDailySalesSummaryDetailWise.ReceiptRedeemColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReceiptRedeem\' in table \'dsDailySalesSummaryDetailWise\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsDailySalesSummaryDetailWise.ReceiptRedeemColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CDNM {
                get {
                    try {
                        return ((decimal)(this[this.tabledsDailySalesSummaryDetailWise.CDNMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CDNM\' in table \'dsDailySalesSummaryDetailWise\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsDailySalesSummaryDetailWise.CDNMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ROA {
                get {
                    try {
                        return ((decimal)(this[this.tabledsDailySalesSummaryDetailWise.ROAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ROA\' in table \'dsDailySalesSummaryDetailWise\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsDailySalesSummaryDetailWise.ROAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocaNull() {
                return this.IsNull(this.tabledsDailySalesSummaryDetailWise.LocaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocaNull() {
                this[this.tabledsDailySalesSummaryDetailWise.LocaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateFromNull() {
                return this.IsNull(this.tabledsDailySalesSummaryDetailWise.DateFromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateFromNull() {
                this[this.tabledsDailySalesSummaryDetailWise.DateFromColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateToNull() {
                return this.IsNull(this.tabledsDailySalesSummaryDetailWise.DateToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateToNull() {
                this[this.tabledsDailySalesSummaryDetailWise.DateToColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotSaleNull() {
                return this.IsNull(this.tabledsDailySalesSummaryDetailWise.TotSaleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotSaleNull() {
                this[this.tabledsDailySalesSummaryDetailWise.TotSaleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotDiscountNull() {
                return this.IsNull(this.tabledsDailySalesSummaryDetailWise.TotDiscountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotDiscountNull() {
                this[this.tabledsDailySalesSummaryDetailWise.TotDiscountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDiscountCreditNull() {
                return this.IsNull(this.tabledsDailySalesSummaryDetailWise.DiscountCreditColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDiscountCreditNull() {
                this[this.tabledsDailySalesSummaryDetailWise.DiscountCreditColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDiscountCashNull() {
                return this.IsNull(this.tabledsDailySalesSummaryDetailWise.DiscountCashColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDiscountCashNull() {
                this[this.tabledsDailySalesSummaryDetailWise.DiscountCashColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustReturnNull() {
                return this.IsNull(this.tabledsDailySalesSummaryDetailWise.CustReturnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustReturnNull() {
                this[this.tabledsDailySalesSummaryDetailWise.CustReturnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreditSaleNull() {
                return this.IsNull(this.tabledsDailySalesSummaryDetailWise.CreditSaleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreditSaleNull() {
                this[this.tabledsDailySalesSummaryDetailWise.CreditSaleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCashSaleNull() {
                return this.IsNull(this.tabledsDailySalesSummaryDetailWise.CashSaleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCashSaleNull() {
                this[this.tabledsDailySalesSummaryDetailWise.CashSaleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRecieptNull() {
                return this.IsNull(this.tabledsDailySalesSummaryDetailWise.RecieptColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRecieptNull() {
                this[this.tabledsDailySalesSummaryDetailWise.RecieptColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCashRefundNull() {
                return this.IsNull(this.tabledsDailySalesSummaryDetailWise.CashRefundColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCashRefundNull() {
                this[this.tabledsDailySalesSummaryDetailWise.CashRefundColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRecieptChequeNull() {
                return this.IsNull(this.tabledsDailySalesSummaryDetailWise.RecieptChequeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRecieptChequeNull() {
                this[this.tabledsDailySalesSummaryDetailWise.RecieptChequeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExpenseNull() {
                return this.IsNull(this.tabledsDailySalesSummaryDetailWise.ExpenseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExpenseNull() {
                this[this.tabledsDailySalesSummaryDetailWise.ExpenseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGiftSaleNull() {
                return this.IsNull(this.tabledsDailySalesSummaryDetailWise.GiftSaleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGiftSaleNull() {
                this[this.tabledsDailySalesSummaryDetailWise.GiftSaleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTopUpSaleNull() {
                return this.IsNull(this.tabledsDailySalesSummaryDetailWise.TopUpSaleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTopUpSaleNull() {
                this[this.tabledsDailySalesSummaryDetailWise.TopUpSaleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAdvanceNull() {
                return this.IsNull(this.tabledsDailySalesSummaryDetailWise.AdvanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAdvanceNull() {
                this[this.tabledsDailySalesSummaryDetailWise.AdvanceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAdvanceRedeemNull() {
                return this.IsNull(this.tabledsDailySalesSummaryDetailWise.AdvanceRedeemColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAdvanceRedeemNull() {
                this[this.tabledsDailySalesSummaryDetailWise.AdvanceRedeemColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreditReceiptNull() {
                return this.IsNull(this.tabledsDailySalesSummaryDetailWise.CreditReceiptColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreditReceiptNull() {
                this[this.tabledsDailySalesSummaryDetailWise.CreditReceiptColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReceiptRedeemNull() {
                return this.IsNull(this.tabledsDailySalesSummaryDetailWise.ReceiptRedeemColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReceiptRedeemNull() {
                this[this.tabledsDailySalesSummaryDetailWise.ReceiptRedeemColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCDNMNull() {
                return this.IsNull(this.tabledsDailySalesSummaryDetailWise.CDNMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCDNMNull() {
                this[this.tabledsDailySalesSummaryDetailWise.CDNMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsROANull() {
                return this.IsNull(this.tabledsDailySalesSummaryDetailWise.ROAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetROANull() {
                this[this.tabledsDailySalesSummaryDetailWise.ROAColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dsCompanyLogoRow : global::System.Data.DataRow {
            
            private dsCompanyLogoDataTable tabledsCompanyLogo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsCompanyLogoRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledsCompanyLogo = ((dsCompanyLogoDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] Logo {
                get {
                    try {
                        return ((byte[])(this[this.tabledsCompanyLogo.LogoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Logo\' in table \'dsCompanyLogo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsCompanyLogo.LogoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Tele {
                get {
                    try {
                        return ((string)(this[this.tabledsCompanyLogo.TeleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Tele\' in table \'dsCompanyLogo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsCompanyLogo.TeleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLogoNull() {
                return this.IsNull(this.tabledsCompanyLogo.LogoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLogoNull() {
                this[this.tabledsCompanyLogo.LogoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTeleNull() {
                return this.IsNull(this.tabledsCompanyLogo.TeleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTeleNull() {
                this[this.tabledsCompanyLogo.TeleColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dsCashINOUTRow : global::System.Data.DataRow {
            
            private dsCashINOUTDataTable tabledsCashINOUT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsCashINOUTRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledsCashINOUT = ((dsCashINOUTDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Doc_No {
                get {
                    try {
                        return ((string)(this[this.tabledsCashINOUT.Doc_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Doc_No\' in table \'dsCashINOUT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsCashINOUT.Doc_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PostDate {
                get {
                    try {
                        return ((string)(this[this.tabledsCashINOUT.PostDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PostDate\' in table \'dsCashINOUT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsCashINOUT.PostDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Cash_IN {
                get {
                    try {
                        return ((decimal)(this[this.tabledsCashINOUT.Cash_INColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cash_IN\' in table \'dsCashINOUT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsCashINOUT.Cash_INColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Cash_OUT {
                get {
                    try {
                        return ((decimal)(this[this.tabledsCashINOUT.Cash_OUTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cash_OUT\' in table \'dsCashINOUT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsCashINOUT.Cash_OUTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Reason {
                get {
                    try {
                        return ((string)(this[this.tabledsCashINOUT.ReasonColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Reason\' in table \'dsCashINOUT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsCashINOUT.ReasonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DateFrom {
                get {
                    try {
                        return ((string)(this[this.tabledsCashINOUT.DateFromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateFrom\' in table \'dsCashINOUT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsCashINOUT.DateFromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DateTo {
                get {
                    try {
                        return ((string)(this[this.tabledsCashINOUT.DateToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateTo\' in table \'dsCashINOUT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsCashINOUT.DateToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Grp {
                get {
                    try {
                        return ((string)(this[this.tabledsCashINOUT.GrpColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Grp\' in table \'dsCashINOUT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsCashINOUT.GrpColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Amount {
                get {
                    try {
                        return ((string)(this[this.tabledsCashINOUT.AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Amount\' in table \'dsCashINOUT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsCashINOUT.AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CodeFrom {
                get {
                    try {
                        return ((string)(this[this.tabledsCashINOUT.CodeFromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CodeFrom\' in table \'dsCashINOUT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsCashINOUT.CodeFromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CodeTo {
                get {
                    try {
                        return ((string)(this[this.tabledsCashINOUT.CodeToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CodeTo\' in table \'dsCashINOUT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsCashINOUT.CodeToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDoc_NoNull() {
                return this.IsNull(this.tabledsCashINOUT.Doc_NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDoc_NoNull() {
                this[this.tabledsCashINOUT.Doc_NoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPostDateNull() {
                return this.IsNull(this.tabledsCashINOUT.PostDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPostDateNull() {
                this[this.tabledsCashINOUT.PostDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCash_INNull() {
                return this.IsNull(this.tabledsCashINOUT.Cash_INColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCash_INNull() {
                this[this.tabledsCashINOUT.Cash_INColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCash_OUTNull() {
                return this.IsNull(this.tabledsCashINOUT.Cash_OUTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCash_OUTNull() {
                this[this.tabledsCashINOUT.Cash_OUTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReasonNull() {
                return this.IsNull(this.tabledsCashINOUT.ReasonColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReasonNull() {
                this[this.tabledsCashINOUT.ReasonColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateFromNull() {
                return this.IsNull(this.tabledsCashINOUT.DateFromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateFromNull() {
                this[this.tabledsCashINOUT.DateFromColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateToNull() {
                return this.IsNull(this.tabledsCashINOUT.DateToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateToNull() {
                this[this.tabledsCashINOUT.DateToColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGrpNull() {
                return this.IsNull(this.tabledsCashINOUT.GrpColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGrpNull() {
                this[this.tabledsCashINOUT.GrpColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountNull() {
                return this.IsNull(this.tabledsCashINOUT.AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountNull() {
                this[this.tabledsCashINOUT.AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCodeFromNull() {
                return this.IsNull(this.tabledsCashINOUT.CodeFromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCodeFromNull() {
                this[this.tabledsCashINOUT.CodeFromColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCodeToNull() {
                return this.IsNull(this.tabledsCashINOUT.CodeToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCodeToNull() {
                this[this.tabledsCashINOUT.CodeToColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dsDailyCollectionSummaryRow : global::System.Data.DataRow {
            
            private dsDailyCollectionSummaryDataTable tabledsDailyCollectionSummary;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsDailyCollectionSummaryRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledsDailyCollectionSummary = ((dsDailyCollectionSummaryDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DateFrom {
                get {
                    try {
                        return ((string)(this[this.tabledsDailyCollectionSummary.DateFromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateFrom\' in table \'dsDailyCollectionSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsDailyCollectionSummary.DateFromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Loca {
                get {
                    try {
                        return ((string)(this[this.tabledsDailyCollectionSummary.LocaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Loca\' in table \'dsDailyCollectionSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsDailyCollectionSummary.LocaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Loca_Descrip {
                get {
                    try {
                        return ((string)(this[this.tabledsDailyCollectionSummary.Loca_DescripColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Loca_Descrip\' in table \'dsDailyCollectionSummary\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tabledsDailyCollectionSummary.Loca_DescripColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DateTo {
                get {
                    try {
                        return ((string)(this[this.tabledsDailyCollectionSummary.DateToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateTo\' in table \'dsDailyCollectionSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsDailyCollectionSummary.DateToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Post_Date {
                get {
                    try {
                        return ((string)(this[this.tabledsDailyCollectionSummary.Post_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Post_Date\' in table \'dsDailyCollectionSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsDailyCollectionSummary.Post_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Amount {
                get {
                    try {
                        return ((decimal)(this[this.tabledsDailyCollectionSummary.AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Amount\' in table \'dsDailyCollectionSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsDailyCollectionSummary.AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DESCRIPTION {
                get {
                    try {
                        return ((string)(this[this.tabledsDailyCollectionSummary.DESCRIPTIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DESCRIPTION\' in table \'dsDailyCollectionSummary\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tabledsDailyCollectionSummary.DESCRIPTIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal INV_CREDIT {
                get {
                    try {
                        return ((decimal)(this[this.tabledsDailyCollectionSummary.INV_CREDITColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'INV_CREDIT\' in table \'dsDailyCollectionSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsDailyCollectionSummary.INV_CREDITColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal INV_CASH {
                get {
                    try {
                        return ((decimal)(this[this.tabledsDailyCollectionSummary.INV_CASHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'INV_CASH\' in table \'dsDailyCollectionSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsDailyCollectionSummary.INV_CASHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PAY_CASH {
                get {
                    try {
                        return ((decimal)(this[this.tabledsDailyCollectionSummary.PAY_CASHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PAY_CASH\' in table \'dsDailyCollectionSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsDailyCollectionSummary.PAY_CASHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PAY_CHEQUE {
                get {
                    try {
                        return ((decimal)(this[this.tabledsDailyCollectionSummary.PAY_CHEQUEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PAY_CHEQUE\' in table \'dsDailyCollectionSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsDailyCollectionSummary.PAY_CHEQUEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CASH_IN {
                get {
                    try {
                        return ((decimal)(this[this.tabledsDailyCollectionSummary.CASH_INColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CASH_IN\' in table \'dsDailyCollectionSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsDailyCollectionSummary.CASH_INColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CASH_OUT {
                get {
                    try {
                        return ((decimal)(this[this.tabledsDailyCollectionSummary.CASH_OUTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CASH_OUT\' in table \'dsDailyCollectionSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsDailyCollectionSummary.CASH_OUTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal EXPENSE {
                get {
                    try {
                        return ((decimal)(this[this.tabledsDailyCollectionSummary.EXPENSEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EXPENSE\' in table \'dsDailyCollectionSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsDailyCollectionSummary.EXPENSEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateFromNull() {
                return this.IsNull(this.tabledsDailyCollectionSummary.DateFromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateFromNull() {
                this[this.tabledsDailyCollectionSummary.DateFromColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocaNull() {
                return this.IsNull(this.tabledsDailyCollectionSummary.LocaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocaNull() {
                this[this.tabledsDailyCollectionSummary.LocaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLoca_DescripNull() {
                return this.IsNull(this.tabledsDailyCollectionSummary.Loca_DescripColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLoca_DescripNull() {
                this[this.tabledsDailyCollectionSummary.Loca_DescripColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateToNull() {
                return this.IsNull(this.tabledsDailyCollectionSummary.DateToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateToNull() {
                this[this.tabledsDailyCollectionSummary.DateToColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPost_DateNull() {
                return this.IsNull(this.tabledsDailyCollectionSummary.Post_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPost_DateNull() {
                this[this.tabledsDailyCollectionSummary.Post_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountNull() {
                return this.IsNull(this.tabledsDailyCollectionSummary.AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountNull() {
                this[this.tabledsDailyCollectionSummary.AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDESCRIPTIONNull() {
                return this.IsNull(this.tabledsDailyCollectionSummary.DESCRIPTIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDESCRIPTIONNull() {
                this[this.tabledsDailyCollectionSummary.DESCRIPTIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsINV_CREDITNull() {
                return this.IsNull(this.tabledsDailyCollectionSummary.INV_CREDITColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetINV_CREDITNull() {
                this[this.tabledsDailyCollectionSummary.INV_CREDITColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsINV_CASHNull() {
                return this.IsNull(this.tabledsDailyCollectionSummary.INV_CASHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetINV_CASHNull() {
                this[this.tabledsDailyCollectionSummary.INV_CASHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPAY_CASHNull() {
                return this.IsNull(this.tabledsDailyCollectionSummary.PAY_CASHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPAY_CASHNull() {
                this[this.tabledsDailyCollectionSummary.PAY_CASHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPAY_CHEQUENull() {
                return this.IsNull(this.tabledsDailyCollectionSummary.PAY_CHEQUEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPAY_CHEQUENull() {
                this[this.tabledsDailyCollectionSummary.PAY_CHEQUEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCASH_INNull() {
                return this.IsNull(this.tabledsDailyCollectionSummary.CASH_INColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCASH_INNull() {
                this[this.tabledsDailyCollectionSummary.CASH_INColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCASH_OUTNull() {
                return this.IsNull(this.tabledsDailyCollectionSummary.CASH_OUTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCASH_OUTNull() {
                this[this.tabledsDailyCollectionSummary.CASH_OUTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEXPENSENull() {
                return this.IsNull(this.tabledsDailyCollectionSummary.EXPENSEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEXPENSENull() {
                this[this.tabledsDailyCollectionSummary.EXPENSEColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dsCusWiseDailySummRow : global::System.Data.DataRow {
            
            private dsCusWiseDailySummDataTable tabledsCusWiseDailySumm;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsCusWiseDailySummRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledsCusWiseDailySumm = ((dsCusWiseDailySummDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Loca {
                get {
                    try {
                        return ((string)(this[this.tabledsCusWiseDailySumm.LocaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Loca\' in table \'dsCusWiseDailySumm\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsCusWiseDailySumm.LocaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DateFrom {
                get {
                    try {
                        return ((string)(this[this.tabledsCusWiseDailySumm.DateFromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateFrom\' in table \'dsCusWiseDailySumm\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsCusWiseDailySumm.DateFromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DateTo {
                get {
                    try {
                        return ((string)(this[this.tabledsCusWiseDailySumm.DateToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateTo\' in table \'dsCusWiseDailySumm\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsCusWiseDailySumm.DateToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CodeFrom {
                get {
                    try {
                        return ((string)(this[this.tabledsCusWiseDailySumm.CodeFromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CodeFrom\' in table \'dsCusWiseDailySumm\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsCusWiseDailySumm.CodeFromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CodeTo {
                get {
                    try {
                        return ((string)(this[this.tabledsCusWiseDailySumm.CodeToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CodeTo\' in table \'dsCusWiseDailySumm\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsCusWiseDailySumm.CodeToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Customer {
                get {
                    try {
                        return ((string)(this[this.tabledsCusWiseDailySumm.CustomerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Customer\' in table \'dsCusWiseDailySumm\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsCusWiseDailySumm.CustomerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DocNo {
                get {
                    try {
                        return ((string)(this[this.tabledsCusWiseDailySumm.DocNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DocNo\' in table \'dsCusWiseDailySumm\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsCusWiseDailySumm.DocNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Amount {
                get {
                    try {
                        return ((double)(this[this.tabledsCusWiseDailySumm.AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Amount\' in table \'dsCusWiseDailySumm\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsCusWiseDailySumm.AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Discount {
                get {
                    try {
                        return ((double)(this[this.tabledsCusWiseDailySumm.DiscountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Discount\' in table \'dsCusWiseDailySumm\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsCusWiseDailySumm.DiscountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Credit {
                get {
                    try {
                        return ((double)(this[this.tabledsCusWiseDailySumm.CreditColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Credit\' in table \'dsCusWiseDailySumm\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsCusWiseDailySumm.CreditColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Net_Amount {
                get {
                    try {
                        return ((double)(this[this.tabledsCusWiseDailySumm.Net_AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Net_Amount\' in table \'dsCusWiseDailySumm\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsCusWiseDailySumm.Net_AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Cash {
                get {
                    try {
                        return ((double)(this[this.tabledsCusWiseDailySumm.CashColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cash\' in table \'dsCusWiseDailySumm\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsCusWiseDailySumm.CashColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Cheque {
                get {
                    try {
                        return ((double)(this[this.tabledsCusWiseDailySumm.ChequeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cheque\' in table \'dsCusWiseDailySumm\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsCusWiseDailySumm.ChequeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Return {
                get {
                    try {
                        return ((double)(this[this.tabledsCusWiseDailySumm.ReturnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Return\' in table \'dsCusWiseDailySumm\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsCusWiseDailySumm.ReturnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocaNull() {
                return this.IsNull(this.tabledsCusWiseDailySumm.LocaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocaNull() {
                this[this.tabledsCusWiseDailySumm.LocaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateFromNull() {
                return this.IsNull(this.tabledsCusWiseDailySumm.DateFromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateFromNull() {
                this[this.tabledsCusWiseDailySumm.DateFromColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateToNull() {
                return this.IsNull(this.tabledsCusWiseDailySumm.DateToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateToNull() {
                this[this.tabledsCusWiseDailySumm.DateToColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCodeFromNull() {
                return this.IsNull(this.tabledsCusWiseDailySumm.CodeFromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCodeFromNull() {
                this[this.tabledsCusWiseDailySumm.CodeFromColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCodeToNull() {
                return this.IsNull(this.tabledsCusWiseDailySumm.CodeToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCodeToNull() {
                this[this.tabledsCusWiseDailySumm.CodeToColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerNull() {
                return this.IsNull(this.tabledsCusWiseDailySumm.CustomerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerNull() {
                this[this.tabledsCusWiseDailySumm.CustomerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDocNoNull() {
                return this.IsNull(this.tabledsCusWiseDailySumm.DocNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDocNoNull() {
                this[this.tabledsCusWiseDailySumm.DocNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountNull() {
                return this.IsNull(this.tabledsCusWiseDailySumm.AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountNull() {
                this[this.tabledsCusWiseDailySumm.AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDiscountNull() {
                return this.IsNull(this.tabledsCusWiseDailySumm.DiscountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDiscountNull() {
                this[this.tabledsCusWiseDailySumm.DiscountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreditNull() {
                return this.IsNull(this.tabledsCusWiseDailySumm.CreditColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreditNull() {
                this[this.tabledsCusWiseDailySumm.CreditColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNet_AmountNull() {
                return this.IsNull(this.tabledsCusWiseDailySumm.Net_AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNet_AmountNull() {
                this[this.tabledsCusWiseDailySumm.Net_AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCashNull() {
                return this.IsNull(this.tabledsCusWiseDailySumm.CashColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCashNull() {
                this[this.tabledsCusWiseDailySumm.CashColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsChequeNull() {
                return this.IsNull(this.tabledsCusWiseDailySumm.ChequeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetChequeNull() {
                this[this.tabledsCusWiseDailySumm.ChequeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReturnNull() {
                return this.IsNull(this.tabledsCusWiseDailySumm.ReturnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReturnNull() {
                this[this.tabledsCusWiseDailySumm.ReturnColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dsExpenceTransactionRow : global::System.Data.DataRow {
            
            private dsExpenceTransactionDataTable tabledsExpenceTransaction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsExpenceTransactionRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledsExpenceTransaction = ((dsExpenceTransactionDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Doc_No {
                get {
                    try {
                        return ((string)(this[this.tabledsExpenceTransaction.Doc_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Doc_No\' in table \'dsExpenceTransaction\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsExpenceTransaction.Doc_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Loca {
                get {
                    try {
                        return ((string)(this[this.tabledsExpenceTransaction.LocaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Loca\' in table \'dsExpenceTransaction\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsExpenceTransaction.LocaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Iid {
                get {
                    try {
                        return ((string)(this[this.tabledsExpenceTransaction.IidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Iid\' in table \'dsExpenceTransaction\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsExpenceTransaction.IidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VenderCode {
                get {
                    try {
                        return ((string)(this[this.tabledsExpenceTransaction.VenderCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VenderCode\' in table \'dsExpenceTransaction\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsExpenceTransaction.VenderCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ExpenseCode {
                get {
                    try {
                        return ((string)(this[this.tabledsExpenceTransaction.ExpenseCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExpenseCode\' in table \'dsExpenceTransaction\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsExpenceTransaction.ExpenseCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Expense_Name {
                get {
                    try {
                        return ((string)(this[this.tabledsExpenceTransaction.Expense_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Expense_Name\' in table \'dsExpenceTransaction\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsExpenceTransaction.Expense_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Bill_No {
                get {
                    try {
                        return ((string)(this[this.tabledsExpenceTransaction.Bill_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Bill_No\' in table \'dsExpenceTransaction\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsExpenceTransaction.Bill_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Transaction_Amount {
                get {
                    try {
                        return ((decimal)(this[this.tabledsExpenceTransaction.Transaction_AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Transaction_Amount\' in table \'dsExpenceTransaction\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tabledsExpenceTransaction.Transaction_AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Balance_Amount {
                get {
                    try {
                        return ((decimal)(this[this.tabledsExpenceTransaction.Balance_AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Balance_Amount\' in table \'dsExpenceTransaction\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsExpenceTransaction.Balance_AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Transaction_Date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabledsExpenceTransaction.Transaction_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Transaction_Date\' in table \'dsExpenceTransaction\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tabledsExpenceTransaction.Transaction_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Remarks {
                get {
                    try {
                        return ((string)(this[this.tabledsExpenceTransaction.RemarksColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Remarks\' in table \'dsExpenceTransaction\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsExpenceTransaction.RemarksColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UserName {
                get {
                    try {
                        return ((string)(this[this.tabledsExpenceTransaction.UserNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UserName\' in table \'dsExpenceTransaction\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsExpenceTransaction.UserNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Date_From {
                get {
                    try {
                        return ((string)(this[this.tabledsExpenceTransaction.Date_FromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Date_From\' in table \'dsExpenceTransaction\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsExpenceTransaction.Date_FromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Date_To {
                get {
                    try {
                        return ((string)(this[this.tabledsExpenceTransaction.Date_ToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Date_To\' in table \'dsExpenceTransaction\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsExpenceTransaction.Date_ToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Code_From {
                get {
                    try {
                        return ((string)(this[this.tabledsExpenceTransaction.Code_FromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Code_From\' in table \'dsExpenceTransaction\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsExpenceTransaction.Code_FromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Code_To {
                get {
                    try {
                        return ((string)(this[this.tabledsExpenceTransaction.Code_ToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Code_To\' in table \'dsExpenceTransaction\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsExpenceTransaction.Code_ToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabledsExpenceTransaction.DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Date\' in table \'dsExpenceTransaction\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsExpenceTransaction.DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDoc_NoNull() {
                return this.IsNull(this.tabledsExpenceTransaction.Doc_NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDoc_NoNull() {
                this[this.tabledsExpenceTransaction.Doc_NoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocaNull() {
                return this.IsNull(this.tabledsExpenceTransaction.LocaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocaNull() {
                this[this.tabledsExpenceTransaction.LocaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIidNull() {
                return this.IsNull(this.tabledsExpenceTransaction.IidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIidNull() {
                this[this.tabledsExpenceTransaction.IidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVenderCodeNull() {
                return this.IsNull(this.tabledsExpenceTransaction.VenderCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVenderCodeNull() {
                this[this.tabledsExpenceTransaction.VenderCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExpenseCodeNull() {
                return this.IsNull(this.tabledsExpenceTransaction.ExpenseCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExpenseCodeNull() {
                this[this.tabledsExpenceTransaction.ExpenseCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExpense_NameNull() {
                return this.IsNull(this.tabledsExpenceTransaction.Expense_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExpense_NameNull() {
                this[this.tabledsExpenceTransaction.Expense_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBill_NoNull() {
                return this.IsNull(this.tabledsExpenceTransaction.Bill_NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBill_NoNull() {
                this[this.tabledsExpenceTransaction.Bill_NoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTransaction_AmountNull() {
                return this.IsNull(this.tabledsExpenceTransaction.Transaction_AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTransaction_AmountNull() {
                this[this.tabledsExpenceTransaction.Transaction_AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBalance_AmountNull() {
                return this.IsNull(this.tabledsExpenceTransaction.Balance_AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBalance_AmountNull() {
                this[this.tabledsExpenceTransaction.Balance_AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTransaction_DateNull() {
                return this.IsNull(this.tabledsExpenceTransaction.Transaction_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTransaction_DateNull() {
                this[this.tabledsExpenceTransaction.Transaction_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRemarksNull() {
                return this.IsNull(this.tabledsExpenceTransaction.RemarksColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRemarksNull() {
                this[this.tabledsExpenceTransaction.RemarksColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUserNameNull() {
                return this.IsNull(this.tabledsExpenceTransaction.UserNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUserNameNull() {
                this[this.tabledsExpenceTransaction.UserNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDate_FromNull() {
                return this.IsNull(this.tabledsExpenceTransaction.Date_FromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDate_FromNull() {
                this[this.tabledsExpenceTransaction.Date_FromColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDate_ToNull() {
                return this.IsNull(this.tabledsExpenceTransaction.Date_ToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDate_ToNull() {
                this[this.tabledsExpenceTransaction.Date_ToColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCode_FromNull() {
                return this.IsNull(this.tabledsExpenceTransaction.Code_FromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCode_FromNull() {
                this[this.tabledsExpenceTransaction.Code_FromColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCode_ToNull() {
                return this.IsNull(this.tabledsExpenceTransaction.Code_ToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCode_ToNull() {
                this[this.tabledsExpenceTransaction.Code_ToColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateNull() {
                return this.IsNull(this.tabledsExpenceTransaction.DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateNull() {
                this[this.tabledsExpenceTransaction.DateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dsDayBookRepRow : global::System.Data.DataRow {
            
            private dsDayBookRepDataTable tabledsDayBookRep;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsDayBookRepRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledsDayBookRep = ((dsDayBookRepDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Loca {
                get {
                    return ((string)(this[this.tabledsDayBookRep.LocaColumn]));
                }
                set {
                    this[this.tabledsDayBookRep.LocaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Post_Day {
                get {
                    return ((string)(this[this.tabledsDayBookRep.Post_DayColumn]));
                }
                set {
                    this[this.tabledsDayBookRep.Post_DayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Sale {
                get {
                    try {
                        return ((decimal)(this[this.tabledsDayBookRep.SaleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Sale\' in table \'dsDayBookRep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsDayBookRep.SaleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Sale_Cash {
                get {
                    try {
                        return ((decimal)(this[this.tabledsDayBookRep.Sale_CashColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Sale_Cash\' in table \'dsDayBookRep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsDayBookRep.Sale_CashColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Sale_Credit {
                get {
                    try {
                        return ((decimal)(this[this.tabledsDayBookRep.Sale_CreditColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Sale_Credit\' in table \'dsDayBookRep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsDayBookRep.Sale_CreditColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Collection {
                get {
                    try {
                        return ((decimal)(this[this.tabledsDayBookRep.CollectionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Collection\' in table \'dsDayBookRep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsDayBookRep.CollectionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Collection_Cash {
                get {
                    try {
                        return ((decimal)(this[this.tabledsDayBookRep.Collection_CashColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Collection_Cash\' in table \'dsDayBookRep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsDayBookRep.Collection_CashColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Collection_Cheque {
                get {
                    try {
                        return ((decimal)(this[this.tabledsDayBookRep.Collection_ChequeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Collection_Cheque\' in table \'dsDayBookRep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsDayBookRep.Collection_ChequeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Pmt {
                get {
                    try {
                        return ((decimal)(this[this.tabledsDayBookRep.PmtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Pmt\' in table \'dsDayBookRep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsDayBookRep.PmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Pmt_Cash {
                get {
                    try {
                        return ((decimal)(this[this.tabledsDayBookRep.Pmt_CashColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Pmt_Cash\' in table \'dsDayBookRep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsDayBookRep.Pmt_CashColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Pmt_cheque {
                get {
                    try {
                        return ((decimal)(this[this.tabledsDayBookRep.Pmt_chequeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Pmt_cheque\' in table \'dsDayBookRep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsDayBookRep.Pmt_chequeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Deposit_Cash {
                get {
                    try {
                        return ((decimal)(this[this.tabledsDayBookRep.Deposit_CashColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Deposit_Cash\' in table \'dsDayBookRep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsDayBookRep.Deposit_CashColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Deposit_Cheque {
                get {
                    try {
                        return ((decimal)(this[this.tabledsDayBookRep.Deposit_ChequeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Deposit_Cheque\' in table \'dsDayBookRep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsDayBookRep.Deposit_ChequeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Expense_Name {
                get {
                    try {
                        return ((string)(this[this.tabledsDayBookRep.Expense_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Expense_Name\' in table \'dsDayBookRep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsDayBookRep.Expense_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Expn_Amount {
                get {
                    try {
                        return ((decimal)(this[this.tabledsDayBookRep.Expn_AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Expn_Amount\' in table \'dsDayBookRep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsDayBookRep.Expn_AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSaleNull() {
                return this.IsNull(this.tabledsDayBookRep.SaleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSaleNull() {
                this[this.tabledsDayBookRep.SaleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSale_CashNull() {
                return this.IsNull(this.tabledsDayBookRep.Sale_CashColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSale_CashNull() {
                this[this.tabledsDayBookRep.Sale_CashColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSale_CreditNull() {
                return this.IsNull(this.tabledsDayBookRep.Sale_CreditColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSale_CreditNull() {
                this[this.tabledsDayBookRep.Sale_CreditColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCollectionNull() {
                return this.IsNull(this.tabledsDayBookRep.CollectionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCollectionNull() {
                this[this.tabledsDayBookRep.CollectionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCollection_CashNull() {
                return this.IsNull(this.tabledsDayBookRep.Collection_CashColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCollection_CashNull() {
                this[this.tabledsDayBookRep.Collection_CashColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCollection_ChequeNull() {
                return this.IsNull(this.tabledsDayBookRep.Collection_ChequeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCollection_ChequeNull() {
                this[this.tabledsDayBookRep.Collection_ChequeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPmtNull() {
                return this.IsNull(this.tabledsDayBookRep.PmtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPmtNull() {
                this[this.tabledsDayBookRep.PmtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPmt_CashNull() {
                return this.IsNull(this.tabledsDayBookRep.Pmt_CashColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPmt_CashNull() {
                this[this.tabledsDayBookRep.Pmt_CashColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPmt_chequeNull() {
                return this.IsNull(this.tabledsDayBookRep.Pmt_chequeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPmt_chequeNull() {
                this[this.tabledsDayBookRep.Pmt_chequeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeposit_CashNull() {
                return this.IsNull(this.tabledsDayBookRep.Deposit_CashColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeposit_CashNull() {
                this[this.tabledsDayBookRep.Deposit_CashColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeposit_ChequeNull() {
                return this.IsNull(this.tabledsDayBookRep.Deposit_ChequeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeposit_ChequeNull() {
                this[this.tabledsDayBookRep.Deposit_ChequeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExpense_NameNull() {
                return this.IsNull(this.tabledsDayBookRep.Expense_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExpense_NameNull() {
                this[this.tabledsDayBookRep.Expense_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExpn_AmountNull() {
                return this.IsNull(this.tabledsDayBookRep.Expn_AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExpn_AmountNull() {
                this[this.tabledsDayBookRep.Expn_AmountColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dtBatchWisePriceRow : global::System.Data.DataRow {
            
            private dtBatchWisePriceDataTable tabledtBatchWisePrice;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtBatchWisePriceRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledtBatchWisePrice = ((dtBatchWisePriceDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prod_Code {
                get {
                    try {
                        return ((string)(this[this.tabledtBatchWisePrice.Prod_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Prod_Code\' in table \'dtBatchWisePrice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtBatchWisePrice.Prod_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BatchNo {
                get {
                    try {
                        return ((string)(this[this.tabledtBatchWisePrice.BatchNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BatchNo\' in table \'dtBatchWisePrice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtBatchWisePrice.BatchNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Exp_Date {
                get {
                    try {
                        return ((string)(this[this.tabledtBatchWisePrice.Exp_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Exp_Date\' in table \'dtBatchWisePrice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtBatchWisePrice.Exp_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Shipment {
                get {
                    try {
                        return ((string)(this[this.tabledtBatchWisePrice.ShipmentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Shipment\' in table \'dtBatchWisePrice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtBatchWisePrice.ShipmentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Purchase_Price {
                get {
                    try {
                        return ((string)(this[this.tabledtBatchWisePrice.Purchase_PriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Purchase_Price\' in table \'dtBatchWisePrice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtBatchWisePrice.Purchase_PriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Ws_Price {
                get {
                    try {
                        return ((string)(this[this.tabledtBatchWisePrice.Ws_PriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Ws_Price\' in table \'dtBatchWisePrice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtBatchWisePrice.Ws_PriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Ret_Price {
                get {
                    try {
                        return ((string)(this[this.tabledtBatchWisePrice.Ret_PriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Ret_Price\' in table \'dtBatchWisePrice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtBatchWisePrice.Ret_PriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Distr_Price {
                get {
                    try {
                        return ((string)(this[this.tabledtBatchWisePrice.Distr_PriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Distr_Price\' in table \'dtBatchWisePrice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtBatchWisePrice.Distr_PriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ModMkt_Price {
                get {
                    try {
                        return ((string)(this[this.tabledtBatchWisePrice.ModMkt_PriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModMkt_Price\' in table \'dtBatchWisePrice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtBatchWisePrice.ModMkt_PriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Loca {
                get {
                    try {
                        return ((string)(this[this.tabledtBatchWisePrice.LocaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Loca\' in table \'dtBatchWisePrice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtBatchWisePrice.LocaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Stock {
                get {
                    try {
                        return ((decimal)(this[this.tabledtBatchWisePrice.StockColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Stock\' in table \'dtBatchWisePrice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtBatchWisePrice.StockColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_CodeNull() {
                return this.IsNull(this.tabledtBatchWisePrice.Prod_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_CodeNull() {
                this[this.tabledtBatchWisePrice.Prod_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBatchNoNull() {
                return this.IsNull(this.tabledtBatchWisePrice.BatchNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBatchNoNull() {
                this[this.tabledtBatchWisePrice.BatchNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExp_DateNull() {
                return this.IsNull(this.tabledtBatchWisePrice.Exp_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExp_DateNull() {
                this[this.tabledtBatchWisePrice.Exp_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShipmentNull() {
                return this.IsNull(this.tabledtBatchWisePrice.ShipmentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShipmentNull() {
                this[this.tabledtBatchWisePrice.ShipmentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPurchase_PriceNull() {
                return this.IsNull(this.tabledtBatchWisePrice.Purchase_PriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPurchase_PriceNull() {
                this[this.tabledtBatchWisePrice.Purchase_PriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWs_PriceNull() {
                return this.IsNull(this.tabledtBatchWisePrice.Ws_PriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWs_PriceNull() {
                this[this.tabledtBatchWisePrice.Ws_PriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRet_PriceNull() {
                return this.IsNull(this.tabledtBatchWisePrice.Ret_PriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRet_PriceNull() {
                this[this.tabledtBatchWisePrice.Ret_PriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDistr_PriceNull() {
                return this.IsNull(this.tabledtBatchWisePrice.Distr_PriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDistr_PriceNull() {
                this[this.tabledtBatchWisePrice.Distr_PriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModMkt_PriceNull() {
                return this.IsNull(this.tabledtBatchWisePrice.ModMkt_PriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModMkt_PriceNull() {
                this[this.tabledtBatchWisePrice.ModMkt_PriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocaNull() {
                return this.IsNull(this.tabledtBatchWisePrice.LocaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocaNull() {
                this[this.tabledtBatchWisePrice.LocaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStockNull() {
                return this.IsNull(this.tabledtBatchWisePrice.StockColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStockNull() {
                this[this.tabledtBatchWisePrice.StockColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dsCusAddressRow : global::System.Data.DataRow {
            
            private dsCusAddressDataTable tabledsCusAddress;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsCusAddressRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledsCusAddress = ((dsCusAddressDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Cust_Code {
                get {
                    try {
                        return ((string)(this[this.tabledsCusAddress.Cust_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cust_Code\' in table \'dsCusAddress\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsCusAddress.Cust_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Cust_Name {
                get {
                    try {
                        return ((string)(this[this.tabledsCusAddress.Cust_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cust_Name\' in table \'dsCusAddress\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsCusAddress.Cust_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address1 {
                get {
                    try {
                        return ((string)(this[this.tabledsCusAddress.Address1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Address1\' in table \'dsCusAddress\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsCusAddress.Address1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address2 {
                get {
                    try {
                        return ((string)(this[this.tabledsCusAddress.Address2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Address2\' in table \'dsCusAddress\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsCusAddress.Address2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address3 {
                get {
                    try {
                        return ((string)(this[this.tabledsCusAddress.Address3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Address3\' in table \'dsCusAddress\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsCusAddress.Address3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Amount {
                get {
                    try {
                        return ((decimal)(this[this.tabledsCusAddress.AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Amount\' in table \'dsCusAddress\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsCusAddress.AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Ref_Person {
                get {
                    try {
                        return ((string)(this[this.tabledsCusAddress.Ref_PersonColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Ref_Person\' in table \'dsCusAddress\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsCusAddress.Ref_PersonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Ref_ContactNo {
                get {
                    try {
                        return ((string)(this[this.tabledsCusAddress.Ref_ContactNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Ref_ContactNo\' in table \'dsCusAddress\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsCusAddress.Ref_ContactNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Days {
                get {
                    try {
                        return ((decimal)(this[this.tabledsCusAddress.DaysColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Days\' in table \'dsCusAddress\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsCusAddress.DaysColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Months {
                get {
                    try {
                        return ((decimal)(this[this.tabledsCusAddress.MonthsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Months\' in table \'dsCusAddress\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsCusAddress.MonthsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Date {
                get {
                    try {
                        return ((string)(this[this.tabledsCusAddress.DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Date\' in table \'dsCusAddress\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsCusAddress.DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCust_CodeNull() {
                return this.IsNull(this.tabledsCusAddress.Cust_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCust_CodeNull() {
                this[this.tabledsCusAddress.Cust_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCust_NameNull() {
                return this.IsNull(this.tabledsCusAddress.Cust_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCust_NameNull() {
                this[this.tabledsCusAddress.Cust_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddress1Null() {
                return this.IsNull(this.tabledsCusAddress.Address1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddress1Null() {
                this[this.tabledsCusAddress.Address1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddress2Null() {
                return this.IsNull(this.tabledsCusAddress.Address2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddress2Null() {
                this[this.tabledsCusAddress.Address2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddress3Null() {
                return this.IsNull(this.tabledsCusAddress.Address3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddress3Null() {
                this[this.tabledsCusAddress.Address3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountNull() {
                return this.IsNull(this.tabledsCusAddress.AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountNull() {
                this[this.tabledsCusAddress.AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRef_PersonNull() {
                return this.IsNull(this.tabledsCusAddress.Ref_PersonColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRef_PersonNull() {
                this[this.tabledsCusAddress.Ref_PersonColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRef_ContactNoNull() {
                return this.IsNull(this.tabledsCusAddress.Ref_ContactNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRef_ContactNoNull() {
                this[this.tabledsCusAddress.Ref_ContactNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDaysNull() {
                return this.IsNull(this.tabledsCusAddress.DaysColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDaysNull() {
                this[this.tabledsCusAddress.DaysColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMonthsNull() {
                return this.IsNull(this.tabledsCusAddress.MonthsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMonthsNull() {
                this[this.tabledsCusAddress.MonthsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateNull() {
                return this.IsNull(this.tabledsCusAddress.DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateNull() {
                this[this.tabledsCusAddress.DateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dsTempPacketProduct1Row : global::System.Data.DataRow {
            
            private dsTempPacketProduct1DataTable tabledsTempPacketProduct1;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsTempPacketProduct1Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledsTempPacketProduct1 = ((dsTempPacketProduct1DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prod_Code {
                get {
                    try {
                        return ((string)(this[this.tabledsTempPacketProduct1.Prod_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Prod_Code\' in table \'dsTempPacketProduct1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsTempPacketProduct1.Prod_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prod_Name {
                get {
                    try {
                        return ((string)(this[this.tabledsTempPacketProduct1.Prod_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Prod_Name\' in table \'dsTempPacketProduct1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsTempPacketProduct1.Prod_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Packet_Qty {
                get {
                    try {
                        return ((string)(this[this.tabledsTempPacketProduct1.Packet_QtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Packet_Qty\' in table \'dsTempPacketProduct1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsTempPacketProduct1.Packet_QtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Purchase_price {
                get {
                    try {
                        return ((string)(this[this.tabledsTempPacketProduct1.Purchase_priceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Purchase_price\' in table \'dsTempPacketProduct1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsTempPacketProduct1.Purchase_priceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Main_Prod_Code {
                get {
                    try {
                        return ((string)(this[this.tabledsTempPacketProduct1.Main_Prod_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Main_Prod_Code\' in table \'dsTempPacketProduct1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsTempPacketProduct1.Main_Prod_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Main_Prod_Name {
                get {
                    try {
                        return ((string)(this[this.tabledsTempPacketProduct1.Main_Prod_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Main_Prod_Name\' in table \'dsTempPacketProduct1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsTempPacketProduct1.Main_Prod_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string No_Of_Packets {
                get {
                    try {
                        return ((string)(this[this.tabledsTempPacketProduct1.No_Of_PacketsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'No_Of_Packets\' in table \'dsTempPacketProduct1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsTempPacketProduct1.No_Of_PacketsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BatchNo {
                get {
                    try {
                        return ((string)(this[this.tabledsTempPacketProduct1.BatchNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BatchNo\' in table \'dsTempPacketProduct1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsTempPacketProduct1.BatchNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_CodeNull() {
                return this.IsNull(this.tabledsTempPacketProduct1.Prod_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_CodeNull() {
                this[this.tabledsTempPacketProduct1.Prod_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_NameNull() {
                return this.IsNull(this.tabledsTempPacketProduct1.Prod_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_NameNull() {
                this[this.tabledsTempPacketProduct1.Prod_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPacket_QtyNull() {
                return this.IsNull(this.tabledsTempPacketProduct1.Packet_QtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPacket_QtyNull() {
                this[this.tabledsTempPacketProduct1.Packet_QtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPurchase_priceNull() {
                return this.IsNull(this.tabledsTempPacketProduct1.Purchase_priceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPurchase_priceNull() {
                this[this.tabledsTempPacketProduct1.Purchase_priceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMain_Prod_CodeNull() {
                return this.IsNull(this.tabledsTempPacketProduct1.Main_Prod_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMain_Prod_CodeNull() {
                this[this.tabledsTempPacketProduct1.Main_Prod_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMain_Prod_NameNull() {
                return this.IsNull(this.tabledsTempPacketProduct1.Main_Prod_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMain_Prod_NameNull() {
                this[this.tabledsTempPacketProduct1.Main_Prod_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNo_Of_PacketsNull() {
                return this.IsNull(this.tabledsTempPacketProduct1.No_Of_PacketsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNo_Of_PacketsNull() {
                this[this.tabledsTempPacketProduct1.No_Of_PacketsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBatchNoNull() {
                return this.IsNull(this.tabledsTempPacketProduct1.BatchNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBatchNoNull() {
                this[this.tabledsTempPacketProduct1.BatchNoColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dsProdBundleRow : global::System.Data.DataRow {
            
            private dsProdBundleDataTable tabledsProdBundle;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsProdBundleRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledsProdBundle = ((dsProdBundleDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Packet_Prod_Code {
                get {
                    return ((string)(this[this.tabledsProdBundle.Packet_Prod_CodeColumn]));
                }
                set {
                    this[this.tabledsProdBundle.Packet_Prod_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Packet_Prod_Name {
                get {
                    return ((string)(this[this.tabledsProdBundle.Packet_Prod_NameColumn]));
                }
                set {
                    this[this.tabledsProdBundle.Packet_Prod_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Packet_Qty {
                get {
                    return ((decimal)(this[this.tabledsProdBundle.Packet_QtyColumn]));
                }
                set {
                    this[this.tabledsProdBundle.Packet_QtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Packet_Purchase_price {
                get {
                    return ((decimal)(this[this.tabledsProdBundle.Packet_Purchase_priceColumn]));
                }
                set {
                    this[this.tabledsProdBundle.Packet_Purchase_priceColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class StatementRow : global::System.Data.DataRow {
            
            private StatementDataTable tableStatement;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal StatementRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableStatement = ((StatementDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Cust_Code {
                get {
                    try {
                        return ((string)(this[this.tableStatement.Cust_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cust_Code\' in table \'Statement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStatement.Cust_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Receipt {
                get {
                    try {
                        return ((string)(this[this.tableStatement.ReceiptColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Receipt\' in table \'Statement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStatement.ReceiptColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime BillDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableStatement.BillDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BillDate\' in table \'Statement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStatement.BillDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal BillAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableStatement.BillAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BillAmount\' in table \'Statement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStatement.BillAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Earn {
                get {
                    try {
                        return ((decimal)(this[this.tableStatement.EarnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Earn\' in table \'Statement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStatement.EarnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Redeem {
                get {
                    try {
                        return ((decimal)(this[this.tableStatement.RedeemColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Redeem\' in table \'Statement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStatement.RedeemColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ER {
                get {
                    try {
                        return ((string)(this[this.tableStatement.ERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ER\' in table \'Statement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStatement.ERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Unit {
                get {
                    try {
                        return ((string)(this[this.tableStatement.UnitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Unit\' in table \'Statement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStatement.UnitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Loca {
                get {
                    try {
                        return ((string)(this[this.tableStatement.LocaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Loca\' in table \'Statement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStatement.LocaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LocaName {
                get {
                    try {
                        return ((string)(this[this.tableStatement.LocaNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LocaName\' in table \'Statement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStatement.LocaNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Cus_Name {
                get {
                    try {
                        return ((string)(this[this.tableStatement.Cus_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cus_Name\' in table \'Statement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStatement.Cus_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Location {
                get {
                    try {
                        return ((string)(this[this.tableStatement.LocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Location\' in table \'Statement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStatement.LocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateFrom {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableStatement.DateFromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateFrom\' in table \'Statement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStatement.DateFromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateTo {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableStatement.DateToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateTo\' in table \'Statement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStatement.DateToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prod_Code {
                get {
                    try {
                        return ((string)(this[this.tableStatement.Prod_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Prod_Code\' in table \'Statement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStatement.Prod_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prod_Name {
                get {
                    try {
                        return ((string)(this[this.tableStatement.Prod_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Prod_Name\' in table \'Statement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStatement.Prod_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Qty {
                get {
                    try {
                        return ((decimal)(this[this.tableStatement.QtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Qty\' in table \'Statement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStatement.QtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Receipt_No {
                get {
                    try {
                        return ((string)(this[this.tableStatement.Receipt_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Receipt_No\' in table \'Statement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStatement.Receipt_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReportDate {
                get {
                    try {
                        return ((string)(this[this.tableStatement.ReportDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReportDate\' in table \'Statement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStatement.ReportDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Amount {
                get {
                    try {
                        return ((decimal)(this[this.tableStatement.AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Amount\' in table \'Statement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStatement.AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Selling {
                get {
                    try {
                        return ((decimal)(this[this.tableStatement.SellingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Selling\' in table \'Statement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStatement.SellingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal BFBalance {
                get {
                    try {
                        return ((decimal)(this[this.tableStatement.BFBalanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BFBalance\' in table \'Statement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStatement.BFBalanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal BalPoints {
                get {
                    try {
                        return ((decimal)(this[this.tableStatement.BalPointsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BalPoints\' in table \'Statement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStatement.BalPointsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Card_No {
                get {
                    try {
                        return ((string)(this[this.tableStatement.Card_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Card_No\' in table \'Statement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStatement.Card_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCust_CodeNull() {
                return this.IsNull(this.tableStatement.Cust_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCust_CodeNull() {
                this[this.tableStatement.Cust_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReceiptNull() {
                return this.IsNull(this.tableStatement.ReceiptColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReceiptNull() {
                this[this.tableStatement.ReceiptColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBillDateNull() {
                return this.IsNull(this.tableStatement.BillDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBillDateNull() {
                this[this.tableStatement.BillDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBillAmountNull() {
                return this.IsNull(this.tableStatement.BillAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBillAmountNull() {
                this[this.tableStatement.BillAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEarnNull() {
                return this.IsNull(this.tableStatement.EarnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEarnNull() {
                this[this.tableStatement.EarnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRedeemNull() {
                return this.IsNull(this.tableStatement.RedeemColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRedeemNull() {
                this[this.tableStatement.RedeemColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsERNull() {
                return this.IsNull(this.tableStatement.ERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetERNull() {
                this[this.tableStatement.ERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnitNull() {
                return this.IsNull(this.tableStatement.UnitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnitNull() {
                this[this.tableStatement.UnitColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocaNull() {
                return this.IsNull(this.tableStatement.LocaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocaNull() {
                this[this.tableStatement.LocaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocaNameNull() {
                return this.IsNull(this.tableStatement.LocaNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocaNameNull() {
                this[this.tableStatement.LocaNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCus_NameNull() {
                return this.IsNull(this.tableStatement.Cus_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCus_NameNull() {
                this[this.tableStatement.Cus_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocationNull() {
                return this.IsNull(this.tableStatement.LocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocationNull() {
                this[this.tableStatement.LocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateFromNull() {
                return this.IsNull(this.tableStatement.DateFromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateFromNull() {
                this[this.tableStatement.DateFromColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateToNull() {
                return this.IsNull(this.tableStatement.DateToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateToNull() {
                this[this.tableStatement.DateToColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_CodeNull() {
                return this.IsNull(this.tableStatement.Prod_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_CodeNull() {
                this[this.tableStatement.Prod_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_NameNull() {
                return this.IsNull(this.tableStatement.Prod_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_NameNull() {
                this[this.tableStatement.Prod_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQtyNull() {
                return this.IsNull(this.tableStatement.QtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQtyNull() {
                this[this.tableStatement.QtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReceipt_NoNull() {
                return this.IsNull(this.tableStatement.Receipt_NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReceipt_NoNull() {
                this[this.tableStatement.Receipt_NoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReportDateNull() {
                return this.IsNull(this.tableStatement.ReportDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReportDateNull() {
                this[this.tableStatement.ReportDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountNull() {
                return this.IsNull(this.tableStatement.AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountNull() {
                this[this.tableStatement.AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSellingNull() {
                return this.IsNull(this.tableStatement.SellingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSellingNull() {
                this[this.tableStatement.SellingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBFBalanceNull() {
                return this.IsNull(this.tableStatement.BFBalanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBFBalanceNull() {
                this[this.tableStatement.BFBalanceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBalPointsNull() {
                return this.IsNull(this.tableStatement.BalPointsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBalPointsNull() {
                this[this.tableStatement.BalPointsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCard_NoNull() {
                return this.IsNull(this.tableStatement.Card_NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCard_NoNull() {
                this[this.tableStatement.Card_NoColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CompanyRow : global::System.Data.DataRow {
            
            private CompanyDataTable tableCompany;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CompanyRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCompany = ((CompanyDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Loca {
                get {
                    return ((string)(this[this.tableCompany.LocaColumn]));
                }
                set {
                    this[this.tableCompany.LocaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CompanyCode {
                get {
                    try {
                        return ((string)(this[this.tableCompany.CompanyCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CompanyCode\' in table \'Company\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCompany.CompanyCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CompanyName {
                get {
                    try {
                        return ((string)(this[this.tableCompany.CompanyNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CompanyName\' in table \'Company\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCompany.CompanyNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address1 {
                get {
                    try {
                        return ((string)(this[this.tableCompany.Address1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Address1\' in table \'Company\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCompany.Address1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address2 {
                get {
                    try {
                        return ((string)(this[this.tableCompany.Address2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Address2\' in table \'Company\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCompany.Address2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TelFax {
                get {
                    try {
                        return ((string)(this[this.tableCompany.TelFaxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TelFax\' in table \'Company\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCompany.TelFaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string email {
                get {
                    try {
                        return ((string)(this[this.tableCompany.emailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'email\' in table \'Company\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCompany.emailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Card_No {
                get {
                    try {
                        return ((string)(this[this.tableCompany.Card_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Card_No\' in table \'Company\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCompany.Card_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompanyCodeNull() {
                return this.IsNull(this.tableCompany.CompanyCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompanyCodeNull() {
                this[this.tableCompany.CompanyCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompanyNameNull() {
                return this.IsNull(this.tableCompany.CompanyNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompanyNameNull() {
                this[this.tableCompany.CompanyNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddress1Null() {
                return this.IsNull(this.tableCompany.Address1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddress1Null() {
                this[this.tableCompany.Address1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddress2Null() {
                return this.IsNull(this.tableCompany.Address2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddress2Null() {
                this[this.tableCompany.Address2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTelFaxNull() {
                return this.IsNull(this.tableCompany.TelFaxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTelFaxNull() {
                this[this.tableCompany.TelFaxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsemailNull() {
                return this.IsNull(this.tableCompany.emailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetemailNull() {
                this[this.tableCompany.emailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCard_NoNull() {
                return this.IsNull(this.tableCompany.Card_NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCard_NoNull() {
                this[this.tableCompany.Card_NoColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dsInvoiceColSummeryRow : global::System.Data.DataRow {
            
            private dsInvoiceColSummeryDataTable tabledsInvoiceColSummery;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsInvoiceColSummeryRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledsInvoiceColSummery = ((dsInvoiceColSummeryDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Date {
                get {
                    try {
                        return ((string)(this[this.tabledsInvoiceColSummery.DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Date\' in table \'dsInvoiceColSummery\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsInvoiceColSummery.DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Cash {
                get {
                    try {
                        return ((decimal)(this[this.tabledsInvoiceColSummery.CashColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cash\' in table \'dsInvoiceColSummery\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsInvoiceColSummery.CashColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Credit {
                get {
                    try {
                        return ((decimal)(this[this.tabledsInvoiceColSummery.CreditColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Credit\' in table \'dsInvoiceColSummery\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsInvoiceColSummery.CreditColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Balance {
                get {
                    try {
                        return ((decimal)(this[this.tabledsInvoiceColSummery.BalanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Balance\' in table \'dsInvoiceColSummery\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsInvoiceColSummery.BalanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateNull() {
                return this.IsNull(this.tabledsInvoiceColSummery.DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateNull() {
                this[this.tabledsInvoiceColSummery.DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCashNull() {
                return this.IsNull(this.tabledsInvoiceColSummery.CashColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCashNull() {
                this[this.tabledsInvoiceColSummery.CashColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreditNull() {
                return this.IsNull(this.tabledsInvoiceColSummery.CreditColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreditNull() {
                this[this.tabledsInvoiceColSummery.CreditColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBalanceNull() {
                return this.IsNull(this.tabledsInvoiceColSummery.BalanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBalanceNull() {
                this[this.tabledsInvoiceColSummery.BalanceColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dsCashDenoRow : global::System.Data.DataRow {
            
            private dsCashDenoDataTable tabledsCashDeno;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsCashDenoRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledsCashDeno = ((dsCashDenoDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PostDate {
                get {
                    try {
                        return ((string)(this[this.tabledsCashDeno.PostDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PostDate\' in table \'dsCashDeno\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsCashDeno.PostDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Cashier {
                get {
                    try {
                        return ((string)(this[this.tabledsCashDeno.CashierColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cashier\' in table \'dsCashDeno\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsCashDeno.CashierColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal N5000 {
                get {
                    try {
                        return ((decimal)(this[this.tabledsCashDeno.N5000Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'N5000\' in table \'dsCashDeno\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsCashDeno.N5000Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal N2000 {
                get {
                    try {
                        return ((decimal)(this[this.tabledsCashDeno.N2000Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'N2000\' in table \'dsCashDeno\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsCashDeno.N2000Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal N1000 {
                get {
                    try {
                        return ((decimal)(this[this.tabledsCashDeno.N1000Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'N1000\' in table \'dsCashDeno\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsCashDeno.N1000Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal N500 {
                get {
                    try {
                        return ((decimal)(this[this.tabledsCashDeno.N500Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'N500\' in table \'dsCashDeno\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsCashDeno.N500Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal N100 {
                get {
                    try {
                        return ((decimal)(this[this.tabledsCashDeno.N100Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'N100\' in table \'dsCashDeno\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsCashDeno.N100Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal N50 {
                get {
                    try {
                        return ((decimal)(this[this.tabledsCashDeno.N50Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'N50\' in table \'dsCashDeno\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsCashDeno.N50Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal N20 {
                get {
                    try {
                        return ((decimal)(this[this.tabledsCashDeno.N20Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'N20\' in table \'dsCashDeno\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsCashDeno.N20Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal N10 {
                get {
                    try {
                        return ((decimal)(this[this.tabledsCashDeno.N10Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'N10\' in table \'dsCashDeno\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsCashDeno.N10Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal N5 {
                get {
                    try {
                        return ((decimal)(this[this.tabledsCashDeno.N5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'N5\' in table \'dsCashDeno\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsCashDeno.N5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal N2 {
                get {
                    try {
                        return ((decimal)(this[this.tabledsCashDeno.N2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'N2\' in table \'dsCashDeno\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsCashDeno.N2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal N1 {
                get {
                    try {
                        return ((decimal)(this[this.tabledsCashDeno.N1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'N1\' in table \'dsCashDeno\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsCashDeno.N1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LocaDesc {
                get {
                    try {
                        return ((string)(this[this.tabledsCashDeno.LocaDescColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LocaDesc\' in table \'dsCashDeno\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsCashDeno.LocaDescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Loca {
                get {
                    try {
                        return ((string)(this[this.tabledsCashDeno.LocaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Loca\' in table \'dsCashDeno\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsCashDeno.LocaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RepName {
                get {
                    try {
                        return ((string)(this[this.tabledsCashDeno.RepNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RepName\' in table \'dsCashDeno\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsCashDeno.RepNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string State {
                get {
                    try {
                        return ((string)(this[this.tabledsCashDeno.StateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'State\' in table \'dsCashDeno\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsCashDeno.StateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Amount {
                get {
                    try {
                        return ((decimal)(this[this.tabledsCashDeno.AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Amount\' in table \'dsCashDeno\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsCashDeno.AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPostDateNull() {
                return this.IsNull(this.tabledsCashDeno.PostDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPostDateNull() {
                this[this.tabledsCashDeno.PostDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCashierNull() {
                return this.IsNull(this.tabledsCashDeno.CashierColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCashierNull() {
                this[this.tabledsCashDeno.CashierColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsN5000Null() {
                return this.IsNull(this.tabledsCashDeno.N5000Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetN5000Null() {
                this[this.tabledsCashDeno.N5000Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsN2000Null() {
                return this.IsNull(this.tabledsCashDeno.N2000Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetN2000Null() {
                this[this.tabledsCashDeno.N2000Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsN1000Null() {
                return this.IsNull(this.tabledsCashDeno.N1000Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetN1000Null() {
                this[this.tabledsCashDeno.N1000Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsN500Null() {
                return this.IsNull(this.tabledsCashDeno.N500Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetN500Null() {
                this[this.tabledsCashDeno.N500Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsN100Null() {
                return this.IsNull(this.tabledsCashDeno.N100Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetN100Null() {
                this[this.tabledsCashDeno.N100Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsN50Null() {
                return this.IsNull(this.tabledsCashDeno.N50Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetN50Null() {
                this[this.tabledsCashDeno.N50Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsN20Null() {
                return this.IsNull(this.tabledsCashDeno.N20Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetN20Null() {
                this[this.tabledsCashDeno.N20Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsN10Null() {
                return this.IsNull(this.tabledsCashDeno.N10Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetN10Null() {
                this[this.tabledsCashDeno.N10Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsN5Null() {
                return this.IsNull(this.tabledsCashDeno.N5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetN5Null() {
                this[this.tabledsCashDeno.N5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsN2Null() {
                return this.IsNull(this.tabledsCashDeno.N2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetN2Null() {
                this[this.tabledsCashDeno.N2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsN1Null() {
                return this.IsNull(this.tabledsCashDeno.N1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetN1Null() {
                this[this.tabledsCashDeno.N1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocaDescNull() {
                return this.IsNull(this.tabledsCashDeno.LocaDescColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocaDescNull() {
                this[this.tabledsCashDeno.LocaDescColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocaNull() {
                return this.IsNull(this.tabledsCashDeno.LocaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocaNull() {
                this[this.tabledsCashDeno.LocaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRepNameNull() {
                return this.IsNull(this.tabledsCashDeno.RepNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRepNameNull() {
                this[this.tabledsCashDeno.RepNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStateNull() {
                return this.IsNull(this.tabledsCashDeno.StateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStateNull() {
                this[this.tabledsCashDeno.StateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountNull() {
                return this.IsNull(this.tabledsCashDeno.AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountNull() {
                this[this.tabledsCashDeno.AmountColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CRM_CustomerRow : global::System.Data.DataRow {
            
            private CRM_CustomerDataTable tableCRM_Customer;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CRM_CustomerRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCRM_Customer = ((CRM_CustomerDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Cus_Code {
                get {
                    return ((string)(this[this.tableCRM_Customer.Cus_CodeColumn]));
                }
                set {
                    this[this.tableCRM_Customer.Cus_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Status {
                get {
                    return ((string)(this[this.tableCRM_Customer.StatusColumn]));
                }
                set {
                    this[this.tableCRM_Customer.StatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Cus_Name {
                get {
                    return ((string)(this[this.tableCRM_Customer.Cus_NameColumn]));
                }
                set {
                    this[this.tableCRM_Customer.Cus_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FirstName {
                get {
                    try {
                        return ((string)(this[this.tableCRM_Customer.FirstNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FirstName\' in table \'CRM_Customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRM_Customer.FirstNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SecondName {
                get {
                    try {
                        return ((string)(this[this.tableCRM_Customer.SecondNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SecondName\' in table \'CRM_Customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRM_Customer.SecondNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address1 {
                get {
                    try {
                        return ((string)(this[this.tableCRM_Customer.Address1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Address1\' in table \'CRM_Customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRM_Customer.Address1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address2 {
                get {
                    try {
                        return ((string)(this[this.tableCRM_Customer.Address2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Address2\' in table \'CRM_Customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRM_Customer.Address2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address3 {
                get {
                    try {
                        return ((string)(this[this.tableCRM_Customer.Address3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Address3\' in table \'CRM_Customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRM_Customer.Address3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address4 {
                get {
                    try {
                        return ((string)(this[this.tableCRM_Customer.Address4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Address4\' in table \'CRM_Customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRM_Customer.Address4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address5 {
                get {
                    try {
                        return ((string)(this[this.tableCRM_Customer.Address5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Address5\' in table \'CRM_Customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRM_Customer.Address5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PhoneNo {
                get {
                    try {
                        return ((string)(this[this.tableCRM_Customer.PhoneNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PhoneNo\' in table \'CRM_Customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRM_Customer.PhoneNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Fax {
                get {
                    return ((string)(this[this.tableCRM_Customer.FaxColumn]));
                }
                set {
                    this[this.tableCRM_Customer.FaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OfficePhone {
                get {
                    try {
                        return ((string)(this[this.tableCRM_Customer.OfficePhoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OfficePhone\' in table \'CRM_Customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRM_Customer.OfficePhoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Other {
                get {
                    return ((string)(this[this.tableCRM_Customer.OtherColumn]));
                }
                set {
                    this[this.tableCRM_Customer.OtherColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Mobile {
                get {
                    try {
                        return ((string)(this[this.tableCRM_Customer.MobileColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Mobile\' in table \'CRM_Customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRM_Customer.MobileColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ContactPersion {
                get {
                    try {
                        return ((string)(this[this.tableCRM_Customer.ContactPersionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ContactPersion\' in table \'CRM_Customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRM_Customer.ContactPersionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string E_mail {
                get {
                    try {
                        return ((string)(this[this.tableCRM_Customer.E_mailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'E_mail\' in table \'CRM_Customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRM_Customer.E_mailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Web {
                get {
                    return ((string)(this[this.tableCRM_Customer.WebColumn]));
                }
                set {
                    this[this.tableCRM_Customer.WebColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NICNumber {
                get {
                    return ((string)(this[this.tableCRM_Customer.NICNumberColumn]));
                }
                set {
                    this[this.tableCRM_Customer.NICNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Birthday {
                get {
                    try {
                        return ((string)(this[this.tableCRM_Customer.BirthdayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Birthday\' in table \'CRM_Customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRM_Customer.BirthdayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Cus_Type {
                get {
                    return ((string)(this[this.tableCRM_Customer.Cus_TypeColumn]));
                }
                set {
                    this[this.tableCRM_Customer.Cus_TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Referance {
                get {
                    try {
                        return ((string)(this[this.tableCRM_Customer.ReferanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Referance\' in table \'CRM_Customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRM_Customer.ReferanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime InsertDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableCRM_Customer.InsertDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertDate\' in table \'CRM_Customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRM_Customer.InsertDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ModDate {
                get {
                    return ((global::System.DateTime)(this[this.tableCRM_Customer.ModDateColumn]));
                }
                set {
                    this[this.tableCRM_Customer.ModDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InsertUser {
                get {
                    return ((string)(this[this.tableCRM_Customer.InsertUserColumn]));
                }
                set {
                    this[this.tableCRM_Customer.InsertUserColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ModUser {
                get {
                    return ((string)(this[this.tableCRM_Customer.ModUserColumn]));
                }
                set {
                    this[this.tableCRM_Customer.ModUserColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Inactive {
                get {
                    return ((bool)(this[this.tableCRM_Customer.InactiveColumn]));
                }
                set {
                    this[this.tableCRM_Customer.InactiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InactiveDate {
                get {
                    try {
                        return ((string)(this[this.tableCRM_Customer.InactiveDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InactiveDate\' in table \'CRM_Customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRM_Customer.InactiveDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Workshop {
                get {
                    try {
                        return ((bool)(this[this.tableCRM_Customer.WorkshopColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Workshop\' in table \'CRM_Customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRM_Customer.WorkshopColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Age {
                get {
                    return ((string)(this[this.tableCRM_Customer.AgeColumn]));
                }
                set {
                    this[this.tableCRM_Customer.AgeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Wesak {
                get {
                    try {
                        return ((bool)(this[this.tableCRM_Customer.WesakColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Wesak\' in table \'CRM_Customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRM_Customer.WesakColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool NewYear {
                get {
                    try {
                        return ((bool)(this[this.tableCRM_Customer.NewYearColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NewYear\' in table \'CRM_Customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRM_Customer.NewYearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool DontBCard {
                get {
                    try {
                        return ((bool)(this[this.tableCRM_Customer.DontBCardColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DontBCard\' in table \'CRM_Customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRM_Customer.DontBCardColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Abrod {
                get {
                    try {
                        return ((bool)(this[this.tableCRM_Customer.AbrodColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Abrod\' in table \'CRM_Customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRM_Customer.AbrodColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime NextVisitDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableCRM_Customer.NextVisitDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NextVisitDate\' in table \'CRM_Customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRM_Customer.NextVisitDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Balance {
                get {
                    return ((decimal)(this[this.tableCRM_Customer.BalanceColumn]));
                }
                set {
                    this[this.tableCRM_Customer.BalanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Festival {
                get {
                    return ((string)(this[this.tableCRM_Customer.FestivalColumn]));
                }
                set {
                    this[this.tableCRM_Customer.FestivalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NameOfSpouse {
                get {
                    try {
                        return ((string)(this[this.tableCRM_Customer.NameOfSpouseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NameOfSpouse\' in table \'CRM_Customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRM_Customer.NameOfSpouseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Card_No {
                get {
                    try {
                        return ((string)(this[this.tableCRM_Customer.Card_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Card_No\' in table \'CRM_Customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRM_Customer.Card_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Monthly_Balance {
                get {
                    try {
                        return ((decimal)(this[this.tableCRM_Customer.Monthly_BalanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Monthly_Balance\' in table \'CRM_Customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRM_Customer.Monthly_BalanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CardIssuedDate {
                get {
                    try {
                        return ((string)(this[this.tableCRM_Customer.CardIssuedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CardIssuedDate\' in table \'CRM_Customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRM_Customer.CardIssuedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Occupation {
                get {
                    try {
                        return ((string)(this[this.tableCRM_Customer.OccupationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Occupation\' in table \'CRM_Customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRM_Customer.OccupationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MaritalStatus {
                get {
                    try {
                        return ((string)(this[this.tableCRM_Customer.MaritalStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MaritalStatus\' in table \'CRM_Customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRM_Customer.MaritalStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SpouseBirthDay {
                get {
                    try {
                        return ((string)(this[this.tableCRM_Customer.SpouseBirthDayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SpouseBirthDay\' in table \'CRM_Customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRM_Customer.SpouseBirthDayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Discount {
                get {
                    return ((decimal)(this[this.tableCRM_Customer.DiscountColumn]));
                }
                set {
                    this[this.tableCRM_Customer.DiscountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Group_Code {
                get {
                    return ((string)(this[this.tableCRM_Customer.Group_CodeColumn]));
                }
                set {
                    this[this.tableCRM_Customer.Group_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Group_Name {
                get {
                    return ((string)(this[this.tableCRM_Customer.Group_NameColumn]));
                }
                set {
                    this[this.tableCRM_Customer.Group_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SubGroup_Code {
                get {
                    try {
                        return ((string)(this[this.tableCRM_Customer.SubGroup_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubGroup_Code\' in table \'CRM_Customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRM_Customer.SubGroup_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SubGroup_Name {
                get {
                    try {
                        return ((string)(this[this.tableCRM_Customer.SubGroup_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubGroup_Name\' in table \'CRM_Customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRM_Customer.SubGroup_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Anniversary {
                get {
                    try {
                        return ((string)(this[this.tableCRM_Customer.AnniversaryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Anniversary\' in table \'CRM_Customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRM_Customer.AnniversaryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Loca {
                get {
                    try {
                        return ((string)(this[this.tableCRM_Customer.LocaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Loca\' in table \'CRM_Customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRM_Customer.LocaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LocaName {
                get {
                    try {
                        return ((string)(this[this.tableCRM_Customer.LocaNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LocaName\' in table \'CRM_Customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRM_Customer.LocaNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Cust_Category {
                get {
                    return ((string)(this[this.tableCRM_Customer.Cust_CategoryColumn]));
                }
                set {
                    this[this.tableCRM_Customer.Cust_CategoryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Point_Rate {
                get {
                    return ((string)(this[this.tableCRM_Customer.Point_RateColumn]));
                }
                set {
                    this[this.tableCRM_Customer.Point_RateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Code_From {
                get {
                    try {
                        return ((string)(this[this.tableCRM_Customer.Code_FromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Code_From\' in table \'CRM_Customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRM_Customer.Code_FromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Code_To {
                get {
                    try {
                        return ((string)(this[this.tableCRM_Customer.Code_ToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Code_To\' in table \'CRM_Customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRM_Customer.Code_ToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Gender {
                get {
                    try {
                        return ((string)(this[this.tableCRM_Customer.GenderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Gender\' in table \'CRM_Customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRM_Customer.GenderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Religion {
                get {
                    try {
                        return ((string)(this[this.tableCRM_Customer.ReligionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Religion\' in table \'CRM_Customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRM_Customer.ReligionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NN {
                get {
                    try {
                        return ((string)(this[this.tableCRM_Customer.NNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NN\' in table \'CRM_Customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRM_Customer.NNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFirstNameNull() {
                return this.IsNull(this.tableCRM_Customer.FirstNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFirstNameNull() {
                this[this.tableCRM_Customer.FirstNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSecondNameNull() {
                return this.IsNull(this.tableCRM_Customer.SecondNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSecondNameNull() {
                this[this.tableCRM_Customer.SecondNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddress1Null() {
                return this.IsNull(this.tableCRM_Customer.Address1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddress1Null() {
                this[this.tableCRM_Customer.Address1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddress2Null() {
                return this.IsNull(this.tableCRM_Customer.Address2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddress2Null() {
                this[this.tableCRM_Customer.Address2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddress3Null() {
                return this.IsNull(this.tableCRM_Customer.Address3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddress3Null() {
                this[this.tableCRM_Customer.Address3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddress4Null() {
                return this.IsNull(this.tableCRM_Customer.Address4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddress4Null() {
                this[this.tableCRM_Customer.Address4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddress5Null() {
                return this.IsNull(this.tableCRM_Customer.Address5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddress5Null() {
                this[this.tableCRM_Customer.Address5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPhoneNoNull() {
                return this.IsNull(this.tableCRM_Customer.PhoneNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPhoneNoNull() {
                this[this.tableCRM_Customer.PhoneNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOfficePhoneNull() {
                return this.IsNull(this.tableCRM_Customer.OfficePhoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOfficePhoneNull() {
                this[this.tableCRM_Customer.OfficePhoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMobileNull() {
                return this.IsNull(this.tableCRM_Customer.MobileColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMobileNull() {
                this[this.tableCRM_Customer.MobileColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsContactPersionNull() {
                return this.IsNull(this.tableCRM_Customer.ContactPersionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetContactPersionNull() {
                this[this.tableCRM_Customer.ContactPersionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsE_mailNull() {
                return this.IsNull(this.tableCRM_Customer.E_mailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetE_mailNull() {
                this[this.tableCRM_Customer.E_mailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBirthdayNull() {
                return this.IsNull(this.tableCRM_Customer.BirthdayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBirthdayNull() {
                this[this.tableCRM_Customer.BirthdayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReferanceNull() {
                return this.IsNull(this.tableCRM_Customer.ReferanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReferanceNull() {
                this[this.tableCRM_Customer.ReferanceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertDateNull() {
                return this.IsNull(this.tableCRM_Customer.InsertDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertDateNull() {
                this[this.tableCRM_Customer.InsertDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInactiveDateNull() {
                return this.IsNull(this.tableCRM_Customer.InactiveDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInactiveDateNull() {
                this[this.tableCRM_Customer.InactiveDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWorkshopNull() {
                return this.IsNull(this.tableCRM_Customer.WorkshopColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWorkshopNull() {
                this[this.tableCRM_Customer.WorkshopColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWesakNull() {
                return this.IsNull(this.tableCRM_Customer.WesakColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWesakNull() {
                this[this.tableCRM_Customer.WesakColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNewYearNull() {
                return this.IsNull(this.tableCRM_Customer.NewYearColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNewYearNull() {
                this[this.tableCRM_Customer.NewYearColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDontBCardNull() {
                return this.IsNull(this.tableCRM_Customer.DontBCardColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDontBCardNull() {
                this[this.tableCRM_Customer.DontBCardColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAbrodNull() {
                return this.IsNull(this.tableCRM_Customer.AbrodColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAbrodNull() {
                this[this.tableCRM_Customer.AbrodColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNextVisitDateNull() {
                return this.IsNull(this.tableCRM_Customer.NextVisitDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNextVisitDateNull() {
                this[this.tableCRM_Customer.NextVisitDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNameOfSpouseNull() {
                return this.IsNull(this.tableCRM_Customer.NameOfSpouseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNameOfSpouseNull() {
                this[this.tableCRM_Customer.NameOfSpouseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCard_NoNull() {
                return this.IsNull(this.tableCRM_Customer.Card_NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCard_NoNull() {
                this[this.tableCRM_Customer.Card_NoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMonthly_BalanceNull() {
                return this.IsNull(this.tableCRM_Customer.Monthly_BalanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMonthly_BalanceNull() {
                this[this.tableCRM_Customer.Monthly_BalanceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCardIssuedDateNull() {
                return this.IsNull(this.tableCRM_Customer.CardIssuedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCardIssuedDateNull() {
                this[this.tableCRM_Customer.CardIssuedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOccupationNull() {
                return this.IsNull(this.tableCRM_Customer.OccupationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOccupationNull() {
                this[this.tableCRM_Customer.OccupationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMaritalStatusNull() {
                return this.IsNull(this.tableCRM_Customer.MaritalStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMaritalStatusNull() {
                this[this.tableCRM_Customer.MaritalStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSpouseBirthDayNull() {
                return this.IsNull(this.tableCRM_Customer.SpouseBirthDayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSpouseBirthDayNull() {
                this[this.tableCRM_Customer.SpouseBirthDayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubGroup_CodeNull() {
                return this.IsNull(this.tableCRM_Customer.SubGroup_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubGroup_CodeNull() {
                this[this.tableCRM_Customer.SubGroup_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubGroup_NameNull() {
                return this.IsNull(this.tableCRM_Customer.SubGroup_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubGroup_NameNull() {
                this[this.tableCRM_Customer.SubGroup_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAnniversaryNull() {
                return this.IsNull(this.tableCRM_Customer.AnniversaryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAnniversaryNull() {
                this[this.tableCRM_Customer.AnniversaryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocaNull() {
                return this.IsNull(this.tableCRM_Customer.LocaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocaNull() {
                this[this.tableCRM_Customer.LocaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocaNameNull() {
                return this.IsNull(this.tableCRM_Customer.LocaNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocaNameNull() {
                this[this.tableCRM_Customer.LocaNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCode_FromNull() {
                return this.IsNull(this.tableCRM_Customer.Code_FromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCode_FromNull() {
                this[this.tableCRM_Customer.Code_FromColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCode_ToNull() {
                return this.IsNull(this.tableCRM_Customer.Code_ToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCode_ToNull() {
                this[this.tableCRM_Customer.Code_ToColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGenderNull() {
                return this.IsNull(this.tableCRM_Customer.GenderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGenderNull() {
                this[this.tableCRM_Customer.GenderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReligionNull() {
                return this.IsNull(this.tableCRM_Customer.ReligionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReligionNull() {
                this[this.tableCRM_Customer.ReligionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNNNull() {
                return this.IsNull(this.tableCRM_Customer.NNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNNNull() {
                this[this.tableCRM_Customer.NNColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dtOGFUploadRow : global::System.Data.DataRow {
            
            private dtOGFUploadDataTable tabledtOGFUpload;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtOGFUploadRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledtOGFUpload = ((dtOGFUploadDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReceiptDate {
                get {
                    try {
                        return ((string)(this[this.tabledtOGFUpload.ReceiptDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReceiptDate\' in table \'dtOGFUpload\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtOGFUpload.ReceiptDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReceiptTime {
                get {
                    try {
                        return ((string)(this[this.tabledtOGFUpload.ReceiptTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReceiptTime\' in table \'dtOGFUpload\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtOGFUpload.ReceiptTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReceiptNo {
                get {
                    try {
                        return ((string)(this[this.tabledtOGFUpload.ReceiptNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReceiptNo\' in table \'dtOGFUpload\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtOGFUpload.ReceiptNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NoOfItems {
                get {
                    try {
                        return ((int)(this[this.tabledtOGFUpload.NoOfItemsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NoOfItems\' in table \'dtOGFUpload\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtOGFUpload.NoOfItemsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SalesCurrency {
                get {
                    try {
                        return ((string)(this[this.tabledtOGFUpload.SalesCurrencyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalesCurrency\' in table \'dtOGFUpload\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtOGFUpload.SalesCurrencyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TotalSalesAmtB4Tax {
                get {
                    try {
                        return ((decimal)(this[this.tabledtOGFUpload.TotalSalesAmtB4TaxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalSalesAmtB4Tax\' in table \'dtOGFUpload\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtOGFUpload.TotalSalesAmtB4TaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TotalSalesAmtAfterTax {
                get {
                    try {
                        return ((decimal)(this[this.tabledtOGFUpload.TotalSalesAmtAfterTaxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalSalesAmtAfterTax\' in table \'dtOGFUpload\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtOGFUpload.TotalSalesAmtAfterTaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SalesTaxRate {
                get {
                    try {
                        return ((decimal)(this[this.tabledtOGFUpload.SalesTaxRateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalesTaxRate\' in table \'dtOGFUpload\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtOGFUpload.SalesTaxRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ServiceChargeAmt {
                get {
                    try {
                        return ((decimal)(this[this.tabledtOGFUpload.ServiceChargeAmtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ServiceChargeAmt\' in table \'dtOGFUpload\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtOGFUpload.ServiceChargeAmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PaymentAmt {
                get {
                    try {
                        return ((decimal)(this[this.tabledtOGFUpload.PaymentAmtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PaymentAmt\' in table \'dtOGFUpload\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtOGFUpload.PaymentAmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PaymentCurrency {
                get {
                    try {
                        return ((string)(this[this.tabledtOGFUpload.PaymentCurrencyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PaymentCurrency\' in table \'dtOGFUpload\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtOGFUpload.PaymentCurrencyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PaymentMethod {
                get {
                    try {
                        return ((string)(this[this.tabledtOGFUpload.PaymentMethodColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PaymentMethod\' in table \'dtOGFUpload\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtOGFUpload.PaymentMethodColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SalesType {
                get {
                    try {
                        return ((string)(this[this.tabledtOGFUpload.SalesTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalesType\' in table \'dtOGFUpload\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtOGFUpload.SalesTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string State {
                get {
                    try {
                        return ((string)(this[this.tabledtOGFUpload.StateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'State\' in table \'dtOGFUpload\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtOGFUpload.StateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DateFrom {
                get {
                    try {
                        return ((string)(this[this.tabledtOGFUpload.DateFromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateFrom\' in table \'dtOGFUpload\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtOGFUpload.DateFromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DateTo {
                get {
                    try {
                        return ((string)(this[this.tabledtOGFUpload.DateToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateTo\' in table \'dtOGFUpload\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtOGFUpload.DateToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReceiptDateNull() {
                return this.IsNull(this.tabledtOGFUpload.ReceiptDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReceiptDateNull() {
                this[this.tabledtOGFUpload.ReceiptDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReceiptTimeNull() {
                return this.IsNull(this.tabledtOGFUpload.ReceiptTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReceiptTimeNull() {
                this[this.tabledtOGFUpload.ReceiptTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReceiptNoNull() {
                return this.IsNull(this.tabledtOGFUpload.ReceiptNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReceiptNoNull() {
                this[this.tabledtOGFUpload.ReceiptNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNoOfItemsNull() {
                return this.IsNull(this.tabledtOGFUpload.NoOfItemsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNoOfItemsNull() {
                this[this.tabledtOGFUpload.NoOfItemsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesCurrencyNull() {
                return this.IsNull(this.tabledtOGFUpload.SalesCurrencyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesCurrencyNull() {
                this[this.tabledtOGFUpload.SalesCurrencyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalSalesAmtB4TaxNull() {
                return this.IsNull(this.tabledtOGFUpload.TotalSalesAmtB4TaxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalSalesAmtB4TaxNull() {
                this[this.tabledtOGFUpload.TotalSalesAmtB4TaxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalSalesAmtAfterTaxNull() {
                return this.IsNull(this.tabledtOGFUpload.TotalSalesAmtAfterTaxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalSalesAmtAfterTaxNull() {
                this[this.tabledtOGFUpload.TotalSalesAmtAfterTaxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesTaxRateNull() {
                return this.IsNull(this.tabledtOGFUpload.SalesTaxRateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesTaxRateNull() {
                this[this.tabledtOGFUpload.SalesTaxRateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsServiceChargeAmtNull() {
                return this.IsNull(this.tabledtOGFUpload.ServiceChargeAmtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetServiceChargeAmtNull() {
                this[this.tabledtOGFUpload.ServiceChargeAmtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPaymentAmtNull() {
                return this.IsNull(this.tabledtOGFUpload.PaymentAmtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPaymentAmtNull() {
                this[this.tabledtOGFUpload.PaymentAmtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPaymentCurrencyNull() {
                return this.IsNull(this.tabledtOGFUpload.PaymentCurrencyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPaymentCurrencyNull() {
                this[this.tabledtOGFUpload.PaymentCurrencyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPaymentMethodNull() {
                return this.IsNull(this.tabledtOGFUpload.PaymentMethodColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPaymentMethodNull() {
                this[this.tabledtOGFUpload.PaymentMethodColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesTypeNull() {
                return this.IsNull(this.tabledtOGFUpload.SalesTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesTypeNull() {
                this[this.tabledtOGFUpload.SalesTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStateNull() {
                return this.IsNull(this.tabledtOGFUpload.StateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStateNull() {
                this[this.tabledtOGFUpload.StateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateFromNull() {
                return this.IsNull(this.tabledtOGFUpload.DateFromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateFromNull() {
                this[this.tabledtOGFUpload.DateFromColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateToNull() {
                return this.IsNull(this.tabledtOGFUpload.DateToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateToNull() {
                this[this.tabledtOGFUpload.DateToColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CustomerRow : global::System.Data.DataRow {
            
            private CustomerDataTable tableCustomer;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CustomerRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCustomer = ((CustomerDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Loca {
                get {
                    try {
                        return ((string)(this[this.tableCustomer.LocaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Loca\' in table \'Customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomer.LocaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Select {
                get {
                    try {
                        return ((bool)(this[this.tableCustomer.SelectColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Select\' in table \'Customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomer.SelectColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Success {
                get {
                    try {
                        return ((bool)(this[this.tableCustomer.SuccessColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Success\' in table \'Customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomer.SuccessColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Cus_Code {
                get {
                    try {
                        return ((string)(this[this.tableCustomer.Cus_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cus_Code\' in table \'Customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomer.Cus_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Cus_Name {
                get {
                    try {
                        return ((string)(this[this.tableCustomer.Cus_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cus_Name\' in table \'Customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomer.Cus_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address {
                get {
                    try {
                        return ((string)(this[this.tableCustomer.AddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Address\' in table \'Customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomer.AddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Mobile {
                get {
                    try {
                        return ((string)(this[this.tableCustomer.MobileColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Mobile\' in table \'Customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomer.MobileColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DateFrom {
                get {
                    try {
                        return ((string)(this[this.tableCustomer.DateFromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateFrom\' in table \'Customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomer.DateFromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DateTo {
                get {
                    try {
                        return ((string)(this[this.tableCustomer.DateToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateTo\' in table \'Customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomer.DateToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Birthday {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableCustomer.BirthdayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Birthday\' in table \'Customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomer.BirthdayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Age {
                get {
                    try {
                        return ((int)(this[this.tableCustomer.AgeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Age\' in table \'Customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomer.AgeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Date {
                get {
                    try {
                        return ((string)(this[this.tableCustomer.DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Date\' in table \'Customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomer.DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NIC {
                get {
                    try {
                        return ((string)(this[this.tableCustomer.NICColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NIC\' in table \'Customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomer.NICColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Card_No {
                get {
                    try {
                        return ((string)(this[this.tableCustomer.Card_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Card_No\' in table \'Customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomer.Card_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RegDate {
                get {
                    try {
                        return ((string)(this[this.tableCustomer.RegDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RegDate\' in table \'Customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomer.RegDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocaNull() {
                return this.IsNull(this.tableCustomer.LocaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocaNull() {
                this[this.tableCustomer.LocaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelectNull() {
                return this.IsNull(this.tableCustomer.SelectColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelectNull() {
                this[this.tableCustomer.SelectColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSuccessNull() {
                return this.IsNull(this.tableCustomer.SuccessColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSuccessNull() {
                this[this.tableCustomer.SuccessColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCus_CodeNull() {
                return this.IsNull(this.tableCustomer.Cus_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCus_CodeNull() {
                this[this.tableCustomer.Cus_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCus_NameNull() {
                return this.IsNull(this.tableCustomer.Cus_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCus_NameNull() {
                this[this.tableCustomer.Cus_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddressNull() {
                return this.IsNull(this.tableCustomer.AddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddressNull() {
                this[this.tableCustomer.AddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMobileNull() {
                return this.IsNull(this.tableCustomer.MobileColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMobileNull() {
                this[this.tableCustomer.MobileColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateFromNull() {
                return this.IsNull(this.tableCustomer.DateFromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateFromNull() {
                this[this.tableCustomer.DateFromColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateToNull() {
                return this.IsNull(this.tableCustomer.DateToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateToNull() {
                this[this.tableCustomer.DateToColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBirthdayNull() {
                return this.IsNull(this.tableCustomer.BirthdayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBirthdayNull() {
                this[this.tableCustomer.BirthdayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAgeNull() {
                return this.IsNull(this.tableCustomer.AgeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAgeNull() {
                this[this.tableCustomer.AgeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateNull() {
                return this.IsNull(this.tableCustomer.DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateNull() {
                this[this.tableCustomer.DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNICNull() {
                return this.IsNull(this.tableCustomer.NICColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNICNull() {
                this[this.tableCustomer.NICColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCard_NoNull() {
                return this.IsNull(this.tableCustomer.Card_NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCard_NoNull() {
                this[this.tableCustomer.Card_NoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRegDateNull() {
                return this.IsNull(this.tableCustomer.RegDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRegDateNull() {
                this[this.tableCustomer.RegDateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DailyDetailsRow : global::System.Data.DataRow {
            
            private DailyDetailsDataTable tableDailyDetails;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DailyDetailsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDailyDetails = ((DailyDetailsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Date {
                get {
                    try {
                        return ((string)(this[this.tableDailyDetails.DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Date\' in table \'DailyDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDailyDetails.DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Customer {
                get {
                    try {
                        return ((string)(this[this.tableDailyDetails.CustomerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Customer\' in table \'DailyDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDailyDetails.CustomerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Doc_No {
                get {
                    return ((string)(this[this.tableDailyDetails.Doc_NoColumn]));
                }
                set {
                    this[this.tableDailyDetails.Doc_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Doctor {
                get {
                    return ((string)(this[this.tableDailyDetails.DoctorColumn]));
                }
                set {
                    this[this.tableDailyDetails.DoctorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Product {
                get {
                    try {
                        return ((string)(this[this.tableDailyDetails.ProductColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Product\' in table \'DailyDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDailyDetails.ProductColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WorkshopName {
                get {
                    try {
                        return ((string)(this[this.tableDailyDetails.WorkshopNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WorkshopName\' in table \'DailyDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDailyDetails.WorkshopNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Fitting {
                get {
                    try {
                        return ((bool)(this[this.tableDailyDetails.FittingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Fitting\' in table \'DailyDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDailyDetails.FittingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Loca {
                get {
                    try {
                        return ((string)(this[this.tableDailyDetails.LocaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Loca\' in table \'DailyDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDailyDetails.LocaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Card_No {
                get {
                    try {
                        return ((string)(this[this.tableDailyDetails.Card_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Card_No\' in table \'DailyDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDailyDetails.Card_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateNull() {
                return this.IsNull(this.tableDailyDetails.DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateNull() {
                this[this.tableDailyDetails.DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerNull() {
                return this.IsNull(this.tableDailyDetails.CustomerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerNull() {
                this[this.tableDailyDetails.CustomerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProductNull() {
                return this.IsNull(this.tableDailyDetails.ProductColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProductNull() {
                this[this.tableDailyDetails.ProductColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWorkshopNameNull() {
                return this.IsNull(this.tableDailyDetails.WorkshopNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWorkshopNameNull() {
                this[this.tableDailyDetails.WorkshopNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFittingNull() {
                return this.IsNull(this.tableDailyDetails.FittingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFittingNull() {
                this[this.tableDailyDetails.FittingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocaNull() {
                return this.IsNull(this.tableDailyDetails.LocaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocaNull() {
                this[this.tableDailyDetails.LocaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCard_NoNull() {
                return this.IsNull(this.tableDailyDetails.Card_NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCard_NoNull() {
                this[this.tableDailyDetails.Card_NoColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class Statement1Row : global::System.Data.DataRow {
            
            private Statement1DataTable tableStatement1;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Statement1Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableStatement1 = ((Statement1DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Cust_Code {
                get {
                    try {
                        return ((string)(this[this.tableStatement1.Cust_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cust_Code\' in table \'Statement1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStatement1.Cust_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Receipt {
                get {
                    try {
                        return ((string)(this[this.tableStatement1.ReceiptColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Receipt\' in table \'Statement1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStatement1.ReceiptColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime BillDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableStatement1.BillDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BillDate\' in table \'Statement1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStatement1.BillDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal BillAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableStatement1.BillAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BillAmount\' in table \'Statement1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStatement1.BillAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Earn {
                get {
                    try {
                        return ((decimal)(this[this.tableStatement1.EarnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Earn\' in table \'Statement1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStatement1.EarnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Redeem {
                get {
                    try {
                        return ((decimal)(this[this.tableStatement1.RedeemColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Redeem\' in table \'Statement1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStatement1.RedeemColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ER {
                get {
                    try {
                        return ((string)(this[this.tableStatement1.ERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ER\' in table \'Statement1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStatement1.ERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Unit {
                get {
                    try {
                        return ((string)(this[this.tableStatement1.UnitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Unit\' in table \'Statement1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStatement1.UnitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Loca {
                get {
                    try {
                        return ((string)(this[this.tableStatement1.LocaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Loca\' in table \'Statement1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStatement1.LocaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LocaName {
                get {
                    try {
                        return ((string)(this[this.tableStatement1.LocaNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LocaName\' in table \'Statement1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStatement1.LocaNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Cus_Name {
                get {
                    try {
                        return ((string)(this[this.tableStatement1.Cus_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cus_Name\' in table \'Statement1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStatement1.Cus_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Location {
                get {
                    try {
                        return ((string)(this[this.tableStatement1.LocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Location\' in table \'Statement1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStatement1.LocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateFrom {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableStatement1.DateFromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateFrom\' in table \'Statement1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStatement1.DateFromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateTo {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableStatement1.DateToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateTo\' in table \'Statement1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStatement1.DateToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prod_Code {
                get {
                    try {
                        return ((string)(this[this.tableStatement1.Prod_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Prod_Code\' in table \'Statement1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStatement1.Prod_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prod_Name {
                get {
                    try {
                        return ((string)(this[this.tableStatement1.Prod_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Prod_Name\' in table \'Statement1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStatement1.Prod_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Qty {
                get {
                    try {
                        return ((decimal)(this[this.tableStatement1.QtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Qty\' in table \'Statement1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStatement1.QtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Receipt_No {
                get {
                    try {
                        return ((string)(this[this.tableStatement1.Receipt_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Receipt_No\' in table \'Statement1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStatement1.Receipt_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReportDate {
                get {
                    try {
                        return ((string)(this[this.tableStatement1.ReportDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReportDate\' in table \'Statement1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStatement1.ReportDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Amount {
                get {
                    try {
                        return ((decimal)(this[this.tableStatement1.AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Amount\' in table \'Statement1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStatement1.AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Selling {
                get {
                    try {
                        return ((decimal)(this[this.tableStatement1.SellingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Selling\' in table \'Statement1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStatement1.SellingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal BFBalance {
                get {
                    try {
                        return ((decimal)(this[this.tableStatement1.BFBalanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BFBalance\' in table \'Statement1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStatement1.BFBalanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal BalPoints {
                get {
                    try {
                        return ((decimal)(this[this.tableStatement1.BalPointsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BalPoints\' in table \'Statement1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStatement1.BalPointsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Card_No {
                get {
                    try {
                        return ((string)(this[this.tableStatement1.Card_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Card_No\' in table \'Statement1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStatement1.Card_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCust_CodeNull() {
                return this.IsNull(this.tableStatement1.Cust_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCust_CodeNull() {
                this[this.tableStatement1.Cust_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReceiptNull() {
                return this.IsNull(this.tableStatement1.ReceiptColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReceiptNull() {
                this[this.tableStatement1.ReceiptColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBillDateNull() {
                return this.IsNull(this.tableStatement1.BillDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBillDateNull() {
                this[this.tableStatement1.BillDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBillAmountNull() {
                return this.IsNull(this.tableStatement1.BillAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBillAmountNull() {
                this[this.tableStatement1.BillAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEarnNull() {
                return this.IsNull(this.tableStatement1.EarnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEarnNull() {
                this[this.tableStatement1.EarnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRedeemNull() {
                return this.IsNull(this.tableStatement1.RedeemColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRedeemNull() {
                this[this.tableStatement1.RedeemColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsERNull() {
                return this.IsNull(this.tableStatement1.ERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetERNull() {
                this[this.tableStatement1.ERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnitNull() {
                return this.IsNull(this.tableStatement1.UnitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnitNull() {
                this[this.tableStatement1.UnitColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocaNull() {
                return this.IsNull(this.tableStatement1.LocaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocaNull() {
                this[this.tableStatement1.LocaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocaNameNull() {
                return this.IsNull(this.tableStatement1.LocaNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocaNameNull() {
                this[this.tableStatement1.LocaNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCus_NameNull() {
                return this.IsNull(this.tableStatement1.Cus_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCus_NameNull() {
                this[this.tableStatement1.Cus_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocationNull() {
                return this.IsNull(this.tableStatement1.LocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocationNull() {
                this[this.tableStatement1.LocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateFromNull() {
                return this.IsNull(this.tableStatement1.DateFromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateFromNull() {
                this[this.tableStatement1.DateFromColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateToNull() {
                return this.IsNull(this.tableStatement1.DateToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateToNull() {
                this[this.tableStatement1.DateToColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_CodeNull() {
                return this.IsNull(this.tableStatement1.Prod_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_CodeNull() {
                this[this.tableStatement1.Prod_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProd_NameNull() {
                return this.IsNull(this.tableStatement1.Prod_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProd_NameNull() {
                this[this.tableStatement1.Prod_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQtyNull() {
                return this.IsNull(this.tableStatement1.QtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQtyNull() {
                this[this.tableStatement1.QtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReceipt_NoNull() {
                return this.IsNull(this.tableStatement1.Receipt_NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReceipt_NoNull() {
                this[this.tableStatement1.Receipt_NoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReportDateNull() {
                return this.IsNull(this.tableStatement1.ReportDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReportDateNull() {
                this[this.tableStatement1.ReportDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountNull() {
                return this.IsNull(this.tableStatement1.AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountNull() {
                this[this.tableStatement1.AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSellingNull() {
                return this.IsNull(this.tableStatement1.SellingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSellingNull() {
                this[this.tableStatement1.SellingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBFBalanceNull() {
                return this.IsNull(this.tableStatement1.BFBalanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBFBalanceNull() {
                this[this.tableStatement1.BFBalanceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBalPointsNull() {
                return this.IsNull(this.tableStatement1.BalPointsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBalPointsNull() {
                this[this.tableStatement1.BalPointsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCard_NoNull() {
                return this.IsNull(this.tableStatement1.Card_NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCard_NoNull() {
                this[this.tableStatement1.Card_NoColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dsIssuedVoucherRow : global::System.Data.DataRow {
            
            private dsIssuedVoucherDataTable tabledsIssuedVoucher;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsIssuedVoucherRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledsIssuedVoucher = ((dsIssuedVoucherDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Voucher_Code {
                get {
                    try {
                        return ((string)(this[this.tabledsIssuedVoucher.Voucher_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Voucher_Code\' in table \'dsIssuedVoucher\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsIssuedVoucher.Voucher_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Receipt_No {
                get {
                    try {
                        return ((string)(this[this.tabledsIssuedVoucher.Receipt_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Receipt_No\' in table \'dsIssuedVoucher\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsIssuedVoucher.Receipt_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Issued_Date {
                get {
                    try {
                        return ((string)(this[this.tabledsIssuedVoucher.Issued_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Issued_Date\' in table \'dsIssuedVoucher\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsIssuedVoucher.Issued_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Amount {
                get {
                    try {
                        return ((decimal)(this[this.tabledsIssuedVoucher.AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Amount\' in table \'dsIssuedVoucher\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsIssuedVoucher.AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DateFrom {
                get {
                    try {
                        return ((string)(this[this.tabledsIssuedVoucher.DateFromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateFrom\' in table \'dsIssuedVoucher\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsIssuedVoucher.DateFromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DateTo {
                get {
                    try {
                        return ((string)(this[this.tabledsIssuedVoucher.DateToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateTo\' in table \'dsIssuedVoucher\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsIssuedVoucher.DateToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Loca {
                get {
                    try {
                        return ((string)(this[this.tabledsIssuedVoucher.LocaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Loca\' in table \'dsIssuedVoucher\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsIssuedVoucher.LocaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Loca_Descrip {
                get {
                    try {
                        return ((string)(this[this.tabledsIssuedVoucher.Loca_DescripColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Loca_Descrip\' in table \'dsIssuedVoucher\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsIssuedVoucher.Loca_DescripColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Gi_Code {
                get {
                    try {
                        return ((decimal)(this[this.tabledsIssuedVoucher.Gi_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Gi_Code\' in table \'dsIssuedVoucher\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsIssuedVoucher.Gi_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVoucher_CodeNull() {
                return this.IsNull(this.tabledsIssuedVoucher.Voucher_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVoucher_CodeNull() {
                this[this.tabledsIssuedVoucher.Voucher_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReceipt_NoNull() {
                return this.IsNull(this.tabledsIssuedVoucher.Receipt_NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReceipt_NoNull() {
                this[this.tabledsIssuedVoucher.Receipt_NoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIssued_DateNull() {
                return this.IsNull(this.tabledsIssuedVoucher.Issued_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIssued_DateNull() {
                this[this.tabledsIssuedVoucher.Issued_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountNull() {
                return this.IsNull(this.tabledsIssuedVoucher.AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountNull() {
                this[this.tabledsIssuedVoucher.AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateFromNull() {
                return this.IsNull(this.tabledsIssuedVoucher.DateFromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateFromNull() {
                this[this.tabledsIssuedVoucher.DateFromColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateToNull() {
                return this.IsNull(this.tabledsIssuedVoucher.DateToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateToNull() {
                this[this.tabledsIssuedVoucher.DateToColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocaNull() {
                return this.IsNull(this.tabledsIssuedVoucher.LocaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocaNull() {
                this[this.tabledsIssuedVoucher.LocaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLoca_DescripNull() {
                return this.IsNull(this.tabledsIssuedVoucher.Loca_DescripColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLoca_DescripNull() {
                this[this.tabledsIssuedVoucher.Loca_DescripColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGi_CodeNull() {
                return this.IsNull(this.tabledsIssuedVoucher.Gi_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGi_CodeNull() {
                this[this.tabledsIssuedVoucher.Gi_CodeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dsReceivedVoucherRow : global::System.Data.DataRow {
            
            private dsReceivedVoucherDataTable tabledsReceivedVoucher;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsReceivedVoucherRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledsReceivedVoucher = ((dsReceivedVoucherDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Voucher_Code {
                get {
                    try {
                        return ((string)(this[this.tabledsReceivedVoucher.Voucher_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Voucher_Code\' in table \'dsReceivedVoucher\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsReceivedVoucher.Voucher_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Receipt_No {
                get {
                    try {
                        return ((string)(this[this.tabledsReceivedVoucher.Receipt_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Receipt_No\' in table \'dsReceivedVoucher\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsReceivedVoucher.Receipt_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Received_Date {
                get {
                    try {
                        return ((string)(this[this.tabledsReceivedVoucher.Received_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Received_Date\' in table \'dsReceivedVoucher\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsReceivedVoucher.Received_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Amount {
                get {
                    try {
                        return ((decimal)(this[this.tabledsReceivedVoucher.AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Amount\' in table \'dsReceivedVoucher\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsReceivedVoucher.AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DateFrom {
                get {
                    try {
                        return ((string)(this[this.tabledsReceivedVoucher.DateFromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateFrom\' in table \'dsReceivedVoucher\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsReceivedVoucher.DateFromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DateTo {
                get {
                    try {
                        return ((string)(this[this.tabledsReceivedVoucher.DateToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateTo\' in table \'dsReceivedVoucher\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsReceivedVoucher.DateToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVoucher_CodeNull() {
                return this.IsNull(this.tabledsReceivedVoucher.Voucher_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVoucher_CodeNull() {
                this[this.tabledsReceivedVoucher.Voucher_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReceipt_NoNull() {
                return this.IsNull(this.tabledsReceivedVoucher.Receipt_NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReceipt_NoNull() {
                this[this.tabledsReceivedVoucher.Receipt_NoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReceived_DateNull() {
                return this.IsNull(this.tabledsReceivedVoucher.Received_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReceived_DateNull() {
                this[this.tabledsReceivedVoucher.Received_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountNull() {
                return this.IsNull(this.tabledsReceivedVoucher.AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountNull() {
                this[this.tabledsReceivedVoucher.AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateFromNull() {
                return this.IsNull(this.tabledsReceivedVoucher.DateFromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateFromNull() {
                this[this.tabledsReceivedVoucher.DateFromColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateToNull() {
                return this.IsNull(this.tabledsReceivedVoucher.DateToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateToNull() {
                this[this.tabledsReceivedVoucher.DateToColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dtExpDetailsRow : global::System.Data.DataRow {
            
            private dtExpDetailsDataTable tabledtExpDetails;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtExpDetailsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledtExpDetails = ((dtExpDetailsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Doc_No {
                get {
                    try {
                        return ((string)(this[this.tabledtExpDetails.Doc_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Doc_No\' in table \'dtExpDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtExpDetails.Doc_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Loca {
                get {
                    try {
                        return ((string)(this[this.tabledtExpDetails.LocaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Loca\' in table \'dtExpDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtExpDetails.LocaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Loca_Desc {
                get {
                    try {
                        return ((string)(this[this.tabledtExpDetails.Loca_DescColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Loca_Desc\' in table \'dtExpDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtExpDetails.Loca_DescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Exp_Code {
                get {
                    try {
                        return ((string)(this[this.tabledtExpDetails.Exp_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Exp_Code\' in table \'dtExpDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtExpDetails.Exp_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Exp_Name {
                get {
                    try {
                        return ((string)(this[this.tabledtExpDetails.Exp_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Exp_Name\' in table \'dtExpDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtExpDetails.Exp_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Amount {
                get {
                    try {
                        return ((decimal)(this[this.tabledtExpDetails.AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Amount\' in table \'dtExpDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtExpDetails.AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Memo {
                get {
                    try {
                        return ((string)(this[this.tabledtExpDetails.MemoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Memo\' in table \'dtExpDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtExpDetails.MemoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CreateUser {
                get {
                    try {
                        return ((string)(this[this.tabledtExpDetails.CreateUserColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreateUser\' in table \'dtExpDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtExpDetails.CreateUserColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Date {
                get {
                    try {
                        return ((string)(this[this.tabledtExpDetails.DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Date\' in table \'dtExpDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtExpDetails.DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string State {
                get {
                    try {
                        return ((string)(this[this.tabledtExpDetails.StateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'State\' in table \'dtExpDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtExpDetails.StateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Bill_No {
                get {
                    try {
                        return ((string)(this[this.tabledtExpDetails.Bill_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Bill_No\' in table \'dtExpDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtExpDetails.Bill_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDoc_NoNull() {
                return this.IsNull(this.tabledtExpDetails.Doc_NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDoc_NoNull() {
                this[this.tabledtExpDetails.Doc_NoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocaNull() {
                return this.IsNull(this.tabledtExpDetails.LocaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocaNull() {
                this[this.tabledtExpDetails.LocaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLoca_DescNull() {
                return this.IsNull(this.tabledtExpDetails.Loca_DescColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLoca_DescNull() {
                this[this.tabledtExpDetails.Loca_DescColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExp_CodeNull() {
                return this.IsNull(this.tabledtExpDetails.Exp_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExp_CodeNull() {
                this[this.tabledtExpDetails.Exp_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExp_NameNull() {
                return this.IsNull(this.tabledtExpDetails.Exp_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExp_NameNull() {
                this[this.tabledtExpDetails.Exp_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountNull() {
                return this.IsNull(this.tabledtExpDetails.AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountNull() {
                this[this.tabledtExpDetails.AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMemoNull() {
                return this.IsNull(this.tabledtExpDetails.MemoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMemoNull() {
                this[this.tabledtExpDetails.MemoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreateUserNull() {
                return this.IsNull(this.tabledtExpDetails.CreateUserColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreateUserNull() {
                this[this.tabledtExpDetails.CreateUserColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateNull() {
                return this.IsNull(this.tabledtExpDetails.DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateNull() {
                this[this.tabledtExpDetails.DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStateNull() {
                return this.IsNull(this.tabledtExpDetails.StateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStateNull() {
                this[this.tabledtExpDetails.StateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBill_NoNull() {
                return this.IsNull(this.tabledtExpDetails.Bill_NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBill_NoNull() {
                this[this.tabledtExpDetails.Bill_NoColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DayEnd_Pos_TransactionRow : global::System.Data.DataRow {
            
            private DayEnd_Pos_TransactionDataTable tableDayEnd_Pos_Transaction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DayEnd_Pos_TransactionRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDayEnd_Pos_Transaction = ((DayEnd_Pos_TransactionDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Item_Code {
                get {
                    try {
                        return ((string)(this[this.tableDayEnd_Pos_Transaction.Item_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Item_Code\' in table \'DayEnd_Pos_Transaction\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDayEnd_Pos_Transaction.Item_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Item_Descrip {
                get {
                    try {
                        return ((string)(this[this.tableDayEnd_Pos_Transaction.Item_DescripColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Item_Descrip\' in table \'DayEnd_Pos_Transaction\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDayEnd_Pos_Transaction.Item_DescripColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Tr_Type {
                get {
                    try {
                        return ((string)(this[this.tableDayEnd_Pos_Transaction.Tr_TypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Tr_Type\' in table \'DayEnd_Pos_Transaction\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDayEnd_Pos_Transaction.Tr_TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Iid {
                get {
                    try {
                        return ((string)(this[this.tableDayEnd_Pos_Transaction.IidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Iid\' in table \'DayEnd_Pos_Transaction\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDayEnd_Pos_Transaction.IidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Amount {
                get {
                    try {
                        return ((decimal)(this[this.tableDayEnd_Pos_Transaction.AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Amount\' in table \'DayEnd_Pos_Transaction\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDayEnd_Pos_Transaction.AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Receipt_No {
                get {
                    try {
                        return ((string)(this[this.tableDayEnd_Pos_Transaction.Receipt_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Receipt_No\' in table \'DayEnd_Pos_Transaction\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDayEnd_Pos_Transaction.Receipt_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Unit {
                get {
                    try {
                        return ((string)(this[this.tableDayEnd_Pos_Transaction.UnitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Unit\' in table \'DayEnd_Pos_Transaction\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDayEnd_Pos_Transaction.UnitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Cashier {
                get {
                    try {
                        return ((string)(this[this.tableDayEnd_Pos_Transaction.CashierColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cashier\' in table \'DayEnd_Pos_Transaction\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDayEnd_Pos_Transaction.CashierColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Dis {
                get {
                    try {
                        return ((string)(this[this.tableDayEnd_Pos_Transaction.DisColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Dis\' in table \'DayEnd_Pos_Transaction\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDayEnd_Pos_Transaction.DisColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReportDate {
                get {
                    return ((string)(this[this.tableDayEnd_Pos_Transaction.ReportDateColumn]));
                }
                set {
                    this[this.tableDayEnd_Pos_Transaction.ReportDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DateFrom {
                get {
                    try {
                        return ((string)(this[this.tableDayEnd_Pos_Transaction.DateFromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateFrom\' in table \'DayEnd_Pos_Transaction\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDayEnd_Pos_Transaction.DateFromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DateTo {
                get {
                    try {
                        return ((string)(this[this.tableDayEnd_Pos_Transaction.DateToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateTo\' in table \'DayEnd_Pos_Transaction\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDayEnd_Pos_Transaction.DateToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal BillValue {
                get {
                    try {
                        return ((decimal)(this[this.tableDayEnd_Pos_Transaction.BillValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BillValue\' in table \'DayEnd_Pos_Transaction\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDayEnd_Pos_Transaction.BillValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Loca {
                get {
                    try {
                        return ((string)(this[this.tableDayEnd_Pos_Transaction.LocaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Loca\' in table \'DayEnd_Pos_Transaction\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDayEnd_Pos_Transaction.LocaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Loca_Descrip {
                get {
                    try {
                        return ((string)(this[this.tableDayEnd_Pos_Transaction.Loca_DescripColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Loca_Descrip\' in table \'DayEnd_Pos_Transaction\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDayEnd_Pos_Transaction.Loca_DescripColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Tr_Date {
                get {
                    try {
                        return ((string)(this[this.tableDayEnd_Pos_Transaction.Tr_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Tr_Date\' in table \'DayEnd_Pos_Transaction\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDayEnd_Pos_Transaction.Tr_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItem_CodeNull() {
                return this.IsNull(this.tableDayEnd_Pos_Transaction.Item_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItem_CodeNull() {
                this[this.tableDayEnd_Pos_Transaction.Item_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItem_DescripNull() {
                return this.IsNull(this.tableDayEnd_Pos_Transaction.Item_DescripColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItem_DescripNull() {
                this[this.tableDayEnd_Pos_Transaction.Item_DescripColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTr_TypeNull() {
                return this.IsNull(this.tableDayEnd_Pos_Transaction.Tr_TypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTr_TypeNull() {
                this[this.tableDayEnd_Pos_Transaction.Tr_TypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIidNull() {
                return this.IsNull(this.tableDayEnd_Pos_Transaction.IidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIidNull() {
                this[this.tableDayEnd_Pos_Transaction.IidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountNull() {
                return this.IsNull(this.tableDayEnd_Pos_Transaction.AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountNull() {
                this[this.tableDayEnd_Pos_Transaction.AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReceipt_NoNull() {
                return this.IsNull(this.tableDayEnd_Pos_Transaction.Receipt_NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReceipt_NoNull() {
                this[this.tableDayEnd_Pos_Transaction.Receipt_NoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnitNull() {
                return this.IsNull(this.tableDayEnd_Pos_Transaction.UnitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnitNull() {
                this[this.tableDayEnd_Pos_Transaction.UnitColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCashierNull() {
                return this.IsNull(this.tableDayEnd_Pos_Transaction.CashierColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCashierNull() {
                this[this.tableDayEnd_Pos_Transaction.CashierColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDisNull() {
                return this.IsNull(this.tableDayEnd_Pos_Transaction.DisColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDisNull() {
                this[this.tableDayEnd_Pos_Transaction.DisColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateFromNull() {
                return this.IsNull(this.tableDayEnd_Pos_Transaction.DateFromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateFromNull() {
                this[this.tableDayEnd_Pos_Transaction.DateFromColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateToNull() {
                return this.IsNull(this.tableDayEnd_Pos_Transaction.DateToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateToNull() {
                this[this.tableDayEnd_Pos_Transaction.DateToColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBillValueNull() {
                return this.IsNull(this.tableDayEnd_Pos_Transaction.BillValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBillValueNull() {
                this[this.tableDayEnd_Pos_Transaction.BillValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocaNull() {
                return this.IsNull(this.tableDayEnd_Pos_Transaction.LocaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocaNull() {
                this[this.tableDayEnd_Pos_Transaction.LocaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLoca_DescripNull() {
                return this.IsNull(this.tableDayEnd_Pos_Transaction.Loca_DescripColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLoca_DescripNull() {
                this[this.tableDayEnd_Pos_Transaction.Loca_DescripColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTr_DateNull() {
                return this.IsNull(this.tableDayEnd_Pos_Transaction.Tr_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTr_DateNull() {
                this[this.tableDayEnd_Pos_Transaction.Tr_DateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DepartmentRowChangeEvent : global::System.EventArgs {
            
            private DepartmentRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DepartmentRowChangeEvent(DepartmentRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DepartmentRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CategoryRowChangeEvent : global::System.EventArgs {
            
            private CategoryRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CategoryRowChangeEvent(CategoryRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CategoryRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class StockAdjustRowChangeEvent : global::System.EventArgs {
            
            private StockAdjustRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockAdjustRowChangeEvent(StockAdjustRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockAdjustRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class TransferNoteRowChangeEvent : global::System.EventArgs {
            
            private TransferNoteRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TransferNoteRowChangeEvent(TransferNoteRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TransferNoteRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dsTogDetailsRowChangeEvent : global::System.EventArgs {
            
            private dsTogDetailsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsTogDetailsRowChangeEvent(dsTogDetailsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsTogDetailsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dsStockAdjustDetailsRowChangeEvent : global::System.EventArgs {
            
            private dsStockAdjustDetailsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsStockAdjustDetailsRowChangeEvent(dsStockAdjustDetailsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsStockAdjustDetailsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class GoodReceivedNoteRowChangeEvent : global::System.EventArgs {
            
            private GoodReceivedNoteRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GoodReceivedNoteRowChangeEvent(GoodReceivedNoteRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GoodReceivedNoteRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dsGRNDetailsForRepRowChangeEvent : global::System.EventArgs {
            
            private dsGRNDetailsForRepRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsGRNDetailsForRepRowChangeEvent(dsGRNDetailsForRepRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsGRNDetailsForRepRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class PurchaseOrderRowChangeEvent : global::System.EventArgs {
            
            private PurchaseOrderRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PurchaseOrderRowChangeEvent(PurchaseOrderRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PurchaseOrderRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dsPurchaseOrderDetailsRowChangeEvent : global::System.EventArgs {
            
            private dsPurchaseOrderDetailsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsPurchaseOrderDetailsRowChangeEvent(dsPurchaseOrderDetailsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsPurchaseOrderDetailsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ProductRowChangeEvent : global::System.EventArgs {
            
            private ProductRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProductRowChangeEvent(ProductRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProductRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class InvoiceRowChangeEvent : global::System.EventArgs {
            
            private InvoiceRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public InvoiceRowChangeEvent(InvoiceRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public InvoiceRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dsAccountRowChangeEvent : global::System.EventArgs {
            
            private dsAccountRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsAccountRowChangeEvent(dsAccountRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsAccountRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dsInvoiceDetailsRowChangeEvent : global::System.EventArgs {
            
            private dsInvoiceDetailsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsInvoiceDetailsRowChangeEvent(dsInvoiceDetailsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsInvoiceDetailsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dsStockProductwiseRowChangeEvent : global::System.EventArgs {
            
            private dsStockProductwiseRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsStockProductwiseRowChangeEvent(dsStockProductwiseRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsStockProductwiseRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class PendingPaymentsRowChangeEvent : global::System.EventArgs {
            
            private PendingPaymentsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PendingPaymentsRowChangeEvent(PendingPaymentsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PendingPaymentsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class SelectedPaymentsRowChangeEvent : global::System.EventArgs {
            
            private SelectedPaymentsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SelectedPaymentsRowChangeEvent(SelectedPaymentsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SelectedPaymentsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class PaymentDetailsRowChangeEvent : global::System.EventArgs {
            
            private PaymentDetailsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PaymentDetailsRowChangeEvent(PaymentDetailsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PaymentDetailsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tbPaidPaymentSummaryRowChangeEvent : global::System.EventArgs {
            
            private tbPaidPaymentSummaryRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tbPaidPaymentSummaryRowChangeEvent(tbPaidPaymentSummaryRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tbPaidPaymentSummaryRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tbPaidPaymentModeRowChangeEvent : global::System.EventArgs {
            
            private tbPaidPaymentModeRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tbPaidPaymentModeRowChangeEvent(tbPaidPaymentModeRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tbPaidPaymentModeRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class SupplierPaymentSummaryRowChangeEvent : global::System.EventArgs {
            
            private SupplierPaymentSummaryRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SupplierPaymentSummaryRowChangeEvent(SupplierPaymentSummaryRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SupplierPaymentSummaryRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class TransactionSummaryRowChangeEvent : global::System.EventArgs {
            
            private TransactionSummaryRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TransactionSummaryRowChangeEvent(TransactionSummaryRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TransactionSummaryRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class StockDetailsRowChangeEvent : global::System.EventArgs {
            
            private StockDetailsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockDetailsRowChangeEvent(StockDetailsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockDetailsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dsSalesDetailsRowChangeEvent : global::System.EventArgs {
            
            private dsSalesDetailsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsSalesDetailsRowChangeEvent(dsSalesDetailsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsSalesDetailsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tbReportMonthlyAnalyseRowChangeEvent : global::System.EventArgs {
            
            private tbReportMonthlyAnalyseRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tbReportMonthlyAnalyseRowChangeEvent(tbReportMonthlyAnalyseRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tbReportMonthlyAnalyseRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CollectionRowChangeEvent : global::System.EventArgs {
            
            private CollectionRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CollectionRowChangeEvent(CollectionRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CollectionRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class SelectedRowChangeEvent : global::System.EventArgs {
            
            private SelectedRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SelectedRowChangeEvent(SelectedRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SelectedRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dsPurchasingDetailsRowChangeEvent : global::System.EventArgs {
            
            private dsPurchasingDetailsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsPurchasingDetailsRowChangeEvent(dsPurchasingDetailsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsPurchasingDetailsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dsAnalyseDataRowChangeEvent : global::System.EventArgs {
            
            private dsAnalyseDataRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsAnalyseDataRowChangeEvent(dsAnalyseDataRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsAnalyseDataRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dsProductBinCardRowChangeEvent : global::System.EventArgs {
            
            private dsProductBinCardRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsProductBinCardRowChangeEvent(dsProductBinCardRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsProductBinCardRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dsBarcodeRowChangeEvent : global::System.EventArgs {
            
            private dsBarcodeRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsBarcodeRowChangeEvent(dsBarcodeRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsBarcodeRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class SupplierStatementRowChangeEvent : global::System.EventArgs {
            
            private SupplierStatementRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SupplierStatementRowChangeEvent(SupplierStatementRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SupplierStatementRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dsChequeReconRowChangeEvent : global::System.EventArgs {
            
            private dsChequeReconRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsChequeReconRowChangeEvent(dsChequeReconRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsChequeReconRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dsChequeReconDetailsRowChangeEvent : global::System.EventArgs {
            
            private dsChequeReconDetailsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsChequeReconDetailsRowChangeEvent(dsChequeReconDetailsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsChequeReconDetailsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dsProfitableProductRowChangeEvent : global::System.EventArgs {
            
            private dsProfitableProductRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsProfitableProductRowChangeEvent(dsProfitableProductRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsProfitableProductRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dsReOrderLevelDetailsRowChangeEvent : global::System.EventArgs {
            
            private dsReOrderLevelDetailsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsReOrderLevelDetailsRowChangeEvent(dsReOrderLevelDetailsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsReOrderLevelDetailsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ManufacturerDetailsRowChangeEvent : global::System.EventArgs {
            
            private ManufacturerDetailsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ManufacturerDetailsRowChangeEvent(ManufacturerDetailsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ManufacturerDetailsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dsCreditorsOutstandingRowChangeEvent : global::System.EventArgs {
            
            private dsCreditorsOutstandingRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsCreditorsOutstandingRowChangeEvent(dsCreditorsOutstandingRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsCreditorsOutstandingRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dsProductMovingRowChangeEvent : global::System.EventArgs {
            
            private dsProductMovingRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsProductMovingRowChangeEvent(dsProductMovingRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsProductMovingRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dsProductSalesComparisonRowChangeEvent : global::System.EventArgs {
            
            private dsProductSalesComparisonRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsProductSalesComparisonRowChangeEvent(dsProductSalesComparisonRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsProductSalesComparisonRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dsProductDetails_ChangeRowChangeEvent : global::System.EventArgs {
            
            private dsProductDetails_ChangeRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsProductDetails_ChangeRowChangeEvent(dsProductDetails_ChangeRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsProductDetails_ChangeRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dsTempPacketProductRowChangeEvent : global::System.EventArgs {
            
            private dsTempPacketProductRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsTempPacketProductRowChangeEvent(dsTempPacketProductRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsTempPacketProductRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dsPacketingProductNoteRowChangeEvent : global::System.EventArgs {
            
            private dsPacketingProductNoteRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsPacketingProductNoteRowChangeEvent(dsPacketingProductNoteRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsPacketingProductNoteRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dsNonMovingProductRowChangeEvent : global::System.EventArgs {
            
            private dsNonMovingProductRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsNonMovingProductRowChangeEvent(dsNonMovingProductRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsNonMovingProductRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dsHourlySalesRowChangeEvent : global::System.EventArgs {
            
            private dsHourlySalesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsHourlySalesRowChangeEvent(dsHourlySalesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsHourlySalesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dsDailyCollectionRowChangeEvent : global::System.EventArgs {
            
            private dsDailyCollectionRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsDailyCollectionRowChangeEvent(dsDailyCollectionRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsDailyCollectionRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dsReceiptWiseSalesRowChangeEvent : global::System.EventArgs {
            
            private dsReceiptWiseSalesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsReceiptWiseSalesRowChangeEvent(dsReceiptWiseSalesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsReceiptWiseSalesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dsSalesmanSalesRowChangeEvent : global::System.EventArgs {
            
            private dsSalesmanSalesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsSalesmanSalesRowChangeEvent(dsSalesmanSalesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsSalesmanSalesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dsPurSalesStockRowChangeEvent : global::System.EventArgs {
            
            private dsPurSalesStockRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsPurSalesStockRowChangeEvent(dsPurSalesStockRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsPurSalesStockRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dsGivenDateStockRowChangeEvent : global::System.EventArgs {
            
            private dsGivenDateStockRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsGivenDateStockRowChangeEvent(dsGivenDateStockRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsGivenDateStockRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dsProductToBeReturnRowChangeEvent : global::System.EventArgs {
            
            private dsProductToBeReturnRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsProductToBeReturnRowChangeEvent(dsProductToBeReturnRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsProductToBeReturnRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dsProdROLRowChangeEvent : global::System.EventArgs {
            
            private dsProdROLRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsProdROLRowChangeEvent(dsProdROLRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsProdROLRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dsProductReqRowChangeEvent : global::System.EventArgs {
            
            private dsProductReqRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsProductReqRowChangeEvent(dsProductReqRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsProductReqRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dsProductDiscountRowChangeEvent : global::System.EventArgs {
            
            private dsProductDiscountRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsProductDiscountRowChangeEvent(dsProductDiscountRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsProductDiscountRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class PendingReturnsRowChangeEvent : global::System.EventArgs {
            
            private PendingReturnsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PendingReturnsRowChangeEvent(PendingReturnsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PendingReturnsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class SelectedSetoffRowChangeEvent : global::System.EventArgs {
            
            private SelectedSetoffRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SelectedSetoffRowChangeEvent(SelectedSetoffRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SelectedSetoffRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dsPaymentsetOffDetailsRowChangeEvent : global::System.EventArgs {
            
            private dsPaymentsetOffDetailsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsPaymentsetOffDetailsRowChangeEvent(dsPaymentsetOffDetailsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsPaymentsetOffDetailsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dsPaymentSetOffSummaryRowChangeEvent : global::System.EventArgs {
            
            private dsPaymentSetOffSummaryRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsPaymentSetOffSummaryRowChangeEvent(dsPaymentSetOffSummaryRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsPaymentSetOffSummaryRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dsPriceMasterDetailsRowChangeEvent : global::System.EventArgs {
            
            private dsPriceMasterDetailsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsPriceMasterDetailsRowChangeEvent(dsPriceMasterDetailsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsPriceMasterDetailsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dsSystem_LogRowChangeEvent : global::System.EventArgs {
            
            private dsSystem_LogRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsSystem_LogRowChangeEvent(dsSystem_LogRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsSystem_LogRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dsPostDatedChequeRowChangeEvent : global::System.EventArgs {
            
            private dsPostDatedChequeRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsPostDatedChequeRowChangeEvent(dsPostDatedChequeRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsPostDatedChequeRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dsProductLinkTempRowChangeEvent : global::System.EventArgs {
            
            private dsProductLinkTempRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsProductLinkTempRowChangeEvent(dsProductLinkTempRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsProductLinkTempRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class PriceChangeRowChangeEvent : global::System.EventArgs {
            
            private PriceChangeRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PriceChangeRowChangeEvent(PriceChangeRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PriceChangeRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dsPosSalesSummaryRowChangeEvent : global::System.EventArgs {
            
            private dsPosSalesSummaryRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsPosSalesSummaryRowChangeEvent(dsPosSalesSummaryRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsPosSalesSummaryRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DataTable1RowChangeEvent : global::System.EventArgs {
            
            private DataTable1Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataTable1RowChangeEvent(DataTable1Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataTable1Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tb_Customer_DetailRowChangeEvent : global::System.EventArgs {
            
            private tb_Customer_DetailRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tb_Customer_DetailRowChangeEvent(tb_Customer_DetailRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tb_Customer_DetailRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dsCustomerSalesRowChangeEvent : global::System.EventArgs {
            
            private dsCustomerSalesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsCustomerSalesRowChangeEvent(dsCustomerSalesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsCustomerSalesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dsPurchScheduleRowChangeEvent : global::System.EventArgs {
            
            private dsPurchScheduleRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsPurchScheduleRowChangeEvent(dsPurchScheduleRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsPurchScheduleRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CompanyProfileRowChangeEvent : global::System.EventArgs {
            
            private CompanyProfileRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CompanyProfileRowChangeEvent(CompanyProfileRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CompanyProfileRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dsFreeIssuedProductRowChangeEvent : global::System.EventArgs {
            
            private dsFreeIssuedProductRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsFreeIssuedProductRowChangeEvent(dsFreeIssuedProductRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsFreeIssuedProductRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dsLocaWiseTGNSummaryRowChangeEvent : global::System.EventArgs {
            
            private dsLocaWiseTGNSummaryRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsLocaWiseTGNSummaryRowChangeEvent(dsLocaWiseTGNSummaryRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsLocaWiseTGNSummaryRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dsReturnChequeRowChangeEvent : global::System.EventArgs {
            
            private dsReturnChequeRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsReturnChequeRowChangeEvent(dsReturnChequeRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsReturnChequeRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dsProductDiscardRowChangeEvent : global::System.EventArgs {
            
            private dsProductDiscardRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsProductDiscardRowChangeEvent(dsProductDiscardRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsProductDiscardRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dsChqReconnRowChangeEvent : global::System.EventArgs {
            
            private dsChqReconnRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsChqReconnRowChangeEvent(dsChqReconnRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsChqReconnRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dsLocaWiseDeptSaleRowChangeEvent : global::System.EventArgs {
            
            private dsLocaWiseDeptSaleRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsLocaWiseDeptSaleRowChangeEvent(dsLocaWiseDeptSaleRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsLocaWiseDeptSaleRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dsProdWiseSpecialDiscRowChangeEvent : global::System.EventArgs {
            
            private dsProdWiseSpecialDiscRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsProdWiseSpecialDiscRowChangeEvent(dsProdWiseSpecialDiscRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsProdWiseSpecialDiscRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dsProdCombinationRowChangeEvent : global::System.EventArgs {
            
            private dsProdCombinationRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsProdCombinationRowChangeEvent(dsProdCombinationRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsProdCombinationRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dsPurchaseScheduleRowChangeEvent : global::System.EventArgs {
            
            private dsPurchaseScheduleRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsPurchaseScheduleRowChangeEvent(dsPurchaseScheduleRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsPurchaseScheduleRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dsLocaWiseProdOrderRowChangeEvent : global::System.EventArgs {
            
            private dsLocaWiseProdOrderRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsLocaWiseProdOrderRowChangeEvent(dsLocaWiseProdOrderRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsLocaWiseProdOrderRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dsPurchaseRowChangeEvent : global::System.EventArgs {
            
            private dsPurchaseRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsPurchaseRowChangeEvent(dsPurchaseRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsPurchaseRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dsProductSumDetailsRowChangeEvent : global::System.EventArgs {
            
            private dsProductSumDetailsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsProductSumDetailsRowChangeEvent(dsProductSumDetailsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsProductSumDetailsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dsDailySalesSummaryDetailWiseRowChangeEvent : global::System.EventArgs {
            
            private dsDailySalesSummaryDetailWiseRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsDailySalesSummaryDetailWiseRowChangeEvent(dsDailySalesSummaryDetailWiseRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsDailySalesSummaryDetailWiseRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dsCompanyLogoRowChangeEvent : global::System.EventArgs {
            
            private dsCompanyLogoRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsCompanyLogoRowChangeEvent(dsCompanyLogoRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsCompanyLogoRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dsCashINOUTRowChangeEvent : global::System.EventArgs {
            
            private dsCashINOUTRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsCashINOUTRowChangeEvent(dsCashINOUTRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsCashINOUTRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dsDailyCollectionSummaryRowChangeEvent : global::System.EventArgs {
            
            private dsDailyCollectionSummaryRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsDailyCollectionSummaryRowChangeEvent(dsDailyCollectionSummaryRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsDailyCollectionSummaryRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dsCusWiseDailySummRowChangeEvent : global::System.EventArgs {
            
            private dsCusWiseDailySummRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsCusWiseDailySummRowChangeEvent(dsCusWiseDailySummRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsCusWiseDailySummRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dsExpenceTransactionRowChangeEvent : global::System.EventArgs {
            
            private dsExpenceTransactionRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsExpenceTransactionRowChangeEvent(dsExpenceTransactionRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsExpenceTransactionRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dsDayBookRepRowChangeEvent : global::System.EventArgs {
            
            private dsDayBookRepRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsDayBookRepRowChangeEvent(dsDayBookRepRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsDayBookRepRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dtBatchWisePriceRowChangeEvent : global::System.EventArgs {
            
            private dtBatchWisePriceRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtBatchWisePriceRowChangeEvent(dtBatchWisePriceRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtBatchWisePriceRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dsCusAddressRowChangeEvent : global::System.EventArgs {
            
            private dsCusAddressRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsCusAddressRowChangeEvent(dsCusAddressRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsCusAddressRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dsTempPacketProduct1RowChangeEvent : global::System.EventArgs {
            
            private dsTempPacketProduct1Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsTempPacketProduct1RowChangeEvent(dsTempPacketProduct1Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsTempPacketProduct1Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dsProdBundleRowChangeEvent : global::System.EventArgs {
            
            private dsProdBundleRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsProdBundleRowChangeEvent(dsProdBundleRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsProdBundleRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class StatementRowChangeEvent : global::System.EventArgs {
            
            private StatementRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StatementRowChangeEvent(StatementRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StatementRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CompanyRowChangeEvent : global::System.EventArgs {
            
            private CompanyRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CompanyRowChangeEvent(CompanyRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CompanyRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dsInvoiceColSummeryRowChangeEvent : global::System.EventArgs {
            
            private dsInvoiceColSummeryRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsInvoiceColSummeryRowChangeEvent(dsInvoiceColSummeryRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsInvoiceColSummeryRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dsCashDenoRowChangeEvent : global::System.EventArgs {
            
            private dsCashDenoRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsCashDenoRowChangeEvent(dsCashDenoRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsCashDenoRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CRM_CustomerRowChangeEvent : global::System.EventArgs {
            
            private CRM_CustomerRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CRM_CustomerRowChangeEvent(CRM_CustomerRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CRM_CustomerRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dtOGFUploadRowChangeEvent : global::System.EventArgs {
            
            private dtOGFUploadRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtOGFUploadRowChangeEvent(dtOGFUploadRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtOGFUploadRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CustomerRowChangeEvent : global::System.EventArgs {
            
            private CustomerRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerRowChangeEvent(CustomerRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DailyDetailsRowChangeEvent : global::System.EventArgs {
            
            private DailyDetailsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DailyDetailsRowChangeEvent(DailyDetailsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DailyDetailsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class Statement1RowChangeEvent : global::System.EventArgs {
            
            private Statement1Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Statement1RowChangeEvent(Statement1Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Statement1Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dsIssuedVoucherRowChangeEvent : global::System.EventArgs {
            
            private dsIssuedVoucherRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsIssuedVoucherRowChangeEvent(dsIssuedVoucherRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsIssuedVoucherRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dsReceivedVoucherRowChangeEvent : global::System.EventArgs {
            
            private dsReceivedVoucherRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsReceivedVoucherRowChangeEvent(dsReceivedVoucherRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsReceivedVoucherRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dtExpDetailsRowChangeEvent : global::System.EventArgs {
            
            private dtExpDetailsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtExpDetailsRowChangeEvent(dtExpDetailsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtExpDetailsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DayEnd_Pos_TransactionRowChangeEvent : global::System.EventArgs {
            
            private DayEnd_Pos_TransactionRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DayEnd_Pos_TransactionRowChangeEvent(DayEnd_Pos_TransactionRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DayEnd_Pos_TransactionRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591