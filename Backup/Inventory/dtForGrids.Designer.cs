//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.9148
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Inventory {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dtForGrids")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class dtForGrids : global::System.Data.DataSet {
        
        private dtGiftIssueDataTable tabledtGiftIssue;
        
        private CustomerDataTable tableCustomer;
        
        private dsInCustomerDataTable tabledsInCustomer;
        
        private dsChildrenDetailsDataTable tabledsChildrenDetails;
        
        private CRM_CustomerDataTable tableCRM_Customer;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public dtForGrids() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected dtForGrids(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["dtGiftIssue"] != null)) {
                    base.Tables.Add(new dtGiftIssueDataTable(ds.Tables["dtGiftIssue"]));
                }
                if ((ds.Tables["Customer"] != null)) {
                    base.Tables.Add(new CustomerDataTable(ds.Tables["Customer"]));
                }
                if ((ds.Tables["dsInCustomer"] != null)) {
                    base.Tables.Add(new dsInCustomerDataTable(ds.Tables["dsInCustomer"]));
                }
                if ((ds.Tables["dsChildrenDetails"] != null)) {
                    base.Tables.Add(new dsChildrenDetailsDataTable(ds.Tables["dsChildrenDetails"]));
                }
                if ((ds.Tables["CRM_Customer"] != null)) {
                    base.Tables.Add(new CRM_CustomerDataTable(ds.Tables["CRM_Customer"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dtGiftIssueDataTable dtGiftIssue {
            get {
                return this.tabledtGiftIssue;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CustomerDataTable Customer {
            get {
                return this.tableCustomer;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dsInCustomerDataTable dsInCustomer {
            get {
                return this.tabledsInCustomer;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dsChildrenDetailsDataTable dsChildrenDetails {
            get {
                return this.tabledsChildrenDetails;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CRM_CustomerDataTable CRM_Customer {
            get {
                return this.tableCRM_Customer;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            dtForGrids cln = ((dtForGrids)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["dtGiftIssue"] != null)) {
                    base.Tables.Add(new dtGiftIssueDataTable(ds.Tables["dtGiftIssue"]));
                }
                if ((ds.Tables["Customer"] != null)) {
                    base.Tables.Add(new CustomerDataTable(ds.Tables["Customer"]));
                }
                if ((ds.Tables["dsInCustomer"] != null)) {
                    base.Tables.Add(new dsInCustomerDataTable(ds.Tables["dsInCustomer"]));
                }
                if ((ds.Tables["dsChildrenDetails"] != null)) {
                    base.Tables.Add(new dsChildrenDetailsDataTable(ds.Tables["dsChildrenDetails"]));
                }
                if ((ds.Tables["CRM_Customer"] != null)) {
                    base.Tables.Add(new CRM_CustomerDataTable(ds.Tables["CRM_Customer"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tabledtGiftIssue = ((dtGiftIssueDataTable)(base.Tables["dtGiftIssue"]));
            if ((initTable == true)) {
                if ((this.tabledtGiftIssue != null)) {
                    this.tabledtGiftIssue.InitVars();
                }
            }
            this.tableCustomer = ((CustomerDataTable)(base.Tables["Customer"]));
            if ((initTable == true)) {
                if ((this.tableCustomer != null)) {
                    this.tableCustomer.InitVars();
                }
            }
            this.tabledsInCustomer = ((dsInCustomerDataTable)(base.Tables["dsInCustomer"]));
            if ((initTable == true)) {
                if ((this.tabledsInCustomer != null)) {
                    this.tabledsInCustomer.InitVars();
                }
            }
            this.tabledsChildrenDetails = ((dsChildrenDetailsDataTable)(base.Tables["dsChildrenDetails"]));
            if ((initTable == true)) {
                if ((this.tabledsChildrenDetails != null)) {
                    this.tabledsChildrenDetails.InitVars();
                }
            }
            this.tableCRM_Customer = ((CRM_CustomerDataTable)(base.Tables["CRM_Customer"]));
            if ((initTable == true)) {
                if ((this.tableCRM_Customer != null)) {
                    this.tableCRM_Customer.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "dtForGrids";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/dtForGrids.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tabledtGiftIssue = new dtGiftIssueDataTable();
            base.Tables.Add(this.tabledtGiftIssue);
            this.tableCustomer = new CustomerDataTable();
            base.Tables.Add(this.tableCustomer);
            this.tabledsInCustomer = new dsInCustomerDataTable();
            base.Tables.Add(this.tabledsInCustomer);
            this.tabledsChildrenDetails = new dsChildrenDetailsDataTable();
            base.Tables.Add(this.tabledsChildrenDetails);
            this.tableCRM_Customer = new CRM_CustomerDataTable();
            base.Tables.Add(this.tableCRM_Customer);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedtGiftIssue() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCustomer() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedsInCustomer() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedsChildrenDetails() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCRM_Customer() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dtForGrids ds = new dtForGrids();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void dtGiftIssueRowChangeEventHandler(object sender, dtGiftIssueRowChangeEvent e);
        
        public delegate void CustomerRowChangeEventHandler(object sender, CustomerRowChangeEvent e);
        
        public delegate void dsInCustomerRowChangeEventHandler(object sender, dsInCustomerRowChangeEvent e);
        
        public delegate void dsChildrenDetailsRowChangeEventHandler(object sender, dsChildrenDetailsRowChangeEvent e);
        
        public delegate void CRM_CustomerRowChangeEventHandler(object sender, CRM_CustomerRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dtGiftIssueDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnDoc_No;
            
            private global::System.Data.DataColumn columnAmount;
            
            private global::System.Data.DataColumn columnCode;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtGiftIssueDataTable() {
                this.TableName = "dtGiftIssue";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtGiftIssueDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dtGiftIssueDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Doc_NoColumn {
                get {
                    return this.columnDoc_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CodeColumn {
                get {
                    return this.columnCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtGiftIssueRow this[int index] {
                get {
                    return ((dtGiftIssueRow)(this.Rows[index]));
                }
            }
            
            public event dtGiftIssueRowChangeEventHandler dtGiftIssueRowChanging;
            
            public event dtGiftIssueRowChangeEventHandler dtGiftIssueRowChanged;
            
            public event dtGiftIssueRowChangeEventHandler dtGiftIssueRowDeleting;
            
            public event dtGiftIssueRowChangeEventHandler dtGiftIssueRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddtGiftIssueRow(dtGiftIssueRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtGiftIssueRow AdddtGiftIssueRow(string Doc_No, string Amount, string Code) {
                dtGiftIssueRow rowdtGiftIssueRow = ((dtGiftIssueRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Doc_No,
                        Amount,
                        Code};
                rowdtGiftIssueRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdtGiftIssueRow);
                return rowdtGiftIssueRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dtGiftIssueDataTable cln = ((dtGiftIssueDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dtGiftIssueDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDoc_No = base.Columns["Doc_No"];
                this.columnAmount = base.Columns["Amount"];
                this.columnCode = base.Columns["Code"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDoc_No = new global::System.Data.DataColumn("Doc_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDoc_No);
                this.columnAmount = new global::System.Data.DataColumn("Amount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
                this.columnCode = new global::System.Data.DataColumn("Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCode);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtGiftIssueRow NewdtGiftIssueRow() {
                return ((dtGiftIssueRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dtGiftIssueRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dtGiftIssueRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dtGiftIssueRowChanged != null)) {
                    this.dtGiftIssueRowChanged(this, new dtGiftIssueRowChangeEvent(((dtGiftIssueRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dtGiftIssueRowChanging != null)) {
                    this.dtGiftIssueRowChanging(this, new dtGiftIssueRowChangeEvent(((dtGiftIssueRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dtGiftIssueRowDeleted != null)) {
                    this.dtGiftIssueRowDeleted(this, new dtGiftIssueRowChangeEvent(((dtGiftIssueRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dtGiftIssueRowDeleting != null)) {
                    this.dtGiftIssueRowDeleting(this, new dtGiftIssueRowChangeEvent(((dtGiftIssueRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedtGiftIssueRow(dtGiftIssueRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dtForGrids ds = new dtForGrids();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dtGiftIssueDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CustomerDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnLoca;
            
            private global::System.Data.DataColumn columnSelect;
            
            private global::System.Data.DataColumn columnSuccess;
            
            private global::System.Data.DataColumn columnCus_Code;
            
            private global::System.Data.DataColumn columnCus_Name;
            
            private global::System.Data.DataColumn columnAddress;
            
            private global::System.Data.DataColumn columnMobile;
            
            private global::System.Data.DataColumn columnDateFrom;
            
            private global::System.Data.DataColumn columnDateTo;
            
            private global::System.Data.DataColumn columnBirthday;
            
            private global::System.Data.DataColumn columnAge;
            
            private global::System.Data.DataColumn columnDate;
            
            private global::System.Data.DataColumn columnNIC;
            
            private global::System.Data.DataColumn columnCard_No;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerDataTable() {
                this.TableName = "Customer";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CustomerDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CustomerDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LocaColumn {
                get {
                    return this.columnLoca;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SelectColumn {
                get {
                    return this.columnSelect;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SuccessColumn {
                get {
                    return this.columnSuccess;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cus_CodeColumn {
                get {
                    return this.columnCus_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cus_NameColumn {
                get {
                    return this.columnCus_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AddressColumn {
                get {
                    return this.columnAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MobileColumn {
                get {
                    return this.columnMobile;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateFromColumn {
                get {
                    return this.columnDateFrom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateToColumn {
                get {
                    return this.columnDateTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BirthdayColumn {
                get {
                    return this.columnBirthday;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AgeColumn {
                get {
                    return this.columnAge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateColumn {
                get {
                    return this.columnDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NICColumn {
                get {
                    return this.columnNIC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Card_NoColumn {
                get {
                    return this.columnCard_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerRow this[int index] {
                get {
                    return ((CustomerRow)(this.Rows[index]));
                }
            }
            
            public event CustomerRowChangeEventHandler CustomerRowChanging;
            
            public event CustomerRowChangeEventHandler CustomerRowChanged;
            
            public event CustomerRowChangeEventHandler CustomerRowDeleting;
            
            public event CustomerRowChangeEventHandler CustomerRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCustomerRow(CustomerRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerRow AddCustomerRow(string Loca, bool Select, bool Success, string Cus_Code, string Cus_Name, string Address, string Mobile, string DateFrom, string DateTo, System.DateTime Birthday, int Age, string Date, string NIC, string Card_No) {
                CustomerRow rowCustomerRow = ((CustomerRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Loca,
                        Select,
                        Success,
                        Cus_Code,
                        Cus_Name,
                        Address,
                        Mobile,
                        DateFrom,
                        DateTo,
                        Birthday,
                        Age,
                        Date,
                        NIC,
                        Card_No};
                rowCustomerRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCustomerRow);
                return rowCustomerRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                CustomerDataTable cln = ((CustomerDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CustomerDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnLoca = base.Columns["Loca"];
                this.columnSelect = base.Columns["Select"];
                this.columnSuccess = base.Columns["Success"];
                this.columnCus_Code = base.Columns["Cus_Code"];
                this.columnCus_Name = base.Columns["Cus_Name"];
                this.columnAddress = base.Columns["Address"];
                this.columnMobile = base.Columns["Mobile"];
                this.columnDateFrom = base.Columns["DateFrom"];
                this.columnDateTo = base.Columns["DateTo"];
                this.columnBirthday = base.Columns["Birthday"];
                this.columnAge = base.Columns["Age"];
                this.columnDate = base.Columns["Date"];
                this.columnNIC = base.Columns["NIC"];
                this.columnCard_No = base.Columns["Card_No"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnLoca = new global::System.Data.DataColumn("Loca", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoca);
                this.columnSelect = new global::System.Data.DataColumn("Select", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelect);
                this.columnSuccess = new global::System.Data.DataColumn("Success", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSuccess);
                this.columnCus_Code = new global::System.Data.DataColumn("Cus_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCus_Code);
                this.columnCus_Name = new global::System.Data.DataColumn("Cus_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCus_Name);
                this.columnAddress = new global::System.Data.DataColumn("Address", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress);
                this.columnMobile = new global::System.Data.DataColumn("Mobile", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMobile);
                this.columnDateFrom = new global::System.Data.DataColumn("DateFrom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateFrom);
                this.columnDateTo = new global::System.Data.DataColumn("DateTo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateTo);
                this.columnBirthday = new global::System.Data.DataColumn("Birthday", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBirthday);
                this.columnAge = new global::System.Data.DataColumn("Age", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAge);
                this.columnDate = new global::System.Data.DataColumn("Date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDate);
                this.columnNIC = new global::System.Data.DataColumn("NIC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNIC);
                this.columnCard_No = new global::System.Data.DataColumn("Card_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCard_No);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerRow NewCustomerRow() {
                return ((CustomerRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CustomerRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(CustomerRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CustomerRowChanged != null)) {
                    this.CustomerRowChanged(this, new CustomerRowChangeEvent(((CustomerRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CustomerRowChanging != null)) {
                    this.CustomerRowChanging(this, new CustomerRowChangeEvent(((CustomerRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CustomerRowDeleted != null)) {
                    this.CustomerRowDeleted(this, new CustomerRowChangeEvent(((CustomerRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CustomerRowDeleting != null)) {
                    this.CustomerRowDeleting(this, new CustomerRowChangeEvent(((CustomerRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCustomerRow(CustomerRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dtForGrids ds = new dtForGrids();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CustomerDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dsInCustomerDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnCus_Code;
            
            private global::System.Data.DataColumn columnCard_No;
            
            private global::System.Data.DataColumn columnLoca;
            
            private global::System.Data.DataColumn columnCus_Name;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsInCustomerDataTable() {
                this.TableName = "dsInCustomer";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsInCustomerDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dsInCustomerDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cus_CodeColumn {
                get {
                    return this.columnCus_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Card_NoColumn {
                get {
                    return this.columnCard_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LocaColumn {
                get {
                    return this.columnLoca;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cus_NameColumn {
                get {
                    return this.columnCus_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsInCustomerRow this[int index] {
                get {
                    return ((dsInCustomerRow)(this.Rows[index]));
                }
            }
            
            public event dsInCustomerRowChangeEventHandler dsInCustomerRowChanging;
            
            public event dsInCustomerRowChangeEventHandler dsInCustomerRowChanged;
            
            public event dsInCustomerRowChangeEventHandler dsInCustomerRowDeleting;
            
            public event dsInCustomerRowChangeEventHandler dsInCustomerRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddsInCustomerRow(dsInCustomerRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsInCustomerRow AdddsInCustomerRow(string Cus_Code, string Card_No, string Loca, string Cus_Name) {
                dsInCustomerRow rowdsInCustomerRow = ((dsInCustomerRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Cus_Code,
                        Card_No,
                        Loca,
                        Cus_Name};
                rowdsInCustomerRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdsInCustomerRow);
                return rowdsInCustomerRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dsInCustomerDataTable cln = ((dsInCustomerDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dsInCustomerDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCus_Code = base.Columns["Cus_Code"];
                this.columnCard_No = base.Columns["Card_No"];
                this.columnLoca = base.Columns["Loca"];
                this.columnCus_Name = base.Columns["Cus_Name"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCus_Code = new global::System.Data.DataColumn("Cus_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCus_Code);
                this.columnCard_No = new global::System.Data.DataColumn("Card_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCard_No);
                this.columnLoca = new global::System.Data.DataColumn("Loca", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoca);
                this.columnCus_Name = new global::System.Data.DataColumn("Cus_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCus_Name);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsInCustomerRow NewdsInCustomerRow() {
                return ((dsInCustomerRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dsInCustomerRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dsInCustomerRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dsInCustomerRowChanged != null)) {
                    this.dsInCustomerRowChanged(this, new dsInCustomerRowChangeEvent(((dsInCustomerRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dsInCustomerRowChanging != null)) {
                    this.dsInCustomerRowChanging(this, new dsInCustomerRowChangeEvent(((dsInCustomerRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dsInCustomerRowDeleted != null)) {
                    this.dsInCustomerRowDeleted(this, new dsInCustomerRowChangeEvent(((dsInCustomerRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dsInCustomerRowDeleting != null)) {
                    this.dsInCustomerRowDeleting(this, new dsInCustomerRowChangeEvent(((dsInCustomerRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedsInCustomerRow(dsInCustomerRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dtForGrids ds = new dtForGrids();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dsInCustomerDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dsChildrenDetailsDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnSex;
            
            private global::System.Data.DataColumn columnBirthday;
            
            private global::System.Data.DataColumn columnCard_No;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsChildrenDetailsDataTable() {
                this.TableName = "dsChildrenDetails";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsChildrenDetailsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dsChildrenDetailsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SexColumn {
                get {
                    return this.columnSex;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BirthdayColumn {
                get {
                    return this.columnBirthday;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Card_NoColumn {
                get {
                    return this.columnCard_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsChildrenDetailsRow this[int index] {
                get {
                    return ((dsChildrenDetailsRow)(this.Rows[index]));
                }
            }
            
            public event dsChildrenDetailsRowChangeEventHandler dsChildrenDetailsRowChanging;
            
            public event dsChildrenDetailsRowChangeEventHandler dsChildrenDetailsRowChanged;
            
            public event dsChildrenDetailsRowChangeEventHandler dsChildrenDetailsRowDeleting;
            
            public event dsChildrenDetailsRowChangeEventHandler dsChildrenDetailsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddsChildrenDetailsRow(dsChildrenDetailsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsChildrenDetailsRow AdddsChildrenDetailsRow(string Name, string Sex, string Birthday, string Card_No) {
                dsChildrenDetailsRow rowdsChildrenDetailsRow = ((dsChildrenDetailsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Name,
                        Sex,
                        Birthday,
                        Card_No};
                rowdsChildrenDetailsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdsChildrenDetailsRow);
                return rowdsChildrenDetailsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dsChildrenDetailsDataTable cln = ((dsChildrenDetailsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dsChildrenDetailsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnName = base.Columns["Name"];
                this.columnSex = base.Columns["Sex"];
                this.columnBirthday = base.Columns["Birthday"];
                this.columnCard_No = base.Columns["Card_No"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnSex = new global::System.Data.DataColumn("Sex", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSex);
                this.columnBirthday = new global::System.Data.DataColumn("Birthday", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBirthday);
                this.columnCard_No = new global::System.Data.DataColumn("Card_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCard_No);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsChildrenDetailsRow NewdsChildrenDetailsRow() {
                return ((dsChildrenDetailsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dsChildrenDetailsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dsChildrenDetailsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dsChildrenDetailsRowChanged != null)) {
                    this.dsChildrenDetailsRowChanged(this, new dsChildrenDetailsRowChangeEvent(((dsChildrenDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dsChildrenDetailsRowChanging != null)) {
                    this.dsChildrenDetailsRowChanging(this, new dsChildrenDetailsRowChangeEvent(((dsChildrenDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dsChildrenDetailsRowDeleted != null)) {
                    this.dsChildrenDetailsRowDeleted(this, new dsChildrenDetailsRowChangeEvent(((dsChildrenDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dsChildrenDetailsRowDeleting != null)) {
                    this.dsChildrenDetailsRowDeleting(this, new dsChildrenDetailsRowChangeEvent(((dsChildrenDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedsChildrenDetailsRow(dsChildrenDetailsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dtForGrids ds = new dtForGrids();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dsChildrenDetailsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CRM_CustomerDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnCus_Code;
            
            private global::System.Data.DataColumn columnStatus;
            
            private global::System.Data.DataColumn columnCus_Name;
            
            private global::System.Data.DataColumn columnFirstName;
            
            private global::System.Data.DataColumn columnSecondName;
            
            private global::System.Data.DataColumn columnAddress1;
            
            private global::System.Data.DataColumn columnAddress2;
            
            private global::System.Data.DataColumn columnAddress3;
            
            private global::System.Data.DataColumn columnAddress4;
            
            private global::System.Data.DataColumn columnAddress5;
            
            private global::System.Data.DataColumn columnPhoneNo;
            
            private global::System.Data.DataColumn columnFax;
            
            private global::System.Data.DataColumn columnOfficePhone;
            
            private global::System.Data.DataColumn columnOther;
            
            private global::System.Data.DataColumn columnMobile;
            
            private global::System.Data.DataColumn columnContactPersion;
            
            private global::System.Data.DataColumn columnE_mail;
            
            private global::System.Data.DataColumn columnWeb;
            
            private global::System.Data.DataColumn columnNICNumber;
            
            private global::System.Data.DataColumn columnBirthday;
            
            private global::System.Data.DataColumn columnCus_Type;
            
            private global::System.Data.DataColumn columnReferance;
            
            private global::System.Data.DataColumn columnInsertDate;
            
            private global::System.Data.DataColumn columnModDate;
            
            private global::System.Data.DataColumn columnInsertUser;
            
            private global::System.Data.DataColumn columnModUser;
            
            private global::System.Data.DataColumn columnInactive;
            
            private global::System.Data.DataColumn columnInactiveDate;
            
            private global::System.Data.DataColumn columnWorkshop;
            
            private global::System.Data.DataColumn columnAge;
            
            private global::System.Data.DataColumn columnWesak;
            
            private global::System.Data.DataColumn columnNewYear;
            
            private global::System.Data.DataColumn columnDontBCard;
            
            private global::System.Data.DataColumn columnAbrod;
            
            private global::System.Data.DataColumn columnNextVisitDate;
            
            private global::System.Data.DataColumn columnBalance;
            
            private global::System.Data.DataColumn columnFestival;
            
            private global::System.Data.DataColumn columnNameOfSpouse;
            
            private global::System.Data.DataColumn columnCard_No;
            
            private global::System.Data.DataColumn columnMonthly_Balance;
            
            private global::System.Data.DataColumn columnCardIssuedDate;
            
            private global::System.Data.DataColumn columnOccupation;
            
            private global::System.Data.DataColumn columnMaritalStatus;
            
            private global::System.Data.DataColumn columnSpouseBirthDay;
            
            private global::System.Data.DataColumn columnDiscount;
            
            private global::System.Data.DataColumn columnGroup_Code;
            
            private global::System.Data.DataColumn columnGroup_Name;
            
            private global::System.Data.DataColumn columnSubGroup_Code;
            
            private global::System.Data.DataColumn columnSubGroup_Name;
            
            private global::System.Data.DataColumn columnAnniversary;
            
            private global::System.Data.DataColumn columnLoca;
            
            private global::System.Data.DataColumn columnLocaName;
            
            private global::System.Data.DataColumn columnCust_Category;
            
            private global::System.Data.DataColumn columnPoint_Rate;
            
            private global::System.Data.DataColumn columnCode_From;
            
            private global::System.Data.DataColumn columnCode_To;
            
            private global::System.Data.DataColumn columnGender;
            
            private global::System.Data.DataColumn columnReligion;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CRM_CustomerDataTable() {
                this.TableName = "CRM_Customer";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CRM_CustomerDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CRM_CustomerDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cus_CodeColumn {
                get {
                    return this.columnCus_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StatusColumn {
                get {
                    return this.columnStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cus_NameColumn {
                get {
                    return this.columnCus_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FirstNameColumn {
                get {
                    return this.columnFirstName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SecondNameColumn {
                get {
                    return this.columnSecondName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Address1Column {
                get {
                    return this.columnAddress1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Address2Column {
                get {
                    return this.columnAddress2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Address3Column {
                get {
                    return this.columnAddress3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Address4Column {
                get {
                    return this.columnAddress4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Address5Column {
                get {
                    return this.columnAddress5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PhoneNoColumn {
                get {
                    return this.columnPhoneNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FaxColumn {
                get {
                    return this.columnFax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OfficePhoneColumn {
                get {
                    return this.columnOfficePhone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OtherColumn {
                get {
                    return this.columnOther;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MobileColumn {
                get {
                    return this.columnMobile;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ContactPersionColumn {
                get {
                    return this.columnContactPersion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn E_mailColumn {
                get {
                    return this.columnE_mail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WebColumn {
                get {
                    return this.columnWeb;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NICNumberColumn {
                get {
                    return this.columnNICNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BirthdayColumn {
                get {
                    return this.columnBirthday;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cus_TypeColumn {
                get {
                    return this.columnCus_Type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReferanceColumn {
                get {
                    return this.columnReferance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertDateColumn {
                get {
                    return this.columnInsertDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModDateColumn {
                get {
                    return this.columnModDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertUserColumn {
                get {
                    return this.columnInsertUser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModUserColumn {
                get {
                    return this.columnModUser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InactiveColumn {
                get {
                    return this.columnInactive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InactiveDateColumn {
                get {
                    return this.columnInactiveDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WorkshopColumn {
                get {
                    return this.columnWorkshop;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AgeColumn {
                get {
                    return this.columnAge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WesakColumn {
                get {
                    return this.columnWesak;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NewYearColumn {
                get {
                    return this.columnNewYear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DontBCardColumn {
                get {
                    return this.columnDontBCard;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AbrodColumn {
                get {
                    return this.columnAbrod;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NextVisitDateColumn {
                get {
                    return this.columnNextVisitDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BalanceColumn {
                get {
                    return this.columnBalance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FestivalColumn {
                get {
                    return this.columnFestival;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NameOfSpouseColumn {
                get {
                    return this.columnNameOfSpouse;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Card_NoColumn {
                get {
                    return this.columnCard_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Monthly_BalanceColumn {
                get {
                    return this.columnMonthly_Balance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CardIssuedDateColumn {
                get {
                    return this.columnCardIssuedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OccupationColumn {
                get {
                    return this.columnOccupation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MaritalStatusColumn {
                get {
                    return this.columnMaritalStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SpouseBirthDayColumn {
                get {
                    return this.columnSpouseBirthDay;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DiscountColumn {
                get {
                    return this.columnDiscount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Group_CodeColumn {
                get {
                    return this.columnGroup_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Group_NameColumn {
                get {
                    return this.columnGroup_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubGroup_CodeColumn {
                get {
                    return this.columnSubGroup_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubGroup_NameColumn {
                get {
                    return this.columnSubGroup_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AnniversaryColumn {
                get {
                    return this.columnAnniversary;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LocaColumn {
                get {
                    return this.columnLoca;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LocaNameColumn {
                get {
                    return this.columnLocaName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cust_CategoryColumn {
                get {
                    return this.columnCust_Category;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Point_RateColumn {
                get {
                    return this.columnPoint_Rate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Code_FromColumn {
                get {
                    return this.columnCode_From;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Code_ToColumn {
                get {
                    return this.columnCode_To;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GenderColumn {
                get {
                    return this.columnGender;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReligionColumn {
                get {
                    return this.columnReligion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CRM_CustomerRow this[int index] {
                get {
                    return ((CRM_CustomerRow)(this.Rows[index]));
                }
            }
            
            public event CRM_CustomerRowChangeEventHandler CRM_CustomerRowChanging;
            
            public event CRM_CustomerRowChangeEventHandler CRM_CustomerRowChanged;
            
            public event CRM_CustomerRowChangeEventHandler CRM_CustomerRowDeleting;
            
            public event CRM_CustomerRowChangeEventHandler CRM_CustomerRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCRM_CustomerRow(CRM_CustomerRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CRM_CustomerRow AddCRM_CustomerRow(
                        string Cus_Code, 
                        string Status, 
                        string Cus_Name, 
                        string FirstName, 
                        string SecondName, 
                        string Address1, 
                        string Address2, 
                        string Address3, 
                        string Address4, 
                        string Address5, 
                        string PhoneNo, 
                        string Fax, 
                        string OfficePhone, 
                        string Other, 
                        string Mobile, 
                        string ContactPersion, 
                        string E_mail, 
                        string Web, 
                        string NICNumber, 
                        string Birthday, 
                        string Cus_Type, 
                        string Referance, 
                        System.DateTime InsertDate, 
                        System.DateTime ModDate, 
                        string InsertUser, 
                        string ModUser, 
                        bool Inactive, 
                        string InactiveDate, 
                        bool Workshop, 
                        string Age, 
                        bool Wesak, 
                        bool NewYear, 
                        bool DontBCard, 
                        bool Abrod, 
                        System.DateTime NextVisitDate, 
                        decimal Balance, 
                        string Festival, 
                        string NameOfSpouse, 
                        string Card_No, 
                        decimal Monthly_Balance, 
                        string CardIssuedDate, 
                        string Occupation, 
                        string MaritalStatus, 
                        string SpouseBirthDay, 
                        decimal Discount, 
                        string Group_Code, 
                        string Group_Name, 
                        string SubGroup_Code, 
                        string SubGroup_Name, 
                        string Anniversary, 
                        string Loca, 
                        string LocaName, 
                        string Cust_Category, 
                        string Point_Rate, 
                        string Code_From, 
                        string Code_To, 
                        string Gender, 
                        string Religion) {
                CRM_CustomerRow rowCRM_CustomerRow = ((CRM_CustomerRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Cus_Code,
                        Status,
                        Cus_Name,
                        FirstName,
                        SecondName,
                        Address1,
                        Address2,
                        Address3,
                        Address4,
                        Address5,
                        PhoneNo,
                        Fax,
                        OfficePhone,
                        Other,
                        Mobile,
                        ContactPersion,
                        E_mail,
                        Web,
                        NICNumber,
                        Birthday,
                        Cus_Type,
                        Referance,
                        InsertDate,
                        ModDate,
                        InsertUser,
                        ModUser,
                        Inactive,
                        InactiveDate,
                        Workshop,
                        Age,
                        Wesak,
                        NewYear,
                        DontBCard,
                        Abrod,
                        NextVisitDate,
                        Balance,
                        Festival,
                        NameOfSpouse,
                        Card_No,
                        Monthly_Balance,
                        CardIssuedDate,
                        Occupation,
                        MaritalStatus,
                        SpouseBirthDay,
                        Discount,
                        Group_Code,
                        Group_Name,
                        SubGroup_Code,
                        SubGroup_Name,
                        Anniversary,
                        Loca,
                        LocaName,
                        Cust_Category,
                        Point_Rate,
                        Code_From,
                        Code_To,
                        Gender,
                        Religion};
                rowCRM_CustomerRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCRM_CustomerRow);
                return rowCRM_CustomerRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CRM_CustomerRow FindByCus_Code(string Cus_Code) {
                return ((CRM_CustomerRow)(this.Rows.Find(new object[] {
                            Cus_Code})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                CRM_CustomerDataTable cln = ((CRM_CustomerDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CRM_CustomerDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCus_Code = base.Columns["Cus_Code"];
                this.columnStatus = base.Columns["Status"];
                this.columnCus_Name = base.Columns["Cus_Name"];
                this.columnFirstName = base.Columns["FirstName"];
                this.columnSecondName = base.Columns["SecondName"];
                this.columnAddress1 = base.Columns["Address1"];
                this.columnAddress2 = base.Columns["Address2"];
                this.columnAddress3 = base.Columns["Address3"];
                this.columnAddress4 = base.Columns["Address4"];
                this.columnAddress5 = base.Columns["Address5"];
                this.columnPhoneNo = base.Columns["PhoneNo"];
                this.columnFax = base.Columns["Fax"];
                this.columnOfficePhone = base.Columns["OfficePhone"];
                this.columnOther = base.Columns["Other"];
                this.columnMobile = base.Columns["Mobile"];
                this.columnContactPersion = base.Columns["ContactPersion"];
                this.columnE_mail = base.Columns["E_mail"];
                this.columnWeb = base.Columns["Web"];
                this.columnNICNumber = base.Columns["NICNumber"];
                this.columnBirthday = base.Columns["Birthday"];
                this.columnCus_Type = base.Columns["Cus_Type"];
                this.columnReferance = base.Columns["Referance"];
                this.columnInsertDate = base.Columns["InsertDate"];
                this.columnModDate = base.Columns["ModDate"];
                this.columnInsertUser = base.Columns["InsertUser"];
                this.columnModUser = base.Columns["ModUser"];
                this.columnInactive = base.Columns["Inactive"];
                this.columnInactiveDate = base.Columns["InactiveDate"];
                this.columnWorkshop = base.Columns["Workshop"];
                this.columnAge = base.Columns["Age"];
                this.columnWesak = base.Columns["Wesak"];
                this.columnNewYear = base.Columns["NewYear"];
                this.columnDontBCard = base.Columns["DontBCard"];
                this.columnAbrod = base.Columns["Abrod"];
                this.columnNextVisitDate = base.Columns["NextVisitDate"];
                this.columnBalance = base.Columns["Balance"];
                this.columnFestival = base.Columns["Festival"];
                this.columnNameOfSpouse = base.Columns["NameOfSpouse"];
                this.columnCard_No = base.Columns["Card_No"];
                this.columnMonthly_Balance = base.Columns["Monthly_Balance"];
                this.columnCardIssuedDate = base.Columns["CardIssuedDate"];
                this.columnOccupation = base.Columns["Occupation"];
                this.columnMaritalStatus = base.Columns["MaritalStatus"];
                this.columnSpouseBirthDay = base.Columns["SpouseBirthDay"];
                this.columnDiscount = base.Columns["Discount"];
                this.columnGroup_Code = base.Columns["Group_Code"];
                this.columnGroup_Name = base.Columns["Group_Name"];
                this.columnSubGroup_Code = base.Columns["SubGroup_Code"];
                this.columnSubGroup_Name = base.Columns["SubGroup_Name"];
                this.columnAnniversary = base.Columns["Anniversary"];
                this.columnLoca = base.Columns["Loca"];
                this.columnLocaName = base.Columns["LocaName"];
                this.columnCust_Category = base.Columns["Cust_Category"];
                this.columnPoint_Rate = base.Columns["Point_Rate"];
                this.columnCode_From = base.Columns["Code_From"];
                this.columnCode_To = base.Columns["Code_To"];
                this.columnGender = base.Columns["Gender"];
                this.columnReligion = base.Columns["Religion"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCus_Code = new global::System.Data.DataColumn("Cus_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCus_Code);
                this.columnStatus = new global::System.Data.DataColumn("Status", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatus);
                this.columnCus_Name = new global::System.Data.DataColumn("Cus_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCus_Name);
                this.columnFirstName = new global::System.Data.DataColumn("FirstName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFirstName);
                this.columnSecondName = new global::System.Data.DataColumn("SecondName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSecondName);
                this.columnAddress1 = new global::System.Data.DataColumn("Address1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress1);
                this.columnAddress2 = new global::System.Data.DataColumn("Address2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress2);
                this.columnAddress3 = new global::System.Data.DataColumn("Address3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress3);
                this.columnAddress4 = new global::System.Data.DataColumn("Address4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress4);
                this.columnAddress5 = new global::System.Data.DataColumn("Address5", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress5);
                this.columnPhoneNo = new global::System.Data.DataColumn("PhoneNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhoneNo);
                this.columnFax = new global::System.Data.DataColumn("Fax", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFax);
                this.columnOfficePhone = new global::System.Data.DataColumn("OfficePhone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOfficePhone);
                this.columnOther = new global::System.Data.DataColumn("Other", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOther);
                this.columnMobile = new global::System.Data.DataColumn("Mobile", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMobile);
                this.columnContactPersion = new global::System.Data.DataColumn("ContactPersion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContactPersion);
                this.columnE_mail = new global::System.Data.DataColumn("E_mail", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnE_mail);
                this.columnWeb = new global::System.Data.DataColumn("Web", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWeb);
                this.columnNICNumber = new global::System.Data.DataColumn("NICNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNICNumber);
                this.columnBirthday = new global::System.Data.DataColumn("Birthday", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBirthday);
                this.columnCus_Type = new global::System.Data.DataColumn("Cus_Type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCus_Type);
                this.columnReferance = new global::System.Data.DataColumn("Referance", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReferance);
                this.columnInsertDate = new global::System.Data.DataColumn("InsertDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertDate);
                this.columnModDate = new global::System.Data.DataColumn("ModDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModDate);
                this.columnInsertUser = new global::System.Data.DataColumn("InsertUser", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertUser);
                this.columnModUser = new global::System.Data.DataColumn("ModUser", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModUser);
                this.columnInactive = new global::System.Data.DataColumn("Inactive", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInactive);
                this.columnInactiveDate = new global::System.Data.DataColumn("InactiveDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInactiveDate);
                this.columnWorkshop = new global::System.Data.DataColumn("Workshop", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWorkshop);
                this.columnAge = new global::System.Data.DataColumn("Age", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAge);
                this.columnWesak = new global::System.Data.DataColumn("Wesak", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWesak);
                this.columnNewYear = new global::System.Data.DataColumn("NewYear", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNewYear);
                this.columnDontBCard = new global::System.Data.DataColumn("DontBCard", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDontBCard);
                this.columnAbrod = new global::System.Data.DataColumn("Abrod", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAbrod);
                this.columnNextVisitDate = new global::System.Data.DataColumn("NextVisitDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNextVisitDate);
                this.columnBalance = new global::System.Data.DataColumn("Balance", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBalance);
                this.columnFestival = new global::System.Data.DataColumn("Festival", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFestival);
                this.columnNameOfSpouse = new global::System.Data.DataColumn("NameOfSpouse", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNameOfSpouse);
                this.columnCard_No = new global::System.Data.DataColumn("Card_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCard_No);
                this.columnMonthly_Balance = new global::System.Data.DataColumn("Monthly_Balance", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMonthly_Balance);
                this.columnCardIssuedDate = new global::System.Data.DataColumn("CardIssuedDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCardIssuedDate);
                this.columnOccupation = new global::System.Data.DataColumn("Occupation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOccupation);
                this.columnMaritalStatus = new global::System.Data.DataColumn("MaritalStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaritalStatus);
                this.columnSpouseBirthDay = new global::System.Data.DataColumn("SpouseBirthDay", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpouseBirthDay);
                this.columnDiscount = new global::System.Data.DataColumn("Discount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiscount);
                this.columnGroup_Code = new global::System.Data.DataColumn("Group_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGroup_Code);
                this.columnGroup_Name = new global::System.Data.DataColumn("Group_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGroup_Name);
                this.columnSubGroup_Code = new global::System.Data.DataColumn("SubGroup_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubGroup_Code);
                this.columnSubGroup_Name = new global::System.Data.DataColumn("SubGroup_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubGroup_Name);
                this.columnAnniversary = new global::System.Data.DataColumn("Anniversary", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAnniversary);
                this.columnLoca = new global::System.Data.DataColumn("Loca", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoca);
                this.columnLocaName = new global::System.Data.DataColumn("LocaName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocaName);
                this.columnCust_Category = new global::System.Data.DataColumn("Cust_Category", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCust_Category);
                this.columnPoint_Rate = new global::System.Data.DataColumn("Point_Rate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPoint_Rate);
                this.columnCode_From = new global::System.Data.DataColumn("Code_From", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCode_From);
                this.columnCode_To = new global::System.Data.DataColumn("Code_To", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCode_To);
                this.columnGender = new global::System.Data.DataColumn("Gender", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGender);
                this.columnReligion = new global::System.Data.DataColumn("Religion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReligion);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCus_Code}, true));
                this.columnCus_Code.AllowDBNull = false;
                this.columnCus_Code.Unique = true;
                this.columnCus_Code.MaxLength = 20;
                this.columnStatus.AllowDBNull = false;
                this.columnStatus.MaxLength = 10;
                this.columnCus_Name.AllowDBNull = false;
                this.columnCus_Name.MaxLength = 70;
                this.columnFirstName.MaxLength = 50;
                this.columnSecondName.MaxLength = 50;
                this.columnAddress1.MaxLength = 200;
                this.columnAddress2.MaxLength = 200;
                this.columnAddress3.MaxLength = 200;
                this.columnAddress4.MaxLength = 200;
                this.columnAddress5.MaxLength = 200;
                this.columnPhoneNo.MaxLength = 30;
                this.columnFax.AllowDBNull = false;
                this.columnFax.MaxLength = 30;
                this.columnOfficePhone.MaxLength = 30;
                this.columnOther.AllowDBNull = false;
                this.columnOther.MaxLength = 100;
                this.columnMobile.MaxLength = 100;
                this.columnContactPersion.MaxLength = 200;
                this.columnE_mail.MaxLength = 200;
                this.columnWeb.AllowDBNull = false;
                this.columnWeb.MaxLength = 200;
                this.columnNICNumber.AllowDBNull = false;
                this.columnNICNumber.MaxLength = 30;
                this.columnBirthday.MaxLength = 15;
                this.columnCus_Type.AllowDBNull = false;
                this.columnCus_Type.MaxLength = 30;
                this.columnReferance.MaxLength = 200;
                this.columnModDate.AllowDBNull = false;
                this.columnInsertUser.AllowDBNull = false;
                this.columnInsertUser.MaxLength = 20;
                this.columnModUser.AllowDBNull = false;
                this.columnModUser.MaxLength = 20;
                this.columnInactive.AllowDBNull = false;
                this.columnInactiveDate.MaxLength = 50;
                this.columnAge.AllowDBNull = false;
                this.columnAge.MaxLength = 10;
                this.columnBalance.AllowDBNull = false;
                this.columnFestival.AllowDBNull = false;
                this.columnFestival.MaxLength = 50;
                this.columnNameOfSpouse.MaxLength = 100;
                this.columnCard_No.MaxLength = 50;
                this.columnCardIssuedDate.MaxLength = 20;
                this.columnOccupation.MaxLength = 50;
                this.columnMaritalStatus.MaxLength = 50;
                this.columnSpouseBirthDay.MaxLength = 20;
                this.columnDiscount.AllowDBNull = false;
                this.columnGroup_Code.AllowDBNull = false;
                this.columnGroup_Code.MaxLength = 20;
                this.columnGroup_Name.AllowDBNull = false;
                this.columnGroup_Name.MaxLength = 50;
                this.columnSubGroup_Code.MaxLength = 20;
                this.columnSubGroup_Name.MaxLength = 50;
                this.columnAnniversary.MaxLength = 20;
                this.columnLoca.MaxLength = 20;
                this.columnLocaName.MaxLength = 50;
                this.columnCust_Category.AllowDBNull = false;
                this.columnCust_Category.MaxLength = 50;
                this.columnPoint_Rate.AllowDBNull = false;
                this.columnPoint_Rate.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CRM_CustomerRow NewCRM_CustomerRow() {
                return ((CRM_CustomerRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CRM_CustomerRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(CRM_CustomerRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CRM_CustomerRowChanged != null)) {
                    this.CRM_CustomerRowChanged(this, new CRM_CustomerRowChangeEvent(((CRM_CustomerRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CRM_CustomerRowChanging != null)) {
                    this.CRM_CustomerRowChanging(this, new CRM_CustomerRowChangeEvent(((CRM_CustomerRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CRM_CustomerRowDeleted != null)) {
                    this.CRM_CustomerRowDeleted(this, new CRM_CustomerRowChangeEvent(((CRM_CustomerRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CRM_CustomerRowDeleting != null)) {
                    this.CRM_CustomerRowDeleting(this, new CRM_CustomerRowChangeEvent(((CRM_CustomerRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCRM_CustomerRow(CRM_CustomerRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dtForGrids ds = new dtForGrids();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CRM_CustomerDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dtGiftIssueRow : global::System.Data.DataRow {
            
            private dtGiftIssueDataTable tabledtGiftIssue;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtGiftIssueRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledtGiftIssue = ((dtGiftIssueDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Doc_No {
                get {
                    try {
                        return ((string)(this[this.tabledtGiftIssue.Doc_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Doc_No\' in table \'dtGiftIssue\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtGiftIssue.Doc_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Amount {
                get {
                    try {
                        return ((string)(this[this.tabledtGiftIssue.AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Amount\' in table \'dtGiftIssue\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtGiftIssue.AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Code {
                get {
                    try {
                        return ((string)(this[this.tabledtGiftIssue.CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Code\' in table \'dtGiftIssue\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtGiftIssue.CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDoc_NoNull() {
                return this.IsNull(this.tabledtGiftIssue.Doc_NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDoc_NoNull() {
                this[this.tabledtGiftIssue.Doc_NoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountNull() {
                return this.IsNull(this.tabledtGiftIssue.AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountNull() {
                this[this.tabledtGiftIssue.AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCodeNull() {
                return this.IsNull(this.tabledtGiftIssue.CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCodeNull() {
                this[this.tabledtGiftIssue.CodeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CustomerRow : global::System.Data.DataRow {
            
            private CustomerDataTable tableCustomer;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CustomerRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCustomer = ((CustomerDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Loca {
                get {
                    try {
                        return ((string)(this[this.tableCustomer.LocaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Loca\' in table \'Customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomer.LocaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Select {
                get {
                    try {
                        return ((bool)(this[this.tableCustomer.SelectColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Select\' in table \'Customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomer.SelectColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Success {
                get {
                    try {
                        return ((bool)(this[this.tableCustomer.SuccessColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Success\' in table \'Customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomer.SuccessColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Cus_Code {
                get {
                    try {
                        return ((string)(this[this.tableCustomer.Cus_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cus_Code\' in table \'Customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomer.Cus_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Cus_Name {
                get {
                    try {
                        return ((string)(this[this.tableCustomer.Cus_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cus_Name\' in table \'Customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomer.Cus_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address {
                get {
                    try {
                        return ((string)(this[this.tableCustomer.AddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Address\' in table \'Customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomer.AddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Mobile {
                get {
                    try {
                        return ((string)(this[this.tableCustomer.MobileColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Mobile\' in table \'Customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomer.MobileColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DateFrom {
                get {
                    try {
                        return ((string)(this[this.tableCustomer.DateFromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateFrom\' in table \'Customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomer.DateFromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DateTo {
                get {
                    try {
                        return ((string)(this[this.tableCustomer.DateToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateTo\' in table \'Customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomer.DateToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Birthday {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableCustomer.BirthdayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Birthday\' in table \'Customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomer.BirthdayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Age {
                get {
                    try {
                        return ((int)(this[this.tableCustomer.AgeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Age\' in table \'Customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomer.AgeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Date {
                get {
                    try {
                        return ((string)(this[this.tableCustomer.DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Date\' in table \'Customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomer.DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NIC {
                get {
                    try {
                        return ((string)(this[this.tableCustomer.NICColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NIC\' in table \'Customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomer.NICColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Card_No {
                get {
                    try {
                        return ((string)(this[this.tableCustomer.Card_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Card_No\' in table \'Customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomer.Card_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocaNull() {
                return this.IsNull(this.tableCustomer.LocaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocaNull() {
                this[this.tableCustomer.LocaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelectNull() {
                return this.IsNull(this.tableCustomer.SelectColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelectNull() {
                this[this.tableCustomer.SelectColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSuccessNull() {
                return this.IsNull(this.tableCustomer.SuccessColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSuccessNull() {
                this[this.tableCustomer.SuccessColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCus_CodeNull() {
                return this.IsNull(this.tableCustomer.Cus_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCus_CodeNull() {
                this[this.tableCustomer.Cus_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCus_NameNull() {
                return this.IsNull(this.tableCustomer.Cus_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCus_NameNull() {
                this[this.tableCustomer.Cus_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddressNull() {
                return this.IsNull(this.tableCustomer.AddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddressNull() {
                this[this.tableCustomer.AddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMobileNull() {
                return this.IsNull(this.tableCustomer.MobileColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMobileNull() {
                this[this.tableCustomer.MobileColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateFromNull() {
                return this.IsNull(this.tableCustomer.DateFromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateFromNull() {
                this[this.tableCustomer.DateFromColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateToNull() {
                return this.IsNull(this.tableCustomer.DateToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateToNull() {
                this[this.tableCustomer.DateToColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBirthdayNull() {
                return this.IsNull(this.tableCustomer.BirthdayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBirthdayNull() {
                this[this.tableCustomer.BirthdayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAgeNull() {
                return this.IsNull(this.tableCustomer.AgeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAgeNull() {
                this[this.tableCustomer.AgeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateNull() {
                return this.IsNull(this.tableCustomer.DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateNull() {
                this[this.tableCustomer.DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNICNull() {
                return this.IsNull(this.tableCustomer.NICColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNICNull() {
                this[this.tableCustomer.NICColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCard_NoNull() {
                return this.IsNull(this.tableCustomer.Card_NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCard_NoNull() {
                this[this.tableCustomer.Card_NoColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dsInCustomerRow : global::System.Data.DataRow {
            
            private dsInCustomerDataTable tabledsInCustomer;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsInCustomerRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledsInCustomer = ((dsInCustomerDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Cus_Code {
                get {
                    try {
                        return ((string)(this[this.tabledsInCustomer.Cus_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cus_Code\' in table \'dsInCustomer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsInCustomer.Cus_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Card_No {
                get {
                    try {
                        return ((string)(this[this.tabledsInCustomer.Card_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Card_No\' in table \'dsInCustomer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsInCustomer.Card_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Loca {
                get {
                    try {
                        return ((string)(this[this.tabledsInCustomer.LocaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Loca\' in table \'dsInCustomer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsInCustomer.LocaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Cus_Name {
                get {
                    try {
                        return ((string)(this[this.tabledsInCustomer.Cus_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cus_Name\' in table \'dsInCustomer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsInCustomer.Cus_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCus_CodeNull() {
                return this.IsNull(this.tabledsInCustomer.Cus_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCus_CodeNull() {
                this[this.tabledsInCustomer.Cus_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCard_NoNull() {
                return this.IsNull(this.tabledsInCustomer.Card_NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCard_NoNull() {
                this[this.tabledsInCustomer.Card_NoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocaNull() {
                return this.IsNull(this.tabledsInCustomer.LocaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocaNull() {
                this[this.tabledsInCustomer.LocaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCus_NameNull() {
                return this.IsNull(this.tabledsInCustomer.Cus_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCus_NameNull() {
                this[this.tabledsInCustomer.Cus_NameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dsChildrenDetailsRow : global::System.Data.DataRow {
            
            private dsChildrenDetailsDataTable tabledsChildrenDetails;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsChildrenDetailsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledsChildrenDetails = ((dsChildrenDetailsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tabledsChildrenDetails.NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Name\' in table \'dsChildrenDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsChildrenDetails.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Sex {
                get {
                    try {
                        return ((string)(this[this.tabledsChildrenDetails.SexColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Sex\' in table \'dsChildrenDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsChildrenDetails.SexColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Birthday {
                get {
                    try {
                        return ((string)(this[this.tabledsChildrenDetails.BirthdayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Birthday\' in table \'dsChildrenDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsChildrenDetails.BirthdayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Card_No {
                get {
                    try {
                        return ((string)(this[this.tabledsChildrenDetails.Card_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Card_No\' in table \'dsChildrenDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsChildrenDetails.Card_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNameNull() {
                return this.IsNull(this.tabledsChildrenDetails.NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNameNull() {
                this[this.tabledsChildrenDetails.NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSexNull() {
                return this.IsNull(this.tabledsChildrenDetails.SexColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSexNull() {
                this[this.tabledsChildrenDetails.SexColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBirthdayNull() {
                return this.IsNull(this.tabledsChildrenDetails.BirthdayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBirthdayNull() {
                this[this.tabledsChildrenDetails.BirthdayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCard_NoNull() {
                return this.IsNull(this.tabledsChildrenDetails.Card_NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCard_NoNull() {
                this[this.tabledsChildrenDetails.Card_NoColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CRM_CustomerRow : global::System.Data.DataRow {
            
            private CRM_CustomerDataTable tableCRM_Customer;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CRM_CustomerRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCRM_Customer = ((CRM_CustomerDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Cus_Code {
                get {
                    return ((string)(this[this.tableCRM_Customer.Cus_CodeColumn]));
                }
                set {
                    this[this.tableCRM_Customer.Cus_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Status {
                get {
                    return ((string)(this[this.tableCRM_Customer.StatusColumn]));
                }
                set {
                    this[this.tableCRM_Customer.StatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Cus_Name {
                get {
                    return ((string)(this[this.tableCRM_Customer.Cus_NameColumn]));
                }
                set {
                    this[this.tableCRM_Customer.Cus_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FirstName {
                get {
                    try {
                        return ((string)(this[this.tableCRM_Customer.FirstNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FirstName\' in table \'CRM_Customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRM_Customer.FirstNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SecondName {
                get {
                    try {
                        return ((string)(this[this.tableCRM_Customer.SecondNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SecondName\' in table \'CRM_Customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRM_Customer.SecondNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address1 {
                get {
                    try {
                        return ((string)(this[this.tableCRM_Customer.Address1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Address1\' in table \'CRM_Customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRM_Customer.Address1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address2 {
                get {
                    try {
                        return ((string)(this[this.tableCRM_Customer.Address2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Address2\' in table \'CRM_Customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRM_Customer.Address2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address3 {
                get {
                    try {
                        return ((string)(this[this.tableCRM_Customer.Address3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Address3\' in table \'CRM_Customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRM_Customer.Address3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address4 {
                get {
                    try {
                        return ((string)(this[this.tableCRM_Customer.Address4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Address4\' in table \'CRM_Customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRM_Customer.Address4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address5 {
                get {
                    try {
                        return ((string)(this[this.tableCRM_Customer.Address5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Address5\' in table \'CRM_Customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRM_Customer.Address5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PhoneNo {
                get {
                    try {
                        return ((string)(this[this.tableCRM_Customer.PhoneNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PhoneNo\' in table \'CRM_Customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRM_Customer.PhoneNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Fax {
                get {
                    return ((string)(this[this.tableCRM_Customer.FaxColumn]));
                }
                set {
                    this[this.tableCRM_Customer.FaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OfficePhone {
                get {
                    try {
                        return ((string)(this[this.tableCRM_Customer.OfficePhoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OfficePhone\' in table \'CRM_Customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRM_Customer.OfficePhoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Other {
                get {
                    return ((string)(this[this.tableCRM_Customer.OtherColumn]));
                }
                set {
                    this[this.tableCRM_Customer.OtherColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Mobile {
                get {
                    try {
                        return ((string)(this[this.tableCRM_Customer.MobileColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Mobile\' in table \'CRM_Customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRM_Customer.MobileColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ContactPersion {
                get {
                    try {
                        return ((string)(this[this.tableCRM_Customer.ContactPersionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ContactPersion\' in table \'CRM_Customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRM_Customer.ContactPersionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string E_mail {
                get {
                    try {
                        return ((string)(this[this.tableCRM_Customer.E_mailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'E_mail\' in table \'CRM_Customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRM_Customer.E_mailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Web {
                get {
                    return ((string)(this[this.tableCRM_Customer.WebColumn]));
                }
                set {
                    this[this.tableCRM_Customer.WebColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NICNumber {
                get {
                    return ((string)(this[this.tableCRM_Customer.NICNumberColumn]));
                }
                set {
                    this[this.tableCRM_Customer.NICNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Birthday {
                get {
                    try {
                        return ((string)(this[this.tableCRM_Customer.BirthdayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Birthday\' in table \'CRM_Customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRM_Customer.BirthdayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Cus_Type {
                get {
                    return ((string)(this[this.tableCRM_Customer.Cus_TypeColumn]));
                }
                set {
                    this[this.tableCRM_Customer.Cus_TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Referance {
                get {
                    try {
                        return ((string)(this[this.tableCRM_Customer.ReferanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Referance\' in table \'CRM_Customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRM_Customer.ReferanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime InsertDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableCRM_Customer.InsertDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertDate\' in table \'CRM_Customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRM_Customer.InsertDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ModDate {
                get {
                    return ((global::System.DateTime)(this[this.tableCRM_Customer.ModDateColumn]));
                }
                set {
                    this[this.tableCRM_Customer.ModDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InsertUser {
                get {
                    return ((string)(this[this.tableCRM_Customer.InsertUserColumn]));
                }
                set {
                    this[this.tableCRM_Customer.InsertUserColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ModUser {
                get {
                    return ((string)(this[this.tableCRM_Customer.ModUserColumn]));
                }
                set {
                    this[this.tableCRM_Customer.ModUserColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Inactive {
                get {
                    return ((bool)(this[this.tableCRM_Customer.InactiveColumn]));
                }
                set {
                    this[this.tableCRM_Customer.InactiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InactiveDate {
                get {
                    try {
                        return ((string)(this[this.tableCRM_Customer.InactiveDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InactiveDate\' in table \'CRM_Customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRM_Customer.InactiveDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Workshop {
                get {
                    try {
                        return ((bool)(this[this.tableCRM_Customer.WorkshopColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Workshop\' in table \'CRM_Customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRM_Customer.WorkshopColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Age {
                get {
                    return ((string)(this[this.tableCRM_Customer.AgeColumn]));
                }
                set {
                    this[this.tableCRM_Customer.AgeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Wesak {
                get {
                    try {
                        return ((bool)(this[this.tableCRM_Customer.WesakColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Wesak\' in table \'CRM_Customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRM_Customer.WesakColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool NewYear {
                get {
                    try {
                        return ((bool)(this[this.tableCRM_Customer.NewYearColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NewYear\' in table \'CRM_Customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRM_Customer.NewYearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool DontBCard {
                get {
                    try {
                        return ((bool)(this[this.tableCRM_Customer.DontBCardColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DontBCard\' in table \'CRM_Customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRM_Customer.DontBCardColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Abrod {
                get {
                    try {
                        return ((bool)(this[this.tableCRM_Customer.AbrodColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Abrod\' in table \'CRM_Customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRM_Customer.AbrodColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime NextVisitDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableCRM_Customer.NextVisitDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NextVisitDate\' in table \'CRM_Customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRM_Customer.NextVisitDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Balance {
                get {
                    return ((decimal)(this[this.tableCRM_Customer.BalanceColumn]));
                }
                set {
                    this[this.tableCRM_Customer.BalanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Festival {
                get {
                    return ((string)(this[this.tableCRM_Customer.FestivalColumn]));
                }
                set {
                    this[this.tableCRM_Customer.FestivalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NameOfSpouse {
                get {
                    try {
                        return ((string)(this[this.tableCRM_Customer.NameOfSpouseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NameOfSpouse\' in table \'CRM_Customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRM_Customer.NameOfSpouseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Card_No {
                get {
                    try {
                        return ((string)(this[this.tableCRM_Customer.Card_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Card_No\' in table \'CRM_Customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRM_Customer.Card_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Monthly_Balance {
                get {
                    try {
                        return ((decimal)(this[this.tableCRM_Customer.Monthly_BalanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Monthly_Balance\' in table \'CRM_Customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRM_Customer.Monthly_BalanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CardIssuedDate {
                get {
                    try {
                        return ((string)(this[this.tableCRM_Customer.CardIssuedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CardIssuedDate\' in table \'CRM_Customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRM_Customer.CardIssuedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Occupation {
                get {
                    try {
                        return ((string)(this[this.tableCRM_Customer.OccupationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Occupation\' in table \'CRM_Customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRM_Customer.OccupationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MaritalStatus {
                get {
                    try {
                        return ((string)(this[this.tableCRM_Customer.MaritalStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MaritalStatus\' in table \'CRM_Customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRM_Customer.MaritalStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SpouseBirthDay {
                get {
                    try {
                        return ((string)(this[this.tableCRM_Customer.SpouseBirthDayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SpouseBirthDay\' in table \'CRM_Customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRM_Customer.SpouseBirthDayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Discount {
                get {
                    return ((decimal)(this[this.tableCRM_Customer.DiscountColumn]));
                }
                set {
                    this[this.tableCRM_Customer.DiscountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Group_Code {
                get {
                    return ((string)(this[this.tableCRM_Customer.Group_CodeColumn]));
                }
                set {
                    this[this.tableCRM_Customer.Group_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Group_Name {
                get {
                    return ((string)(this[this.tableCRM_Customer.Group_NameColumn]));
                }
                set {
                    this[this.tableCRM_Customer.Group_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SubGroup_Code {
                get {
                    try {
                        return ((string)(this[this.tableCRM_Customer.SubGroup_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubGroup_Code\' in table \'CRM_Customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRM_Customer.SubGroup_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SubGroup_Name {
                get {
                    try {
                        return ((string)(this[this.tableCRM_Customer.SubGroup_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubGroup_Name\' in table \'CRM_Customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRM_Customer.SubGroup_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Anniversary {
                get {
                    try {
                        return ((string)(this[this.tableCRM_Customer.AnniversaryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Anniversary\' in table \'CRM_Customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRM_Customer.AnniversaryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Loca {
                get {
                    try {
                        return ((string)(this[this.tableCRM_Customer.LocaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Loca\' in table \'CRM_Customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRM_Customer.LocaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LocaName {
                get {
                    try {
                        return ((string)(this[this.tableCRM_Customer.LocaNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LocaName\' in table \'CRM_Customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRM_Customer.LocaNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Cust_Category {
                get {
                    return ((string)(this[this.tableCRM_Customer.Cust_CategoryColumn]));
                }
                set {
                    this[this.tableCRM_Customer.Cust_CategoryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Point_Rate {
                get {
                    return ((string)(this[this.tableCRM_Customer.Point_RateColumn]));
                }
                set {
                    this[this.tableCRM_Customer.Point_RateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Code_From {
                get {
                    try {
                        return ((string)(this[this.tableCRM_Customer.Code_FromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Code_From\' in table \'CRM_Customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRM_Customer.Code_FromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Code_To {
                get {
                    try {
                        return ((string)(this[this.tableCRM_Customer.Code_ToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Code_To\' in table \'CRM_Customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRM_Customer.Code_ToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Gender {
                get {
                    try {
                        return ((string)(this[this.tableCRM_Customer.GenderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Gender\' in table \'CRM_Customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRM_Customer.GenderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Religion {
                get {
                    try {
                        return ((string)(this[this.tableCRM_Customer.ReligionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Religion\' in table \'CRM_Customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRM_Customer.ReligionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFirstNameNull() {
                return this.IsNull(this.tableCRM_Customer.FirstNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFirstNameNull() {
                this[this.tableCRM_Customer.FirstNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSecondNameNull() {
                return this.IsNull(this.tableCRM_Customer.SecondNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSecondNameNull() {
                this[this.tableCRM_Customer.SecondNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddress1Null() {
                return this.IsNull(this.tableCRM_Customer.Address1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddress1Null() {
                this[this.tableCRM_Customer.Address1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddress2Null() {
                return this.IsNull(this.tableCRM_Customer.Address2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddress2Null() {
                this[this.tableCRM_Customer.Address2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddress3Null() {
                return this.IsNull(this.tableCRM_Customer.Address3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddress3Null() {
                this[this.tableCRM_Customer.Address3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddress4Null() {
                return this.IsNull(this.tableCRM_Customer.Address4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddress4Null() {
                this[this.tableCRM_Customer.Address4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddress5Null() {
                return this.IsNull(this.tableCRM_Customer.Address5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddress5Null() {
                this[this.tableCRM_Customer.Address5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPhoneNoNull() {
                return this.IsNull(this.tableCRM_Customer.PhoneNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPhoneNoNull() {
                this[this.tableCRM_Customer.PhoneNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOfficePhoneNull() {
                return this.IsNull(this.tableCRM_Customer.OfficePhoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOfficePhoneNull() {
                this[this.tableCRM_Customer.OfficePhoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMobileNull() {
                return this.IsNull(this.tableCRM_Customer.MobileColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMobileNull() {
                this[this.tableCRM_Customer.MobileColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsContactPersionNull() {
                return this.IsNull(this.tableCRM_Customer.ContactPersionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetContactPersionNull() {
                this[this.tableCRM_Customer.ContactPersionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsE_mailNull() {
                return this.IsNull(this.tableCRM_Customer.E_mailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetE_mailNull() {
                this[this.tableCRM_Customer.E_mailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBirthdayNull() {
                return this.IsNull(this.tableCRM_Customer.BirthdayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBirthdayNull() {
                this[this.tableCRM_Customer.BirthdayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReferanceNull() {
                return this.IsNull(this.tableCRM_Customer.ReferanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReferanceNull() {
                this[this.tableCRM_Customer.ReferanceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertDateNull() {
                return this.IsNull(this.tableCRM_Customer.InsertDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertDateNull() {
                this[this.tableCRM_Customer.InsertDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInactiveDateNull() {
                return this.IsNull(this.tableCRM_Customer.InactiveDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInactiveDateNull() {
                this[this.tableCRM_Customer.InactiveDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWorkshopNull() {
                return this.IsNull(this.tableCRM_Customer.WorkshopColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWorkshopNull() {
                this[this.tableCRM_Customer.WorkshopColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWesakNull() {
                return this.IsNull(this.tableCRM_Customer.WesakColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWesakNull() {
                this[this.tableCRM_Customer.WesakColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNewYearNull() {
                return this.IsNull(this.tableCRM_Customer.NewYearColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNewYearNull() {
                this[this.tableCRM_Customer.NewYearColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDontBCardNull() {
                return this.IsNull(this.tableCRM_Customer.DontBCardColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDontBCardNull() {
                this[this.tableCRM_Customer.DontBCardColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAbrodNull() {
                return this.IsNull(this.tableCRM_Customer.AbrodColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAbrodNull() {
                this[this.tableCRM_Customer.AbrodColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNextVisitDateNull() {
                return this.IsNull(this.tableCRM_Customer.NextVisitDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNextVisitDateNull() {
                this[this.tableCRM_Customer.NextVisitDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNameOfSpouseNull() {
                return this.IsNull(this.tableCRM_Customer.NameOfSpouseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNameOfSpouseNull() {
                this[this.tableCRM_Customer.NameOfSpouseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCard_NoNull() {
                return this.IsNull(this.tableCRM_Customer.Card_NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCard_NoNull() {
                this[this.tableCRM_Customer.Card_NoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMonthly_BalanceNull() {
                return this.IsNull(this.tableCRM_Customer.Monthly_BalanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMonthly_BalanceNull() {
                this[this.tableCRM_Customer.Monthly_BalanceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCardIssuedDateNull() {
                return this.IsNull(this.tableCRM_Customer.CardIssuedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCardIssuedDateNull() {
                this[this.tableCRM_Customer.CardIssuedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOccupationNull() {
                return this.IsNull(this.tableCRM_Customer.OccupationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOccupationNull() {
                this[this.tableCRM_Customer.OccupationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMaritalStatusNull() {
                return this.IsNull(this.tableCRM_Customer.MaritalStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMaritalStatusNull() {
                this[this.tableCRM_Customer.MaritalStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSpouseBirthDayNull() {
                return this.IsNull(this.tableCRM_Customer.SpouseBirthDayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSpouseBirthDayNull() {
                this[this.tableCRM_Customer.SpouseBirthDayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubGroup_CodeNull() {
                return this.IsNull(this.tableCRM_Customer.SubGroup_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubGroup_CodeNull() {
                this[this.tableCRM_Customer.SubGroup_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubGroup_NameNull() {
                return this.IsNull(this.tableCRM_Customer.SubGroup_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubGroup_NameNull() {
                this[this.tableCRM_Customer.SubGroup_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAnniversaryNull() {
                return this.IsNull(this.tableCRM_Customer.AnniversaryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAnniversaryNull() {
                this[this.tableCRM_Customer.AnniversaryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocaNull() {
                return this.IsNull(this.tableCRM_Customer.LocaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocaNull() {
                this[this.tableCRM_Customer.LocaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocaNameNull() {
                return this.IsNull(this.tableCRM_Customer.LocaNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocaNameNull() {
                this[this.tableCRM_Customer.LocaNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCode_FromNull() {
                return this.IsNull(this.tableCRM_Customer.Code_FromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCode_FromNull() {
                this[this.tableCRM_Customer.Code_FromColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCode_ToNull() {
                return this.IsNull(this.tableCRM_Customer.Code_ToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCode_ToNull() {
                this[this.tableCRM_Customer.Code_ToColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGenderNull() {
                return this.IsNull(this.tableCRM_Customer.GenderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGenderNull() {
                this[this.tableCRM_Customer.GenderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReligionNull() {
                return this.IsNull(this.tableCRM_Customer.ReligionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReligionNull() {
                this[this.tableCRM_Customer.ReligionColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dtGiftIssueRowChangeEvent : global::System.EventArgs {
            
            private dtGiftIssueRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtGiftIssueRowChangeEvent(dtGiftIssueRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtGiftIssueRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CustomerRowChangeEvent : global::System.EventArgs {
            
            private CustomerRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerRowChangeEvent(CustomerRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dsInCustomerRowChangeEvent : global::System.EventArgs {
            
            private dsInCustomerRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsInCustomerRowChangeEvent(dsInCustomerRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsInCustomerRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dsChildrenDetailsRowChangeEvent : global::System.EventArgs {
            
            private dsChildrenDetailsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsChildrenDetailsRowChangeEvent(dsChildrenDetailsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsChildrenDetailsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CRM_CustomerRowChangeEvent : global::System.EventArgs {
            
            private CRM_CustomerRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CRM_CustomerRowChangeEvent(CRM_CustomerRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CRM_CustomerRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591